// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: im.group.proto

#include "im.group.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_im_2egroup_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_im_2egroup_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GroupInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_im_2egroup_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Member;
}  // namespace protobuf_im_2egroup_2eproto
namespace im {
class GroupChatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupChat>
      _instance;
} _GroupChat_default_instance_;
class GroupChatAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupChatAck>
      _instance;
} _GroupChatAck_default_instance_;
class GroupCreateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupCreate>
      _instance;
} _GroupCreate_default_instance_;
class GroupCreateAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupCreateAck>
      _instance;
} _GroupCreateAck_default_instance_;
class GroupQueryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupQuery>
      _instance;
} _GroupQuery_default_instance_;
class UserGroupQueryRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserGroupQueryRsp>
      _instance;
} _UserGroupQueryRsp_default_instance_;
class GroupApplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupApply>
      _instance;
} _GroupApply_default_instance_;
class GroupApplyAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupApplyAck>
      _instance;
} _GroupApplyAck_default_instance_;
class GroupInviteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupInvite>
      _instance;
} _GroupInvite_default_instance_;
class GroupInviteAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupInviteAck>
      _instance;
} _GroupInviteAck_default_instance_;
class GroupMemberDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupMember>
      _instance;
} _GroupMember_default_instance_;
class GroupMemberAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupMemberAck>
      _instance;
} _GroupMemberAck_default_instance_;
class GroupKickOutDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupKickOut>
      _instance;
} _GroupKickOut_default_instance_;
class GroupKickoutAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupKickoutAck>
      _instance;
} _GroupKickoutAck_default_instance_;
class GroupQuitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupQuit>
      _instance;
} _GroupQuit_default_instance_;
class GroupQuitAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupQuitAck>
      _instance;
} _GroupQuitAck_default_instance_;
class GroupModifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupModify>
      _instance;
} _GroupModify_default_instance_;
class GroupModifyAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupModifyAck>
      _instance;
} _GroupModifyAck_default_instance_;
class GroupNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupNotify>
      _instance;
} _GroupNotify_default_instance_;
class GroupNotifyAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupNotifyAck>
      _instance;
} _GroupNotifyAck_default_instance_;
class GroupPermitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupPermit>
      _instance;
} _GroupPermit_default_instance_;
class GroupPermitAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupPermitAck>
      _instance;
} _GroupPermitAck_default_instance_;
class GroupChatCancelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupChatCancel>
      _instance;
} _GroupChatCancel_default_instance_;
class GroupChatCancelAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupChatCancelAck>
      _instance;
} _GroupChatCancelAck_default_instance_;
class GroupInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupInfo>
      _instance;
} _GroupInfo_default_instance_;
class MemberDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Member>
      _instance;
} _Member_default_instance_;
}  // namespace im
namespace protobuf_im_2egroup_2eproto {
static void InitDefaultsGroupChat() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_GroupChat_default_instance_;
    new (ptr) ::im::GroupChat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::GroupChat::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GroupChat =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGroupChat}, {}};

static void InitDefaultsGroupChatAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_GroupChatAck_default_instance_;
    new (ptr) ::im::GroupChatAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::GroupChatAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GroupChatAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGroupChatAck}, {}};

static void InitDefaultsGroupCreate() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_GroupCreate_default_instance_;
    new (ptr) ::im::GroupCreate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::GroupCreate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GroupCreate =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGroupCreate}, {}};

static void InitDefaultsGroupCreateAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_GroupCreateAck_default_instance_;
    new (ptr) ::im::GroupCreateAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::GroupCreateAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GroupCreateAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGroupCreateAck}, {}};

static void InitDefaultsGroupQuery() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_GroupQuery_default_instance_;
    new (ptr) ::im::GroupQuery();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::GroupQuery::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GroupQuery =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGroupQuery}, {}};

static void InitDefaultsUserGroupQueryRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_UserGroupQueryRsp_default_instance_;
    new (ptr) ::im::UserGroupQueryRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::UserGroupQueryRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UserGroupQueryRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUserGroupQueryRsp}, {
      &protobuf_im_2egroup_2eproto::scc_info_GroupInfo.base,}};

static void InitDefaultsGroupApply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_GroupApply_default_instance_;
    new (ptr) ::im::GroupApply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::GroupApply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GroupApply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGroupApply}, {}};

static void InitDefaultsGroupApplyAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_GroupApplyAck_default_instance_;
    new (ptr) ::im::GroupApplyAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::GroupApplyAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GroupApplyAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGroupApplyAck}, {}};

static void InitDefaultsGroupInvite() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_GroupInvite_default_instance_;
    new (ptr) ::im::GroupInvite();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::GroupInvite::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GroupInvite =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGroupInvite}, {}};

static void InitDefaultsGroupInviteAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_GroupInviteAck_default_instance_;
    new (ptr) ::im::GroupInviteAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::GroupInviteAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GroupInviteAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGroupInviteAck}, {}};

static void InitDefaultsGroupMember() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_GroupMember_default_instance_;
    new (ptr) ::im::GroupMember();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::GroupMember::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GroupMember =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGroupMember}, {}};

static void InitDefaultsGroupMemberAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_GroupMemberAck_default_instance_;
    new (ptr) ::im::GroupMemberAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::GroupMemberAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GroupMemberAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGroupMemberAck}, {
      &protobuf_im_2egroup_2eproto::scc_info_Member.base,}};

static void InitDefaultsGroupKickOut() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_GroupKickOut_default_instance_;
    new (ptr) ::im::GroupKickOut();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::GroupKickOut::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GroupKickOut =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGroupKickOut}, {}};

static void InitDefaultsGroupKickoutAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_GroupKickoutAck_default_instance_;
    new (ptr) ::im::GroupKickoutAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::GroupKickoutAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GroupKickoutAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGroupKickoutAck}, {}};

static void InitDefaultsGroupQuit() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_GroupQuit_default_instance_;
    new (ptr) ::im::GroupQuit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::GroupQuit::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GroupQuit =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGroupQuit}, {}};

static void InitDefaultsGroupQuitAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_GroupQuitAck_default_instance_;
    new (ptr) ::im::GroupQuitAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::GroupQuitAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GroupQuitAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGroupQuitAck}, {}};

static void InitDefaultsGroupModify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_GroupModify_default_instance_;
    new (ptr) ::im::GroupModify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::GroupModify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GroupModify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGroupModify}, {}};

static void InitDefaultsGroupModifyAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_GroupModifyAck_default_instance_;
    new (ptr) ::im::GroupModifyAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::GroupModifyAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GroupModifyAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGroupModifyAck}, {}};

static void InitDefaultsGroupNotify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_GroupNotify_default_instance_;
    new (ptr) ::im::GroupNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::GroupNotify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GroupNotify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGroupNotify}, {}};

static void InitDefaultsGroupNotifyAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_GroupNotifyAck_default_instance_;
    new (ptr) ::im::GroupNotifyAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::GroupNotifyAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GroupNotifyAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGroupNotifyAck}, {}};

static void InitDefaultsGroupPermit() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_GroupPermit_default_instance_;
    new (ptr) ::im::GroupPermit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::GroupPermit::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GroupPermit =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGroupPermit}, {}};

static void InitDefaultsGroupPermitAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_GroupPermitAck_default_instance_;
    new (ptr) ::im::GroupPermitAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::GroupPermitAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GroupPermitAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGroupPermitAck}, {}};

static void InitDefaultsGroupChatCancel() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_GroupChatCancel_default_instance_;
    new (ptr) ::im::GroupChatCancel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::GroupChatCancel::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GroupChatCancel =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGroupChatCancel}, {}};

static void InitDefaultsGroupChatCancelAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_GroupChatCancelAck_default_instance_;
    new (ptr) ::im::GroupChatCancelAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::GroupChatCancelAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GroupChatCancelAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGroupChatCancelAck}, {}};

static void InitDefaultsGroupInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_GroupInfo_default_instance_;
    new (ptr) ::im::GroupInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::GroupInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GroupInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGroupInfo}, {}};

static void InitDefaultsMember() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_Member_default_instance_;
    new (ptr) ::im::Member();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::Member::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Member =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMember}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_GroupChat.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GroupChatAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GroupCreate.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GroupCreateAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GroupQuery.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserGroupQueryRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GroupApply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GroupApplyAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GroupInvite.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GroupInviteAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GroupMember.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GroupMemberAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GroupKickOut.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GroupKickoutAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GroupQuit.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GroupQuitAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GroupModify.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GroupModifyAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GroupNotify.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GroupNotifyAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GroupPermit.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GroupPermitAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GroupChatCancel.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GroupChatCancelAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GroupInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Member.base);
}

}  // namespace protobuf_im_2egroup_2eproto
namespace im {

// ===================================================================

void GroupChat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupChat::kSFromIdFieldNumber;
const int GroupChat::kSGroupIdFieldNumber;
const int GroupChat::kNNotifyCountFieldNumber;
const int GroupChat::kSNotifyUsersFieldNumber;
const int GroupChat::kSMsgIdFieldNumber;
const int GroupChat::kMsgTimeFieldNumber;
const int GroupChat::kEncryptFieldNumber;
const int GroupChat::kSContentFieldNumber;
const int GroupChat::kExtendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupChat::GroupChat()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2egroup_2eproto::scc_info_GroupChat.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.GroupChat)
}
GroupChat::GroupChat(const GroupChat& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      snotifyusers_(from.snotifyusers_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sfromid().size() > 0) {
    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  sgroupid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sgroupid().size() > 0) {
    sgroupid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgroupid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  scontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.scontent().size() > 0) {
    scontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scontent_);
  }
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extend().size() > 0) {
    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  ::memcpy(&nnotifycount_, &from.nnotifycount_,
    static_cast<size_t>(reinterpret_cast<char*>(&msgtime_) -
    reinterpret_cast<char*>(&nnotifycount_)) + sizeof(msgtime_));
  // @@protoc_insertion_point(copy_constructor:im.GroupChat)
}

void GroupChat::SharedCtor() {
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nnotifycount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msgtime_) -
      reinterpret_cast<char*>(&nnotifycount_)) + sizeof(msgtime_));
}

GroupChat::~GroupChat() {
  // @@protoc_insertion_point(destructor:im.GroupChat)
  SharedDtor();
}

void GroupChat::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GroupChat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GroupChat& GroupChat::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2egroup_2eproto::scc_info_GroupChat.base);
  return *internal_default_instance();
}


void GroupChat::Clear() {
// @@protoc_insertion_point(message_clear_start:im.GroupChat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  snotifyusers_.Clear();
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nnotifycount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msgtime_) -
      reinterpret_cast<char*>(&nnotifycount_)) + sizeof(msgtime_));
  _internal_metadata_.Clear();
}

bool GroupChat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.GroupChat)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sFromId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), static_cast<int>(this->sfromid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupChat.sFromId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sGroupId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgroupid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgroupid().data(), static_cast<int>(this->sgroupid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupChat.sGroupId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nNotifyCount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nnotifycount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string sNotifyUsers = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_snotifyusers()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->snotifyusers(this->snotifyusers_size() - 1).data(),
            static_cast<int>(this->snotifyusers(this->snotifyusers_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupChat.sNotifyUsers"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupChat.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgTime = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 encrypt = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &encrypt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sContent = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scontent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scontent().data(), static_cast<int>(this->scontent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupChat.sContent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string extend = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extend()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extend().data(), static_cast<int>(this->extend().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupChat.extend"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.GroupChat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.GroupChat)
  return false;
#undef DO_
}

void GroupChat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.GroupChat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), static_cast<int>(this->sfromid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupChat.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // string sGroupId = 2;
  if (this->sgroupid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgroupid().data(), static_cast<int>(this->sgroupid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupChat.sGroupId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sgroupid(), output);
  }

  // uint32 nNotifyCount = 3;
  if (this->nnotifycount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->nnotifycount(), output);
  }

  // repeated string sNotifyUsers = 4;
  for (int i = 0, n = this->snotifyusers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->snotifyusers(i).data(), static_cast<int>(this->snotifyusers(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupChat.sNotifyUsers");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->snotifyusers(i), output);
  }

  // string sMsgId = 5;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupChat.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->smsgid(), output);
  }

  // uint64 msgTime = 6;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->msgtime(), output);
  }

  // uint32 encrypt = 7;
  if (this->encrypt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->encrypt(), output);
  }

  // string sContent = 8;
  if (this->scontent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scontent().data(), static_cast<int>(this->scontent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupChat.sContent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->scontent(), output);
  }

  // string extend = 9;
  if (this->extend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extend().data(), static_cast<int>(this->extend().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupChat.extend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->extend(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.GroupChat)
}

size_t GroupChat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.GroupChat)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated string sNotifyUsers = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->snotifyusers_size());
  for (int i = 0, n = this->snotifyusers_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->snotifyusers(i));
  }

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // string sGroupId = 2;
  if (this->sgroupid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgroupid());
  }

  // string sMsgId = 5;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // string sContent = 8;
  if (this->scontent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scontent());
  }

  // string extend = 9;
  if (this->extend().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extend());
  }

  // uint32 nNotifyCount = 3;
  if (this->nnotifycount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nnotifycount());
  }

  // uint32 encrypt = 7;
  if (this->encrypt() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->encrypt());
  }

  // uint64 msgTime = 6;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GroupChat::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GroupChat*>(&from));
}

void GroupChat::MergeFrom(const GroupChat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.GroupChat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  snotifyusers_.MergeFrom(from.snotifyusers_);
  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.sgroupid().size() > 0) {

    sgroupid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgroupid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.scontent().size() > 0) {

    scontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scontent_);
  }
  if (from.extend().size() > 0) {

    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  if (from.nnotifycount() != 0) {
    set_nnotifycount(from.nnotifycount());
  }
  if (from.encrypt() != 0) {
    set_encrypt(from.encrypt());
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
}

void GroupChat::CopyFrom(const GroupChat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.GroupChat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupChat::IsInitialized() const {
  return true;
}

void GroupChat::Swap(GroupChat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupChat::InternalSwap(GroupChat* other) {
  using std::swap;
  snotifyusers_.InternalSwap(CastToBase(&other->snotifyusers_));
  sfromid_.Swap(&other->sfromid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sgroupid_.Swap(&other->sgroupid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  scontent_.Swap(&other->scontent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  extend_.Swap(&other->extend_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(nnotifycount_, other->nnotifycount_);
  swap(encrypt_, other->encrypt_);
  swap(msgtime_, other->msgtime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string GroupChat::GetTypeName() const {
  return "im.GroupChat";
}


// ===================================================================

void GroupChatAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupChatAck::kSFromIdFieldNumber;
const int GroupChatAck::kSGroupIdFieldNumber;
const int GroupChatAck::kSMsgIdFieldNumber;
const int GroupChatAck::kSendtimeFieldNumber;
const int GroupChatAck::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupChatAck::GroupChatAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2egroup_2eproto::scc_info_GroupChatAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.GroupChatAck)
}
GroupChatAck::GroupChatAck(const GroupChatAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sfromid().size() > 0) {
    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  sgroupid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sgroupid().size() > 0) {
    sgroupid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgroupid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  ::memcpy(&sendtime_, &from.sendtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&errcode_) -
    reinterpret_cast<char*>(&sendtime_)) + sizeof(errcode_));
  // @@protoc_insertion_point(copy_constructor:im.GroupChatAck)
}

void GroupChatAck::SharedCtor() {
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sendtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&errcode_) -
      reinterpret_cast<char*>(&sendtime_)) + sizeof(errcode_));
}

GroupChatAck::~GroupChatAck() {
  // @@protoc_insertion_point(destructor:im.GroupChatAck)
  SharedDtor();
}

void GroupChatAck::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GroupChatAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GroupChatAck& GroupChatAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2egroup_2eproto::scc_info_GroupChatAck.base);
  return *internal_default_instance();
}


void GroupChatAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.GroupChatAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sendtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&errcode_) -
      reinterpret_cast<char*>(&sendtime_)) + sizeof(errcode_));
  _internal_metadata_.Clear();
}

bool GroupChatAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.GroupChatAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sFromId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), static_cast<int>(this->sfromid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupChatAck.sFromId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sGroupId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgroupid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgroupid().data(), static_cast<int>(this->sgroupid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupChatAck.sGroupId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupChatAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 sendtime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sendtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode errcode = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.GroupChatAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.GroupChatAck)
  return false;
#undef DO_
}

void GroupChatAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.GroupChatAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), static_cast<int>(this->sfromid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupChatAck.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // string sGroupId = 2;
  if (this->sgroupid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgroupid().data(), static_cast<int>(this->sgroupid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupChatAck.sGroupId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sgroupid(), output);
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupChatAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // uint64 sendtime = 4;
  if (this->sendtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->sendtime(), output);
  }

  // .im.ErrCode errcode = 5;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->errcode(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.GroupChatAck)
}

size_t GroupChatAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.GroupChatAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // string sGroupId = 2;
  if (this->sgroupid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgroupid());
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // uint64 sendtime = 4;
  if (this->sendtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sendtime());
  }

  // .im.ErrCode errcode = 5;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GroupChatAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GroupChatAck*>(&from));
}

void GroupChatAck::MergeFrom(const GroupChatAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.GroupChatAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.sgroupid().size() > 0) {

    sgroupid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgroupid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.sendtime() != 0) {
    set_sendtime(from.sendtime());
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void GroupChatAck::CopyFrom(const GroupChatAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.GroupChatAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupChatAck::IsInitialized() const {
  return true;
}

void GroupChatAck::Swap(GroupChatAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupChatAck::InternalSwap(GroupChatAck* other) {
  using std::swap;
  sfromid_.Swap(&other->sfromid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sgroupid_.Swap(&other->sgroupid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(sendtime_, other->sendtime_);
  swap(errcode_, other->errcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string GroupChatAck::GetTypeName() const {
  return "im.GroupChatAck";
}


// ===================================================================

void GroupCreate::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupCreate::kSUserIdFieldNumber;
const int GroupCreate::kSNameFieldNumber;
const int GroupCreate::kSRemarksFieldNumber;
const int GroupCreate::kSMsgIdFieldNumber;
const int GroupCreate::kNPermissionFieldNumber;
const int GroupCreate::kNCreateTypeFieldNumber;
const int GroupCreate::kSInviteUserIdsFieldNumber;
const int GroupCreate::kSGrpAvatarFieldNumber;
const int GroupCreate::kExtendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupCreate::GroupCreate()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2egroup_2eproto::scc_info_GroupCreate.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.GroupCreate)
}
GroupCreate::GroupCreate(const GroupCreate& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      sinviteuserids_(from.sinviteuserids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  sname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sname().size() > 0) {
    sname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sname_);
  }
  sremarks_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sremarks().size() > 0) {
    sremarks_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sremarks_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  sgrpavatar_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sgrpavatar().size() > 0) {
    sgrpavatar_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpavatar_);
  }
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extend().size() > 0) {
    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  ::memcpy(&npermission_, &from.npermission_,
    static_cast<size_t>(reinterpret_cast<char*>(&ncreatetype_) -
    reinterpret_cast<char*>(&npermission_)) + sizeof(ncreatetype_));
  // @@protoc_insertion_point(copy_constructor:im.GroupCreate)
}

void GroupCreate::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sremarks_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpavatar_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&npermission_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ncreatetype_) -
      reinterpret_cast<char*>(&npermission_)) + sizeof(ncreatetype_));
}

GroupCreate::~GroupCreate() {
  // @@protoc_insertion_point(destructor:im.GroupCreate)
  SharedDtor();
}

void GroupCreate::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sremarks_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpavatar_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GroupCreate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GroupCreate& GroupCreate::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2egroup_2eproto::scc_info_GroupCreate.base);
  return *internal_default_instance();
}


void GroupCreate::Clear() {
// @@protoc_insertion_point(message_clear_start:im.GroupCreate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sinviteuserids_.Clear();
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sremarks_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpavatar_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&npermission_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ncreatetype_) -
      reinterpret_cast<char*>(&npermission_)) + sizeof(ncreatetype_));
  _internal_metadata_.Clear();
}

bool GroupCreate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.GroupCreate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupCreate.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sname().data(), static_cast<int>(this->sname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupCreate.sName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sRemarks = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sremarks()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sremarks().data(), static_cast<int>(this->sremarks().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupCreate.sRemarks"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupCreate.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nPermission = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &npermission_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nCreateType = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ncreatetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string sInviteUserIds = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_sinviteuserids()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sinviteuserids(this->sinviteuserids_size() - 1).data(),
            static_cast<int>(this->sinviteuserids(this->sinviteuserids_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupCreate.sInviteUserIds"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sGrpAvatar = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgrpavatar()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgrpavatar().data(), static_cast<int>(this->sgrpavatar().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupCreate.sGrpAvatar"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string extend = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extend()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extend().data(), static_cast<int>(this->extend().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupCreate.extend"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.GroupCreate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.GroupCreate)
  return false;
#undef DO_
}

void GroupCreate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.GroupCreate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupCreate.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string sName = 2;
  if (this->sname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sname().data(), static_cast<int>(this->sname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupCreate.sName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sname(), output);
  }

  // string sRemarks = 3;
  if (this->sremarks().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sremarks().data(), static_cast<int>(this->sremarks().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupCreate.sRemarks");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sremarks(), output);
  }

  // string sMsgId = 4;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupCreate.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->smsgid(), output);
  }

  // uint32 nPermission = 5;
  if (this->npermission() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->npermission(), output);
  }

  // uint32 nCreateType = 6;
  if (this->ncreatetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->ncreatetype(), output);
  }

  // repeated string sInviteUserIds = 8;
  for (int i = 0, n = this->sinviteuserids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sinviteuserids(i).data(), static_cast<int>(this->sinviteuserids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupCreate.sInviteUserIds");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->sinviteuserids(i), output);
  }

  // string sGrpAvatar = 9;
  if (this->sgrpavatar().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgrpavatar().data(), static_cast<int>(this->sgrpavatar().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupCreate.sGrpAvatar");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->sgrpavatar(), output);
  }

  // string extend = 10;
  if (this->extend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extend().data(), static_cast<int>(this->extend().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupCreate.extend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->extend(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.GroupCreate)
}

size_t GroupCreate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.GroupCreate)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated string sInviteUserIds = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->sinviteuserids_size());
  for (int i = 0, n = this->sinviteuserids_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->sinviteuserids(i));
  }

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sName = 2;
  if (this->sname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sname());
  }

  // string sRemarks = 3;
  if (this->sremarks().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sremarks());
  }

  // string sMsgId = 4;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // string sGrpAvatar = 9;
  if (this->sgrpavatar().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgrpavatar());
  }

  // string extend = 10;
  if (this->extend().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extend());
  }

  // uint32 nPermission = 5;
  if (this->npermission() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->npermission());
  }

  // uint32 nCreateType = 6;
  if (this->ncreatetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ncreatetype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GroupCreate::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GroupCreate*>(&from));
}

void GroupCreate::MergeFrom(const GroupCreate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.GroupCreate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sinviteuserids_.MergeFrom(from.sinviteuserids_);
  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.sname().size() > 0) {

    sname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sname_);
  }
  if (from.sremarks().size() > 0) {

    sremarks_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sremarks_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.sgrpavatar().size() > 0) {

    sgrpavatar_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpavatar_);
  }
  if (from.extend().size() > 0) {

    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  if (from.npermission() != 0) {
    set_npermission(from.npermission());
  }
  if (from.ncreatetype() != 0) {
    set_ncreatetype(from.ncreatetype());
  }
}

void GroupCreate::CopyFrom(const GroupCreate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.GroupCreate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupCreate::IsInitialized() const {
  return true;
}

void GroupCreate::Swap(GroupCreate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupCreate::InternalSwap(GroupCreate* other) {
  using std::swap;
  sinviteuserids_.InternalSwap(CastToBase(&other->sinviteuserids_));
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sname_.Swap(&other->sname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sremarks_.Swap(&other->sremarks_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sgrpavatar_.Swap(&other->sgrpavatar_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  extend_.Swap(&other->extend_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(npermission_, other->npermission_);
  swap(ncreatetype_, other->ncreatetype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string GroupCreate::GetTypeName() const {
  return "im.GroupCreate";
}


// ===================================================================

void GroupCreateAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupCreateAck::kSUserIdFieldNumber;
const int GroupCreateAck::kSGroupIdFieldNumber;
const int GroupCreateAck::kSMsgIdFieldNumber;
const int GroupCreateAck::kErrcodeFieldNumber;
const int GroupCreateAck::kMsgTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupCreateAck::GroupCreateAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2egroup_2eproto::scc_info_GroupCreateAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.GroupCreateAck)
}
GroupCreateAck::GroupCreateAck(const GroupCreateAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  sgroupid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sgroupid().size() > 0) {
    sgroupid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgroupid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  ::memcpy(&msgtime_, &from.msgtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&errcode_) -
    reinterpret_cast<char*>(&msgtime_)) + sizeof(errcode_));
  // @@protoc_insertion_point(copy_constructor:im.GroupCreateAck)
}

void GroupCreateAck::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&errcode_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(errcode_));
}

GroupCreateAck::~GroupCreateAck() {
  // @@protoc_insertion_point(destructor:im.GroupCreateAck)
  SharedDtor();
}

void GroupCreateAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GroupCreateAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GroupCreateAck& GroupCreateAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2egroup_2eproto::scc_info_GroupCreateAck.base);
  return *internal_default_instance();
}


void GroupCreateAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.GroupCreateAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&errcode_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(errcode_));
  _internal_metadata_.Clear();
}

bool GroupCreateAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.GroupCreateAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupCreateAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sGroupId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgroupid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgroupid().data(), static_cast<int>(this->sgroupid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupCreateAck.sGroupId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupCreateAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode errcode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgTime = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.GroupCreateAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.GroupCreateAck)
  return false;
#undef DO_
}

void GroupCreateAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.GroupCreateAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupCreateAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string sGroupId = 2;
  if (this->sgroupid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgroupid().data(), static_cast<int>(this->sgroupid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupCreateAck.sGroupId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sgroupid(), output);
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupCreateAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // .im.ErrCode errcode = 4;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->errcode(), output);
  }

  // uint64 msgTime = 5;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->msgtime(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.GroupCreateAck)
}

size_t GroupCreateAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.GroupCreateAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sGroupId = 2;
  if (this->sgroupid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgroupid());
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // uint64 msgTime = 5;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // .im.ErrCode errcode = 4;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GroupCreateAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GroupCreateAck*>(&from));
}

void GroupCreateAck::MergeFrom(const GroupCreateAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.GroupCreateAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.sgroupid().size() > 0) {

    sgroupid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgroupid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void GroupCreateAck::CopyFrom(const GroupCreateAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.GroupCreateAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupCreateAck::IsInitialized() const {
  return true;
}

void GroupCreateAck::Swap(GroupCreateAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupCreateAck::InternalSwap(GroupCreateAck* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sgroupid_.Swap(&other->sgroupid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgtime_, other->msgtime_);
  swap(errcode_, other->errcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string GroupCreateAck::GetTypeName() const {
  return "im.GroupCreateAck";
}


// ===================================================================

void GroupQuery::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupQuery::kSUserIdFieldNumber;
const int GroupQuery::kNQueryTypeFieldNumber;
const int GroupQuery::kSKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupQuery::GroupQuery()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2egroup_2eproto::scc_info_GroupQuery.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.GroupQuery)
}
GroupQuery::GroupQuery(const GroupQuery& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  skey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.skey().size() > 0) {
    skey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.skey_);
  }
  nquerytype_ = from.nquerytype_;
  // @@protoc_insertion_point(copy_constructor:im.GroupQuery)
}

void GroupQuery::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  skey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nquerytype_ = 0u;
}

GroupQuery::~GroupQuery() {
  // @@protoc_insertion_point(destructor:im.GroupQuery)
  SharedDtor();
}

void GroupQuery::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  skey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GroupQuery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GroupQuery& GroupQuery::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2egroup_2eproto::scc_info_GroupQuery.base);
  return *internal_default_instance();
}


void GroupQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:im.GroupQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  skey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nquerytype_ = 0u;
  _internal_metadata_.Clear();
}

bool GroupQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.GroupQuery)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupQuery.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nQueryType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nquerytype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sKey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_skey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->skey().data(), static_cast<int>(this->skey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupQuery.sKey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.GroupQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.GroupQuery)
  return false;
#undef DO_
}

void GroupQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.GroupQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupQuery.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // uint32 nQueryType = 2;
  if (this->nquerytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->nquerytype(), output);
  }

  // string sKey = 3;
  if (this->skey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->skey().data(), static_cast<int>(this->skey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupQuery.sKey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->skey(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.GroupQuery)
}

size_t GroupQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.GroupQuery)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sKey = 3;
  if (this->skey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->skey());
  }

  // uint32 nQueryType = 2;
  if (this->nquerytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nquerytype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GroupQuery::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GroupQuery*>(&from));
}

void GroupQuery::MergeFrom(const GroupQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.GroupQuery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.skey().size() > 0) {

    skey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.skey_);
  }
  if (from.nquerytype() != 0) {
    set_nquerytype(from.nquerytype());
  }
}

void GroupQuery::CopyFrom(const GroupQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.GroupQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupQuery::IsInitialized() const {
  return true;
}

void GroupQuery::Swap(GroupQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupQuery::InternalSwap(GroupQuery* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  skey_.Swap(&other->skey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(nquerytype_, other->nquerytype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string GroupQuery::GetTypeName() const {
  return "im.GroupQuery";
}


// ===================================================================

void UserGroupQueryRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserGroupQueryRsp::kSUserIdFieldNumber;
const int UserGroupQueryRsp::kLsGroupInfoFieldNumber;
const int UserGroupQueryRsp::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserGroupQueryRsp::UserGroupQueryRsp()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2egroup_2eproto::scc_info_UserGroupQueryRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.UserGroupQueryRsp)
}
UserGroupQueryRsp::UserGroupQueryRsp(const UserGroupQueryRsp& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      lsgroupinfo_(from.lsgroupinfo_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  errcode_ = from.errcode_;
  // @@protoc_insertion_point(copy_constructor:im.UserGroupQueryRsp)
}

void UserGroupQueryRsp::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

UserGroupQueryRsp::~UserGroupQueryRsp() {
  // @@protoc_insertion_point(destructor:im.UserGroupQueryRsp)
  SharedDtor();
}

void UserGroupQueryRsp::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserGroupQueryRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UserGroupQueryRsp& UserGroupQueryRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2egroup_2eproto::scc_info_UserGroupQueryRsp.base);
  return *internal_default_instance();
}


void UserGroupQueryRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:im.UserGroupQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lsgroupinfo_.Clear();
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
  _internal_metadata_.Clear();
}

bool UserGroupQueryRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.UserGroupQueryRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.UserGroupQueryRsp.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .im.GroupInfo lsGroupInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_lsgroupinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode errcode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.UserGroupQueryRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.UserGroupQueryRsp)
  return false;
#undef DO_
}

void UserGroupQueryRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.UserGroupQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.UserGroupQueryRsp.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // repeated .im.GroupInfo lsGroupInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lsgroupinfo_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2,
      this->lsgroupinfo(static_cast<int>(i)),
      output);
  }

  // .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->errcode(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.UserGroupQueryRsp)
}

size_t UserGroupQueryRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.UserGroupQueryRsp)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .im.GroupInfo lsGroupInfo = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->lsgroupinfo_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->lsgroupinfo(static_cast<int>(i)));
    }
  }

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserGroupQueryRsp::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const UserGroupQueryRsp*>(&from));
}

void UserGroupQueryRsp::MergeFrom(const UserGroupQueryRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.UserGroupQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  lsgroupinfo_.MergeFrom(from.lsgroupinfo_);
  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void UserGroupQueryRsp::CopyFrom(const UserGroupQueryRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.UserGroupQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserGroupQueryRsp::IsInitialized() const {
  return true;
}

void UserGroupQueryRsp::Swap(UserGroupQueryRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserGroupQueryRsp::InternalSwap(UserGroupQueryRsp* other) {
  using std::swap;
  CastToBase(&lsgroupinfo_)->InternalSwap(CastToBase(&other->lsgroupinfo_));
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(errcode_, other->errcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string UserGroupQueryRsp::GetTypeName() const {
  return "im.UserGroupQueryRsp";
}


// ===================================================================

void GroupApply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupApply::kSUserIdFieldNumber;
const int GroupApply::kSGroupIdFieldNumber;
const int GroupApply::kSMsgIdFieldNumber;
const int GroupApply::kSRemarkFieldNumber;
const int GroupApply::kExtendFieldNumber;
const int GroupApply::kApplyTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupApply::GroupApply()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2egroup_2eproto::scc_info_GroupApply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.GroupApply)
}
GroupApply::GroupApply(const GroupApply& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  sgroupid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sgroupid().size() > 0) {
    sgroupid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgroupid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  sremark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sremark().size() > 0) {
    sremark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sremark_);
  }
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extend().size() > 0) {
    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  applytype_ = from.applytype_;
  // @@protoc_insertion_point(copy_constructor:im.GroupApply)
}

void GroupApply::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sremark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  applytype_ = 0u;
}

GroupApply::~GroupApply() {
  // @@protoc_insertion_point(destructor:im.GroupApply)
  SharedDtor();
}

void GroupApply::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sremark_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GroupApply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GroupApply& GroupApply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2egroup_2eproto::scc_info_GroupApply.base);
  return *internal_default_instance();
}


void GroupApply::Clear() {
// @@protoc_insertion_point(message_clear_start:im.GroupApply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sremark_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  applytype_ = 0u;
  _internal_metadata_.Clear();
}

bool GroupApply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.GroupApply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupApply.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sGroupId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgroupid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgroupid().data(), static_cast<int>(this->sgroupid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupApply.sGroupId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupApply.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sRemark = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sremark()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sremark().data(), static_cast<int>(this->sremark().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupApply.sRemark"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string extend = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extend()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extend().data(), static_cast<int>(this->extend().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupApply.extend"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 applyType = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &applytype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.GroupApply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.GroupApply)
  return false;
#undef DO_
}

void GroupApply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.GroupApply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupApply.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string sGroupId = 2;
  if (this->sgroupid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgroupid().data(), static_cast<int>(this->sgroupid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupApply.sGroupId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sgroupid(), output);
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupApply.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // string sRemark = 4;
  if (this->sremark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sremark().data(), static_cast<int>(this->sremark().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupApply.sRemark");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sremark(), output);
  }

  // string extend = 5;
  if (this->extend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extend().data(), static_cast<int>(this->extend().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupApply.extend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->extend(), output);
  }

  // uint32 applyType = 6;
  if (this->applytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->applytype(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.GroupApply)
}

size_t GroupApply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.GroupApply)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sGroupId = 2;
  if (this->sgroupid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgroupid());
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // string sRemark = 4;
  if (this->sremark().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sremark());
  }

  // string extend = 5;
  if (this->extend().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extend());
  }

  // uint32 applyType = 6;
  if (this->applytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->applytype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GroupApply::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GroupApply*>(&from));
}

void GroupApply::MergeFrom(const GroupApply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.GroupApply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.sgroupid().size() > 0) {

    sgroupid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgroupid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.sremark().size() > 0) {

    sremark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sremark_);
  }
  if (from.extend().size() > 0) {

    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  if (from.applytype() != 0) {
    set_applytype(from.applytype());
  }
}

void GroupApply::CopyFrom(const GroupApply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.GroupApply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupApply::IsInitialized() const {
  return true;
}

void GroupApply::Swap(GroupApply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupApply::InternalSwap(GroupApply* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sgroupid_.Swap(&other->sgroupid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sremark_.Swap(&other->sremark_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  extend_.Swap(&other->extend_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(applytype_, other->applytype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string GroupApply::GetTypeName() const {
  return "im.GroupApply";
}


// ===================================================================

void GroupApplyAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupApplyAck::kSUserIdFieldNumber;
const int GroupApplyAck::kSGroupIdFieldNumber;
const int GroupApplyAck::kSMsgIdFieldNumber;
const int GroupApplyAck::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupApplyAck::GroupApplyAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2egroup_2eproto::scc_info_GroupApplyAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.GroupApplyAck)
}
GroupApplyAck::GroupApplyAck(const GroupApplyAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  sgroupid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sgroupid().size() > 0) {
    sgroupid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgroupid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  errcode_ = from.errcode_;
  // @@protoc_insertion_point(copy_constructor:im.GroupApplyAck)
}

void GroupApplyAck::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

GroupApplyAck::~GroupApplyAck() {
  // @@protoc_insertion_point(destructor:im.GroupApplyAck)
  SharedDtor();
}

void GroupApplyAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GroupApplyAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GroupApplyAck& GroupApplyAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2egroup_2eproto::scc_info_GroupApplyAck.base);
  return *internal_default_instance();
}


void GroupApplyAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.GroupApplyAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
  _internal_metadata_.Clear();
}

bool GroupApplyAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.GroupApplyAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupApplyAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sGroupId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgroupid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgroupid().data(), static_cast<int>(this->sgroupid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupApplyAck.sGroupId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupApplyAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode errcode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.GroupApplyAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.GroupApplyAck)
  return false;
#undef DO_
}

void GroupApplyAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.GroupApplyAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupApplyAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string sGroupId = 2;
  if (this->sgroupid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgroupid().data(), static_cast<int>(this->sgroupid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupApplyAck.sGroupId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sgroupid(), output);
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupApplyAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // .im.ErrCode errcode = 4;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->errcode(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.GroupApplyAck)
}

size_t GroupApplyAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.GroupApplyAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sGroupId = 2;
  if (this->sgroupid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgroupid());
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // .im.ErrCode errcode = 4;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GroupApplyAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GroupApplyAck*>(&from));
}

void GroupApplyAck::MergeFrom(const GroupApplyAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.GroupApplyAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.sgroupid().size() > 0) {

    sgroupid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgroupid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void GroupApplyAck::CopyFrom(const GroupApplyAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.GroupApplyAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupApplyAck::IsInitialized() const {
  return true;
}

void GroupApplyAck::Swap(GroupApplyAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupApplyAck::InternalSwap(GroupApplyAck* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sgroupid_.Swap(&other->sgroupid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(errcode_, other->errcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string GroupApplyAck::GetTypeName() const {
  return "im.GroupApplyAck";
}


// ===================================================================

void GroupInvite::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupInvite::kSInviterIdFieldNumber;
const int GroupInvite::kSInviteeIdsFieldNumber;
const int GroupInvite::kSGroupIdFieldNumber;
const int GroupInvite::kSMsgIdFieldNumber;
const int GroupInvite::kSRemarkFieldNumber;
const int GroupInvite::kExtendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupInvite::GroupInvite()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2egroup_2eproto::scc_info_GroupInvite.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.GroupInvite)
}
GroupInvite::GroupInvite(const GroupInvite& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      sinviteeids_(from.sinviteeids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sinviterid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sinviterid().size() > 0) {
    sinviterid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sinviterid_);
  }
  sgroupid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sgroupid().size() > 0) {
    sgroupid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgroupid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  sremark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sremark().size() > 0) {
    sremark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sremark_);
  }
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extend().size() > 0) {
    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  // @@protoc_insertion_point(copy_constructor:im.GroupInvite)
}

void GroupInvite::SharedCtor() {
  sinviterid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sremark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GroupInvite::~GroupInvite() {
  // @@protoc_insertion_point(destructor:im.GroupInvite)
  SharedDtor();
}

void GroupInvite::SharedDtor() {
  sinviterid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sremark_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GroupInvite::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GroupInvite& GroupInvite::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2egroup_2eproto::scc_info_GroupInvite.base);
  return *internal_default_instance();
}


void GroupInvite::Clear() {
// @@protoc_insertion_point(message_clear_start:im.GroupInvite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sinviteeids_.Clear();
  sinviterid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sremark_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GroupInvite::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.GroupInvite)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sInviterId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sinviterid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sinviterid().data(), static_cast<int>(this->sinviterid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupInvite.sInviterId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string sInviteeIds = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_sinviteeids()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sinviteeids(this->sinviteeids_size() - 1).data(),
            static_cast<int>(this->sinviteeids(this->sinviteeids_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupInvite.sInviteeIds"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sGroupId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgroupid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgroupid().data(), static_cast<int>(this->sgroupid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupInvite.sGroupId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupInvite.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sRemark = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sremark()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sremark().data(), static_cast<int>(this->sremark().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupInvite.sRemark"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string extend = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extend()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extend().data(), static_cast<int>(this->extend().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupInvite.extend"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.GroupInvite)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.GroupInvite)
  return false;
#undef DO_
}

void GroupInvite::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.GroupInvite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sInviterId = 1;
  if (this->sinviterid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sinviterid().data(), static_cast<int>(this->sinviterid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupInvite.sInviterId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sinviterid(), output);
  }

  // repeated string sInviteeIds = 2;
  for (int i = 0, n = this->sinviteeids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sinviteeids(i).data(), static_cast<int>(this->sinviteeids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupInvite.sInviteeIds");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->sinviteeids(i), output);
  }

  // string sGroupId = 3;
  if (this->sgroupid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgroupid().data(), static_cast<int>(this->sgroupid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupInvite.sGroupId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sgroupid(), output);
  }

  // string sMsgId = 4;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupInvite.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->smsgid(), output);
  }

  // string sRemark = 5;
  if (this->sremark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sremark().data(), static_cast<int>(this->sremark().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupInvite.sRemark");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->sremark(), output);
  }

  // string extend = 6;
  if (this->extend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extend().data(), static_cast<int>(this->extend().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupInvite.extend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->extend(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.GroupInvite)
}

size_t GroupInvite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.GroupInvite)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated string sInviteeIds = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->sinviteeids_size());
  for (int i = 0, n = this->sinviteeids_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->sinviteeids(i));
  }

  // string sInviterId = 1;
  if (this->sinviterid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sinviterid());
  }

  // string sGroupId = 3;
  if (this->sgroupid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgroupid());
  }

  // string sMsgId = 4;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // string sRemark = 5;
  if (this->sremark().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sremark());
  }

  // string extend = 6;
  if (this->extend().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extend());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GroupInvite::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GroupInvite*>(&from));
}

void GroupInvite::MergeFrom(const GroupInvite& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.GroupInvite)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sinviteeids_.MergeFrom(from.sinviteeids_);
  if (from.sinviterid().size() > 0) {

    sinviterid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sinviterid_);
  }
  if (from.sgroupid().size() > 0) {

    sgroupid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgroupid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.sremark().size() > 0) {

    sremark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sremark_);
  }
  if (from.extend().size() > 0) {

    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
}

void GroupInvite::CopyFrom(const GroupInvite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.GroupInvite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupInvite::IsInitialized() const {
  return true;
}

void GroupInvite::Swap(GroupInvite* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupInvite::InternalSwap(GroupInvite* other) {
  using std::swap;
  sinviteeids_.InternalSwap(CastToBase(&other->sinviteeids_));
  sinviterid_.Swap(&other->sinviterid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sgroupid_.Swap(&other->sgroupid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sremark_.Swap(&other->sremark_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  extend_.Swap(&other->extend_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string GroupInvite::GetTypeName() const {
  return "im.GroupInvite";
}


// ===================================================================

void GroupInviteAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupInviteAck::kSUserIdFieldNumber;
const int GroupInviteAck::kSGroupIdFieldNumber;
const int GroupInviteAck::kSMsgIdFieldNumber;
const int GroupInviteAck::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupInviteAck::GroupInviteAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2egroup_2eproto::scc_info_GroupInviteAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.GroupInviteAck)
}
GroupInviteAck::GroupInviteAck(const GroupInviteAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  sgroupid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sgroupid().size() > 0) {
    sgroupid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgroupid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  errcode_ = from.errcode_;
  // @@protoc_insertion_point(copy_constructor:im.GroupInviteAck)
}

void GroupInviteAck::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

GroupInviteAck::~GroupInviteAck() {
  // @@protoc_insertion_point(destructor:im.GroupInviteAck)
  SharedDtor();
}

void GroupInviteAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GroupInviteAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GroupInviteAck& GroupInviteAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2egroup_2eproto::scc_info_GroupInviteAck.base);
  return *internal_default_instance();
}


void GroupInviteAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.GroupInviteAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
  _internal_metadata_.Clear();
}

bool GroupInviteAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.GroupInviteAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupInviteAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sGroupId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgroupid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgroupid().data(), static_cast<int>(this->sgroupid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupInviteAck.sGroupId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupInviteAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode errcode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.GroupInviteAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.GroupInviteAck)
  return false;
#undef DO_
}

void GroupInviteAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.GroupInviteAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupInviteAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string sGroupId = 2;
  if (this->sgroupid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgroupid().data(), static_cast<int>(this->sgroupid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupInviteAck.sGroupId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sgroupid(), output);
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupInviteAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // .im.ErrCode errcode = 4;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->errcode(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.GroupInviteAck)
}

size_t GroupInviteAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.GroupInviteAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sGroupId = 2;
  if (this->sgroupid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgroupid());
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // .im.ErrCode errcode = 4;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GroupInviteAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GroupInviteAck*>(&from));
}

void GroupInviteAck::MergeFrom(const GroupInviteAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.GroupInviteAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.sgroupid().size() > 0) {

    sgroupid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgroupid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void GroupInviteAck::CopyFrom(const GroupInviteAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.GroupInviteAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupInviteAck::IsInitialized() const {
  return true;
}

void GroupInviteAck::Swap(GroupInviteAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupInviteAck::InternalSwap(GroupInviteAck* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sgroupid_.Swap(&other->sgroupid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(errcode_, other->errcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string GroupInviteAck::GetTypeName() const {
  return "im.GroupInviteAck";
}


// ===================================================================

void GroupMember::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupMember::kSUserIdFieldNumber;
const int GroupMember::kSGroupIdFieldNumber;
const int GroupMember::kNPageIndexFieldNumber;
const int GroupMember::kNPageCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupMember::GroupMember()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2egroup_2eproto::scc_info_GroupMember.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.GroupMember)
}
GroupMember::GroupMember(const GroupMember& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  sgroupid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sgroupid().size() > 0) {
    sgroupid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgroupid_);
  }
  ::memcpy(&npageindex_, &from.npageindex_,
    static_cast<size_t>(reinterpret_cast<char*>(&npagecount_) -
    reinterpret_cast<char*>(&npageindex_)) + sizeof(npagecount_));
  // @@protoc_insertion_point(copy_constructor:im.GroupMember)
}

void GroupMember::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&npageindex_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&npagecount_) -
      reinterpret_cast<char*>(&npageindex_)) + sizeof(npagecount_));
}

GroupMember::~GroupMember() {
  // @@protoc_insertion_point(destructor:im.GroupMember)
  SharedDtor();
}

void GroupMember::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GroupMember::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GroupMember& GroupMember::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2egroup_2eproto::scc_info_GroupMember.base);
  return *internal_default_instance();
}


void GroupMember::Clear() {
// @@protoc_insertion_point(message_clear_start:im.GroupMember)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&npageindex_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&npagecount_) -
      reinterpret_cast<char*>(&npageindex_)) + sizeof(npagecount_));
  _internal_metadata_.Clear();
}

bool GroupMember::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.GroupMember)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupMember.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sGroupId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgroupid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgroupid().data(), static_cast<int>(this->sgroupid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupMember.sGroupId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nPageIndex = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &npageindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nPageCount = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &npagecount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.GroupMember)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.GroupMember)
  return false;
#undef DO_
}

void GroupMember::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.GroupMember)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupMember.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string sGroupId = 2;
  if (this->sgroupid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgroupid().data(), static_cast<int>(this->sgroupid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupMember.sGroupId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sgroupid(), output);
  }

  // uint32 nPageIndex = 3;
  if (this->npageindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->npageindex(), output);
  }

  // uint32 nPageCount = 4;
  if (this->npagecount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->npagecount(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.GroupMember)
}

size_t GroupMember::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.GroupMember)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sGroupId = 2;
  if (this->sgroupid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgroupid());
  }

  // uint32 nPageIndex = 3;
  if (this->npageindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->npageindex());
  }

  // uint32 nPageCount = 4;
  if (this->npagecount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->npagecount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GroupMember::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GroupMember*>(&from));
}

void GroupMember::MergeFrom(const GroupMember& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.GroupMember)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.sgroupid().size() > 0) {

    sgroupid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgroupid_);
  }
  if (from.npageindex() != 0) {
    set_npageindex(from.npageindex());
  }
  if (from.npagecount() != 0) {
    set_npagecount(from.npagecount());
  }
}

void GroupMember::CopyFrom(const GroupMember& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.GroupMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupMember::IsInitialized() const {
  return true;
}

void GroupMember::Swap(GroupMember* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupMember::InternalSwap(GroupMember* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sgroupid_.Swap(&other->sgroupid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(npageindex_, other->npageindex_);
  swap(npagecount_, other->npagecount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string GroupMember::GetTypeName() const {
  return "im.GroupMember";
}


// ===================================================================

void GroupMemberAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupMemberAck::kSUserIdFieldNumber;
const int GroupMemberAck::kSGroupIdFieldNumber;
const int GroupMemberAck::kNPageIndexFieldNumber;
const int GroupMemberAck::kMembersFieldNumber;
const int GroupMemberAck::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupMemberAck::GroupMemberAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2egroup_2eproto::scc_info_GroupMemberAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.GroupMemberAck)
}
GroupMemberAck::GroupMemberAck(const GroupMemberAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      members_(from.members_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  sgroupid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sgroupid().size() > 0) {
    sgroupid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgroupid_);
  }
  ::memcpy(&npageindex_, &from.npageindex_,
    static_cast<size_t>(reinterpret_cast<char*>(&errcode_) -
    reinterpret_cast<char*>(&npageindex_)) + sizeof(errcode_));
  // @@protoc_insertion_point(copy_constructor:im.GroupMemberAck)
}

void GroupMemberAck::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&npageindex_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&errcode_) -
      reinterpret_cast<char*>(&npageindex_)) + sizeof(errcode_));
}

GroupMemberAck::~GroupMemberAck() {
  // @@protoc_insertion_point(destructor:im.GroupMemberAck)
  SharedDtor();
}

void GroupMemberAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GroupMemberAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GroupMemberAck& GroupMemberAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2egroup_2eproto::scc_info_GroupMemberAck.base);
  return *internal_default_instance();
}


void GroupMemberAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.GroupMemberAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  members_.Clear();
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&npageindex_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&errcode_) -
      reinterpret_cast<char*>(&npageindex_)) + sizeof(errcode_));
  _internal_metadata_.Clear();
}

bool GroupMemberAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.GroupMemberAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupMemberAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sGroupId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgroupid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgroupid().data(), static_cast<int>(this->sgroupid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupMemberAck.sGroupId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nPageIndex = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &npageindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .im.Member members = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_members()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode errcode = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.GroupMemberAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.GroupMemberAck)
  return false;
#undef DO_
}

void GroupMemberAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.GroupMemberAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupMemberAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string sGroupId = 2;
  if (this->sgroupid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgroupid().data(), static_cast<int>(this->sgroupid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupMemberAck.sGroupId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sgroupid(), output);
  }

  // uint32 nPageIndex = 3;
  if (this->npageindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->npageindex(), output);
  }

  // repeated .im.Member members = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->members_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4,
      this->members(static_cast<int>(i)),
      output);
  }

  // .im.ErrCode errcode = 5;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->errcode(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.GroupMemberAck)
}

size_t GroupMemberAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.GroupMemberAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .im.Member members = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->members_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->members(static_cast<int>(i)));
    }
  }

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sGroupId = 2;
  if (this->sgroupid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgroupid());
  }

  // uint32 nPageIndex = 3;
  if (this->npageindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->npageindex());
  }

  // .im.ErrCode errcode = 5;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GroupMemberAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GroupMemberAck*>(&from));
}

void GroupMemberAck::MergeFrom(const GroupMemberAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.GroupMemberAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  members_.MergeFrom(from.members_);
  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.sgroupid().size() > 0) {

    sgroupid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgroupid_);
  }
  if (from.npageindex() != 0) {
    set_npageindex(from.npageindex());
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void GroupMemberAck::CopyFrom(const GroupMemberAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.GroupMemberAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupMemberAck::IsInitialized() const {
  return true;
}

void GroupMemberAck::Swap(GroupMemberAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupMemberAck::InternalSwap(GroupMemberAck* other) {
  using std::swap;
  CastToBase(&members_)->InternalSwap(CastToBase(&other->members_));
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sgroupid_.Swap(&other->sgroupid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(npageindex_, other->npageindex_);
  swap(errcode_, other->errcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string GroupMemberAck::GetTypeName() const {
  return "im.GroupMemberAck";
}


// ===================================================================

void GroupKickOut::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupKickOut::kSUserIdFieldNumber;
const int GroupKickOut::kSKickIdFieldNumber;
const int GroupKickOut::kSGroupIdFieldNumber;
const int GroupKickOut::kSMsgIdFieldNumber;
const int GroupKickOut::kExtendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupKickOut::GroupKickOut()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2egroup_2eproto::scc_info_GroupKickOut.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.GroupKickOut)
}
GroupKickOut::GroupKickOut(const GroupKickOut& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  skickid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.skickid().size() > 0) {
    skickid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.skickid_);
  }
  sgroupid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sgroupid().size() > 0) {
    sgroupid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgroupid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extend().size() > 0) {
    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  // @@protoc_insertion_point(copy_constructor:im.GroupKickOut)
}

void GroupKickOut::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  skickid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GroupKickOut::~GroupKickOut() {
  // @@protoc_insertion_point(destructor:im.GroupKickOut)
  SharedDtor();
}

void GroupKickOut::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  skickid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GroupKickOut::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GroupKickOut& GroupKickOut::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2egroup_2eproto::scc_info_GroupKickOut.base);
  return *internal_default_instance();
}


void GroupKickOut::Clear() {
// @@protoc_insertion_point(message_clear_start:im.GroupKickOut)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  skickid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GroupKickOut::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.GroupKickOut)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupKickOut.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sKickId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_skickid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->skickid().data(), static_cast<int>(this->skickid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupKickOut.sKickId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sGroupId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgroupid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgroupid().data(), static_cast<int>(this->sgroupid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupKickOut.sGroupId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupKickOut.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string extend = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extend()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extend().data(), static_cast<int>(this->extend().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupKickOut.extend"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.GroupKickOut)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.GroupKickOut)
  return false;
#undef DO_
}

void GroupKickOut::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.GroupKickOut)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupKickOut.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string sKickId = 2;
  if (this->skickid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->skickid().data(), static_cast<int>(this->skickid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupKickOut.sKickId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->skickid(), output);
  }

  // string sGroupId = 3;
  if (this->sgroupid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgroupid().data(), static_cast<int>(this->sgroupid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupKickOut.sGroupId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sgroupid(), output);
  }

  // string sMsgId = 4;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupKickOut.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->smsgid(), output);
  }

  // string extend = 5;
  if (this->extend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extend().data(), static_cast<int>(this->extend().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupKickOut.extend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->extend(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.GroupKickOut)
}

size_t GroupKickOut::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.GroupKickOut)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sKickId = 2;
  if (this->skickid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->skickid());
  }

  // string sGroupId = 3;
  if (this->sgroupid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgroupid());
  }

  // string sMsgId = 4;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // string extend = 5;
  if (this->extend().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extend());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GroupKickOut::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GroupKickOut*>(&from));
}

void GroupKickOut::MergeFrom(const GroupKickOut& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.GroupKickOut)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.skickid().size() > 0) {

    skickid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.skickid_);
  }
  if (from.sgroupid().size() > 0) {

    sgroupid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgroupid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.extend().size() > 0) {

    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
}

void GroupKickOut::CopyFrom(const GroupKickOut& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.GroupKickOut)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupKickOut::IsInitialized() const {
  return true;
}

void GroupKickOut::Swap(GroupKickOut* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupKickOut::InternalSwap(GroupKickOut* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  skickid_.Swap(&other->skickid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sgroupid_.Swap(&other->sgroupid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  extend_.Swap(&other->extend_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string GroupKickOut::GetTypeName() const {
  return "im.GroupKickOut";
}


// ===================================================================

void GroupKickoutAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupKickoutAck::kSUserIdFieldNumber;
const int GroupKickoutAck::kSMsgIdFieldNumber;
const int GroupKickoutAck::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupKickoutAck::GroupKickoutAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2egroup_2eproto::scc_info_GroupKickoutAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.GroupKickoutAck)
}
GroupKickoutAck::GroupKickoutAck(const GroupKickoutAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  errcode_ = from.errcode_;
  // @@protoc_insertion_point(copy_constructor:im.GroupKickoutAck)
}

void GroupKickoutAck::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

GroupKickoutAck::~GroupKickoutAck() {
  // @@protoc_insertion_point(destructor:im.GroupKickoutAck)
  SharedDtor();
}

void GroupKickoutAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GroupKickoutAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GroupKickoutAck& GroupKickoutAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2egroup_2eproto::scc_info_GroupKickoutAck.base);
  return *internal_default_instance();
}


void GroupKickoutAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.GroupKickoutAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
  _internal_metadata_.Clear();
}

bool GroupKickoutAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.GroupKickoutAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupKickoutAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupKickoutAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode errcode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.GroupKickoutAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.GroupKickoutAck)
  return false;
#undef DO_
}

void GroupKickoutAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.GroupKickoutAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupKickoutAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupKickoutAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  // .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->errcode(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.GroupKickoutAck)
}

size_t GroupKickoutAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.GroupKickoutAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GroupKickoutAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GroupKickoutAck*>(&from));
}

void GroupKickoutAck::MergeFrom(const GroupKickoutAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.GroupKickoutAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void GroupKickoutAck::CopyFrom(const GroupKickoutAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.GroupKickoutAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupKickoutAck::IsInitialized() const {
  return true;
}

void GroupKickoutAck::Swap(GroupKickoutAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupKickoutAck::InternalSwap(GroupKickoutAck* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(errcode_, other->errcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string GroupKickoutAck::GetTypeName() const {
  return "im.GroupKickoutAck";
}


// ===================================================================

void GroupQuit::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupQuit::kSUserIdFieldNumber;
const int GroupQuit::kSGroupIdFieldNumber;
const int GroupQuit::kSMsgIdFieldNumber;
const int GroupQuit::kExtendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupQuit::GroupQuit()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2egroup_2eproto::scc_info_GroupQuit.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.GroupQuit)
}
GroupQuit::GroupQuit(const GroupQuit& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  sgroupid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sgroupid().size() > 0) {
    sgroupid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgroupid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extend().size() > 0) {
    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  // @@protoc_insertion_point(copy_constructor:im.GroupQuit)
}

void GroupQuit::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GroupQuit::~GroupQuit() {
  // @@protoc_insertion_point(destructor:im.GroupQuit)
  SharedDtor();
}

void GroupQuit::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GroupQuit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GroupQuit& GroupQuit::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2egroup_2eproto::scc_info_GroupQuit.base);
  return *internal_default_instance();
}


void GroupQuit::Clear() {
// @@protoc_insertion_point(message_clear_start:im.GroupQuit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GroupQuit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.GroupQuit)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupQuit.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sGroupId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgroupid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgroupid().data(), static_cast<int>(this->sgroupid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupQuit.sGroupId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupQuit.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string extend = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extend()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extend().data(), static_cast<int>(this->extend().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupQuit.extend"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.GroupQuit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.GroupQuit)
  return false;
#undef DO_
}

void GroupQuit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.GroupQuit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupQuit.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string sGroupId = 2;
  if (this->sgroupid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgroupid().data(), static_cast<int>(this->sgroupid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupQuit.sGroupId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sgroupid(), output);
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupQuit.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // string extend = 4;
  if (this->extend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extend().data(), static_cast<int>(this->extend().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupQuit.extend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->extend(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.GroupQuit)
}

size_t GroupQuit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.GroupQuit)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sGroupId = 2;
  if (this->sgroupid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgroupid());
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // string extend = 4;
  if (this->extend().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extend());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GroupQuit::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GroupQuit*>(&from));
}

void GroupQuit::MergeFrom(const GroupQuit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.GroupQuit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.sgroupid().size() > 0) {

    sgroupid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgroupid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.extend().size() > 0) {

    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
}

void GroupQuit::CopyFrom(const GroupQuit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.GroupQuit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupQuit::IsInitialized() const {
  return true;
}

void GroupQuit::Swap(GroupQuit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupQuit::InternalSwap(GroupQuit* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sgroupid_.Swap(&other->sgroupid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  extend_.Swap(&other->extend_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string GroupQuit::GetTypeName() const {
  return "im.GroupQuit";
}


// ===================================================================

void GroupQuitAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupQuitAck::kSUserIdFieldNumber;
const int GroupQuitAck::kSGroupIdFieldNumber;
const int GroupQuitAck::kSMsgIdFieldNumber;
const int GroupQuitAck::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupQuitAck::GroupQuitAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2egroup_2eproto::scc_info_GroupQuitAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.GroupQuitAck)
}
GroupQuitAck::GroupQuitAck(const GroupQuitAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  sgroupid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sgroupid().size() > 0) {
    sgroupid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgroupid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  errcode_ = from.errcode_;
  // @@protoc_insertion_point(copy_constructor:im.GroupQuitAck)
}

void GroupQuitAck::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

GroupQuitAck::~GroupQuitAck() {
  // @@protoc_insertion_point(destructor:im.GroupQuitAck)
  SharedDtor();
}

void GroupQuitAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GroupQuitAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GroupQuitAck& GroupQuitAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2egroup_2eproto::scc_info_GroupQuitAck.base);
  return *internal_default_instance();
}


void GroupQuitAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.GroupQuitAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
  _internal_metadata_.Clear();
}

bool GroupQuitAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.GroupQuitAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupQuitAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sGroupId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgroupid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgroupid().data(), static_cast<int>(this->sgroupid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupQuitAck.sGroupId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupQuitAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode errcode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.GroupQuitAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.GroupQuitAck)
  return false;
#undef DO_
}

void GroupQuitAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.GroupQuitAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupQuitAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string sGroupId = 2;
  if (this->sgroupid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgroupid().data(), static_cast<int>(this->sgroupid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupQuitAck.sGroupId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sgroupid(), output);
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupQuitAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // .im.ErrCode errcode = 4;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->errcode(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.GroupQuitAck)
}

size_t GroupQuitAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.GroupQuitAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sGroupId = 2;
  if (this->sgroupid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgroupid());
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // .im.ErrCode errcode = 4;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GroupQuitAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GroupQuitAck*>(&from));
}

void GroupQuitAck::MergeFrom(const GroupQuitAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.GroupQuitAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.sgroupid().size() > 0) {

    sgroupid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgroupid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void GroupQuitAck::CopyFrom(const GroupQuitAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.GroupQuitAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupQuitAck::IsInitialized() const {
  return true;
}

void GroupQuitAck::Swap(GroupQuitAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupQuitAck::InternalSwap(GroupQuitAck* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sgroupid_.Swap(&other->sgroupid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(errcode_, other->errcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string GroupQuitAck::GetTypeName() const {
  return "im.GroupQuitAck";
}


// ===================================================================

void GroupModify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupModify::kSUserIdFieldNumber;
const int GroupModify::kSGroupIdFieldNumber;
const int GroupModify::kSInvolvedIdFieldNumber;
const int GroupModify::kSMsgIdFieldNumber;
const int GroupModify::kNModifyTypeFieldNumber;
const int GroupModify::kSContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupModify::GroupModify()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2egroup_2eproto::scc_info_GroupModify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.GroupModify)
}
GroupModify::GroupModify(const GroupModify& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  sgroupid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sgroupid().size() > 0) {
    sgroupid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgroupid_);
  }
  sinvolvedid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sinvolvedid().size() > 0) {
    sinvolvedid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sinvolvedid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  scontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.scontent().size() > 0) {
    scontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scontent_);
  }
  nmodifytype_ = from.nmodifytype_;
  // @@protoc_insertion_point(copy_constructor:im.GroupModify)
}

void GroupModify::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sinvolvedid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nmodifytype_ = 0;
}

GroupModify::~GroupModify() {
  // @@protoc_insertion_point(destructor:im.GroupModify)
  SharedDtor();
}

void GroupModify::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sinvolvedid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GroupModify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GroupModify& GroupModify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2egroup_2eproto::scc_info_GroupModify.base);
  return *internal_default_instance();
}


void GroupModify::Clear() {
// @@protoc_insertion_point(message_clear_start:im.GroupModify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sinvolvedid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nmodifytype_ = 0;
  _internal_metadata_.Clear();
}

bool GroupModify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.GroupModify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupModify.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sGroupId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgroupid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgroupid().data(), static_cast<int>(this->sgroupid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupModify.sGroupId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sInvolvedId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sinvolvedid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sinvolvedid().data(), static_cast<int>(this->sinvolvedid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupModify.sInvolvedId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupModify.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.NotifyType nModifyType = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_nmodifytype(static_cast< ::im::NotifyType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sContent = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scontent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scontent().data(), static_cast<int>(this->scontent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupModify.sContent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.GroupModify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.GroupModify)
  return false;
#undef DO_
}

void GroupModify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.GroupModify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupModify.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string sGroupId = 2;
  if (this->sgroupid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgroupid().data(), static_cast<int>(this->sgroupid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupModify.sGroupId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sgroupid(), output);
  }

  // string sInvolvedId = 3;
  if (this->sinvolvedid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sinvolvedid().data(), static_cast<int>(this->sinvolvedid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupModify.sInvolvedId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sinvolvedid(), output);
  }

  // string sMsgId = 4;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupModify.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->smsgid(), output);
  }

  // .im.NotifyType nModifyType = 5;
  if (this->nmodifytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->nmodifytype(), output);
  }

  // string sContent = 6;
  if (this->scontent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scontent().data(), static_cast<int>(this->scontent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupModify.sContent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->scontent(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.GroupModify)
}

size_t GroupModify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.GroupModify)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sGroupId = 2;
  if (this->sgroupid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgroupid());
  }

  // string sInvolvedId = 3;
  if (this->sinvolvedid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sinvolvedid());
  }

  // string sMsgId = 4;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // string sContent = 6;
  if (this->scontent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scontent());
  }

  // .im.NotifyType nModifyType = 5;
  if (this->nmodifytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->nmodifytype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GroupModify::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GroupModify*>(&from));
}

void GroupModify::MergeFrom(const GroupModify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.GroupModify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.sgroupid().size() > 0) {

    sgroupid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgroupid_);
  }
  if (from.sinvolvedid().size() > 0) {

    sinvolvedid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sinvolvedid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.scontent().size() > 0) {

    scontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scontent_);
  }
  if (from.nmodifytype() != 0) {
    set_nmodifytype(from.nmodifytype());
  }
}

void GroupModify::CopyFrom(const GroupModify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.GroupModify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupModify::IsInitialized() const {
  return true;
}

void GroupModify::Swap(GroupModify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupModify::InternalSwap(GroupModify* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sgroupid_.Swap(&other->sgroupid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sinvolvedid_.Swap(&other->sinvolvedid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  scontent_.Swap(&other->scontent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(nmodifytype_, other->nmodifytype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string GroupModify::GetTypeName() const {
  return "im.GroupModify";
}


// ===================================================================

void GroupModifyAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupModifyAck::kSUserIdFieldNumber;
const int GroupModifyAck::kSGroupIdFieldNumber;
const int GroupModifyAck::kSMsgIdFieldNumber;
const int GroupModifyAck::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupModifyAck::GroupModifyAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2egroup_2eproto::scc_info_GroupModifyAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.GroupModifyAck)
}
GroupModifyAck::GroupModifyAck(const GroupModifyAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  sgroupid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sgroupid().size() > 0) {
    sgroupid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgroupid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  errcode_ = from.errcode_;
  // @@protoc_insertion_point(copy_constructor:im.GroupModifyAck)
}

void GroupModifyAck::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

GroupModifyAck::~GroupModifyAck() {
  // @@protoc_insertion_point(destructor:im.GroupModifyAck)
  SharedDtor();
}

void GroupModifyAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GroupModifyAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GroupModifyAck& GroupModifyAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2egroup_2eproto::scc_info_GroupModifyAck.base);
  return *internal_default_instance();
}


void GroupModifyAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.GroupModifyAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
  _internal_metadata_.Clear();
}

bool GroupModifyAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.GroupModifyAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupModifyAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sGroupId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgroupid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgroupid().data(), static_cast<int>(this->sgroupid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupModifyAck.sGroupId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupModifyAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode errcode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.GroupModifyAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.GroupModifyAck)
  return false;
#undef DO_
}

void GroupModifyAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.GroupModifyAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupModifyAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string sGroupId = 2;
  if (this->sgroupid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgroupid().data(), static_cast<int>(this->sgroupid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupModifyAck.sGroupId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sgroupid(), output);
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupModifyAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // .im.ErrCode errcode = 4;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->errcode(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.GroupModifyAck)
}

size_t GroupModifyAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.GroupModifyAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sGroupId = 2;
  if (this->sgroupid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgroupid());
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // .im.ErrCode errcode = 4;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GroupModifyAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GroupModifyAck*>(&from));
}

void GroupModifyAck::MergeFrom(const GroupModifyAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.GroupModifyAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.sgroupid().size() > 0) {

    sgroupid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgroupid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void GroupModifyAck::CopyFrom(const GroupModifyAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.GroupModifyAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupModifyAck::IsInitialized() const {
  return true;
}

void GroupModifyAck::Swap(GroupModifyAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupModifyAck::InternalSwap(GroupModifyAck* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sgroupid_.Swap(&other->sgroupid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(errcode_, other->errcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string GroupModifyAck::GetTypeName() const {
  return "im.GroupModifyAck";
}


// ===================================================================

void GroupNotify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupNotify::kSUserIdFieldNumber;
const int GroupNotify::kSGroupIdFieldNumber;
const int GroupNotify::kSMsgIdFieldNumber;
const int GroupNotify::kNNotifyTypeFieldNumber;
const int GroupNotify::kSContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupNotify::GroupNotify()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2egroup_2eproto::scc_info_GroupNotify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.GroupNotify)
}
GroupNotify::GroupNotify(const GroupNotify& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  sgroupid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sgroupid().size() > 0) {
    sgroupid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgroupid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  scontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.scontent().size() > 0) {
    scontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scontent_);
  }
  nnotifytype_ = from.nnotifytype_;
  // @@protoc_insertion_point(copy_constructor:im.GroupNotify)
}

void GroupNotify::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nnotifytype_ = 0u;
}

GroupNotify::~GroupNotify() {
  // @@protoc_insertion_point(destructor:im.GroupNotify)
  SharedDtor();
}

void GroupNotify::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GroupNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GroupNotify& GroupNotify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2egroup_2eproto::scc_info_GroupNotify.base);
  return *internal_default_instance();
}


void GroupNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:im.GroupNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nnotifytype_ = 0u;
  _internal_metadata_.Clear();
}

bool GroupNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.GroupNotify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupNotify.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sGroupId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgroupid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgroupid().data(), static_cast<int>(this->sgroupid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupNotify.sGroupId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupNotify.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nNotifyType = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nnotifytype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sContent = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scontent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scontent().data(), static_cast<int>(this->scontent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupNotify.sContent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.GroupNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.GroupNotify)
  return false;
#undef DO_
}

void GroupNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.GroupNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupNotify.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string sGroupId = 2;
  if (this->sgroupid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgroupid().data(), static_cast<int>(this->sgroupid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupNotify.sGroupId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sgroupid(), output);
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupNotify.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // uint32 nNotifyType = 4;
  if (this->nnotifytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->nnotifytype(), output);
  }

  // string sContent = 5;
  if (this->scontent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scontent().data(), static_cast<int>(this->scontent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupNotify.sContent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->scontent(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.GroupNotify)
}

size_t GroupNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.GroupNotify)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sGroupId = 2;
  if (this->sgroupid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgroupid());
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // string sContent = 5;
  if (this->scontent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scontent());
  }

  // uint32 nNotifyType = 4;
  if (this->nnotifytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nnotifytype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GroupNotify::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GroupNotify*>(&from));
}

void GroupNotify::MergeFrom(const GroupNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.GroupNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.sgroupid().size() > 0) {

    sgroupid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgroupid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.scontent().size() > 0) {

    scontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scontent_);
  }
  if (from.nnotifytype() != 0) {
    set_nnotifytype(from.nnotifytype());
  }
}

void GroupNotify::CopyFrom(const GroupNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.GroupNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupNotify::IsInitialized() const {
  return true;
}

void GroupNotify::Swap(GroupNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupNotify::InternalSwap(GroupNotify* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sgroupid_.Swap(&other->sgroupid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  scontent_.Swap(&other->scontent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(nnotifytype_, other->nnotifytype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string GroupNotify::GetTypeName() const {
  return "im.GroupNotify";
}


// ===================================================================

void GroupNotifyAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupNotifyAck::kSUserIdFieldNumber;
const int GroupNotifyAck::kSGroupIdFieldNumber;
const int GroupNotifyAck::kSMsgIdFieldNumber;
const int GroupNotifyAck::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupNotifyAck::GroupNotifyAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2egroup_2eproto::scc_info_GroupNotifyAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.GroupNotifyAck)
}
GroupNotifyAck::GroupNotifyAck(const GroupNotifyAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  sgroupid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sgroupid().size() > 0) {
    sgroupid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgroupid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  errcode_ = from.errcode_;
  // @@protoc_insertion_point(copy_constructor:im.GroupNotifyAck)
}

void GroupNotifyAck::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

GroupNotifyAck::~GroupNotifyAck() {
  // @@protoc_insertion_point(destructor:im.GroupNotifyAck)
  SharedDtor();
}

void GroupNotifyAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GroupNotifyAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GroupNotifyAck& GroupNotifyAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2egroup_2eproto::scc_info_GroupNotifyAck.base);
  return *internal_default_instance();
}


void GroupNotifyAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.GroupNotifyAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
  _internal_metadata_.Clear();
}

bool GroupNotifyAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.GroupNotifyAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupNotifyAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sGroupId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgroupid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgroupid().data(), static_cast<int>(this->sgroupid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupNotifyAck.sGroupId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupNotifyAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode errcode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.GroupNotifyAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.GroupNotifyAck)
  return false;
#undef DO_
}

void GroupNotifyAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.GroupNotifyAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupNotifyAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string sGroupId = 2;
  if (this->sgroupid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgroupid().data(), static_cast<int>(this->sgroupid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupNotifyAck.sGroupId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sgroupid(), output);
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupNotifyAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // .im.ErrCode errcode = 4;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->errcode(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.GroupNotifyAck)
}

size_t GroupNotifyAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.GroupNotifyAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sGroupId = 2;
  if (this->sgroupid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgroupid());
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // .im.ErrCode errcode = 4;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GroupNotifyAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GroupNotifyAck*>(&from));
}

void GroupNotifyAck::MergeFrom(const GroupNotifyAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.GroupNotifyAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.sgroupid().size() > 0) {

    sgroupid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgroupid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void GroupNotifyAck::CopyFrom(const GroupNotifyAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.GroupNotifyAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupNotifyAck::IsInitialized() const {
  return true;
}

void GroupNotifyAck::Swap(GroupNotifyAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupNotifyAck::InternalSwap(GroupNotifyAck* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sgroupid_.Swap(&other->sgroupid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(errcode_, other->errcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string GroupNotifyAck::GetTypeName() const {
  return "im.GroupNotifyAck";
}


// ===================================================================

void GroupPermit::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupPermit::kSFromIdFieldNumber;
const int GroupPermit::kSToIdFieldNumber;
const int GroupPermit::kSGrpIdFieldNumber;
const int GroupPermit::kSMsgIdFieldNumber;
const int GroupPermit::kRspTypeFieldNumber;
const int GroupPermit::kErrcodeFieldNumber;
const int GroupPermit::kSRemarkFieldNumber;
const int GroupPermit::kExtendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupPermit::GroupPermit()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2egroup_2eproto::scc_info_GroupPermit.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.GroupPermit)
}
GroupPermit::GroupPermit(const GroupPermit& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sfromid().size() > 0) {
    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stoid().size() > 0) {
    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sgrpid().size() > 0) {
    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  sremark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sremark().size() > 0) {
    sremark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sremark_);
  }
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extend().size() > 0) {
    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  ::memcpy(&rsptype_, &from.rsptype_,
    static_cast<size_t>(reinterpret_cast<char*>(&errcode_) -
    reinterpret_cast<char*>(&rsptype_)) + sizeof(errcode_));
  // @@protoc_insertion_point(copy_constructor:im.GroupPermit)
}

void GroupPermit::SharedCtor() {
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sremark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&rsptype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&errcode_) -
      reinterpret_cast<char*>(&rsptype_)) + sizeof(errcode_));
}

GroupPermit::~GroupPermit() {
  // @@protoc_insertion_point(destructor:im.GroupPermit)
  SharedDtor();
}

void GroupPermit::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sremark_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GroupPermit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GroupPermit& GroupPermit::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2egroup_2eproto::scc_info_GroupPermit.base);
  return *internal_default_instance();
}


void GroupPermit::Clear() {
// @@protoc_insertion_point(message_clear_start:im.GroupPermit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sremark_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&rsptype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&errcode_) -
      reinterpret_cast<char*>(&rsptype_)) + sizeof(errcode_));
  _internal_metadata_.Clear();
}

bool GroupPermit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.GroupPermit)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sFromId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), static_cast<int>(this->sfromid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupPermit.sFromId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sToId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), static_cast<int>(this->stoid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupPermit.sToId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sGrpId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgrpid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgrpid().data(), static_cast<int>(this->sgrpid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupPermit.sGrpId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupPermit.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 rspType = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rsptype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode errcode = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sRemark = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sremark()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sremark().data(), static_cast<int>(this->sremark().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupPermit.sRemark"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string extend = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extend()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extend().data(), static_cast<int>(this->extend().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupPermit.extend"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.GroupPermit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.GroupPermit)
  return false;
#undef DO_
}

void GroupPermit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.GroupPermit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), static_cast<int>(this->sfromid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupPermit.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // string sToId = 2;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), static_cast<int>(this->stoid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupPermit.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stoid(), output);
  }

  // string sGrpId = 3;
  if (this->sgrpid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgrpid().data(), static_cast<int>(this->sgrpid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupPermit.sGrpId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sgrpid(), output);
  }

  // string sMsgId = 4;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupPermit.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->smsgid(), output);
  }

  // uint32 rspType = 5;
  if (this->rsptype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->rsptype(), output);
  }

  // .im.ErrCode errcode = 6;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->errcode(), output);
  }

  // string sRemark = 7;
  if (this->sremark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sremark().data(), static_cast<int>(this->sremark().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupPermit.sRemark");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->sremark(), output);
  }

  // string extend = 8;
  if (this->extend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extend().data(), static_cast<int>(this->extend().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupPermit.extend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->extend(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.GroupPermit)
}

size_t GroupPermit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.GroupPermit)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // string sToId = 2;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // string sGrpId = 3;
  if (this->sgrpid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgrpid());
  }

  // string sMsgId = 4;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // string sRemark = 7;
  if (this->sremark().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sremark());
  }

  // string extend = 8;
  if (this->extend().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extend());
  }

  // uint32 rspType = 5;
  if (this->rsptype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rsptype());
  }

  // .im.ErrCode errcode = 6;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GroupPermit::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GroupPermit*>(&from));
}

void GroupPermit::MergeFrom(const GroupPermit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.GroupPermit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.sgrpid().size() > 0) {

    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.sremark().size() > 0) {

    sremark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sremark_);
  }
  if (from.extend().size() > 0) {

    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  if (from.rsptype() != 0) {
    set_rsptype(from.rsptype());
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void GroupPermit::CopyFrom(const GroupPermit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.GroupPermit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupPermit::IsInitialized() const {
  return true;
}

void GroupPermit::Swap(GroupPermit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupPermit::InternalSwap(GroupPermit* other) {
  using std::swap;
  sfromid_.Swap(&other->sfromid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  stoid_.Swap(&other->stoid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sgrpid_.Swap(&other->sgrpid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sremark_.Swap(&other->sremark_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  extend_.Swap(&other->extend_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(rsptype_, other->rsptype_);
  swap(errcode_, other->errcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string GroupPermit::GetTypeName() const {
  return "im.GroupPermit";
}


// ===================================================================

void GroupPermitAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupPermitAck::kSUserIdFieldNumber;
const int GroupPermitAck::kSGrpIdFieldNumber;
const int GroupPermitAck::kSMsgIdFieldNumber;
const int GroupPermitAck::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupPermitAck::GroupPermitAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2egroup_2eproto::scc_info_GroupPermitAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.GroupPermitAck)
}
GroupPermitAck::GroupPermitAck(const GroupPermitAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sgrpid().size() > 0) {
    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  errcode_ = from.errcode_;
  // @@protoc_insertion_point(copy_constructor:im.GroupPermitAck)
}

void GroupPermitAck::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

GroupPermitAck::~GroupPermitAck() {
  // @@protoc_insertion_point(destructor:im.GroupPermitAck)
  SharedDtor();
}

void GroupPermitAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GroupPermitAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GroupPermitAck& GroupPermitAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2egroup_2eproto::scc_info_GroupPermitAck.base);
  return *internal_default_instance();
}


void GroupPermitAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.GroupPermitAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
  _internal_metadata_.Clear();
}

bool GroupPermitAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.GroupPermitAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupPermitAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sGrpId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgrpid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgrpid().data(), static_cast<int>(this->sgrpid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupPermitAck.sGrpId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupPermitAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode errcode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.GroupPermitAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.GroupPermitAck)
  return false;
#undef DO_
}

void GroupPermitAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.GroupPermitAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupPermitAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string sGrpId = 2;
  if (this->sgrpid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgrpid().data(), static_cast<int>(this->sgrpid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupPermitAck.sGrpId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sgrpid(), output);
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupPermitAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // .im.ErrCode errcode = 4;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->errcode(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.GroupPermitAck)
}

size_t GroupPermitAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.GroupPermitAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sGrpId = 2;
  if (this->sgrpid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgrpid());
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // .im.ErrCode errcode = 4;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GroupPermitAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GroupPermitAck*>(&from));
}

void GroupPermitAck::MergeFrom(const GroupPermitAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.GroupPermitAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.sgrpid().size() > 0) {

    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void GroupPermitAck::CopyFrom(const GroupPermitAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.GroupPermitAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupPermitAck::IsInitialized() const {
  return true;
}

void GroupPermitAck::Swap(GroupPermitAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupPermitAck::InternalSwap(GroupPermitAck* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sgrpid_.Swap(&other->sgrpid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(errcode_, other->errcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string GroupPermitAck::GetTypeName() const {
  return "im.GroupPermitAck";
}


// ===================================================================

void GroupChatCancel::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupChatCancel::kSFromIdFieldNumber;
const int GroupChatCancel::kSGroupIdFieldNumber;
const int GroupChatCancel::kSMsgIdFieldNumber;
const int GroupChatCancel::kMsgTimeFieldNumber;
const int GroupChatCancel::kCancelTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupChatCancel::GroupChatCancel()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2egroup_2eproto::scc_info_GroupChatCancel.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.GroupChatCancel)
}
GroupChatCancel::GroupChatCancel(const GroupChatCancel& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sfromid().size() > 0) {
    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  sgroupid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sgroupid().size() > 0) {
    sgroupid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgroupid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  ::memcpy(&msgtime_, &from.msgtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&canceltime_) -
    reinterpret_cast<char*>(&msgtime_)) + sizeof(canceltime_));
  // @@protoc_insertion_point(copy_constructor:im.GroupChatCancel)
}

void GroupChatCancel::SharedCtor() {
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&canceltime_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(canceltime_));
}

GroupChatCancel::~GroupChatCancel() {
  // @@protoc_insertion_point(destructor:im.GroupChatCancel)
  SharedDtor();
}

void GroupChatCancel::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GroupChatCancel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GroupChatCancel& GroupChatCancel::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2egroup_2eproto::scc_info_GroupChatCancel.base);
  return *internal_default_instance();
}


void GroupChatCancel::Clear() {
// @@protoc_insertion_point(message_clear_start:im.GroupChatCancel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&canceltime_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(canceltime_));
  _internal_metadata_.Clear();
}

bool GroupChatCancel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.GroupChatCancel)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sFromId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), static_cast<int>(this->sfromid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupChatCancel.sFromId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sGroupId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgroupid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgroupid().data(), static_cast<int>(this->sgroupid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupChatCancel.sGroupId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupChatCancel.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgTime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 cancelTime = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &canceltime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.GroupChatCancel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.GroupChatCancel)
  return false;
#undef DO_
}

void GroupChatCancel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.GroupChatCancel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), static_cast<int>(this->sfromid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupChatCancel.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // string sGroupId = 2;
  if (this->sgroupid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgroupid().data(), static_cast<int>(this->sgroupid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupChatCancel.sGroupId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sgroupid(), output);
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupChatCancel.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // uint64 msgTime = 4;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->msgtime(), output);
  }

  // uint64 cancelTime = 5;
  if (this->canceltime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->canceltime(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.GroupChatCancel)
}

size_t GroupChatCancel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.GroupChatCancel)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // string sGroupId = 2;
  if (this->sgroupid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgroupid());
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // uint64 msgTime = 4;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // uint64 cancelTime = 5;
  if (this->canceltime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->canceltime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GroupChatCancel::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GroupChatCancel*>(&from));
}

void GroupChatCancel::MergeFrom(const GroupChatCancel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.GroupChatCancel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.sgroupid().size() > 0) {

    sgroupid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgroupid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.canceltime() != 0) {
    set_canceltime(from.canceltime());
  }
}

void GroupChatCancel::CopyFrom(const GroupChatCancel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.GroupChatCancel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupChatCancel::IsInitialized() const {
  return true;
}

void GroupChatCancel::Swap(GroupChatCancel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupChatCancel::InternalSwap(GroupChatCancel* other) {
  using std::swap;
  sfromid_.Swap(&other->sfromid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sgroupid_.Swap(&other->sgroupid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgtime_, other->msgtime_);
  swap(canceltime_, other->canceltime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string GroupChatCancel::GetTypeName() const {
  return "im.GroupChatCancel";
}


// ===================================================================

void GroupChatCancelAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupChatCancelAck::kSFromIdFieldNumber;
const int GroupChatCancelAck::kSGroupIdFieldNumber;
const int GroupChatCancelAck::kSMsgIdFieldNumber;
const int GroupChatCancelAck::kCancelTimeFieldNumber;
const int GroupChatCancelAck::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupChatCancelAck::GroupChatCancelAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2egroup_2eproto::scc_info_GroupChatCancelAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.GroupChatCancelAck)
}
GroupChatCancelAck::GroupChatCancelAck(const GroupChatCancelAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sfromid().size() > 0) {
    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  sgroupid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sgroupid().size() > 0) {
    sgroupid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgroupid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  ::memcpy(&canceltime_, &from.canceltime_,
    static_cast<size_t>(reinterpret_cast<char*>(&errcode_) -
    reinterpret_cast<char*>(&canceltime_)) + sizeof(errcode_));
  // @@protoc_insertion_point(copy_constructor:im.GroupChatCancelAck)
}

void GroupChatCancelAck::SharedCtor() {
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&canceltime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&errcode_) -
      reinterpret_cast<char*>(&canceltime_)) + sizeof(errcode_));
}

GroupChatCancelAck::~GroupChatCancelAck() {
  // @@protoc_insertion_point(destructor:im.GroupChatCancelAck)
  SharedDtor();
}

void GroupChatCancelAck::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GroupChatCancelAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GroupChatCancelAck& GroupChatCancelAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2egroup_2eproto::scc_info_GroupChatCancelAck.base);
  return *internal_default_instance();
}


void GroupChatCancelAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.GroupChatCancelAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&canceltime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&errcode_) -
      reinterpret_cast<char*>(&canceltime_)) + sizeof(errcode_));
  _internal_metadata_.Clear();
}

bool GroupChatCancelAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.GroupChatCancelAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sFromId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), static_cast<int>(this->sfromid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupChatCancelAck.sFromId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sGroupId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgroupid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgroupid().data(), static_cast<int>(this->sgroupid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupChatCancelAck.sGroupId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupChatCancelAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 cancelTime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &canceltime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode errcode = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.GroupChatCancelAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.GroupChatCancelAck)
  return false;
#undef DO_
}

void GroupChatCancelAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.GroupChatCancelAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), static_cast<int>(this->sfromid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupChatCancelAck.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // string sGroupId = 2;
  if (this->sgroupid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgroupid().data(), static_cast<int>(this->sgroupid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupChatCancelAck.sGroupId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sgroupid(), output);
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupChatCancelAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // uint64 cancelTime = 4;
  if (this->canceltime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->canceltime(), output);
  }

  // .im.ErrCode errcode = 5;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->errcode(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.GroupChatCancelAck)
}

size_t GroupChatCancelAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.GroupChatCancelAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // string sGroupId = 2;
  if (this->sgroupid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgroupid());
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // uint64 cancelTime = 4;
  if (this->canceltime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->canceltime());
  }

  // .im.ErrCode errcode = 5;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GroupChatCancelAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GroupChatCancelAck*>(&from));
}

void GroupChatCancelAck::MergeFrom(const GroupChatCancelAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.GroupChatCancelAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.sgroupid().size() > 0) {

    sgroupid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgroupid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.canceltime() != 0) {
    set_canceltime(from.canceltime());
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void GroupChatCancelAck::CopyFrom(const GroupChatCancelAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.GroupChatCancelAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupChatCancelAck::IsInitialized() const {
  return true;
}

void GroupChatCancelAck::Swap(GroupChatCancelAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupChatCancelAck::InternalSwap(GroupChatCancelAck* other) {
  using std::swap;
  sfromid_.Swap(&other->sfromid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sgroupid_.Swap(&other->sgroupid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(canceltime_, other->canceltime_);
  swap(errcode_, other->errcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string GroupChatCancelAck::GetTypeName() const {
  return "im.GroupChatCancelAck";
}


// ===================================================================

void GroupInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupInfo::kSGroupIdFieldNumber;
const int GroupInfo::kSGroupAdminIdFieldNumber;
const int GroupInfo::kSGroupAdminNickNameFieldNumber;
const int GroupInfo::kSGroupNameFieldNumber;
const int GroupInfo::kSGroupAnnounceFieldNumber;
const int GroupInfo::kNMemberCountFieldNumber;
const int GroupInfo::kIsMemberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupInfo::GroupInfo()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2egroup_2eproto::scc_info_GroupInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.GroupInfo)
}
GroupInfo::GroupInfo(const GroupInfo& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sgroupid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sgroupid().size() > 0) {
    sgroupid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgroupid_);
  }
  sgroupadminid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sgroupadminid().size() > 0) {
    sgroupadminid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgroupadminid_);
  }
  sgroupadminnickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sgroupadminnickname().size() > 0) {
    sgroupadminnickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgroupadminnickname_);
  }
  sgroupname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sgroupname().size() > 0) {
    sgroupname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgroupname_);
  }
  sgroupannounce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sgroupannounce().size() > 0) {
    sgroupannounce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgroupannounce_);
  }
  ::memcpy(&nmembercount_, &from.nmembercount_,
    static_cast<size_t>(reinterpret_cast<char*>(&ismember_) -
    reinterpret_cast<char*>(&nmembercount_)) + sizeof(ismember_));
  // @@protoc_insertion_point(copy_constructor:im.GroupInfo)
}

void GroupInfo::SharedCtor() {
  sgroupid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupadminid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupadminnickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupannounce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nmembercount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ismember_) -
      reinterpret_cast<char*>(&nmembercount_)) + sizeof(ismember_));
}

GroupInfo::~GroupInfo() {
  // @@protoc_insertion_point(destructor:im.GroupInfo)
  SharedDtor();
}

void GroupInfo::SharedDtor() {
  sgroupid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupadminid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupadminnickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupannounce_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GroupInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GroupInfo& GroupInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2egroup_2eproto::scc_info_GroupInfo.base);
  return *internal_default_instance();
}


void GroupInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:im.GroupInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sgroupid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupadminid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupadminnickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupannounce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nmembercount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ismember_) -
      reinterpret_cast<char*>(&nmembercount_)) + sizeof(ismember_));
  _internal_metadata_.Clear();
}

bool GroupInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.GroupInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sGroupId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgroupid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgroupid().data(), static_cast<int>(this->sgroupid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupInfo.sGroupId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sGroupAdminId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgroupadminid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgroupadminid().data(), static_cast<int>(this->sgroupadminid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupInfo.sGroupAdminId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sGroupAdminNickName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgroupadminnickname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgroupadminnickname().data(), static_cast<int>(this->sgroupadminnickname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupInfo.sGroupAdminNickName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sGroupName = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgroupname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgroupname().data(), static_cast<int>(this->sgroupname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupInfo.sGroupName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sGroupAnnounce = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgroupannounce()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgroupannounce().data(), static_cast<int>(this->sgroupannounce().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.GroupInfo.sGroupAnnounce"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nMemberCount = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nmembercount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isMember = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ismember_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.GroupInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.GroupInfo)
  return false;
#undef DO_
}

void GroupInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.GroupInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sGroupId = 1;
  if (this->sgroupid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgroupid().data(), static_cast<int>(this->sgroupid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupInfo.sGroupId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sgroupid(), output);
  }

  // string sGroupAdminId = 2;
  if (this->sgroupadminid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgroupadminid().data(), static_cast<int>(this->sgroupadminid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupInfo.sGroupAdminId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sgroupadminid(), output);
  }

  // string sGroupAdminNickName = 3;
  if (this->sgroupadminnickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgroupadminnickname().data(), static_cast<int>(this->sgroupadminnickname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupInfo.sGroupAdminNickName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sgroupadminnickname(), output);
  }

  // string sGroupName = 4;
  if (this->sgroupname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgroupname().data(), static_cast<int>(this->sgroupname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupInfo.sGroupName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sgroupname(), output);
  }

  // string sGroupAnnounce = 5;
  if (this->sgroupannounce().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgroupannounce().data(), static_cast<int>(this->sgroupannounce().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.GroupInfo.sGroupAnnounce");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->sgroupannounce(), output);
  }

  // uint32 nMemberCount = 6;
  if (this->nmembercount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->nmembercount(), output);
  }

  // bool isMember = 7;
  if (this->ismember() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->ismember(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.GroupInfo)
}

size_t GroupInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.GroupInfo)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sGroupId = 1;
  if (this->sgroupid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgroupid());
  }

  // string sGroupAdminId = 2;
  if (this->sgroupadminid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgroupadminid());
  }

  // string sGroupAdminNickName = 3;
  if (this->sgroupadminnickname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgroupadminnickname());
  }

  // string sGroupName = 4;
  if (this->sgroupname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgroupname());
  }

  // string sGroupAnnounce = 5;
  if (this->sgroupannounce().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgroupannounce());
  }

  // uint32 nMemberCount = 6;
  if (this->nmembercount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nmembercount());
  }

  // bool isMember = 7;
  if (this->ismember() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GroupInfo::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GroupInfo*>(&from));
}

void GroupInfo::MergeFrom(const GroupInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.GroupInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sgroupid().size() > 0) {

    sgroupid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgroupid_);
  }
  if (from.sgroupadminid().size() > 0) {

    sgroupadminid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgroupadminid_);
  }
  if (from.sgroupadminnickname().size() > 0) {

    sgroupadminnickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgroupadminnickname_);
  }
  if (from.sgroupname().size() > 0) {

    sgroupname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgroupname_);
  }
  if (from.sgroupannounce().size() > 0) {

    sgroupannounce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgroupannounce_);
  }
  if (from.nmembercount() != 0) {
    set_nmembercount(from.nmembercount());
  }
  if (from.ismember() != 0) {
    set_ismember(from.ismember());
  }
}

void GroupInfo::CopyFrom(const GroupInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.GroupInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupInfo::IsInitialized() const {
  return true;
}

void GroupInfo::Swap(GroupInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupInfo::InternalSwap(GroupInfo* other) {
  using std::swap;
  sgroupid_.Swap(&other->sgroupid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sgroupadminid_.Swap(&other->sgroupadminid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sgroupadminnickname_.Swap(&other->sgroupadminnickname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sgroupname_.Swap(&other->sgroupname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sgroupannounce_.Swap(&other->sgroupannounce_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(nmembercount_, other->nmembercount_);
  swap(ismember_, other->ismember_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string GroupInfo::GetTypeName() const {
  return "im.GroupInfo";
}


// ===================================================================

void Member::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Member::kSUserIdFieldNumber;
const int Member::kSNickNameFieldNumber;
const int Member::kNStateFieldNumber;
const int Member::kBGroupConfirmFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Member::Member()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2egroup_2eproto::scc_info_Member.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.Member)
}
Member::Member(const Member& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  snickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.snickname().size() > 0) {
    snickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.snickname_);
  }
  ::memcpy(&nstate_, &from.nstate_,
    static_cast<size_t>(reinterpret_cast<char*>(&bgroupconfirm_) -
    reinterpret_cast<char*>(&nstate_)) + sizeof(bgroupconfirm_));
  // @@protoc_insertion_point(copy_constructor:im.Member)
}

void Member::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  snickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nstate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bgroupconfirm_) -
      reinterpret_cast<char*>(&nstate_)) + sizeof(bgroupconfirm_));
}

Member::~Member() {
  // @@protoc_insertion_point(destructor:im.Member)
  SharedDtor();
}

void Member::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  snickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Member::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Member& Member::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2egroup_2eproto::scc_info_Member.base);
  return *internal_default_instance();
}


void Member::Clear() {
// @@protoc_insertion_point(message_clear_start:im.Member)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  snickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nstate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bgroupconfirm_) -
      reinterpret_cast<char*>(&nstate_)) + sizeof(bgroupconfirm_));
  _internal_metadata_.Clear();
}

bool Member::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.Member)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.Member.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sNickName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_snickname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->snickname().data(), static_cast<int>(this->snickname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.Member.sNickName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nState = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nstate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool bGroupConfirm = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bgroupconfirm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.Member)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.Member)
  return false;
#undef DO_
}

void Member::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.Member)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.Member.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string sNickName = 2;
  if (this->snickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->snickname().data(), static_cast<int>(this->snickname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.Member.sNickName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->snickname(), output);
  }

  // uint32 nState = 3;
  if (this->nstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->nstate(), output);
  }

  // bool bGroupConfirm = 4;
  if (this->bgroupconfirm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->bgroupconfirm(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.Member)
}

size_t Member::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.Member)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sNickName = 2;
  if (this->snickname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->snickname());
  }

  // uint32 nState = 3;
  if (this->nstate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nstate());
  }

  // bool bGroupConfirm = 4;
  if (this->bgroupconfirm() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Member::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Member*>(&from));
}

void Member::MergeFrom(const Member& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.Member)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.snickname().size() > 0) {

    snickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.snickname_);
  }
  if (from.nstate() != 0) {
    set_nstate(from.nstate());
  }
  if (from.bgroupconfirm() != 0) {
    set_bgroupconfirm(from.bgroupconfirm());
  }
}

void Member::CopyFrom(const Member& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.Member)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Member::IsInitialized() const {
  return true;
}

void Member::Swap(Member* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Member::InternalSwap(Member* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  snickname_.Swap(&other->snickname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(nstate_, other->nstate_);
  swap(bgroupconfirm_, other->bgroupconfirm_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Member::GetTypeName() const {
  return "im.Member";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace im
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::GroupChat* Arena::CreateMaybeMessage< ::im::GroupChat >(Arena* arena) {
  return Arena::CreateInternal< ::im::GroupChat >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::GroupChatAck* Arena::CreateMaybeMessage< ::im::GroupChatAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::GroupChatAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::GroupCreate* Arena::CreateMaybeMessage< ::im::GroupCreate >(Arena* arena) {
  return Arena::CreateInternal< ::im::GroupCreate >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::GroupCreateAck* Arena::CreateMaybeMessage< ::im::GroupCreateAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::GroupCreateAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::GroupQuery* Arena::CreateMaybeMessage< ::im::GroupQuery >(Arena* arena) {
  return Arena::CreateInternal< ::im::GroupQuery >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::UserGroupQueryRsp* Arena::CreateMaybeMessage< ::im::UserGroupQueryRsp >(Arena* arena) {
  return Arena::CreateInternal< ::im::UserGroupQueryRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::GroupApply* Arena::CreateMaybeMessage< ::im::GroupApply >(Arena* arena) {
  return Arena::CreateInternal< ::im::GroupApply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::GroupApplyAck* Arena::CreateMaybeMessage< ::im::GroupApplyAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::GroupApplyAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::GroupInvite* Arena::CreateMaybeMessage< ::im::GroupInvite >(Arena* arena) {
  return Arena::CreateInternal< ::im::GroupInvite >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::GroupInviteAck* Arena::CreateMaybeMessage< ::im::GroupInviteAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::GroupInviteAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::GroupMember* Arena::CreateMaybeMessage< ::im::GroupMember >(Arena* arena) {
  return Arena::CreateInternal< ::im::GroupMember >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::GroupMemberAck* Arena::CreateMaybeMessage< ::im::GroupMemberAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::GroupMemberAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::GroupKickOut* Arena::CreateMaybeMessage< ::im::GroupKickOut >(Arena* arena) {
  return Arena::CreateInternal< ::im::GroupKickOut >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::GroupKickoutAck* Arena::CreateMaybeMessage< ::im::GroupKickoutAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::GroupKickoutAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::GroupQuit* Arena::CreateMaybeMessage< ::im::GroupQuit >(Arena* arena) {
  return Arena::CreateInternal< ::im::GroupQuit >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::GroupQuitAck* Arena::CreateMaybeMessage< ::im::GroupQuitAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::GroupQuitAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::GroupModify* Arena::CreateMaybeMessage< ::im::GroupModify >(Arena* arena) {
  return Arena::CreateInternal< ::im::GroupModify >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::GroupModifyAck* Arena::CreateMaybeMessage< ::im::GroupModifyAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::GroupModifyAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::GroupNotify* Arena::CreateMaybeMessage< ::im::GroupNotify >(Arena* arena) {
  return Arena::CreateInternal< ::im::GroupNotify >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::GroupNotifyAck* Arena::CreateMaybeMessage< ::im::GroupNotifyAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::GroupNotifyAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::GroupPermit* Arena::CreateMaybeMessage< ::im::GroupPermit >(Arena* arena) {
  return Arena::CreateInternal< ::im::GroupPermit >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::GroupPermitAck* Arena::CreateMaybeMessage< ::im::GroupPermitAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::GroupPermitAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::GroupChatCancel* Arena::CreateMaybeMessage< ::im::GroupChatCancel >(Arena* arena) {
  return Arena::CreateInternal< ::im::GroupChatCancel >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::GroupChatCancelAck* Arena::CreateMaybeMessage< ::im::GroupChatCancelAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::GroupChatCancelAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::GroupInfo* Arena::CreateMaybeMessage< ::im::GroupInfo >(Arena* arena) {
  return Arena::CreateInternal< ::im::GroupInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::Member* Arena::CreateMaybeMessage< ::im::Member >(Arena* arena) {
  return Arena::CreateInternal< ::im::Member >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
