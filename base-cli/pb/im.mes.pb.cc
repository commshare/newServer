// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: im.mes.proto

#include "im.mes.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_im_2emes_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_im_2emes_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MsgReadResult;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_im_2emes_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_OfflineDeliveredMsg;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_im_2emes_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_OfflineMsgData;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_im_2emes_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_OfflineTotal;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_im_2emes_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UserKey;
}  // namespace protobuf_im_2emes_2eproto
namespace im {
class MESChatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MESChat>
      _instance;
} _MESChat_default_instance_;
class MESChatAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MESChatAck>
      _instance;
} _MESChatAck_default_instance_;
class MESChatDeliveredAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MESChatDeliveredAck>
      _instance;
} _MESChatDeliveredAck_default_instance_;
class MESChatDeliveredNotificationAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MESChatDeliveredNotificationAck>
      _instance;
} _MESChatDeliveredNotificationAck_default_instance_;
class MsgReadResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgReadResult>
      _instance;
} _MsgReadResult_default_instance_;
class MESChatReadDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MESChatRead>
      _instance;
} _MESChatRead_default_instance_;
class MESChatReadAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MESChatReadAck>
      _instance;
} _MESChatReadAck_default_instance_;
class MESChatReadDelivereAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MESChatReadDelivereAck>
      _instance;
} _MESChatReadDelivereAck_default_instance_;
class OfflineTotalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OfflineTotal>
      _instance;
} _OfflineTotal_default_instance_;
class MESOfflineSummaryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MESOfflineSummary>
      _instance;
} _MESOfflineSummary_default_instance_;
class MESOfflineSummaryAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MESOfflineSummaryAck>
      _instance;
} _MESOfflineSummaryAck_default_instance_;
class MESOfflineTotalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MESOfflineTotal>
      _instance;
} _MESOfflineTotal_default_instance_;
class MESOfflineMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MESOfflineMsg>
      _instance;
} _MESOfflineMsg_default_instance_;
class OfflineMsgDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OfflineMsgData>
      _instance;
} _OfflineMsgData_default_instance_;
class MESOfflineMsgAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MESOfflineMsgAck>
      _instance;
} _MESOfflineMsgAck_default_instance_;
class OfflineDeliveredMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OfflineDeliveredMsg>
      _instance;
} _OfflineDeliveredMsg_default_instance_;
class MESOfflineMsgDeliveredDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MESOfflineMsgDelivered>
      _instance;
} _MESOfflineMsgDelivered_default_instance_;
class MESOfflineMsgDelivereddAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MESOfflineMsgDelivereddAck>
      _instance;
} _MESOfflineMsgDelivereddAck_default_instance_;
class MESOfflineMsgDeliveredNotifyAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MESOfflineMsgDeliveredNotifyAck>
      _instance;
} _MESOfflineMsgDeliveredNotifyAck_default_instance_;
class MESAddFriendDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MESAddFriend>
      _instance;
} _MESAddFriend_default_instance_;
class MESAddFriendAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MESAddFriendAck>
      _instance;
} _MESAddFriendAck_default_instance_;
class MESAddFriendDeliverAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MESAddFriendDeliverAck>
      _instance;
} _MESAddFriendDeliverAck_default_instance_;
class MESAddFriendAnsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MESAddFriendAns>
      _instance;
} _MESAddFriendAns_default_instance_;
class MESAddFriendAnsAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MESAddFriendAnsAck>
      _instance;
} _MESAddFriendAnsAck_default_instance_;
class MESAddFriendAnsDeliverACKDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MESAddFriendAnsDeliverACK>
      _instance;
} _MESAddFriendAnsDeliverACK_default_instance_;
class MESDelFriendDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MESDelFriend>
      _instance;
} _MESDelFriend_default_instance_;
class MESDelFriendAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MESDelFriendAck>
      _instance;
} _MESDelFriendAck_default_instance_;
class MESIncBlacklistDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MESIncBlacklist>
      _instance;
} _MESIncBlacklist_default_instance_;
class MESIncBlacklistAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MESIncBlacklistAck>
      _instance;
} _MESIncBlacklistAck_default_instance_;
class MESDecBlacklistDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MESDecBlacklist>
      _instance;
} _MESDecBlacklist_default_instance_;
class MESDecBlacklistAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MESDecBlacklistAck>
      _instance;
} _MESDecBlacklistAck_default_instance_;
class MESJoinGrpDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MESJoinGrp>
      _instance;
} _MESJoinGrp_default_instance_;
class MESJoinGrpAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MESJoinGrpAck>
      _instance;
} _MESJoinGrpAck_default_instance_;
class MESJoinGrpDeliverAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MESJoinGrpDeliverAck>
      _instance;
} _MESJoinGrpDeliverAck_default_instance_;
class UserKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserKey>
      _instance;
} _UserKey_default_instance_;
class MESExchangeKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MESExchangeKey>
      _instance;
} _MESExchangeKey_default_instance_;
class MESExchangeKeyAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MESExchangeKeyAck>
      _instance;
} _MESExchangeKeyAck_default_instance_;
class MESExchangeKeyDeliverDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MESExchangeKeyDeliver>
      _instance;
} _MESExchangeKeyDeliver_default_instance_;
class MESExchangeKeyDeliverAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MESExchangeKeyDeliverAck>
      _instance;
} _MESExchangeKeyDeliverAck_default_instance_;
class MESExchangeKeyDeliverNotifyAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MESExchangeKeyDeliverNotifyAck>
      _instance;
} _MESExchangeKeyDeliverNotifyAck_default_instance_;
class _InnerGrpNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<_InnerGrpNotify>
      _instance;
} __InnerGrpNotify_default_instance_;
class _MESGrpInterNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<_MESGrpInterNotify>
      _instance;
} __MESGrpInterNotify_default_instance_;
class _MESGrpInterNotifyAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<_MESGrpInterNotifyAck>
      _instance;
} __MESGrpInterNotifyAck_default_instance_;
class MESGrpNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MESGrpNotify>
      _instance;
} _MESGrpNotify_default_instance_;
class MESGrpNotifyDeliverAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MESGrpNotifyDeliverAck>
      _instance;
} _MESGrpNotifyDeliverAck_default_instance_;
class _MESGrpInterChatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<_MESGrpInterChat>
      _instance;
} __MESGrpInterChat_default_instance_;
class _MESGrpInterChatAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<_MESGrpInterChatAck>
      _instance;
} __MESGrpInterChatAck_default_instance_;
class MESGrpChatDeliveredAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MESGrpChatDeliveredAck>
      _instance;
} _MESGrpChatDeliveredAck_default_instance_;
class MESGrpChatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MESGrpChat>
      _instance;
} _MESGrpChat_default_instance_;
class _MESGrpInterChatCancelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<_MESGrpInterChatCancel>
      _instance;
} __MESGrpInterChatCancel_default_instance_;
class _MESGrpInterChatCancelAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<_MESGrpInterChatCancelAck>
      _instance;
} __MESGrpInterChatCancelAck_default_instance_;
class MESChatCancelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MESChatCancel>
      _instance;
} _MESChatCancel_default_instance_;
class MESChatCancelAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MESChatCancelAck>
      _instance;
} _MESChatCancelAck_default_instance_;
class MSGCommonNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MSGCommonNotify>
      _instance;
} _MSGCommonNotify_default_instance_;
class MSGCommonNotifyACKDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MSGCommonNotifyACK>
      _instance;
} _MSGCommonNotifyACK_default_instance_;
class SVRMSGGroupRelationNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SVRMSGGroupRelationNotify>
      _instance;
} _SVRMSGGroupRelationNotify_default_instance_;
class SVRMSGFriendRelationNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SVRMSGFriendRelationNotify>
      _instance;
} _SVRMSGFriendRelationNotify_default_instance_;
class SVRMSGCommonMsgNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SVRMSGCommonMsgNotify>
      _instance;
} _SVRMSGCommonMsgNotify_default_instance_;
class SVRMSGNotifyACKDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SVRMSGNotifyACK>
      _instance;
} _SVRMSGNotifyACK_default_instance_;
}  // namespace im
namespace protobuf_im_2emes_2eproto {
static void InitDefaultsMESChat() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_MESChat_default_instance_;
    new (ptr) ::im::MESChat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::MESChat::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MESChat =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMESChat}, {}};

static void InitDefaultsMESChatAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_MESChatAck_default_instance_;
    new (ptr) ::im::MESChatAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::MESChatAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MESChatAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMESChatAck}, {}};

static void InitDefaultsMESChatDeliveredAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_MESChatDeliveredAck_default_instance_;
    new (ptr) ::im::MESChatDeliveredAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::MESChatDeliveredAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MESChatDeliveredAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMESChatDeliveredAck}, {}};

static void InitDefaultsMESChatDeliveredNotificationAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_MESChatDeliveredNotificationAck_default_instance_;
    new (ptr) ::im::MESChatDeliveredNotificationAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::MESChatDeliveredNotificationAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MESChatDeliveredNotificationAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMESChatDeliveredNotificationAck}, {}};

static void InitDefaultsMsgReadResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_MsgReadResult_default_instance_;
    new (ptr) ::im::MsgReadResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::MsgReadResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MsgReadResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgReadResult}, {}};

static void InitDefaultsMESChatRead() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_MESChatRead_default_instance_;
    new (ptr) ::im::MESChatRead();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::MESChatRead::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MESChatRead =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMESChatRead}, {
      &protobuf_im_2emes_2eproto::scc_info_MsgReadResult.base,}};

static void InitDefaultsMESChatReadAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_MESChatReadAck_default_instance_;
    new (ptr) ::im::MESChatReadAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::MESChatReadAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MESChatReadAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMESChatReadAck}, {}};

static void InitDefaultsMESChatReadDelivereAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_MESChatReadDelivereAck_default_instance_;
    new (ptr) ::im::MESChatReadDelivereAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::MESChatReadDelivereAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MESChatReadDelivereAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMESChatReadDelivereAck}, {}};

static void InitDefaultsOfflineTotal() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_OfflineTotal_default_instance_;
    new (ptr) ::im::OfflineTotal();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::OfflineTotal::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OfflineTotal =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOfflineTotal}, {}};

static void InitDefaultsMESOfflineSummary() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_MESOfflineSummary_default_instance_;
    new (ptr) ::im::MESOfflineSummary();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::MESOfflineSummary::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MESOfflineSummary =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMESOfflineSummary}, {}};

static void InitDefaultsMESOfflineSummaryAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_MESOfflineSummaryAck_default_instance_;
    new (ptr) ::im::MESOfflineSummaryAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::MESOfflineSummaryAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MESOfflineSummaryAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMESOfflineSummaryAck}, {
      &protobuf_im_2emes_2eproto::scc_info_OfflineTotal.base,}};

static void InitDefaultsMESOfflineTotal() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_MESOfflineTotal_default_instance_;
    new (ptr) ::im::MESOfflineTotal();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::MESOfflineTotal::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MESOfflineTotal =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMESOfflineTotal}, {}};

static void InitDefaultsMESOfflineMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_MESOfflineMsg_default_instance_;
    new (ptr) ::im::MESOfflineMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::MESOfflineMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MESOfflineMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMESOfflineMsg}, {
      &protobuf_im_2emes_2eproto::scc_info_OfflineDeliveredMsg.base,}};

static void InitDefaultsOfflineMsgData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_OfflineMsgData_default_instance_;
    new (ptr) ::im::OfflineMsgData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::OfflineMsgData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OfflineMsgData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOfflineMsgData}, {}};

static void InitDefaultsMESOfflineMsgAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_MESOfflineMsgAck_default_instance_;
    new (ptr) ::im::MESOfflineMsgAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::MESOfflineMsgAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MESOfflineMsgAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMESOfflineMsgAck}, {
      &protobuf_im_2emes_2eproto::scc_info_OfflineMsgData.base,}};

static void InitDefaultsOfflineDeliveredMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_OfflineDeliveredMsg_default_instance_;
    new (ptr) ::im::OfflineDeliveredMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::OfflineDeliveredMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OfflineDeliveredMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOfflineDeliveredMsg}, {}};

static void InitDefaultsMESOfflineMsgDelivered() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_MESOfflineMsgDelivered_default_instance_;
    new (ptr) ::im::MESOfflineMsgDelivered();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::MESOfflineMsgDelivered::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MESOfflineMsgDelivered =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMESOfflineMsgDelivered}, {
      &protobuf_im_2emes_2eproto::scc_info_OfflineDeliveredMsg.base,}};

static void InitDefaultsMESOfflineMsgDelivereddAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_MESOfflineMsgDelivereddAck_default_instance_;
    new (ptr) ::im::MESOfflineMsgDelivereddAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::MESOfflineMsgDelivereddAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MESOfflineMsgDelivereddAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMESOfflineMsgDelivereddAck}, {}};

static void InitDefaultsMESOfflineMsgDeliveredNotifyAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_MESOfflineMsgDeliveredNotifyAck_default_instance_;
    new (ptr) ::im::MESOfflineMsgDeliveredNotifyAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::MESOfflineMsgDeliveredNotifyAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MESOfflineMsgDeliveredNotifyAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMESOfflineMsgDeliveredNotifyAck}, {
      &protobuf_im_2emes_2eproto::scc_info_OfflineDeliveredMsg.base,}};

static void InitDefaultsMESAddFriend() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_MESAddFriend_default_instance_;
    new (ptr) ::im::MESAddFriend();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::MESAddFriend::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MESAddFriend =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMESAddFriend}, {}};

static void InitDefaultsMESAddFriendAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_MESAddFriendAck_default_instance_;
    new (ptr) ::im::MESAddFriendAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::MESAddFriendAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MESAddFriendAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMESAddFriendAck}, {}};

static void InitDefaultsMESAddFriendDeliverAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_MESAddFriendDeliverAck_default_instance_;
    new (ptr) ::im::MESAddFriendDeliverAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::MESAddFriendDeliverAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MESAddFriendDeliverAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMESAddFriendDeliverAck}, {}};

static void InitDefaultsMESAddFriendAns() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_MESAddFriendAns_default_instance_;
    new (ptr) ::im::MESAddFriendAns();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::MESAddFriendAns::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MESAddFriendAns =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMESAddFriendAns}, {}};

static void InitDefaultsMESAddFriendAnsAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_MESAddFriendAnsAck_default_instance_;
    new (ptr) ::im::MESAddFriendAnsAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::MESAddFriendAnsAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MESAddFriendAnsAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMESAddFriendAnsAck}, {}};

static void InitDefaultsMESAddFriendAnsDeliverACK() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_MESAddFriendAnsDeliverACK_default_instance_;
    new (ptr) ::im::MESAddFriendAnsDeliverACK();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::MESAddFriendAnsDeliverACK::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MESAddFriendAnsDeliverACK =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMESAddFriendAnsDeliverACK}, {}};

static void InitDefaultsMESDelFriend() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_MESDelFriend_default_instance_;
    new (ptr) ::im::MESDelFriend();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::MESDelFriend::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MESDelFriend =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMESDelFriend}, {}};

static void InitDefaultsMESDelFriendAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_MESDelFriendAck_default_instance_;
    new (ptr) ::im::MESDelFriendAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::MESDelFriendAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MESDelFriendAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMESDelFriendAck}, {}};

static void InitDefaultsMESIncBlacklist() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_MESIncBlacklist_default_instance_;
    new (ptr) ::im::MESIncBlacklist();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::MESIncBlacklist::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MESIncBlacklist =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMESIncBlacklist}, {}};

static void InitDefaultsMESIncBlacklistAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_MESIncBlacklistAck_default_instance_;
    new (ptr) ::im::MESIncBlacklistAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::MESIncBlacklistAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MESIncBlacklistAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMESIncBlacklistAck}, {}};

static void InitDefaultsMESDecBlacklist() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_MESDecBlacklist_default_instance_;
    new (ptr) ::im::MESDecBlacklist();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::MESDecBlacklist::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MESDecBlacklist =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMESDecBlacklist}, {}};

static void InitDefaultsMESDecBlacklistAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_MESDecBlacklistAck_default_instance_;
    new (ptr) ::im::MESDecBlacklistAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::MESDecBlacklistAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MESDecBlacklistAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMESDecBlacklistAck}, {}};

static void InitDefaultsMESJoinGrp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_MESJoinGrp_default_instance_;
    new (ptr) ::im::MESJoinGrp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::MESJoinGrp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MESJoinGrp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMESJoinGrp}, {}};

static void InitDefaultsMESJoinGrpAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_MESJoinGrpAck_default_instance_;
    new (ptr) ::im::MESJoinGrpAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::MESJoinGrpAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MESJoinGrpAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMESJoinGrpAck}, {}};

static void InitDefaultsMESJoinGrpDeliverAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_MESJoinGrpDeliverAck_default_instance_;
    new (ptr) ::im::MESJoinGrpDeliverAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::MESJoinGrpDeliverAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MESJoinGrpDeliverAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMESJoinGrpDeliverAck}, {}};

static void InitDefaultsUserKey() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_UserKey_default_instance_;
    new (ptr) ::im::UserKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::UserKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UserKey =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUserKey}, {}};

static void InitDefaultsMESExchangeKey() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_MESExchangeKey_default_instance_;
    new (ptr) ::im::MESExchangeKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::MESExchangeKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MESExchangeKey =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMESExchangeKey}, {
      &protobuf_im_2emes_2eproto::scc_info_UserKey.base,}};

static void InitDefaultsMESExchangeKeyAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_MESExchangeKeyAck_default_instance_;
    new (ptr) ::im::MESExchangeKeyAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::MESExchangeKeyAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MESExchangeKeyAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMESExchangeKeyAck}, {}};

static void InitDefaultsMESExchangeKeyDeliver() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_MESExchangeKeyDeliver_default_instance_;
    new (ptr) ::im::MESExchangeKeyDeliver();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::MESExchangeKeyDeliver::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MESExchangeKeyDeliver =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMESExchangeKeyDeliver}, {}};

static void InitDefaultsMESExchangeKeyDeliverAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_MESExchangeKeyDeliverAck_default_instance_;
    new (ptr) ::im::MESExchangeKeyDeliverAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::MESExchangeKeyDeliverAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MESExchangeKeyDeliverAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMESExchangeKeyDeliverAck}, {}};

static void InitDefaultsMESExchangeKeyDeliverNotifyAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_MESExchangeKeyDeliverNotifyAck_default_instance_;
    new (ptr) ::im::MESExchangeKeyDeliverNotifyAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::MESExchangeKeyDeliverNotifyAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MESExchangeKeyDeliverNotifyAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMESExchangeKeyDeliverNotifyAck}, {}};

static void InitDefaults_InnerGrpNotify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::__InnerGrpNotify_default_instance_;
    new (ptr) ::im::_InnerGrpNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::_InnerGrpNotify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info__InnerGrpNotify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaults_InnerGrpNotify}, {}};

static void InitDefaults_MESGrpInterNotify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::__MESGrpInterNotify_default_instance_;
    new (ptr) ::im::_MESGrpInterNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::_MESGrpInterNotify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info__MESGrpInterNotify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaults_MESGrpInterNotify}, {}};

static void InitDefaults_MESGrpInterNotifyAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::__MESGrpInterNotifyAck_default_instance_;
    new (ptr) ::im::_MESGrpInterNotifyAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::_MESGrpInterNotifyAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info__MESGrpInterNotifyAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaults_MESGrpInterNotifyAck}, {}};

static void InitDefaultsMESGrpNotify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_MESGrpNotify_default_instance_;
    new (ptr) ::im::MESGrpNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::MESGrpNotify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MESGrpNotify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMESGrpNotify}, {}};

static void InitDefaultsMESGrpNotifyDeliverAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_MESGrpNotifyDeliverAck_default_instance_;
    new (ptr) ::im::MESGrpNotifyDeliverAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::MESGrpNotifyDeliverAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MESGrpNotifyDeliverAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMESGrpNotifyDeliverAck}, {}};

static void InitDefaults_MESGrpInterChat() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::__MESGrpInterChat_default_instance_;
    new (ptr) ::im::_MESGrpInterChat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::_MESGrpInterChat::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info__MESGrpInterChat =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaults_MESGrpInterChat}, {}};

static void InitDefaults_MESGrpInterChatAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::__MESGrpInterChatAck_default_instance_;
    new (ptr) ::im::_MESGrpInterChatAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::_MESGrpInterChatAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info__MESGrpInterChatAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaults_MESGrpInterChatAck}, {}};

static void InitDefaultsMESGrpChatDeliveredAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_MESGrpChatDeliveredAck_default_instance_;
    new (ptr) ::im::MESGrpChatDeliveredAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::MESGrpChatDeliveredAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MESGrpChatDeliveredAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMESGrpChatDeliveredAck}, {}};

static void InitDefaultsMESGrpChat() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_MESGrpChat_default_instance_;
    new (ptr) ::im::MESGrpChat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::MESGrpChat::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MESGrpChat =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMESGrpChat}, {}};

static void InitDefaults_MESGrpInterChatCancel() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::__MESGrpInterChatCancel_default_instance_;
    new (ptr) ::im::_MESGrpInterChatCancel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::_MESGrpInterChatCancel::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info__MESGrpInterChatCancel =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaults_MESGrpInterChatCancel}, {}};

static void InitDefaults_MESGrpInterChatCancelAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::__MESGrpInterChatCancelAck_default_instance_;
    new (ptr) ::im::_MESGrpInterChatCancelAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::_MESGrpInterChatCancelAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info__MESGrpInterChatCancelAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaults_MESGrpInterChatCancelAck}, {}};

static void InitDefaultsMESChatCancel() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_MESChatCancel_default_instance_;
    new (ptr) ::im::MESChatCancel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::MESChatCancel::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MESChatCancel =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMESChatCancel}, {}};

static void InitDefaultsMESChatCancelAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_MESChatCancelAck_default_instance_;
    new (ptr) ::im::MESChatCancelAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::MESChatCancelAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MESChatCancelAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMESChatCancelAck}, {}};

static void InitDefaultsMSGCommonNotify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_MSGCommonNotify_default_instance_;
    new (ptr) ::im::MSGCommonNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::MSGCommonNotify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MSGCommonNotify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMSGCommonNotify}, {}};

static void InitDefaultsMSGCommonNotifyACK() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_MSGCommonNotifyACK_default_instance_;
    new (ptr) ::im::MSGCommonNotifyACK();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::MSGCommonNotifyACK::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MSGCommonNotifyACK =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMSGCommonNotifyACK}, {}};

static void InitDefaultsSVRMSGGroupRelationNotify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_SVRMSGGroupRelationNotify_default_instance_;
    new (ptr) ::im::SVRMSGGroupRelationNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::SVRMSGGroupRelationNotify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SVRMSGGroupRelationNotify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSVRMSGGroupRelationNotify}, {}};

static void InitDefaultsSVRMSGFriendRelationNotify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_SVRMSGFriendRelationNotify_default_instance_;
    new (ptr) ::im::SVRMSGFriendRelationNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::SVRMSGFriendRelationNotify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SVRMSGFriendRelationNotify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSVRMSGFriendRelationNotify}, {}};

static void InitDefaultsSVRMSGCommonMsgNotify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_SVRMSGCommonMsgNotify_default_instance_;
    new (ptr) ::im::SVRMSGCommonMsgNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::SVRMSGCommonMsgNotify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SVRMSGCommonMsgNotify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSVRMSGCommonMsgNotify}, {}};

static void InitDefaultsSVRMSGNotifyACK() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_SVRMSGNotifyACK_default_instance_;
    new (ptr) ::im::SVRMSGNotifyACK();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::SVRMSGNotifyACK::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SVRMSGNotifyACK =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSVRMSGNotifyACK}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_MESChat.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MESChatAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MESChatDeliveredAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MESChatDeliveredNotificationAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgReadResult.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MESChatRead.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MESChatReadAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MESChatReadDelivereAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OfflineTotal.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MESOfflineSummary.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MESOfflineSummaryAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MESOfflineTotal.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MESOfflineMsg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OfflineMsgData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MESOfflineMsgAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OfflineDeliveredMsg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MESOfflineMsgDelivered.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MESOfflineMsgDelivereddAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MESOfflineMsgDeliveredNotifyAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MESAddFriend.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MESAddFriendAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MESAddFriendDeliverAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MESAddFriendAns.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MESAddFriendAnsAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MESAddFriendAnsDeliverACK.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MESDelFriend.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MESDelFriendAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MESIncBlacklist.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MESIncBlacklistAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MESDecBlacklist.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MESDecBlacklistAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MESJoinGrp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MESJoinGrpAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MESJoinGrpDeliverAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserKey.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MESExchangeKey.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MESExchangeKeyAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MESExchangeKeyDeliver.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MESExchangeKeyDeliverAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MESExchangeKeyDeliverNotifyAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info__InnerGrpNotify.base);
  ::google::protobuf::internal::InitSCC(&scc_info__MESGrpInterNotify.base);
  ::google::protobuf::internal::InitSCC(&scc_info__MESGrpInterNotifyAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MESGrpNotify.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MESGrpNotifyDeliverAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info__MESGrpInterChat.base);
  ::google::protobuf::internal::InitSCC(&scc_info__MESGrpInterChatAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MESGrpChatDeliveredAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MESGrpChat.base);
  ::google::protobuf::internal::InitSCC(&scc_info__MESGrpInterChatCancel.base);
  ::google::protobuf::internal::InitSCC(&scc_info__MESGrpInterChatCancelAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MESChatCancel.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MESChatCancelAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MSGCommonNotify.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MSGCommonNotifyACK.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SVRMSGGroupRelationNotify.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SVRMSGFriendRelationNotify.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SVRMSGCommonMsgNotify.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SVRMSGNotifyACK.base);
}

}  // namespace protobuf_im_2emes_2eproto
namespace im {
bool SVRGroupRelationNotifyType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

bool SVRFriendRelationNotifyType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

bool SVRCommonNotifyType_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void MESChat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESChat::kSFromIdFieldNumber;
const int MESChat::kSToIdFieldNumber;
const int MESChat::kSMsgIdFieldNumber;
const int MESChat::kMsgTypeFieldNumber;
const int MESChat::kMsgTimeFieldNumber;
const int MESChat::kEncryptFieldNumber;
const int MESChat::kSContentFieldNumber;
const int MESChat::kSServiceIdFieldNumber;
const int MESChat::kSQuestionIdFieldNumber;
const int MESChat::kExtendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESChat::MESChat()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info_MESChat.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESChat)
}
MESChat::MESChat(const MESChat& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sfromid().size() > 0) {
    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stoid().size() > 0) {
    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  scontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.scontent().size() > 0) {
    scontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scontent_);
  }
  sserviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sserviceid().size() > 0) {
    sserviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sserviceid_);
  }
  squestionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.squestionid().size() > 0) {
    squestionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.squestionid_);
  }
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extend().size() > 0) {
    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  ::memcpy(&msgtime_, &from.msgtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&encrypt_) -
    reinterpret_cast<char*>(&msgtime_)) + sizeof(encrypt_));
  // @@protoc_insertion_point(copy_constructor:im.MESChat)
}

void MESChat::SharedCtor() {
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sserviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  squestionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&encrypt_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(encrypt_));
}

MESChat::~MESChat() {
  // @@protoc_insertion_point(destructor:im.MESChat)
  SharedDtor();
}

void MESChat::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sserviceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  squestionid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MESChat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MESChat& MESChat::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info_MESChat.base);
  return *internal_default_instance();
}


void MESChat::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESChat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sserviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  squestionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&encrypt_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(encrypt_));
  _internal_metadata_.Clear();
}

bool MESChat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.MESChat)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sFromId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), static_cast<int>(this->sfromid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESChat.sFromId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sToId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), static_cast<int>(this->stoid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESChat.sToId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESChat.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 msgType = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgTime = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 encrypt = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &encrypt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sContent = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scontent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scontent().data(), static_cast<int>(this->scontent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESChat.sContent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sServiceId = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sserviceid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sserviceid().data(), static_cast<int>(this->sserviceid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESChat.sServiceId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sQuestionId = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_squestionid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->squestionid().data(), static_cast<int>(this->squestionid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESChat.sQuestionId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string extend = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extend()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extend().data(), static_cast<int>(this->extend().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESChat.extend"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESChat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESChat)
  return false;
#undef DO_
}

void MESChat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESChat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), static_cast<int>(this->sfromid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESChat.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // string sToId = 2;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), static_cast<int>(this->stoid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESChat.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stoid(), output);
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESChat.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // uint32 msgType = 4;
  if (this->msgtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->msgtype(), output);
  }

  // uint64 msgTime = 5;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->msgtime(), output);
  }

  // uint32 encrypt = 6;
  if (this->encrypt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->encrypt(), output);
  }

  // string sContent = 7;
  if (this->scontent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scontent().data(), static_cast<int>(this->scontent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESChat.sContent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->scontent(), output);
  }

  // string sServiceId = 8;
  if (this->sserviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sserviceid().data(), static_cast<int>(this->sserviceid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESChat.sServiceId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->sserviceid(), output);
  }

  // string sQuestionId = 9;
  if (this->squestionid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->squestionid().data(), static_cast<int>(this->squestionid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESChat.sQuestionId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->squestionid(), output);
  }

  // string extend = 10;
  if (this->extend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extend().data(), static_cast<int>(this->extend().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESChat.extend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->extend(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.MESChat)
}

size_t MESChat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESChat)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // string sToId = 2;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // string sContent = 7;
  if (this->scontent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scontent());
  }

  // string sServiceId = 8;
  if (this->sserviceid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sserviceid());
  }

  // string sQuestionId = 9;
  if (this->squestionid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->squestionid());
  }

  // string extend = 10;
  if (this->extend().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extend());
  }

  // uint64 msgTime = 5;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // uint32 msgType = 4;
  if (this->msgtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgtype());
  }

  // uint32 encrypt = 6;
  if (this->encrypt() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->encrypt());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MESChat::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESChat*>(&from));
}

void MESChat::MergeFrom(const MESChat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESChat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.scontent().size() > 0) {

    scontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scontent_);
  }
  if (from.sserviceid().size() > 0) {

    sserviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sserviceid_);
  }
  if (from.squestionid().size() > 0) {

    squestionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.squestionid_);
  }
  if (from.extend().size() > 0) {

    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.msgtype() != 0) {
    set_msgtype(from.msgtype());
  }
  if (from.encrypt() != 0) {
    set_encrypt(from.encrypt());
  }
}

void MESChat::CopyFrom(const MESChat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESChat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESChat::IsInitialized() const {
  return true;
}

void MESChat::Swap(MESChat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESChat::InternalSwap(MESChat* other) {
  using std::swap;
  sfromid_.Swap(&other->sfromid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  stoid_.Swap(&other->stoid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  scontent_.Swap(&other->scontent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sserviceid_.Swap(&other->sserviceid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  squestionid_.Swap(&other->squestionid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  extend_.Swap(&other->extend_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgtime_, other->msgtime_);
  swap(msgtype_, other->msgtype_);
  swap(encrypt_, other->encrypt_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MESChat::GetTypeName() const {
  return "im.MESChat";
}


// ===================================================================

void MESChatAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESChatAck::kSUserIdFieldNumber;
const int MESChatAck::kSMsgIdFieldNumber;
const int MESChatAck::kSendtimeFieldNumber;
const int MESChatAck::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESChatAck::MESChatAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info_MESChatAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESChatAck)
}
MESChatAck::MESChatAck(const MESChatAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  ::memcpy(&sendtime_, &from.sendtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&errcode_) -
    reinterpret_cast<char*>(&sendtime_)) + sizeof(errcode_));
  // @@protoc_insertion_point(copy_constructor:im.MESChatAck)
}

void MESChatAck::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sendtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&errcode_) -
      reinterpret_cast<char*>(&sendtime_)) + sizeof(errcode_));
}

MESChatAck::~MESChatAck() {
  // @@protoc_insertion_point(destructor:im.MESChatAck)
  SharedDtor();
}

void MESChatAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MESChatAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MESChatAck& MESChatAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info_MESChatAck.base);
  return *internal_default_instance();
}


void MESChatAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESChatAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sendtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&errcode_) -
      reinterpret_cast<char*>(&sendtime_)) + sizeof(errcode_));
  _internal_metadata_.Clear();
}

bool MESChatAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.MESChatAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESChatAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESChatAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 sendtime = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sendtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode errcode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESChatAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESChatAck)
  return false;
#undef DO_
}

void MESChatAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESChatAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESChatAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESChatAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  // uint64 sendtime = 3;
  if (this->sendtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->sendtime(), output);
  }

  // .im.ErrCode errcode = 4;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->errcode(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.MESChatAck)
}

size_t MESChatAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESChatAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // uint64 sendtime = 3;
  if (this->sendtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sendtime());
  }

  // .im.ErrCode errcode = 4;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MESChatAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESChatAck*>(&from));
}

void MESChatAck::MergeFrom(const MESChatAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESChatAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.sendtime() != 0) {
    set_sendtime(from.sendtime());
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void MESChatAck::CopyFrom(const MESChatAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESChatAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESChatAck::IsInitialized() const {
  return true;
}

void MESChatAck::Swap(MESChatAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESChatAck::InternalSwap(MESChatAck* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(sendtime_, other->sendtime_);
  swap(errcode_, other->errcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MESChatAck::GetTypeName() const {
  return "im.MESChatAck";
}


// ===================================================================

void MESChatDeliveredAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESChatDeliveredAck::kSFromIdFieldNumber;
const int MESChatDeliveredAck::kSToIdFieldNumber;
const int MESChatDeliveredAck::kSMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESChatDeliveredAck::MESChatDeliveredAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info_MESChatDeliveredAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESChatDeliveredAck)
}
MESChatDeliveredAck::MESChatDeliveredAck(const MESChatDeliveredAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sfromid().size() > 0) {
    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stoid().size() > 0) {
    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  // @@protoc_insertion_point(copy_constructor:im.MESChatDeliveredAck)
}

void MESChatDeliveredAck::SharedCtor() {
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MESChatDeliveredAck::~MESChatDeliveredAck() {
  // @@protoc_insertion_point(destructor:im.MESChatDeliveredAck)
  SharedDtor();
}

void MESChatDeliveredAck::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MESChatDeliveredAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MESChatDeliveredAck& MESChatDeliveredAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info_MESChatDeliveredAck.base);
  return *internal_default_instance();
}


void MESChatDeliveredAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESChatDeliveredAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool MESChatDeliveredAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.MESChatDeliveredAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sFromId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), static_cast<int>(this->sfromid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESChatDeliveredAck.sFromId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sToId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), static_cast<int>(this->stoid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESChatDeliveredAck.sToId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESChatDeliveredAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESChatDeliveredAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESChatDeliveredAck)
  return false;
#undef DO_
}

void MESChatDeliveredAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESChatDeliveredAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), static_cast<int>(this->sfromid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESChatDeliveredAck.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // string sToId = 2;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), static_cast<int>(this->stoid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESChatDeliveredAck.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stoid(), output);
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESChatDeliveredAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.MESChatDeliveredAck)
}

size_t MESChatDeliveredAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESChatDeliveredAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // string sToId = 2;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MESChatDeliveredAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESChatDeliveredAck*>(&from));
}

void MESChatDeliveredAck::MergeFrom(const MESChatDeliveredAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESChatDeliveredAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
}

void MESChatDeliveredAck::CopyFrom(const MESChatDeliveredAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESChatDeliveredAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESChatDeliveredAck::IsInitialized() const {
  return true;
}

void MESChatDeliveredAck::Swap(MESChatDeliveredAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESChatDeliveredAck::InternalSwap(MESChatDeliveredAck* other) {
  using std::swap;
  sfromid_.Swap(&other->sfromid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  stoid_.Swap(&other->stoid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MESChatDeliveredAck::GetTypeName() const {
  return "im.MESChatDeliveredAck";
}


// ===================================================================

void MESChatDeliveredNotificationAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESChatDeliveredNotificationAck::kSUserIdFieldNumber;
const int MESChatDeliveredNotificationAck::kSMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESChatDeliveredNotificationAck::MESChatDeliveredNotificationAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info_MESChatDeliveredNotificationAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESChatDeliveredNotificationAck)
}
MESChatDeliveredNotificationAck::MESChatDeliveredNotificationAck(const MESChatDeliveredNotificationAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  // @@protoc_insertion_point(copy_constructor:im.MESChatDeliveredNotificationAck)
}

void MESChatDeliveredNotificationAck::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MESChatDeliveredNotificationAck::~MESChatDeliveredNotificationAck() {
  // @@protoc_insertion_point(destructor:im.MESChatDeliveredNotificationAck)
  SharedDtor();
}

void MESChatDeliveredNotificationAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MESChatDeliveredNotificationAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MESChatDeliveredNotificationAck& MESChatDeliveredNotificationAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info_MESChatDeliveredNotificationAck.base);
  return *internal_default_instance();
}


void MESChatDeliveredNotificationAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESChatDeliveredNotificationAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool MESChatDeliveredNotificationAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.MESChatDeliveredNotificationAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESChatDeliveredNotificationAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESChatDeliveredNotificationAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESChatDeliveredNotificationAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESChatDeliveredNotificationAck)
  return false;
#undef DO_
}

void MESChatDeliveredNotificationAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESChatDeliveredNotificationAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESChatDeliveredNotificationAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESChatDeliveredNotificationAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.MESChatDeliveredNotificationAck)
}

size_t MESChatDeliveredNotificationAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESChatDeliveredNotificationAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MESChatDeliveredNotificationAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESChatDeliveredNotificationAck*>(&from));
}

void MESChatDeliveredNotificationAck::MergeFrom(const MESChatDeliveredNotificationAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESChatDeliveredNotificationAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
}

void MESChatDeliveredNotificationAck::CopyFrom(const MESChatDeliveredNotificationAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESChatDeliveredNotificationAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESChatDeliveredNotificationAck::IsInitialized() const {
  return true;
}

void MESChatDeliveredNotificationAck::Swap(MESChatDeliveredNotificationAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESChatDeliveredNotificationAck::InternalSwap(MESChatDeliveredNotificationAck* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MESChatDeliveredNotificationAck::GetTypeName() const {
  return "im.MESChatDeliveredNotificationAck";
}


// ===================================================================

void MsgReadResult::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgReadResult::kSMsgIdFieldNumber;
const int MsgReadResult::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgReadResult::MsgReadResult()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info_MsgReadResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MsgReadResult)
}
MsgReadResult::MsgReadResult(const MsgReadResult& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  errcode_ = from.errcode_;
  // @@protoc_insertion_point(copy_constructor:im.MsgReadResult)
}

void MsgReadResult::SharedCtor() {
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

MsgReadResult::~MsgReadResult() {
  // @@protoc_insertion_point(destructor:im.MsgReadResult)
  SharedDtor();
}

void MsgReadResult::SharedDtor() {
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgReadResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MsgReadResult& MsgReadResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info_MsgReadResult.base);
  return *internal_default_instance();
}


void MsgReadResult::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MsgReadResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
  _internal_metadata_.Clear();
}

bool MsgReadResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.MsgReadResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sMsgId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MsgReadResult.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode errcode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MsgReadResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MsgReadResult)
  return false;
#undef DO_
}

void MsgReadResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MsgReadResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sMsgId = 1;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MsgReadResult.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->smsgid(), output);
  }

  // .im.ErrCode errcode = 2;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->errcode(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.MsgReadResult)
}

size_t MsgReadResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.MsgReadResult)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sMsgId = 1;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // .im.ErrCode errcode = 2;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgReadResult::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MsgReadResult*>(&from));
}

void MsgReadResult::MergeFrom(const MsgReadResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MsgReadResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void MsgReadResult::CopyFrom(const MsgReadResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MsgReadResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgReadResult::IsInitialized() const {
  return true;
}

void MsgReadResult::Swap(MsgReadResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgReadResult::InternalSwap(MsgReadResult* other) {
  using std::swap;
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(errcode_, other->errcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MsgReadResult::GetTypeName() const {
  return "im.MsgReadResult";
}


// ===================================================================

void MESChatRead::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESChatRead::kSFromIdFieldNumber;
const int MESChatRead::kSToIdFieldNumber;
const int MESChatRead::kSMsgIdFieldNumber;
const int MESChatRead::kReadResultsFieldNumber;
const int MESChatRead::kReadReceiptOffFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESChatRead::MESChatRead()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info_MESChatRead.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESChatRead)
}
MESChatRead::MESChatRead(const MESChatRead& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      readresults_(from.readresults_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sfromid().size() > 0) {
    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stoid().size() > 0) {
    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  readreceiptoff_ = from.readreceiptoff_;
  // @@protoc_insertion_point(copy_constructor:im.MESChatRead)
}

void MESChatRead::SharedCtor() {
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  readreceiptoff_ = 0u;
}

MESChatRead::~MESChatRead() {
  // @@protoc_insertion_point(destructor:im.MESChatRead)
  SharedDtor();
}

void MESChatRead::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MESChatRead::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MESChatRead& MESChatRead::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info_MESChatRead.base);
  return *internal_default_instance();
}


void MESChatRead::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESChatRead)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  readresults_.Clear();
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  readreceiptoff_ = 0u;
  _internal_metadata_.Clear();
}

bool MESChatRead::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.MESChatRead)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sFromId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), static_cast<int>(this->sfromid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESChatRead.sFromId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sToId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), static_cast<int>(this->stoid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESChatRead.sToId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESChatRead.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .im.MsgReadResult readResults = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_readresults()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 readReceiptOff = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &readreceiptoff_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESChatRead)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESChatRead)
  return false;
#undef DO_
}

void MESChatRead::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESChatRead)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), static_cast<int>(this->sfromid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESChatRead.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // string sToId = 2;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), static_cast<int>(this->stoid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESChatRead.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stoid(), output);
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESChatRead.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // repeated .im.MsgReadResult readResults = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->readresults_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4,
      this->readresults(static_cast<int>(i)),
      output);
  }

  // uint32 readReceiptOff = 5;
  if (this->readreceiptoff() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->readreceiptoff(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.MESChatRead)
}

size_t MESChatRead::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESChatRead)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .im.MsgReadResult readResults = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->readresults_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->readresults(static_cast<int>(i)));
    }
  }

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // string sToId = 2;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // uint32 readReceiptOff = 5;
  if (this->readreceiptoff() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->readreceiptoff());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MESChatRead::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESChatRead*>(&from));
}

void MESChatRead::MergeFrom(const MESChatRead& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESChatRead)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  readresults_.MergeFrom(from.readresults_);
  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.readreceiptoff() != 0) {
    set_readreceiptoff(from.readreceiptoff());
  }
}

void MESChatRead::CopyFrom(const MESChatRead& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESChatRead)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESChatRead::IsInitialized() const {
  return true;
}

void MESChatRead::Swap(MESChatRead* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESChatRead::InternalSwap(MESChatRead* other) {
  using std::swap;
  CastToBase(&readresults_)->InternalSwap(CastToBase(&other->readresults_));
  sfromid_.Swap(&other->sfromid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  stoid_.Swap(&other->stoid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(readreceiptoff_, other->readreceiptoff_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MESChatRead::GetTypeName() const {
  return "im.MESChatRead";
}


// ===================================================================

void MESChatReadAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESChatReadAck::kSUserIdFieldNumber;
const int MESChatReadAck::kSMsgIdFieldNumber;
const int MESChatReadAck::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESChatReadAck::MESChatReadAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info_MESChatReadAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESChatReadAck)
}
MESChatReadAck::MESChatReadAck(const MESChatReadAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  errcode_ = from.errcode_;
  // @@protoc_insertion_point(copy_constructor:im.MESChatReadAck)
}

void MESChatReadAck::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

MESChatReadAck::~MESChatReadAck() {
  // @@protoc_insertion_point(destructor:im.MESChatReadAck)
  SharedDtor();
}

void MESChatReadAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MESChatReadAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MESChatReadAck& MESChatReadAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info_MESChatReadAck.base);
  return *internal_default_instance();
}


void MESChatReadAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESChatReadAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
  _internal_metadata_.Clear();
}

bool MESChatReadAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.MESChatReadAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESChatReadAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESChatReadAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode errcode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESChatReadAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESChatReadAck)
  return false;
#undef DO_
}

void MESChatReadAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESChatReadAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESChatReadAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESChatReadAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  // .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->errcode(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.MESChatReadAck)
}

size_t MESChatReadAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESChatReadAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MESChatReadAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESChatReadAck*>(&from));
}

void MESChatReadAck::MergeFrom(const MESChatReadAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESChatReadAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void MESChatReadAck::CopyFrom(const MESChatReadAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESChatReadAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESChatReadAck::IsInitialized() const {
  return true;
}

void MESChatReadAck::Swap(MESChatReadAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESChatReadAck::InternalSwap(MESChatReadAck* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(errcode_, other->errcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MESChatReadAck::GetTypeName() const {
  return "im.MESChatReadAck";
}


// ===================================================================

void MESChatReadDelivereAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESChatReadDelivereAck::kSUserIdFieldNumber;
const int MESChatReadDelivereAck::kSMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESChatReadDelivereAck::MESChatReadDelivereAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info_MESChatReadDelivereAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESChatReadDelivereAck)
}
MESChatReadDelivereAck::MESChatReadDelivereAck(const MESChatReadDelivereAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  // @@protoc_insertion_point(copy_constructor:im.MESChatReadDelivereAck)
}

void MESChatReadDelivereAck::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MESChatReadDelivereAck::~MESChatReadDelivereAck() {
  // @@protoc_insertion_point(destructor:im.MESChatReadDelivereAck)
  SharedDtor();
}

void MESChatReadDelivereAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MESChatReadDelivereAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MESChatReadDelivereAck& MESChatReadDelivereAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info_MESChatReadDelivereAck.base);
  return *internal_default_instance();
}


void MESChatReadDelivereAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESChatReadDelivereAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool MESChatReadDelivereAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.MESChatReadDelivereAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESChatReadDelivereAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESChatReadDelivereAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESChatReadDelivereAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESChatReadDelivereAck)
  return false;
#undef DO_
}

void MESChatReadDelivereAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESChatReadDelivereAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESChatReadDelivereAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESChatReadDelivereAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.MESChatReadDelivereAck)
}

size_t MESChatReadDelivereAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESChatReadDelivereAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MESChatReadDelivereAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESChatReadDelivereAck*>(&from));
}

void MESChatReadDelivereAck::MergeFrom(const MESChatReadDelivereAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESChatReadDelivereAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
}

void MESChatReadDelivereAck::CopyFrom(const MESChatReadDelivereAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESChatReadDelivereAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESChatReadDelivereAck::IsInitialized() const {
  return true;
}

void MESChatReadDelivereAck::Swap(MESChatReadDelivereAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESChatReadDelivereAck::InternalSwap(MESChatReadDelivereAck* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MESChatReadDelivereAck::GetTypeName() const {
  return "im.MESChatReadDelivereAck";
}


// ===================================================================

void OfflineTotal::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OfflineTotal::kCmdIdFieldNumber;
const int OfflineTotal::kSFromIdFieldNumber;
const int OfflineTotal::kSToIdFieldNumber;
const int OfflineTotal::kUnreadTotalFieldNumber;
const int OfflineTotal::kUnreadChatCountFieldNumber;
const int OfflineTotal::kSRecentcontentFieldNumber;
const int OfflineTotal::kRecenttimestampFieldNumber;
const int OfflineTotal::kSRecentMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OfflineTotal::OfflineTotal()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info_OfflineTotal.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.OfflineTotal)
}
OfflineTotal::OfflineTotal(const OfflineTotal& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sfromid().size() > 0) {
    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stoid().size() > 0) {
    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  srecentcontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.srecentcontent().size() > 0) {
    srecentcontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.srecentcontent_);
  }
  srecentmsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.srecentmsgid().size() > 0) {
    srecentmsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.srecentmsgid_);
  }
  ::memcpy(&cmdid_, &from.cmdid_,
    static_cast<size_t>(reinterpret_cast<char*>(&unreadchatcount_) -
    reinterpret_cast<char*>(&cmdid_)) + sizeof(unreadchatcount_));
  // @@protoc_insertion_point(copy_constructor:im.OfflineTotal)
}

void OfflineTotal::SharedCtor() {
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  srecentcontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  srecentmsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&cmdid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unreadchatcount_) -
      reinterpret_cast<char*>(&cmdid_)) + sizeof(unreadchatcount_));
}

OfflineTotal::~OfflineTotal() {
  // @@protoc_insertion_point(destructor:im.OfflineTotal)
  SharedDtor();
}

void OfflineTotal::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  srecentcontent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  srecentmsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OfflineTotal::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OfflineTotal& OfflineTotal::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info_OfflineTotal.base);
  return *internal_default_instance();
}


void OfflineTotal::Clear() {
// @@protoc_insertion_point(message_clear_start:im.OfflineTotal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  srecentcontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  srecentmsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&cmdid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unreadchatcount_) -
      reinterpret_cast<char*>(&cmdid_)) + sizeof(unreadchatcount_));
  _internal_metadata_.Clear();
}

bool OfflineTotal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.OfflineTotal)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 cmdId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cmdid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sFromId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), static_cast<int>(this->sfromid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.OfflineTotal.sFromId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sToId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), static_cast<int>(this->stoid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.OfflineTotal.sToId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 unreadTotal = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unreadtotal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 unreadChatCount = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unreadchatcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes sRecentcontent = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_srecentcontent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 recenttimestamp = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &recenttimestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sRecentMsgId = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_srecentmsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->srecentmsgid().data(), static_cast<int>(this->srecentmsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.OfflineTotal.sRecentMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.OfflineTotal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.OfflineTotal)
  return false;
#undef DO_
}

void OfflineTotal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.OfflineTotal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cmdId = 1;
  if (this->cmdid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->cmdid(), output);
  }

  // string sFromId = 2;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), static_cast<int>(this->sfromid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.OfflineTotal.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sfromid(), output);
  }

  // string sToId = 3;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), static_cast<int>(this->stoid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.OfflineTotal.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->stoid(), output);
  }

  // int32 unreadTotal = 4;
  if (this->unreadtotal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->unreadtotal(), output);
  }

  // int32 unreadChatCount = 5;
  if (this->unreadchatcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->unreadchatcount(), output);
  }

  // bytes sRecentcontent = 6;
  if (this->srecentcontent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->srecentcontent(), output);
  }

  // uint64 recenttimestamp = 7;
  if (this->recenttimestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->recenttimestamp(), output);
  }

  // string sRecentMsgId = 8;
  if (this->srecentmsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->srecentmsgid().data(), static_cast<int>(this->srecentmsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.OfflineTotal.sRecentMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->srecentmsgid(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.OfflineTotal)
}

size_t OfflineTotal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.OfflineTotal)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sFromId = 2;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // string sToId = 3;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // bytes sRecentcontent = 6;
  if (this->srecentcontent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->srecentcontent());
  }

  // string sRecentMsgId = 8;
  if (this->srecentmsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->srecentmsgid());
  }

  // uint32 cmdId = 1;
  if (this->cmdid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cmdid());
  }

  // int32 unreadTotal = 4;
  if (this->unreadtotal() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->unreadtotal());
  }

  // uint64 recenttimestamp = 7;
  if (this->recenttimestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->recenttimestamp());
  }

  // int32 unreadChatCount = 5;
  if (this->unreadchatcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->unreadchatcount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OfflineTotal::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const OfflineTotal*>(&from));
}

void OfflineTotal::MergeFrom(const OfflineTotal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.OfflineTotal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.srecentcontent().size() > 0) {

    srecentcontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.srecentcontent_);
  }
  if (from.srecentmsgid().size() > 0) {

    srecentmsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.srecentmsgid_);
  }
  if (from.cmdid() != 0) {
    set_cmdid(from.cmdid());
  }
  if (from.unreadtotal() != 0) {
    set_unreadtotal(from.unreadtotal());
  }
  if (from.recenttimestamp() != 0) {
    set_recenttimestamp(from.recenttimestamp());
  }
  if (from.unreadchatcount() != 0) {
    set_unreadchatcount(from.unreadchatcount());
  }
}

void OfflineTotal::CopyFrom(const OfflineTotal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.OfflineTotal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OfflineTotal::IsInitialized() const {
  return true;
}

void OfflineTotal::Swap(OfflineTotal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OfflineTotal::InternalSwap(OfflineTotal* other) {
  using std::swap;
  sfromid_.Swap(&other->sfromid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  stoid_.Swap(&other->stoid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  srecentcontent_.Swap(&other->srecentcontent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  srecentmsgid_.Swap(&other->srecentmsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(cmdid_, other->cmdid_);
  swap(unreadtotal_, other->unreadtotal_);
  swap(recenttimestamp_, other->recenttimestamp_);
  swap(unreadchatcount_, other->unreadchatcount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string OfflineTotal::GetTypeName() const {
  return "im.OfflineTotal";
}


// ===================================================================

void MESOfflineSummary::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESOfflineSummary::kSUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESOfflineSummary::MESOfflineSummary()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info_MESOfflineSummary.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESOfflineSummary)
}
MESOfflineSummary::MESOfflineSummary(const MESOfflineSummary& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  // @@protoc_insertion_point(copy_constructor:im.MESOfflineSummary)
}

void MESOfflineSummary::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MESOfflineSummary::~MESOfflineSummary() {
  // @@protoc_insertion_point(destructor:im.MESOfflineSummary)
  SharedDtor();
}

void MESOfflineSummary::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MESOfflineSummary::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MESOfflineSummary& MESOfflineSummary::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info_MESOfflineSummary.base);
  return *internal_default_instance();
}


void MESOfflineSummary::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESOfflineSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool MESOfflineSummary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.MESOfflineSummary)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESOfflineSummary.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESOfflineSummary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESOfflineSummary)
  return false;
#undef DO_
}

void MESOfflineSummary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESOfflineSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESOfflineSummary.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.MESOfflineSummary)
}

size_t MESOfflineSummary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESOfflineSummary)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MESOfflineSummary::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESOfflineSummary*>(&from));
}

void MESOfflineSummary::MergeFrom(const MESOfflineSummary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESOfflineSummary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
}

void MESOfflineSummary::CopyFrom(const MESOfflineSummary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESOfflineSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESOfflineSummary::IsInitialized() const {
  return true;
}

void MESOfflineSummary::Swap(MESOfflineSummary* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESOfflineSummary::InternalSwap(MESOfflineSummary* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MESOfflineSummary::GetTypeName() const {
  return "im.MESOfflineSummary";
}


// ===================================================================

void MESOfflineSummaryAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESOfflineSummaryAck::kSUserIdFieldNumber;
const int MESOfflineSummaryAck::kOfflineTotalsFieldNumber;
const int MESOfflineSummaryAck::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESOfflineSummaryAck::MESOfflineSummaryAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info_MESOfflineSummaryAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESOfflineSummaryAck)
}
MESOfflineSummaryAck::MESOfflineSummaryAck(const MESOfflineSummaryAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      offlinetotals_(from.offlinetotals_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  errcode_ = from.errcode_;
  // @@protoc_insertion_point(copy_constructor:im.MESOfflineSummaryAck)
}

void MESOfflineSummaryAck::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

MESOfflineSummaryAck::~MESOfflineSummaryAck() {
  // @@protoc_insertion_point(destructor:im.MESOfflineSummaryAck)
  SharedDtor();
}

void MESOfflineSummaryAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MESOfflineSummaryAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MESOfflineSummaryAck& MESOfflineSummaryAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info_MESOfflineSummaryAck.base);
  return *internal_default_instance();
}


void MESOfflineSummaryAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESOfflineSummaryAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  offlinetotals_.Clear();
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
  _internal_metadata_.Clear();
}

bool MESOfflineSummaryAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.MESOfflineSummaryAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESOfflineSummaryAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .im.OfflineTotal offlineTotals = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_offlinetotals()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode errcode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESOfflineSummaryAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESOfflineSummaryAck)
  return false;
#undef DO_
}

void MESOfflineSummaryAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESOfflineSummaryAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESOfflineSummaryAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // repeated .im.OfflineTotal offlineTotals = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->offlinetotals_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2,
      this->offlinetotals(static_cast<int>(i)),
      output);
  }

  // .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->errcode(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.MESOfflineSummaryAck)
}

size_t MESOfflineSummaryAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESOfflineSummaryAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .im.OfflineTotal offlineTotals = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->offlinetotals_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->offlinetotals(static_cast<int>(i)));
    }
  }

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MESOfflineSummaryAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESOfflineSummaryAck*>(&from));
}

void MESOfflineSummaryAck::MergeFrom(const MESOfflineSummaryAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESOfflineSummaryAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  offlinetotals_.MergeFrom(from.offlinetotals_);
  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void MESOfflineSummaryAck::CopyFrom(const MESOfflineSummaryAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESOfflineSummaryAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESOfflineSummaryAck::IsInitialized() const {
  return true;
}

void MESOfflineSummaryAck::Swap(MESOfflineSummaryAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESOfflineSummaryAck::InternalSwap(MESOfflineSummaryAck* other) {
  using std::swap;
  CastToBase(&offlinetotals_)->InternalSwap(CastToBase(&other->offlinetotals_));
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(errcode_, other->errcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MESOfflineSummaryAck::GetTypeName() const {
  return "im.MESOfflineSummaryAck";
}


// ===================================================================

void MESOfflineTotal::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESOfflineTotal::kCmdIdFieldNumber;
const int MESOfflineTotal::kSFromIdFieldNumber;
const int MESOfflineTotal::kSToIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESOfflineTotal::MESOfflineTotal()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info_MESOfflineTotal.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESOfflineTotal)
}
MESOfflineTotal::MESOfflineTotal(const MESOfflineTotal& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sfromid().size() > 0) {
    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stoid().size() > 0) {
    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  cmdid_ = from.cmdid_;
  // @@protoc_insertion_point(copy_constructor:im.MESOfflineTotal)
}

void MESOfflineTotal::SharedCtor() {
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cmdid_ = 0u;
}

MESOfflineTotal::~MESOfflineTotal() {
  // @@protoc_insertion_point(destructor:im.MESOfflineTotal)
  SharedDtor();
}

void MESOfflineTotal::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MESOfflineTotal::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MESOfflineTotal& MESOfflineTotal::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info_MESOfflineTotal.base);
  return *internal_default_instance();
}


void MESOfflineTotal::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESOfflineTotal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cmdid_ = 0u;
  _internal_metadata_.Clear();
}

bool MESOfflineTotal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.MESOfflineTotal)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 cmdId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cmdid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sFromId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), static_cast<int>(this->sfromid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESOfflineTotal.sFromId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sToId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), static_cast<int>(this->stoid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESOfflineTotal.sToId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESOfflineTotal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESOfflineTotal)
  return false;
#undef DO_
}

void MESOfflineTotal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESOfflineTotal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cmdId = 1;
  if (this->cmdid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->cmdid(), output);
  }

  // string sFromId = 2;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), static_cast<int>(this->sfromid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESOfflineTotal.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sfromid(), output);
  }

  // string sToId = 3;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), static_cast<int>(this->stoid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESOfflineTotal.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->stoid(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.MESOfflineTotal)
}

size_t MESOfflineTotal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESOfflineTotal)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sFromId = 2;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // string sToId = 3;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // uint32 cmdId = 1;
  if (this->cmdid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cmdid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MESOfflineTotal::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESOfflineTotal*>(&from));
}

void MESOfflineTotal::MergeFrom(const MESOfflineTotal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESOfflineTotal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.cmdid() != 0) {
    set_cmdid(from.cmdid());
  }
}

void MESOfflineTotal::CopyFrom(const MESOfflineTotal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESOfflineTotal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESOfflineTotal::IsInitialized() const {
  return true;
}

void MESOfflineTotal::Swap(MESOfflineTotal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESOfflineTotal::InternalSwap(MESOfflineTotal* other) {
  using std::swap;
  sfromid_.Swap(&other->sfromid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  stoid_.Swap(&other->stoid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(cmdid_, other->cmdid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MESOfflineTotal::GetTypeName() const {
  return "im.MESOfflineTotal";
}


// ===================================================================

void MESOfflineMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESOfflineMsg::kCmdIdFieldNumber;
const int MESOfflineMsg::kSFromIdFieldNumber;
const int MESOfflineMsg::kSToIdFieldNumber;
const int MESOfflineMsg::kCountFieldNumber;
const int MESOfflineMsg::kSMsgIdFieldNumber;
const int MESOfflineMsg::kLsMsgsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESOfflineMsg::MESOfflineMsg()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info_MESOfflineMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESOfflineMsg)
}
MESOfflineMsg::MESOfflineMsg(const MESOfflineMsg& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      lsmsgs_(from.lsmsgs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sfromid().size() > 0) {
    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stoid().size() > 0) {
    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  ::memcpy(&cmdid_, &from.cmdid_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&cmdid_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:im.MESOfflineMsg)
}

void MESOfflineMsg::SharedCtor() {
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&cmdid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&cmdid_)) + sizeof(count_));
}

MESOfflineMsg::~MESOfflineMsg() {
  // @@protoc_insertion_point(destructor:im.MESOfflineMsg)
  SharedDtor();
}

void MESOfflineMsg::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MESOfflineMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MESOfflineMsg& MESOfflineMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info_MESOfflineMsg.base);
  return *internal_default_instance();
}


void MESOfflineMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESOfflineMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lsmsgs_.Clear();
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&cmdid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&cmdid_)) + sizeof(count_));
  _internal_metadata_.Clear();
}

bool MESOfflineMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.MESOfflineMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 cmdId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cmdid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sFromId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), static_cast<int>(this->sfromid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESOfflineMsg.sFromId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sToId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), static_cast<int>(this->stoid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESOfflineMsg.sToId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 count = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESOfflineMsg.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .im.OfflineDeliveredMsg lsMsgs = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_lsmsgs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESOfflineMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESOfflineMsg)
  return false;
#undef DO_
}

void MESOfflineMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESOfflineMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cmdId = 1;
  if (this->cmdid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->cmdid(), output);
  }

  // string sFromId = 2;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), static_cast<int>(this->sfromid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESOfflineMsg.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sfromid(), output);
  }

  // string sToId = 3;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), static_cast<int>(this->stoid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESOfflineMsg.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->stoid(), output);
  }

  // int32 count = 4;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->count(), output);
  }

  // string sMsgId = 5;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESOfflineMsg.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->smsgid(), output);
  }

  // repeated .im.OfflineDeliveredMsg lsMsgs = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lsmsgs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      6,
      this->lsmsgs(static_cast<int>(i)),
      output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.MESOfflineMsg)
}

size_t MESOfflineMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESOfflineMsg)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .im.OfflineDeliveredMsg lsMsgs = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->lsmsgs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->lsmsgs(static_cast<int>(i)));
    }
  }

  // string sFromId = 2;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // string sToId = 3;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // string sMsgId = 5;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // uint32 cmdId = 1;
  if (this->cmdid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cmdid());
  }

  // int32 count = 4;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MESOfflineMsg::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESOfflineMsg*>(&from));
}

void MESOfflineMsg::MergeFrom(const MESOfflineMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESOfflineMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  lsmsgs_.MergeFrom(from.lsmsgs_);
  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.cmdid() != 0) {
    set_cmdid(from.cmdid());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void MESOfflineMsg::CopyFrom(const MESOfflineMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESOfflineMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESOfflineMsg::IsInitialized() const {
  return true;
}

void MESOfflineMsg::Swap(MESOfflineMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESOfflineMsg::InternalSwap(MESOfflineMsg* other) {
  using std::swap;
  CastToBase(&lsmsgs_)->InternalSwap(CastToBase(&other->lsmsgs_));
  sfromid_.Swap(&other->sfromid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  stoid_.Swap(&other->stoid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(cmdid_, other->cmdid_);
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MESOfflineMsg::GetTypeName() const {
  return "im.MESOfflineMsg";
}


// ===================================================================

void OfflineMsgData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OfflineMsgData::kCmdIdFieldNumber;
const int OfflineMsgData::kSMsgDataFieldNumber;
const int OfflineMsgData::kSMsgIdFieldNumber;
const int OfflineMsgData::kSFromIdFieldNumber;
const int OfflineMsgData::kStatusFieldNumber;
const int OfflineMsgData::kUCreateTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OfflineMsgData::OfflineMsgData()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info_OfflineMsgData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.OfflineMsgData)
}
OfflineMsgData::OfflineMsgData(const OfflineMsgData& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  smsgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgdata().size() > 0) {
    smsgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgdata_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sfromid().size() > 0) {
    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  ::memcpy(&cmdid_, &from.cmdid_,
    static_cast<size_t>(reinterpret_cast<char*>(&ucreatetime_) -
    reinterpret_cast<char*>(&cmdid_)) + sizeof(ucreatetime_));
  // @@protoc_insertion_point(copy_constructor:im.OfflineMsgData)
}

void OfflineMsgData::SharedCtor() {
  smsgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&cmdid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ucreatetime_) -
      reinterpret_cast<char*>(&cmdid_)) + sizeof(ucreatetime_));
}

OfflineMsgData::~OfflineMsgData() {
  // @@protoc_insertion_point(destructor:im.OfflineMsgData)
  SharedDtor();
}

void OfflineMsgData::SharedDtor() {
  smsgdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OfflineMsgData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OfflineMsgData& OfflineMsgData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info_OfflineMsgData.base);
  return *internal_default_instance();
}


void OfflineMsgData::Clear() {
// @@protoc_insertion_point(message_clear_start:im.OfflineMsgData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  smsgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&cmdid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ucreatetime_) -
      reinterpret_cast<char*>(&cmdid_)) + sizeof(ucreatetime_));
  _internal_metadata_.Clear();
}

bool OfflineMsgData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.OfflineMsgData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 cmdId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cmdid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes sMsgData = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_smsgdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.OfflineMsgData.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sFromId = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), static_cast<int>(this->sfromid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.OfflineMsgData.sFromId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 status = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 uCreateTime = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ucreatetime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.OfflineMsgData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.OfflineMsgData)
  return false;
#undef DO_
}

void OfflineMsgData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.OfflineMsgData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cmdId = 1;
  if (this->cmdid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->cmdid(), output);
  }

  // bytes sMsgData = 2;
  if (this->smsgdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->smsgdata(), output);
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.OfflineMsgData.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // string sFromId = 4;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), static_cast<int>(this->sfromid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.OfflineMsgData.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sfromid(), output);
  }

  // uint32 status = 5;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->status(), output);
  }

  // uint64 uCreateTime = 6;
  if (this->ucreatetime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->ucreatetime(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.OfflineMsgData)
}

size_t OfflineMsgData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.OfflineMsgData)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // bytes sMsgData = 2;
  if (this->smsgdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->smsgdata());
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // string sFromId = 4;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // uint32 cmdId = 1;
  if (this->cmdid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cmdid());
  }

  // uint32 status = 5;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->status());
  }

  // uint64 uCreateTime = 6;
  if (this->ucreatetime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ucreatetime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OfflineMsgData::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const OfflineMsgData*>(&from));
}

void OfflineMsgData::MergeFrom(const OfflineMsgData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.OfflineMsgData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.smsgdata().size() > 0) {

    smsgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgdata_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.cmdid() != 0) {
    set_cmdid(from.cmdid());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.ucreatetime() != 0) {
    set_ucreatetime(from.ucreatetime());
  }
}

void OfflineMsgData::CopyFrom(const OfflineMsgData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.OfflineMsgData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OfflineMsgData::IsInitialized() const {
  return true;
}

void OfflineMsgData::Swap(OfflineMsgData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OfflineMsgData::InternalSwap(OfflineMsgData* other) {
  using std::swap;
  smsgdata_.Swap(&other->smsgdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sfromid_.Swap(&other->sfromid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(cmdid_, other->cmdid_);
  swap(status_, other->status_);
  swap(ucreatetime_, other->ucreatetime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string OfflineMsgData::GetTypeName() const {
  return "im.OfflineMsgData";
}


// ===================================================================

void MESOfflineMsgAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESOfflineMsgAck::kSFromIdFieldNumber;
const int MESOfflineMsgAck::kSToIdFieldNumber;
const int MESOfflineMsgAck::kErrcodeFieldNumber;
const int MESOfflineMsgAck::kSMsgIdFieldNumber;
const int MESOfflineMsgAck::kMsgTimeFieldNumber;
const int MESOfflineMsgAck::kMsglistFieldNumber;
const int MESOfflineMsgAck::kMsgTotalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESOfflineMsgAck::MESOfflineMsgAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info_MESOfflineMsgAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESOfflineMsgAck)
}
MESOfflineMsgAck::MESOfflineMsgAck(const MESOfflineMsgAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      msglist_(from.msglist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sfromid().size() > 0) {
    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stoid().size() > 0) {
    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  ::memcpy(&msgtime_, &from.msgtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&msgtotal_) -
    reinterpret_cast<char*>(&msgtime_)) + sizeof(msgtotal_));
  // @@protoc_insertion_point(copy_constructor:im.MESOfflineMsgAck)
}

void MESOfflineMsgAck::SharedCtor() {
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msgtotal_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(msgtotal_));
}

MESOfflineMsgAck::~MESOfflineMsgAck() {
  // @@protoc_insertion_point(destructor:im.MESOfflineMsgAck)
  SharedDtor();
}

void MESOfflineMsgAck::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MESOfflineMsgAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MESOfflineMsgAck& MESOfflineMsgAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info_MESOfflineMsgAck.base);
  return *internal_default_instance();
}


void MESOfflineMsgAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESOfflineMsgAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msglist_.Clear();
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msgtotal_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(msgtotal_));
  _internal_metadata_.Clear();
}

bool MESOfflineMsgAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.MESOfflineMsgAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sFromId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), static_cast<int>(this->sfromid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESOfflineMsgAck.sFromId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sToId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), static_cast<int>(this->stoid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESOfflineMsgAck.sToId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode errcode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESOfflineMsgAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgTime = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .im.OfflineMsgData msglist = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_msglist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 msgTotal = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgtotal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESOfflineMsgAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESOfflineMsgAck)
  return false;
#undef DO_
}

void MESOfflineMsgAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESOfflineMsgAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), static_cast<int>(this->sfromid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESOfflineMsgAck.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // string sToId = 2;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), static_cast<int>(this->stoid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESOfflineMsgAck.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stoid(), output);
  }

  // .im.ErrCode errcode = 4;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->errcode(), output);
  }

  // string sMsgId = 5;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESOfflineMsgAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->smsgid(), output);
  }

  // uint64 msgTime = 6;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->msgtime(), output);
  }

  // repeated .im.OfflineMsgData msglist = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->msglist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      13,
      this->msglist(static_cast<int>(i)),
      output);
  }

  // uint32 msgTotal = 14;
  if (this->msgtotal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->msgtotal(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.MESOfflineMsgAck)
}

size_t MESOfflineMsgAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESOfflineMsgAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .im.OfflineMsgData msglist = 13;
  {
    unsigned int count = static_cast<unsigned int>(this->msglist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->msglist(static_cast<int>(i)));
    }
  }

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // string sToId = 2;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // string sMsgId = 5;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // uint64 msgTime = 6;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // .im.ErrCode errcode = 4;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  // uint32 msgTotal = 14;
  if (this->msgtotal() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgtotal());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MESOfflineMsgAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESOfflineMsgAck*>(&from));
}

void MESOfflineMsgAck::MergeFrom(const MESOfflineMsgAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESOfflineMsgAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  msglist_.MergeFrom(from.msglist_);
  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
  if (from.msgtotal() != 0) {
    set_msgtotal(from.msgtotal());
  }
}

void MESOfflineMsgAck::CopyFrom(const MESOfflineMsgAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESOfflineMsgAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESOfflineMsgAck::IsInitialized() const {
  return true;
}

void MESOfflineMsgAck::Swap(MESOfflineMsgAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESOfflineMsgAck::InternalSwap(MESOfflineMsgAck* other) {
  using std::swap;
  CastToBase(&msglist_)->InternalSwap(CastToBase(&other->msglist_));
  sfromid_.Swap(&other->sfromid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  stoid_.Swap(&other->stoid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgtime_, other->msgtime_);
  swap(errcode_, other->errcode_);
  swap(msgtotal_, other->msgtotal_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MESOfflineMsgAck::GetTypeName() const {
  return "im.MESOfflineMsgAck";
}


// ===================================================================

void OfflineDeliveredMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OfflineDeliveredMsg::kCmdIdFieldNumber;
const int OfflineDeliveredMsg::kSFromIdFieldNumber;
const int OfflineDeliveredMsg::kSToIdFieldNumber;
const int OfflineDeliveredMsg::kSMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OfflineDeliveredMsg::OfflineDeliveredMsg()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info_OfflineDeliveredMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.OfflineDeliveredMsg)
}
OfflineDeliveredMsg::OfflineDeliveredMsg(const OfflineDeliveredMsg& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sfromid().size() > 0) {
    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stoid().size() > 0) {
    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  cmdid_ = from.cmdid_;
  // @@protoc_insertion_point(copy_constructor:im.OfflineDeliveredMsg)
}

void OfflineDeliveredMsg::SharedCtor() {
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cmdid_ = 0u;
}

OfflineDeliveredMsg::~OfflineDeliveredMsg() {
  // @@protoc_insertion_point(destructor:im.OfflineDeliveredMsg)
  SharedDtor();
}

void OfflineDeliveredMsg::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OfflineDeliveredMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OfflineDeliveredMsg& OfflineDeliveredMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info_OfflineDeliveredMsg.base);
  return *internal_default_instance();
}


void OfflineDeliveredMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:im.OfflineDeliveredMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cmdid_ = 0u;
  _internal_metadata_.Clear();
}

bool OfflineDeliveredMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.OfflineDeliveredMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 cmdId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cmdid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sFromId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), static_cast<int>(this->sfromid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.OfflineDeliveredMsg.sFromId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sToId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), static_cast<int>(this->stoid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.OfflineDeliveredMsg.sToId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.OfflineDeliveredMsg.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.OfflineDeliveredMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.OfflineDeliveredMsg)
  return false;
#undef DO_
}

void OfflineDeliveredMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.OfflineDeliveredMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cmdId = 1;
  if (this->cmdid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->cmdid(), output);
  }

  // string sFromId = 2;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), static_cast<int>(this->sfromid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.OfflineDeliveredMsg.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sfromid(), output);
  }

  // string sToId = 3;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), static_cast<int>(this->stoid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.OfflineDeliveredMsg.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->stoid(), output);
  }

  // string sMsgId = 4;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.OfflineDeliveredMsg.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->smsgid(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.OfflineDeliveredMsg)
}

size_t OfflineDeliveredMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.OfflineDeliveredMsg)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sFromId = 2;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // string sToId = 3;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // string sMsgId = 4;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // uint32 cmdId = 1;
  if (this->cmdid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cmdid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OfflineDeliveredMsg::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const OfflineDeliveredMsg*>(&from));
}

void OfflineDeliveredMsg::MergeFrom(const OfflineDeliveredMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.OfflineDeliveredMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.cmdid() != 0) {
    set_cmdid(from.cmdid());
  }
}

void OfflineDeliveredMsg::CopyFrom(const OfflineDeliveredMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.OfflineDeliveredMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OfflineDeliveredMsg::IsInitialized() const {
  return true;
}

void OfflineDeliveredMsg::Swap(OfflineDeliveredMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OfflineDeliveredMsg::InternalSwap(OfflineDeliveredMsg* other) {
  using std::swap;
  sfromid_.Swap(&other->sfromid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  stoid_.Swap(&other->stoid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(cmdid_, other->cmdid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string OfflineDeliveredMsg::GetTypeName() const {
  return "im.OfflineDeliveredMsg";
}


// ===================================================================

void MESOfflineMsgDelivered::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESOfflineMsgDelivered::kSFromIdFieldNumber;
const int MESOfflineMsgDelivered::kSToIdFieldNumber;
const int MESOfflineMsgDelivered::kSMsgIdFieldNumber;
const int MESOfflineMsgDelivered::kLsMsgsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESOfflineMsgDelivered::MESOfflineMsgDelivered()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info_MESOfflineMsgDelivered.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESOfflineMsgDelivered)
}
MESOfflineMsgDelivered::MESOfflineMsgDelivered(const MESOfflineMsgDelivered& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      lsmsgs_(from.lsmsgs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sfromid().size() > 0) {
    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stoid().size() > 0) {
    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  // @@protoc_insertion_point(copy_constructor:im.MESOfflineMsgDelivered)
}

void MESOfflineMsgDelivered::SharedCtor() {
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MESOfflineMsgDelivered::~MESOfflineMsgDelivered() {
  // @@protoc_insertion_point(destructor:im.MESOfflineMsgDelivered)
  SharedDtor();
}

void MESOfflineMsgDelivered::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MESOfflineMsgDelivered::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MESOfflineMsgDelivered& MESOfflineMsgDelivered::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info_MESOfflineMsgDelivered.base);
  return *internal_default_instance();
}


void MESOfflineMsgDelivered::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESOfflineMsgDelivered)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lsmsgs_.Clear();
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool MESOfflineMsgDelivered::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.MESOfflineMsgDelivered)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sFromId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), static_cast<int>(this->sfromid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESOfflineMsgDelivered.sFromId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sToId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), static_cast<int>(this->stoid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESOfflineMsgDelivered.sToId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESOfflineMsgDelivered.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .im.OfflineDeliveredMsg lsMsgs = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_lsmsgs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESOfflineMsgDelivered)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESOfflineMsgDelivered)
  return false;
#undef DO_
}

void MESOfflineMsgDelivered::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESOfflineMsgDelivered)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), static_cast<int>(this->sfromid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESOfflineMsgDelivered.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // string sToId = 2;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), static_cast<int>(this->stoid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESOfflineMsgDelivered.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stoid(), output);
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESOfflineMsgDelivered.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // repeated .im.OfflineDeliveredMsg lsMsgs = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lsmsgs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4,
      this->lsmsgs(static_cast<int>(i)),
      output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.MESOfflineMsgDelivered)
}

size_t MESOfflineMsgDelivered::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESOfflineMsgDelivered)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .im.OfflineDeliveredMsg lsMsgs = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->lsmsgs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->lsmsgs(static_cast<int>(i)));
    }
  }

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // string sToId = 2;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MESOfflineMsgDelivered::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESOfflineMsgDelivered*>(&from));
}

void MESOfflineMsgDelivered::MergeFrom(const MESOfflineMsgDelivered& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESOfflineMsgDelivered)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  lsmsgs_.MergeFrom(from.lsmsgs_);
  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
}

void MESOfflineMsgDelivered::CopyFrom(const MESOfflineMsgDelivered& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESOfflineMsgDelivered)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESOfflineMsgDelivered::IsInitialized() const {
  return true;
}

void MESOfflineMsgDelivered::Swap(MESOfflineMsgDelivered* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESOfflineMsgDelivered::InternalSwap(MESOfflineMsgDelivered* other) {
  using std::swap;
  CastToBase(&lsmsgs_)->InternalSwap(CastToBase(&other->lsmsgs_));
  sfromid_.Swap(&other->sfromid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  stoid_.Swap(&other->stoid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MESOfflineMsgDelivered::GetTypeName() const {
  return "im.MESOfflineMsgDelivered";
}


// ===================================================================

void MESOfflineMsgDelivereddAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESOfflineMsgDelivereddAck::kSUserIdFieldNumber;
const int MESOfflineMsgDelivereddAck::kSMsgIdFieldNumber;
const int MESOfflineMsgDelivereddAck::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESOfflineMsgDelivereddAck::MESOfflineMsgDelivereddAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info_MESOfflineMsgDelivereddAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESOfflineMsgDelivereddAck)
}
MESOfflineMsgDelivereddAck::MESOfflineMsgDelivereddAck(const MESOfflineMsgDelivereddAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  errcode_ = from.errcode_;
  // @@protoc_insertion_point(copy_constructor:im.MESOfflineMsgDelivereddAck)
}

void MESOfflineMsgDelivereddAck::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

MESOfflineMsgDelivereddAck::~MESOfflineMsgDelivereddAck() {
  // @@protoc_insertion_point(destructor:im.MESOfflineMsgDelivereddAck)
  SharedDtor();
}

void MESOfflineMsgDelivereddAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MESOfflineMsgDelivereddAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MESOfflineMsgDelivereddAck& MESOfflineMsgDelivereddAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info_MESOfflineMsgDelivereddAck.base);
  return *internal_default_instance();
}


void MESOfflineMsgDelivereddAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESOfflineMsgDelivereddAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
  _internal_metadata_.Clear();
}

bool MESOfflineMsgDelivereddAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.MESOfflineMsgDelivereddAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESOfflineMsgDelivereddAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESOfflineMsgDelivereddAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode errcode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESOfflineMsgDelivereddAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESOfflineMsgDelivereddAck)
  return false;
#undef DO_
}

void MESOfflineMsgDelivereddAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESOfflineMsgDelivereddAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESOfflineMsgDelivereddAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESOfflineMsgDelivereddAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  // .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->errcode(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.MESOfflineMsgDelivereddAck)
}

size_t MESOfflineMsgDelivereddAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESOfflineMsgDelivereddAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MESOfflineMsgDelivereddAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESOfflineMsgDelivereddAck*>(&from));
}

void MESOfflineMsgDelivereddAck::MergeFrom(const MESOfflineMsgDelivereddAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESOfflineMsgDelivereddAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void MESOfflineMsgDelivereddAck::CopyFrom(const MESOfflineMsgDelivereddAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESOfflineMsgDelivereddAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESOfflineMsgDelivereddAck::IsInitialized() const {
  return true;
}

void MESOfflineMsgDelivereddAck::Swap(MESOfflineMsgDelivereddAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESOfflineMsgDelivereddAck::InternalSwap(MESOfflineMsgDelivereddAck* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(errcode_, other->errcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MESOfflineMsgDelivereddAck::GetTypeName() const {
  return "im.MESOfflineMsgDelivereddAck";
}


// ===================================================================

void MESOfflineMsgDeliveredNotifyAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESOfflineMsgDeliveredNotifyAck::kSMsgIdFieldNumber;
const int MESOfflineMsgDeliveredNotifyAck::kSFromIdFieldNumber;
const int MESOfflineMsgDeliveredNotifyAck::kLsMsgsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESOfflineMsgDeliveredNotifyAck::MESOfflineMsgDeliveredNotifyAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info_MESOfflineMsgDeliveredNotifyAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESOfflineMsgDeliveredNotifyAck)
}
MESOfflineMsgDeliveredNotifyAck::MESOfflineMsgDeliveredNotifyAck(const MESOfflineMsgDeliveredNotifyAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      lsmsgs_(from.lsmsgs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sfromid().size() > 0) {
    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  // @@protoc_insertion_point(copy_constructor:im.MESOfflineMsgDeliveredNotifyAck)
}

void MESOfflineMsgDeliveredNotifyAck::SharedCtor() {
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MESOfflineMsgDeliveredNotifyAck::~MESOfflineMsgDeliveredNotifyAck() {
  // @@protoc_insertion_point(destructor:im.MESOfflineMsgDeliveredNotifyAck)
  SharedDtor();
}

void MESOfflineMsgDeliveredNotifyAck::SharedDtor() {
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MESOfflineMsgDeliveredNotifyAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MESOfflineMsgDeliveredNotifyAck& MESOfflineMsgDeliveredNotifyAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info_MESOfflineMsgDeliveredNotifyAck.base);
  return *internal_default_instance();
}


void MESOfflineMsgDeliveredNotifyAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESOfflineMsgDeliveredNotifyAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lsmsgs_.Clear();
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool MESOfflineMsgDeliveredNotifyAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.MESOfflineMsgDeliveredNotifyAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sMsgId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESOfflineMsgDeliveredNotifyAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sFromId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), static_cast<int>(this->sfromid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESOfflineMsgDeliveredNotifyAck.sFromId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .im.OfflineDeliveredMsg lsMsgs = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_lsmsgs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESOfflineMsgDeliveredNotifyAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESOfflineMsgDeliveredNotifyAck)
  return false;
#undef DO_
}

void MESOfflineMsgDeliveredNotifyAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESOfflineMsgDeliveredNotifyAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sMsgId = 1;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESOfflineMsgDeliveredNotifyAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->smsgid(), output);
  }

  // string sFromId = 2;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), static_cast<int>(this->sfromid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESOfflineMsgDeliveredNotifyAck.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sfromid(), output);
  }

  // repeated .im.OfflineDeliveredMsg lsMsgs = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lsmsgs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3,
      this->lsmsgs(static_cast<int>(i)),
      output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.MESOfflineMsgDeliveredNotifyAck)
}

size_t MESOfflineMsgDeliveredNotifyAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESOfflineMsgDeliveredNotifyAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .im.OfflineDeliveredMsg lsMsgs = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->lsmsgs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->lsmsgs(static_cast<int>(i)));
    }
  }

  // string sMsgId = 1;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // string sFromId = 2;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MESOfflineMsgDeliveredNotifyAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESOfflineMsgDeliveredNotifyAck*>(&from));
}

void MESOfflineMsgDeliveredNotifyAck::MergeFrom(const MESOfflineMsgDeliveredNotifyAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESOfflineMsgDeliveredNotifyAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  lsmsgs_.MergeFrom(from.lsmsgs_);
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
}

void MESOfflineMsgDeliveredNotifyAck::CopyFrom(const MESOfflineMsgDeliveredNotifyAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESOfflineMsgDeliveredNotifyAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESOfflineMsgDeliveredNotifyAck::IsInitialized() const {
  return true;
}

void MESOfflineMsgDeliveredNotifyAck::Swap(MESOfflineMsgDeliveredNotifyAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESOfflineMsgDeliveredNotifyAck::InternalSwap(MESOfflineMsgDeliveredNotifyAck* other) {
  using std::swap;
  CastToBase(&lsmsgs_)->InternalSwap(CastToBase(&other->lsmsgs_));
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sfromid_.Swap(&other->sfromid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MESOfflineMsgDeliveredNotifyAck::GetTypeName() const {
  return "im.MESOfflineMsgDeliveredNotifyAck";
}


// ===================================================================

void MESAddFriend::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESAddFriend::kSFromIdFieldNumber;
const int MESAddFriend::kSToIdFieldNumber;
const int MESAddFriend::kSMsgIdFieldNumber;
const int MESAddFriend::kSDescFieldNumber;
const int MESAddFriend::kSMemoNameFieldNumber;
const int MESAddFriend::kPacketIdFieldNumber;
const int MESAddFriend::kSSelfIntroduceFieldNumber;
const int MESAddFriend::kMsgTimeFieldNumber;
const int MESAddFriend::kExtendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESAddFriend::MESAddFriend()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info_MESAddFriend.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESAddFriend)
}
MESAddFriend::MESAddFriend(const MESAddFriend& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sfromid().size() > 0) {
    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stoid().size() > 0) {
    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  sdesc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sdesc().size() > 0) {
    sdesc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdesc_);
  }
  smemoname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smemoname().size() > 0) {
    smemoname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smemoname_);
  }
  sselfintroduce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sselfintroduce().size() > 0) {
    sselfintroduce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sselfintroduce_);
  }
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extend().size() > 0) {
    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  ::memcpy(&msgtime_, &from.msgtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&packetid_) -
    reinterpret_cast<char*>(&msgtime_)) + sizeof(packetid_));
  // @@protoc_insertion_point(copy_constructor:im.MESAddFriend)
}

void MESAddFriend::SharedCtor() {
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdesc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smemoname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sselfintroduce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&packetid_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(packetid_));
}

MESAddFriend::~MESAddFriend() {
  // @@protoc_insertion_point(destructor:im.MESAddFriend)
  SharedDtor();
}

void MESAddFriend::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdesc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smemoname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sselfintroduce_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MESAddFriend::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MESAddFriend& MESAddFriend::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info_MESAddFriend.base);
  return *internal_default_instance();
}


void MESAddFriend::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESAddFriend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smemoname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sselfintroduce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&packetid_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(packetid_));
  _internal_metadata_.Clear();
}

bool MESAddFriend::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.MESAddFriend)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sFromId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), static_cast<int>(this->sfromid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESAddFriend.sFromId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sToId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), static_cast<int>(this->stoid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESAddFriend.sToId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESAddFriend.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sDesc = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sdesc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sdesc().data(), static_cast<int>(this->sdesc().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESAddFriend.sDesc"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMemoName = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smemoname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smemoname().data(), static_cast<int>(this->smemoname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESAddFriend.sMemoName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 packetId = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &packetid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sSelfIntroduce = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sselfintroduce()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sselfintroduce().data(), static_cast<int>(this->sselfintroduce().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESAddFriend.sSelfIntroduce"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgTime = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string extend = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extend()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extend().data(), static_cast<int>(this->extend().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESAddFriend.extend"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESAddFriend)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESAddFriend)
  return false;
#undef DO_
}

void MESAddFriend::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESAddFriend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), static_cast<int>(this->sfromid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESAddFriend.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // string sToId = 2;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), static_cast<int>(this->stoid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESAddFriend.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stoid(), output);
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESAddFriend.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // string sDesc = 4;
  if (this->sdesc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sdesc().data(), static_cast<int>(this->sdesc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESAddFriend.sDesc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sdesc(), output);
  }

  // string sMemoName = 5;
  if (this->smemoname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smemoname().data(), static_cast<int>(this->smemoname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESAddFriend.sMemoName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->smemoname(), output);
  }

  // uint32 packetId = 6;
  if (this->packetid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->packetid(), output);
  }

  // string sSelfIntroduce = 7;
  if (this->sselfintroduce().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sselfintroduce().data(), static_cast<int>(this->sselfintroduce().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESAddFriend.sSelfIntroduce");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->sselfintroduce(), output);
  }

  // uint64 msgTime = 8;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->msgtime(), output);
  }

  // string extend = 9;
  if (this->extend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extend().data(), static_cast<int>(this->extend().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESAddFriend.extend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->extend(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.MESAddFriend)
}

size_t MESAddFriend::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESAddFriend)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // string sToId = 2;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // string sDesc = 4;
  if (this->sdesc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sdesc());
  }

  // string sMemoName = 5;
  if (this->smemoname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smemoname());
  }

  // string sSelfIntroduce = 7;
  if (this->sselfintroduce().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sselfintroduce());
  }

  // string extend = 9;
  if (this->extend().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extend());
  }

  // uint64 msgTime = 8;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // uint32 packetId = 6;
  if (this->packetid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->packetid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MESAddFriend::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESAddFriend*>(&from));
}

void MESAddFriend::MergeFrom(const MESAddFriend& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESAddFriend)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.sdesc().size() > 0) {

    sdesc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdesc_);
  }
  if (from.smemoname().size() > 0) {

    smemoname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smemoname_);
  }
  if (from.sselfintroduce().size() > 0) {

    sselfintroduce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sselfintroduce_);
  }
  if (from.extend().size() > 0) {

    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.packetid() != 0) {
    set_packetid(from.packetid());
  }
}

void MESAddFriend::CopyFrom(const MESAddFriend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESAddFriend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESAddFriend::IsInitialized() const {
  return true;
}

void MESAddFriend::Swap(MESAddFriend* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESAddFriend::InternalSwap(MESAddFriend* other) {
  using std::swap;
  sfromid_.Swap(&other->sfromid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  stoid_.Swap(&other->stoid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sdesc_.Swap(&other->sdesc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smemoname_.Swap(&other->smemoname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sselfintroduce_.Swap(&other->sselfintroduce_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  extend_.Swap(&other->extend_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgtime_, other->msgtime_);
  swap(packetid_, other->packetid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MESAddFriend::GetTypeName() const {
  return "im.MESAddFriend";
}


// ===================================================================

void MESAddFriendAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESAddFriendAck::kSUserIdFieldNumber;
const int MESAddFriendAck::kSMsgIdFieldNumber;
const int MESAddFriendAck::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESAddFriendAck::MESAddFriendAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info_MESAddFriendAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESAddFriendAck)
}
MESAddFriendAck::MESAddFriendAck(const MESAddFriendAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  errcode_ = from.errcode_;
  // @@protoc_insertion_point(copy_constructor:im.MESAddFriendAck)
}

void MESAddFriendAck::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

MESAddFriendAck::~MESAddFriendAck() {
  // @@protoc_insertion_point(destructor:im.MESAddFriendAck)
  SharedDtor();
}

void MESAddFriendAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MESAddFriendAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MESAddFriendAck& MESAddFriendAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info_MESAddFriendAck.base);
  return *internal_default_instance();
}


void MESAddFriendAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESAddFriendAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
  _internal_metadata_.Clear();
}

bool MESAddFriendAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.MESAddFriendAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESAddFriendAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESAddFriendAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode errcode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESAddFriendAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESAddFriendAck)
  return false;
#undef DO_
}

void MESAddFriendAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESAddFriendAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESAddFriendAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESAddFriendAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  // .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->errcode(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.MESAddFriendAck)
}

size_t MESAddFriendAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESAddFriendAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MESAddFriendAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESAddFriendAck*>(&from));
}

void MESAddFriendAck::MergeFrom(const MESAddFriendAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESAddFriendAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void MESAddFriendAck::CopyFrom(const MESAddFriendAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESAddFriendAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESAddFriendAck::IsInitialized() const {
  return true;
}

void MESAddFriendAck::Swap(MESAddFriendAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESAddFriendAck::InternalSwap(MESAddFriendAck* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(errcode_, other->errcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MESAddFriendAck::GetTypeName() const {
  return "im.MESAddFriendAck";
}


// ===================================================================

void MESAddFriendDeliverAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESAddFriendDeliverAck::kSUserIdFieldNumber;
const int MESAddFriendDeliverAck::kSMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESAddFriendDeliverAck::MESAddFriendDeliverAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info_MESAddFriendDeliverAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESAddFriendDeliverAck)
}
MESAddFriendDeliverAck::MESAddFriendDeliverAck(const MESAddFriendDeliverAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  // @@protoc_insertion_point(copy_constructor:im.MESAddFriendDeliverAck)
}

void MESAddFriendDeliverAck::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MESAddFriendDeliverAck::~MESAddFriendDeliverAck() {
  // @@protoc_insertion_point(destructor:im.MESAddFriendDeliverAck)
  SharedDtor();
}

void MESAddFriendDeliverAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MESAddFriendDeliverAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MESAddFriendDeliverAck& MESAddFriendDeliverAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info_MESAddFriendDeliverAck.base);
  return *internal_default_instance();
}


void MESAddFriendDeliverAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESAddFriendDeliverAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool MESAddFriendDeliverAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.MESAddFriendDeliverAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESAddFriendDeliverAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESAddFriendDeliverAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESAddFriendDeliverAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESAddFriendDeliverAck)
  return false;
#undef DO_
}

void MESAddFriendDeliverAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESAddFriendDeliverAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESAddFriendDeliverAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESAddFriendDeliverAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.MESAddFriendDeliverAck)
}

size_t MESAddFriendDeliverAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESAddFriendDeliverAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MESAddFriendDeliverAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESAddFriendDeliverAck*>(&from));
}

void MESAddFriendDeliverAck::MergeFrom(const MESAddFriendDeliverAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESAddFriendDeliverAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
}

void MESAddFriendDeliverAck::CopyFrom(const MESAddFriendDeliverAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESAddFriendDeliverAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESAddFriendDeliverAck::IsInitialized() const {
  return true;
}

void MESAddFriendDeliverAck::Swap(MESAddFriendDeliverAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESAddFriendDeliverAck::InternalSwap(MESAddFriendDeliverAck* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MESAddFriendDeliverAck::GetTypeName() const {
  return "im.MESAddFriendDeliverAck";
}


// ===================================================================

void MESAddFriendAns::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESAddFriendAns::kSFromIdFieldNumber;
const int MESAddFriendAns::kSToIdFieldNumber;
const int MESAddFriendAns::kSMsgIdFieldNumber;
const int MESAddFriendAns::kSAnsFieldNumber;
const int MESAddFriendAns::kErrcodeFieldNumber;
const int MESAddFriendAns::kSMemoNameFieldNumber;
const int MESAddFriendAns::kPacketIdFieldNumber;
const int MESAddFriendAns::kMsgTimeFieldNumber;
const int MESAddFriendAns::kExtendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESAddFriendAns::MESAddFriendAns()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info_MESAddFriendAns.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESAddFriendAns)
}
MESAddFriendAns::MESAddFriendAns(const MESAddFriendAns& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sfromid().size() > 0) {
    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stoid().size() > 0) {
    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  sans_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sans().size() > 0) {
    sans_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sans_);
  }
  smemoname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smemoname().size() > 0) {
    smemoname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smemoname_);
  }
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extend().size() > 0) {
    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  ::memcpy(&errcode_, &from.errcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&msgtime_) -
    reinterpret_cast<char*>(&errcode_)) + sizeof(msgtime_));
  // @@protoc_insertion_point(copy_constructor:im.MESAddFriendAns)
}

void MESAddFriendAns::SharedCtor() {
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sans_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smemoname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&errcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msgtime_) -
      reinterpret_cast<char*>(&errcode_)) + sizeof(msgtime_));
}

MESAddFriendAns::~MESAddFriendAns() {
  // @@protoc_insertion_point(destructor:im.MESAddFriendAns)
  SharedDtor();
}

void MESAddFriendAns::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sans_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smemoname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MESAddFriendAns::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MESAddFriendAns& MESAddFriendAns::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info_MESAddFriendAns.base);
  return *internal_default_instance();
}


void MESAddFriendAns::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESAddFriendAns)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sans_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smemoname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&errcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msgtime_) -
      reinterpret_cast<char*>(&errcode_)) + sizeof(msgtime_));
  _internal_metadata_.Clear();
}

bool MESAddFriendAns::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.MESAddFriendAns)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sFromId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), static_cast<int>(this->sfromid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESAddFriendAns.sFromId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sToId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), static_cast<int>(this->stoid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESAddFriendAns.sToId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESAddFriendAns.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sAns = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sans()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sans().data(), static_cast<int>(this->sans().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESAddFriendAns.sAns"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode errcode = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMemoName = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smemoname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smemoname().data(), static_cast<int>(this->smemoname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESAddFriendAns.sMemoName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 packetId = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &packetid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgTime = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string extend = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extend()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extend().data(), static_cast<int>(this->extend().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESAddFriendAns.extend"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESAddFriendAns)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESAddFriendAns)
  return false;
#undef DO_
}

void MESAddFriendAns::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESAddFriendAns)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), static_cast<int>(this->sfromid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESAddFriendAns.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // string sToId = 2;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), static_cast<int>(this->stoid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESAddFriendAns.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stoid(), output);
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESAddFriendAns.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // string sAns = 4;
  if (this->sans().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sans().data(), static_cast<int>(this->sans().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESAddFriendAns.sAns");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sans(), output);
  }

  // .im.ErrCode errcode = 5;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->errcode(), output);
  }

  // string sMemoName = 6;
  if (this->smemoname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smemoname().data(), static_cast<int>(this->smemoname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESAddFriendAns.sMemoName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->smemoname(), output);
  }

  // uint32 packetId = 7;
  if (this->packetid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->packetid(), output);
  }

  // uint64 msgTime = 8;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->msgtime(), output);
  }

  // string extend = 9;
  if (this->extend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extend().data(), static_cast<int>(this->extend().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESAddFriendAns.extend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->extend(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.MESAddFriendAns)
}

size_t MESAddFriendAns::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESAddFriendAns)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // string sToId = 2;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // string sAns = 4;
  if (this->sans().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sans());
  }

  // string sMemoName = 6;
  if (this->smemoname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smemoname());
  }

  // string extend = 9;
  if (this->extend().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extend());
  }

  // .im.ErrCode errcode = 5;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  // uint32 packetId = 7;
  if (this->packetid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->packetid());
  }

  // uint64 msgTime = 8;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MESAddFriendAns::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESAddFriendAns*>(&from));
}

void MESAddFriendAns::MergeFrom(const MESAddFriendAns& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESAddFriendAns)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.sans().size() > 0) {

    sans_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sans_);
  }
  if (from.smemoname().size() > 0) {

    smemoname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smemoname_);
  }
  if (from.extend().size() > 0) {

    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
  if (from.packetid() != 0) {
    set_packetid(from.packetid());
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
}

void MESAddFriendAns::CopyFrom(const MESAddFriendAns& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESAddFriendAns)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESAddFriendAns::IsInitialized() const {
  return true;
}

void MESAddFriendAns::Swap(MESAddFriendAns* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESAddFriendAns::InternalSwap(MESAddFriendAns* other) {
  using std::swap;
  sfromid_.Swap(&other->sfromid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  stoid_.Swap(&other->stoid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sans_.Swap(&other->sans_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smemoname_.Swap(&other->smemoname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  extend_.Swap(&other->extend_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(errcode_, other->errcode_);
  swap(packetid_, other->packetid_);
  swap(msgtime_, other->msgtime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MESAddFriendAns::GetTypeName() const {
  return "im.MESAddFriendAns";
}


// ===================================================================

void MESAddFriendAnsAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESAddFriendAnsAck::kSUserIdFieldNumber;
const int MESAddFriendAnsAck::kSMsgIdFieldNumber;
const int MESAddFriendAnsAck::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESAddFriendAnsAck::MESAddFriendAnsAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info_MESAddFriendAnsAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESAddFriendAnsAck)
}
MESAddFriendAnsAck::MESAddFriendAnsAck(const MESAddFriendAnsAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  errcode_ = from.errcode_;
  // @@protoc_insertion_point(copy_constructor:im.MESAddFriendAnsAck)
}

void MESAddFriendAnsAck::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

MESAddFriendAnsAck::~MESAddFriendAnsAck() {
  // @@protoc_insertion_point(destructor:im.MESAddFriendAnsAck)
  SharedDtor();
}

void MESAddFriendAnsAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MESAddFriendAnsAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MESAddFriendAnsAck& MESAddFriendAnsAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info_MESAddFriendAnsAck.base);
  return *internal_default_instance();
}


void MESAddFriendAnsAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESAddFriendAnsAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
  _internal_metadata_.Clear();
}

bool MESAddFriendAnsAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.MESAddFriendAnsAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESAddFriendAnsAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESAddFriendAnsAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode errcode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESAddFriendAnsAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESAddFriendAnsAck)
  return false;
#undef DO_
}

void MESAddFriendAnsAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESAddFriendAnsAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESAddFriendAnsAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESAddFriendAnsAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  // .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->errcode(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.MESAddFriendAnsAck)
}

size_t MESAddFriendAnsAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESAddFriendAnsAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MESAddFriendAnsAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESAddFriendAnsAck*>(&from));
}

void MESAddFriendAnsAck::MergeFrom(const MESAddFriendAnsAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESAddFriendAnsAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void MESAddFriendAnsAck::CopyFrom(const MESAddFriendAnsAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESAddFriendAnsAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESAddFriendAnsAck::IsInitialized() const {
  return true;
}

void MESAddFriendAnsAck::Swap(MESAddFriendAnsAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESAddFriendAnsAck::InternalSwap(MESAddFriendAnsAck* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(errcode_, other->errcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MESAddFriendAnsAck::GetTypeName() const {
  return "im.MESAddFriendAnsAck";
}


// ===================================================================

void MESAddFriendAnsDeliverACK::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESAddFriendAnsDeliverACK::kSUserIdFieldNumber;
const int MESAddFriendAnsDeliverACK::kSMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESAddFriendAnsDeliverACK::MESAddFriendAnsDeliverACK()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info_MESAddFriendAnsDeliverACK.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESAddFriendAnsDeliverACK)
}
MESAddFriendAnsDeliverACK::MESAddFriendAnsDeliverACK(const MESAddFriendAnsDeliverACK& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  // @@protoc_insertion_point(copy_constructor:im.MESAddFriendAnsDeliverACK)
}

void MESAddFriendAnsDeliverACK::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MESAddFriendAnsDeliverACK::~MESAddFriendAnsDeliverACK() {
  // @@protoc_insertion_point(destructor:im.MESAddFriendAnsDeliverACK)
  SharedDtor();
}

void MESAddFriendAnsDeliverACK::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MESAddFriendAnsDeliverACK::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MESAddFriendAnsDeliverACK& MESAddFriendAnsDeliverACK::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info_MESAddFriendAnsDeliverACK.base);
  return *internal_default_instance();
}


void MESAddFriendAnsDeliverACK::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESAddFriendAnsDeliverACK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool MESAddFriendAnsDeliverACK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.MESAddFriendAnsDeliverACK)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESAddFriendAnsDeliverACK.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESAddFriendAnsDeliverACK.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESAddFriendAnsDeliverACK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESAddFriendAnsDeliverACK)
  return false;
#undef DO_
}

void MESAddFriendAnsDeliverACK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESAddFriendAnsDeliverACK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESAddFriendAnsDeliverACK.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESAddFriendAnsDeliverACK.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.MESAddFriendAnsDeliverACK)
}

size_t MESAddFriendAnsDeliverACK::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESAddFriendAnsDeliverACK)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MESAddFriendAnsDeliverACK::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESAddFriendAnsDeliverACK*>(&from));
}

void MESAddFriendAnsDeliverACK::MergeFrom(const MESAddFriendAnsDeliverACK& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESAddFriendAnsDeliverACK)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
}

void MESAddFriendAnsDeliverACK::CopyFrom(const MESAddFriendAnsDeliverACK& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESAddFriendAnsDeliverACK)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESAddFriendAnsDeliverACK::IsInitialized() const {
  return true;
}

void MESAddFriendAnsDeliverACK::Swap(MESAddFriendAnsDeliverACK* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESAddFriendAnsDeliverACK::InternalSwap(MESAddFriendAnsDeliverACK* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MESAddFriendAnsDeliverACK::GetTypeName() const {
  return "im.MESAddFriendAnsDeliverACK";
}


// ===================================================================

void MESDelFriend::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESDelFriend::kSFromIdFieldNumber;
const int MESDelFriend::kSToIdFieldNumber;
const int MESDelFriend::kSMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESDelFriend::MESDelFriend()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info_MESDelFriend.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESDelFriend)
}
MESDelFriend::MESDelFriend(const MESDelFriend& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sfromid().size() > 0) {
    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stoid().size() > 0) {
    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  // @@protoc_insertion_point(copy_constructor:im.MESDelFriend)
}

void MESDelFriend::SharedCtor() {
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MESDelFriend::~MESDelFriend() {
  // @@protoc_insertion_point(destructor:im.MESDelFriend)
  SharedDtor();
}

void MESDelFriend::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MESDelFriend::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MESDelFriend& MESDelFriend::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info_MESDelFriend.base);
  return *internal_default_instance();
}


void MESDelFriend::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESDelFriend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool MESDelFriend::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.MESDelFriend)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sFromId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), static_cast<int>(this->sfromid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESDelFriend.sFromId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sToId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), static_cast<int>(this->stoid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESDelFriend.sToId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESDelFriend.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESDelFriend)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESDelFriend)
  return false;
#undef DO_
}

void MESDelFriend::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESDelFriend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), static_cast<int>(this->sfromid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESDelFriend.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // string sToId = 2;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), static_cast<int>(this->stoid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESDelFriend.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stoid(), output);
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESDelFriend.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.MESDelFriend)
}

size_t MESDelFriend::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESDelFriend)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // string sToId = 2;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MESDelFriend::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESDelFriend*>(&from));
}

void MESDelFriend::MergeFrom(const MESDelFriend& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESDelFriend)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
}

void MESDelFriend::CopyFrom(const MESDelFriend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESDelFriend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESDelFriend::IsInitialized() const {
  return true;
}

void MESDelFriend::Swap(MESDelFriend* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESDelFriend::InternalSwap(MESDelFriend* other) {
  using std::swap;
  sfromid_.Swap(&other->sfromid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  stoid_.Swap(&other->stoid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MESDelFriend::GetTypeName() const {
  return "im.MESDelFriend";
}


// ===================================================================

void MESDelFriendAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESDelFriendAck::kSUserIdFieldNumber;
const int MESDelFriendAck::kSMsgIdFieldNumber;
const int MESDelFriendAck::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESDelFriendAck::MESDelFriendAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info_MESDelFriendAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESDelFriendAck)
}
MESDelFriendAck::MESDelFriendAck(const MESDelFriendAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  errcode_ = from.errcode_;
  // @@protoc_insertion_point(copy_constructor:im.MESDelFriendAck)
}

void MESDelFriendAck::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

MESDelFriendAck::~MESDelFriendAck() {
  // @@protoc_insertion_point(destructor:im.MESDelFriendAck)
  SharedDtor();
}

void MESDelFriendAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MESDelFriendAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MESDelFriendAck& MESDelFriendAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info_MESDelFriendAck.base);
  return *internal_default_instance();
}


void MESDelFriendAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESDelFriendAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
  _internal_metadata_.Clear();
}

bool MESDelFriendAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.MESDelFriendAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESDelFriendAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESDelFriendAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode errcode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESDelFriendAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESDelFriendAck)
  return false;
#undef DO_
}

void MESDelFriendAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESDelFriendAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESDelFriendAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESDelFriendAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  // .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->errcode(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.MESDelFriendAck)
}

size_t MESDelFriendAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESDelFriendAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MESDelFriendAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESDelFriendAck*>(&from));
}

void MESDelFriendAck::MergeFrom(const MESDelFriendAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESDelFriendAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void MESDelFriendAck::CopyFrom(const MESDelFriendAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESDelFriendAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESDelFriendAck::IsInitialized() const {
  return true;
}

void MESDelFriendAck::Swap(MESDelFriendAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESDelFriendAck::InternalSwap(MESDelFriendAck* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(errcode_, other->errcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MESDelFriendAck::GetTypeName() const {
  return "im.MESDelFriendAck";
}


// ===================================================================

void MESIncBlacklist::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESIncBlacklist::kSFromIdFieldNumber;
const int MESIncBlacklist::kSToIdFieldNumber;
const int MESIncBlacklist::kSMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESIncBlacklist::MESIncBlacklist()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info_MESIncBlacklist.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESIncBlacklist)
}
MESIncBlacklist::MESIncBlacklist(const MESIncBlacklist& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sfromid().size() > 0) {
    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stoid().size() > 0) {
    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  // @@protoc_insertion_point(copy_constructor:im.MESIncBlacklist)
}

void MESIncBlacklist::SharedCtor() {
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MESIncBlacklist::~MESIncBlacklist() {
  // @@protoc_insertion_point(destructor:im.MESIncBlacklist)
  SharedDtor();
}

void MESIncBlacklist::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MESIncBlacklist::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MESIncBlacklist& MESIncBlacklist::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info_MESIncBlacklist.base);
  return *internal_default_instance();
}


void MESIncBlacklist::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESIncBlacklist)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool MESIncBlacklist::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.MESIncBlacklist)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sFromId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), static_cast<int>(this->sfromid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESIncBlacklist.sFromId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sToId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), static_cast<int>(this->stoid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESIncBlacklist.sToId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESIncBlacklist.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESIncBlacklist)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESIncBlacklist)
  return false;
#undef DO_
}

void MESIncBlacklist::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESIncBlacklist)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), static_cast<int>(this->sfromid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESIncBlacklist.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // string sToId = 2;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), static_cast<int>(this->stoid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESIncBlacklist.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stoid(), output);
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESIncBlacklist.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.MESIncBlacklist)
}

size_t MESIncBlacklist::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESIncBlacklist)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // string sToId = 2;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MESIncBlacklist::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESIncBlacklist*>(&from));
}

void MESIncBlacklist::MergeFrom(const MESIncBlacklist& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESIncBlacklist)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
}

void MESIncBlacklist::CopyFrom(const MESIncBlacklist& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESIncBlacklist)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESIncBlacklist::IsInitialized() const {
  return true;
}

void MESIncBlacklist::Swap(MESIncBlacklist* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESIncBlacklist::InternalSwap(MESIncBlacklist* other) {
  using std::swap;
  sfromid_.Swap(&other->sfromid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  stoid_.Swap(&other->stoid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MESIncBlacklist::GetTypeName() const {
  return "im.MESIncBlacklist";
}


// ===================================================================

void MESIncBlacklistAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESIncBlacklistAck::kSUserIdFieldNumber;
const int MESIncBlacklistAck::kSMsgIdFieldNumber;
const int MESIncBlacklistAck::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESIncBlacklistAck::MESIncBlacklistAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info_MESIncBlacklistAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESIncBlacklistAck)
}
MESIncBlacklistAck::MESIncBlacklistAck(const MESIncBlacklistAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  errcode_ = from.errcode_;
  // @@protoc_insertion_point(copy_constructor:im.MESIncBlacklistAck)
}

void MESIncBlacklistAck::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

MESIncBlacklistAck::~MESIncBlacklistAck() {
  // @@protoc_insertion_point(destructor:im.MESIncBlacklistAck)
  SharedDtor();
}

void MESIncBlacklistAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MESIncBlacklistAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MESIncBlacklistAck& MESIncBlacklistAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info_MESIncBlacklistAck.base);
  return *internal_default_instance();
}


void MESIncBlacklistAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESIncBlacklistAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
  _internal_metadata_.Clear();
}

bool MESIncBlacklistAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.MESIncBlacklistAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESIncBlacklistAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESIncBlacklistAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode errcode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESIncBlacklistAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESIncBlacklistAck)
  return false;
#undef DO_
}

void MESIncBlacklistAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESIncBlacklistAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESIncBlacklistAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESIncBlacklistAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  // .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->errcode(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.MESIncBlacklistAck)
}

size_t MESIncBlacklistAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESIncBlacklistAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MESIncBlacklistAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESIncBlacklistAck*>(&from));
}

void MESIncBlacklistAck::MergeFrom(const MESIncBlacklistAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESIncBlacklistAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void MESIncBlacklistAck::CopyFrom(const MESIncBlacklistAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESIncBlacklistAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESIncBlacklistAck::IsInitialized() const {
  return true;
}

void MESIncBlacklistAck::Swap(MESIncBlacklistAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESIncBlacklistAck::InternalSwap(MESIncBlacklistAck* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(errcode_, other->errcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MESIncBlacklistAck::GetTypeName() const {
  return "im.MESIncBlacklistAck";
}


// ===================================================================

void MESDecBlacklist::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESDecBlacklist::kSFromIdFieldNumber;
const int MESDecBlacklist::kSToIdFieldNumber;
const int MESDecBlacklist::kSMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESDecBlacklist::MESDecBlacklist()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info_MESDecBlacklist.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESDecBlacklist)
}
MESDecBlacklist::MESDecBlacklist(const MESDecBlacklist& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sfromid().size() > 0) {
    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stoid().size() > 0) {
    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  // @@protoc_insertion_point(copy_constructor:im.MESDecBlacklist)
}

void MESDecBlacklist::SharedCtor() {
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MESDecBlacklist::~MESDecBlacklist() {
  // @@protoc_insertion_point(destructor:im.MESDecBlacklist)
  SharedDtor();
}

void MESDecBlacklist::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MESDecBlacklist::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MESDecBlacklist& MESDecBlacklist::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info_MESDecBlacklist.base);
  return *internal_default_instance();
}


void MESDecBlacklist::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESDecBlacklist)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool MESDecBlacklist::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.MESDecBlacklist)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sFromId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), static_cast<int>(this->sfromid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESDecBlacklist.sFromId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sToId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), static_cast<int>(this->stoid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESDecBlacklist.sToId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESDecBlacklist.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESDecBlacklist)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESDecBlacklist)
  return false;
#undef DO_
}

void MESDecBlacklist::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESDecBlacklist)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), static_cast<int>(this->sfromid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESDecBlacklist.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // string sToId = 2;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), static_cast<int>(this->stoid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESDecBlacklist.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stoid(), output);
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESDecBlacklist.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.MESDecBlacklist)
}

size_t MESDecBlacklist::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESDecBlacklist)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // string sToId = 2;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MESDecBlacklist::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESDecBlacklist*>(&from));
}

void MESDecBlacklist::MergeFrom(const MESDecBlacklist& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESDecBlacklist)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
}

void MESDecBlacklist::CopyFrom(const MESDecBlacklist& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESDecBlacklist)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESDecBlacklist::IsInitialized() const {
  return true;
}

void MESDecBlacklist::Swap(MESDecBlacklist* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESDecBlacklist::InternalSwap(MESDecBlacklist* other) {
  using std::swap;
  sfromid_.Swap(&other->sfromid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  stoid_.Swap(&other->stoid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MESDecBlacklist::GetTypeName() const {
  return "im.MESDecBlacklist";
}


// ===================================================================

void MESDecBlacklistAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESDecBlacklistAck::kSUserIdFieldNumber;
const int MESDecBlacklistAck::kSMsgIdFieldNumber;
const int MESDecBlacklistAck::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESDecBlacklistAck::MESDecBlacklistAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info_MESDecBlacklistAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESDecBlacklistAck)
}
MESDecBlacklistAck::MESDecBlacklistAck(const MESDecBlacklistAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  errcode_ = from.errcode_;
  // @@protoc_insertion_point(copy_constructor:im.MESDecBlacklistAck)
}

void MESDecBlacklistAck::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

MESDecBlacklistAck::~MESDecBlacklistAck() {
  // @@protoc_insertion_point(destructor:im.MESDecBlacklistAck)
  SharedDtor();
}

void MESDecBlacklistAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MESDecBlacklistAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MESDecBlacklistAck& MESDecBlacklistAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info_MESDecBlacklistAck.base);
  return *internal_default_instance();
}


void MESDecBlacklistAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESDecBlacklistAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
  _internal_metadata_.Clear();
}

bool MESDecBlacklistAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.MESDecBlacklistAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESDecBlacklistAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESDecBlacklistAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode errcode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESDecBlacklistAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESDecBlacklistAck)
  return false;
#undef DO_
}

void MESDecBlacklistAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESDecBlacklistAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESDecBlacklistAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESDecBlacklistAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  // .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->errcode(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.MESDecBlacklistAck)
}

size_t MESDecBlacklistAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESDecBlacklistAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MESDecBlacklistAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESDecBlacklistAck*>(&from));
}

void MESDecBlacklistAck::MergeFrom(const MESDecBlacklistAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESDecBlacklistAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void MESDecBlacklistAck::CopyFrom(const MESDecBlacklistAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESDecBlacklistAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESDecBlacklistAck::IsInitialized() const {
  return true;
}

void MESDecBlacklistAck::Swap(MESDecBlacklistAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESDecBlacklistAck::InternalSwap(MESDecBlacklistAck* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(errcode_, other->errcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MESDecBlacklistAck::GetTypeName() const {
  return "im.MESDecBlacklistAck";
}


// ===================================================================

void MESJoinGrp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESJoinGrp::kSFromIdFieldNumber;
const int MESJoinGrp::kSToIdFieldNumber;
const int MESJoinGrp::kSGrpIdFieldNumber;
const int MESJoinGrp::kSMsgIdFieldNumber;
const int MESJoinGrp::kReqTypeFieldNumber;
const int MESJoinGrp::kSSelfIntroduceFieldNumber;
const int MESJoinGrp::kSDescFieldNumber;
const int MESJoinGrp::kMsgTimeFieldNumber;
const int MESJoinGrp::kExtendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESJoinGrp::MESJoinGrp()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info_MESJoinGrp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESJoinGrp)
}
MESJoinGrp::MESJoinGrp(const MESJoinGrp& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sfromid().size() > 0) {
    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stoid().size() > 0) {
    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sgrpid().size() > 0) {
    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  sselfintroduce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sselfintroduce().size() > 0) {
    sselfintroduce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sselfintroduce_);
  }
  sdesc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sdesc().size() > 0) {
    sdesc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdesc_);
  }
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extend().size() > 0) {
    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  ::memcpy(&msgtime_, &from.msgtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&reqtype_) -
    reinterpret_cast<char*>(&msgtime_)) + sizeof(reqtype_));
  // @@protoc_insertion_point(copy_constructor:im.MESJoinGrp)
}

void MESJoinGrp::SharedCtor() {
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sselfintroduce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdesc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reqtype_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(reqtype_));
}

MESJoinGrp::~MESJoinGrp() {
  // @@protoc_insertion_point(destructor:im.MESJoinGrp)
  SharedDtor();
}

void MESJoinGrp::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sselfintroduce_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdesc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MESJoinGrp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MESJoinGrp& MESJoinGrp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info_MESJoinGrp.base);
  return *internal_default_instance();
}


void MESJoinGrp::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESJoinGrp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sselfintroduce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reqtype_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(reqtype_));
  _internal_metadata_.Clear();
}

bool MESJoinGrp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.MESJoinGrp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sFromId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), static_cast<int>(this->sfromid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESJoinGrp.sFromId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sToId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), static_cast<int>(this->stoid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESJoinGrp.sToId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sGrpId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgrpid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgrpid().data(), static_cast<int>(this->sgrpid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESJoinGrp.sGrpId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESJoinGrp.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 reqType = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reqtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sSelfIntroduce = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sselfintroduce()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sselfintroduce().data(), static_cast<int>(this->sselfintroduce().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESJoinGrp.sSelfIntroduce"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sDesc = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sdesc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sdesc().data(), static_cast<int>(this->sdesc().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESJoinGrp.sDesc"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgTime = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string extend = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extend()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extend().data(), static_cast<int>(this->extend().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESJoinGrp.extend"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESJoinGrp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESJoinGrp)
  return false;
#undef DO_
}

void MESJoinGrp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESJoinGrp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), static_cast<int>(this->sfromid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESJoinGrp.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // string sToId = 2;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), static_cast<int>(this->stoid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESJoinGrp.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stoid(), output);
  }

  // string sGrpId = 3;
  if (this->sgrpid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgrpid().data(), static_cast<int>(this->sgrpid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESJoinGrp.sGrpId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sgrpid(), output);
  }

  // string sMsgId = 4;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESJoinGrp.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->smsgid(), output);
  }

  // uint32 reqType = 5;
  if (this->reqtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->reqtype(), output);
  }

  // string sSelfIntroduce = 6;
  if (this->sselfintroduce().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sselfintroduce().data(), static_cast<int>(this->sselfintroduce().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESJoinGrp.sSelfIntroduce");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->sselfintroduce(), output);
  }

  // string sDesc = 7;
  if (this->sdesc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sdesc().data(), static_cast<int>(this->sdesc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESJoinGrp.sDesc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->sdesc(), output);
  }

  // uint64 msgTime = 8;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->msgtime(), output);
  }

  // string extend = 9;
  if (this->extend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extend().data(), static_cast<int>(this->extend().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESJoinGrp.extend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->extend(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.MESJoinGrp)
}

size_t MESJoinGrp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESJoinGrp)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // string sToId = 2;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // string sGrpId = 3;
  if (this->sgrpid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgrpid());
  }

  // string sMsgId = 4;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // string sSelfIntroduce = 6;
  if (this->sselfintroduce().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sselfintroduce());
  }

  // string sDesc = 7;
  if (this->sdesc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sdesc());
  }

  // string extend = 9;
  if (this->extend().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extend());
  }

  // uint64 msgTime = 8;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // uint32 reqType = 5;
  if (this->reqtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->reqtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MESJoinGrp::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESJoinGrp*>(&from));
}

void MESJoinGrp::MergeFrom(const MESJoinGrp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESJoinGrp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.sgrpid().size() > 0) {

    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.sselfintroduce().size() > 0) {

    sselfintroduce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sselfintroduce_);
  }
  if (from.sdesc().size() > 0) {

    sdesc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdesc_);
  }
  if (from.extend().size() > 0) {

    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.reqtype() != 0) {
    set_reqtype(from.reqtype());
  }
}

void MESJoinGrp::CopyFrom(const MESJoinGrp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESJoinGrp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESJoinGrp::IsInitialized() const {
  return true;
}

void MESJoinGrp::Swap(MESJoinGrp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESJoinGrp::InternalSwap(MESJoinGrp* other) {
  using std::swap;
  sfromid_.Swap(&other->sfromid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  stoid_.Swap(&other->stoid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sgrpid_.Swap(&other->sgrpid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sselfintroduce_.Swap(&other->sselfintroduce_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sdesc_.Swap(&other->sdesc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  extend_.Swap(&other->extend_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgtime_, other->msgtime_);
  swap(reqtype_, other->reqtype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MESJoinGrp::GetTypeName() const {
  return "im.MESJoinGrp";
}


// ===================================================================

void MESJoinGrpAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESJoinGrpAck::kSUserIdFieldNumber;
const int MESJoinGrpAck::kSGrpIdFieldNumber;
const int MESJoinGrpAck::kSMsgIdFieldNumber;
const int MESJoinGrpAck::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESJoinGrpAck::MESJoinGrpAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info_MESJoinGrpAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESJoinGrpAck)
}
MESJoinGrpAck::MESJoinGrpAck(const MESJoinGrpAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sgrpid().size() > 0) {
    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  errcode_ = from.errcode_;
  // @@protoc_insertion_point(copy_constructor:im.MESJoinGrpAck)
}

void MESJoinGrpAck::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

MESJoinGrpAck::~MESJoinGrpAck() {
  // @@protoc_insertion_point(destructor:im.MESJoinGrpAck)
  SharedDtor();
}

void MESJoinGrpAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MESJoinGrpAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MESJoinGrpAck& MESJoinGrpAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info_MESJoinGrpAck.base);
  return *internal_default_instance();
}


void MESJoinGrpAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESJoinGrpAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
  _internal_metadata_.Clear();
}

bool MESJoinGrpAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.MESJoinGrpAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESJoinGrpAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sGrpId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgrpid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgrpid().data(), static_cast<int>(this->sgrpid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESJoinGrpAck.sGrpId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESJoinGrpAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode errcode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESJoinGrpAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESJoinGrpAck)
  return false;
#undef DO_
}

void MESJoinGrpAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESJoinGrpAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESJoinGrpAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string sGrpId = 2;
  if (this->sgrpid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgrpid().data(), static_cast<int>(this->sgrpid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESJoinGrpAck.sGrpId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sgrpid(), output);
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESJoinGrpAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // .im.ErrCode errcode = 4;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->errcode(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.MESJoinGrpAck)
}

size_t MESJoinGrpAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESJoinGrpAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sGrpId = 2;
  if (this->sgrpid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgrpid());
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // .im.ErrCode errcode = 4;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MESJoinGrpAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESJoinGrpAck*>(&from));
}

void MESJoinGrpAck::MergeFrom(const MESJoinGrpAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESJoinGrpAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.sgrpid().size() > 0) {

    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void MESJoinGrpAck::CopyFrom(const MESJoinGrpAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESJoinGrpAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESJoinGrpAck::IsInitialized() const {
  return true;
}

void MESJoinGrpAck::Swap(MESJoinGrpAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESJoinGrpAck::InternalSwap(MESJoinGrpAck* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sgrpid_.Swap(&other->sgrpid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(errcode_, other->errcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MESJoinGrpAck::GetTypeName() const {
  return "im.MESJoinGrpAck";
}


// ===================================================================

void MESJoinGrpDeliverAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESJoinGrpDeliverAck::kSUserIdFieldNumber;
const int MESJoinGrpDeliverAck::kSGrpIdFieldNumber;
const int MESJoinGrpDeliverAck::kSMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESJoinGrpDeliverAck::MESJoinGrpDeliverAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info_MESJoinGrpDeliverAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESJoinGrpDeliverAck)
}
MESJoinGrpDeliverAck::MESJoinGrpDeliverAck(const MESJoinGrpDeliverAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sgrpid().size() > 0) {
    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  // @@protoc_insertion_point(copy_constructor:im.MESJoinGrpDeliverAck)
}

void MESJoinGrpDeliverAck::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MESJoinGrpDeliverAck::~MESJoinGrpDeliverAck() {
  // @@protoc_insertion_point(destructor:im.MESJoinGrpDeliverAck)
  SharedDtor();
}

void MESJoinGrpDeliverAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MESJoinGrpDeliverAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MESJoinGrpDeliverAck& MESJoinGrpDeliverAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info_MESJoinGrpDeliverAck.base);
  return *internal_default_instance();
}


void MESJoinGrpDeliverAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESJoinGrpDeliverAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool MESJoinGrpDeliverAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.MESJoinGrpDeliverAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESJoinGrpDeliverAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sGrpId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgrpid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgrpid().data(), static_cast<int>(this->sgrpid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESJoinGrpDeliverAck.sGrpId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESJoinGrpDeliverAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESJoinGrpDeliverAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESJoinGrpDeliverAck)
  return false;
#undef DO_
}

void MESJoinGrpDeliverAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESJoinGrpDeliverAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESJoinGrpDeliverAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string sGrpId = 2;
  if (this->sgrpid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgrpid().data(), static_cast<int>(this->sgrpid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESJoinGrpDeliverAck.sGrpId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sgrpid(), output);
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESJoinGrpDeliverAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.MESJoinGrpDeliverAck)
}

size_t MESJoinGrpDeliverAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESJoinGrpDeliverAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sGrpId = 2;
  if (this->sgrpid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgrpid());
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MESJoinGrpDeliverAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESJoinGrpDeliverAck*>(&from));
}

void MESJoinGrpDeliverAck::MergeFrom(const MESJoinGrpDeliverAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESJoinGrpDeliverAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.sgrpid().size() > 0) {

    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
}

void MESJoinGrpDeliverAck::CopyFrom(const MESJoinGrpDeliverAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESJoinGrpDeliverAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESJoinGrpDeliverAck::IsInitialized() const {
  return true;
}

void MESJoinGrpDeliverAck::Swap(MESJoinGrpDeliverAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESJoinGrpDeliverAck::InternalSwap(MESJoinGrpDeliverAck* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sgrpid_.Swap(&other->sgrpid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MESJoinGrpDeliverAck::GetTypeName() const {
  return "im.MESJoinGrpDeliverAck";
}


// ===================================================================

void UserKey::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserKey::kSUserIdFieldNumber;
const int UserKey::kSKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserKey::UserKey()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info_UserKey.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.UserKey)
}
UserKey::UserKey(const UserKey& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  skey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.skey().size() > 0) {
    skey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.skey_);
  }
  // @@protoc_insertion_point(copy_constructor:im.UserKey)
}

void UserKey::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  skey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

UserKey::~UserKey() {
  // @@protoc_insertion_point(destructor:im.UserKey)
  SharedDtor();
}

void UserKey::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  skey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UserKey& UserKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info_UserKey.base);
  return *internal_default_instance();
}


void UserKey::Clear() {
// @@protoc_insertion_point(message_clear_start:im.UserKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  skey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool UserKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.UserKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.UserKey.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sKey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_skey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->skey().data(), static_cast<int>(this->skey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.UserKey.sKey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.UserKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.UserKey)
  return false;
#undef DO_
}

void UserKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.UserKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.UserKey.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string sKey = 2;
  if (this->skey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->skey().data(), static_cast<int>(this->skey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.UserKey.sKey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->skey(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.UserKey)
}

size_t UserKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.UserKey)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sKey = 2;
  if (this->skey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->skey());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserKey::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const UserKey*>(&from));
}

void UserKey::MergeFrom(const UserKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.UserKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.skey().size() > 0) {

    skey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.skey_);
  }
}

void UserKey::CopyFrom(const UserKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.UserKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserKey::IsInitialized() const {
  return true;
}

void UserKey::Swap(UserKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserKey::InternalSwap(UserKey* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  skey_.Swap(&other->skey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string UserKey::GetTypeName() const {
  return "im.UserKey";
}


// ===================================================================

void MESExchangeKey::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESExchangeKey::kSFromIdFieldNumber;
const int MESExchangeKey::kSGrpIdFieldNumber;
const int MESExchangeKey::kSMsgIdFieldNumber;
const int MESExchangeKey::kEncryptFieldNumber;
const int MESExchangeKey::kExchangeModeFieldNumber;
const int MESExchangeKey::kSOprUserIdFieldNumber;
const int MESExchangeKey::kMsgTimeFieldNumber;
const int MESExchangeKey::kLsUserKeysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESExchangeKey::MESExchangeKey()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info_MESExchangeKey.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESExchangeKey)
}
MESExchangeKey::MESExchangeKey(const MESExchangeKey& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      lsuserkeys_(from.lsuserkeys_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sfromid().size() > 0) {
    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sgrpid().size() > 0) {
    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  sopruserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sopruserid().size() > 0) {
    sopruserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sopruserid_);
  }
  ::memcpy(&encrypt_, &from.encrypt_,
    static_cast<size_t>(reinterpret_cast<char*>(&msgtime_) -
    reinterpret_cast<char*>(&encrypt_)) + sizeof(msgtime_));
  // @@protoc_insertion_point(copy_constructor:im.MESExchangeKey)
}

void MESExchangeKey::SharedCtor() {
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sopruserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&encrypt_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msgtime_) -
      reinterpret_cast<char*>(&encrypt_)) + sizeof(msgtime_));
}

MESExchangeKey::~MESExchangeKey() {
  // @@protoc_insertion_point(destructor:im.MESExchangeKey)
  SharedDtor();
}

void MESExchangeKey::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sopruserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MESExchangeKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MESExchangeKey& MESExchangeKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info_MESExchangeKey.base);
  return *internal_default_instance();
}


void MESExchangeKey::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESExchangeKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lsuserkeys_.Clear();
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sopruserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&encrypt_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msgtime_) -
      reinterpret_cast<char*>(&encrypt_)) + sizeof(msgtime_));
  _internal_metadata_.Clear();
}

bool MESExchangeKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.MESExchangeKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sFromId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), static_cast<int>(this->sfromid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESExchangeKey.sFromId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sGrpId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgrpid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgrpid().data(), static_cast<int>(this->sgrpid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESExchangeKey.sGrpId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESExchangeKey.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 encrypt = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &encrypt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 exchangeMode = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &exchangemode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sOprUserId = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sopruserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sopruserid().data(), static_cast<int>(this->sopruserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESExchangeKey.sOprUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgTime = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .im.UserKey lsUserKeys = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_lsuserkeys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESExchangeKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESExchangeKey)
  return false;
#undef DO_
}

void MESExchangeKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESExchangeKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), static_cast<int>(this->sfromid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESExchangeKey.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // string sGrpId = 3;
  if (this->sgrpid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgrpid().data(), static_cast<int>(this->sgrpid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESExchangeKey.sGrpId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sgrpid(), output);
  }

  // string sMsgId = 4;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESExchangeKey.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->smsgid(), output);
  }

  // uint32 encrypt = 5;
  if (this->encrypt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->encrypt(), output);
  }

  // uint32 exchangeMode = 6;
  if (this->exchangemode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->exchangemode(), output);
  }

  // string sOprUserId = 7;
  if (this->sopruserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sopruserid().data(), static_cast<int>(this->sopruserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESExchangeKey.sOprUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->sopruserid(), output);
  }

  // uint64 msgTime = 8;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->msgtime(), output);
  }

  // repeated .im.UserKey lsUserKeys = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lsuserkeys_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      12,
      this->lsuserkeys(static_cast<int>(i)),
      output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.MESExchangeKey)
}

size_t MESExchangeKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESExchangeKey)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .im.UserKey lsUserKeys = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->lsuserkeys_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->lsuserkeys(static_cast<int>(i)));
    }
  }

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // string sGrpId = 3;
  if (this->sgrpid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgrpid());
  }

  // string sMsgId = 4;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // string sOprUserId = 7;
  if (this->sopruserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sopruserid());
  }

  // uint32 encrypt = 5;
  if (this->encrypt() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->encrypt());
  }

  // uint32 exchangeMode = 6;
  if (this->exchangemode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->exchangemode());
  }

  // uint64 msgTime = 8;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MESExchangeKey::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESExchangeKey*>(&from));
}

void MESExchangeKey::MergeFrom(const MESExchangeKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESExchangeKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  lsuserkeys_.MergeFrom(from.lsuserkeys_);
  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.sgrpid().size() > 0) {

    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.sopruserid().size() > 0) {

    sopruserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sopruserid_);
  }
  if (from.encrypt() != 0) {
    set_encrypt(from.encrypt());
  }
  if (from.exchangemode() != 0) {
    set_exchangemode(from.exchangemode());
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
}

void MESExchangeKey::CopyFrom(const MESExchangeKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESExchangeKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESExchangeKey::IsInitialized() const {
  return true;
}

void MESExchangeKey::Swap(MESExchangeKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESExchangeKey::InternalSwap(MESExchangeKey* other) {
  using std::swap;
  CastToBase(&lsuserkeys_)->InternalSwap(CastToBase(&other->lsuserkeys_));
  sfromid_.Swap(&other->sfromid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sgrpid_.Swap(&other->sgrpid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sopruserid_.Swap(&other->sopruserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(encrypt_, other->encrypt_);
  swap(exchangemode_, other->exchangemode_);
  swap(msgtime_, other->msgtime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MESExchangeKey::GetTypeName() const {
  return "im.MESExchangeKey";
}


// ===================================================================

void MESExchangeKeyAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESExchangeKeyAck::kSUserIdFieldNumber;
const int MESExchangeKeyAck::kSGrpIdFieldNumber;
const int MESExchangeKeyAck::kSMsgIdFieldNumber;
const int MESExchangeKeyAck::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESExchangeKeyAck::MESExchangeKeyAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info_MESExchangeKeyAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESExchangeKeyAck)
}
MESExchangeKeyAck::MESExchangeKeyAck(const MESExchangeKeyAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sgrpid().size() > 0) {
    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  errcode_ = from.errcode_;
  // @@protoc_insertion_point(copy_constructor:im.MESExchangeKeyAck)
}

void MESExchangeKeyAck::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

MESExchangeKeyAck::~MESExchangeKeyAck() {
  // @@protoc_insertion_point(destructor:im.MESExchangeKeyAck)
  SharedDtor();
}

void MESExchangeKeyAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MESExchangeKeyAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MESExchangeKeyAck& MESExchangeKeyAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info_MESExchangeKeyAck.base);
  return *internal_default_instance();
}


void MESExchangeKeyAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESExchangeKeyAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
  _internal_metadata_.Clear();
}

bool MESExchangeKeyAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.MESExchangeKeyAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESExchangeKeyAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sGrpId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgrpid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgrpid().data(), static_cast<int>(this->sgrpid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESExchangeKeyAck.sGrpId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESExchangeKeyAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode errcode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESExchangeKeyAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESExchangeKeyAck)
  return false;
#undef DO_
}

void MESExchangeKeyAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESExchangeKeyAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESExchangeKeyAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string sGrpId = 2;
  if (this->sgrpid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgrpid().data(), static_cast<int>(this->sgrpid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESExchangeKeyAck.sGrpId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sgrpid(), output);
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESExchangeKeyAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // .im.ErrCode errcode = 4;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->errcode(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.MESExchangeKeyAck)
}

size_t MESExchangeKeyAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESExchangeKeyAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sGrpId = 2;
  if (this->sgrpid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgrpid());
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // .im.ErrCode errcode = 4;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MESExchangeKeyAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESExchangeKeyAck*>(&from));
}

void MESExchangeKeyAck::MergeFrom(const MESExchangeKeyAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESExchangeKeyAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.sgrpid().size() > 0) {

    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void MESExchangeKeyAck::CopyFrom(const MESExchangeKeyAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESExchangeKeyAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESExchangeKeyAck::IsInitialized() const {
  return true;
}

void MESExchangeKeyAck::Swap(MESExchangeKeyAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESExchangeKeyAck::InternalSwap(MESExchangeKeyAck* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sgrpid_.Swap(&other->sgrpid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(errcode_, other->errcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MESExchangeKeyAck::GetTypeName() const {
  return "im.MESExchangeKeyAck";
}


// ===================================================================

void MESExchangeKeyDeliver::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESExchangeKeyDeliver::kSFromIdFieldNumber;
const int MESExchangeKeyDeliver::kSToIdFieldNumber;
const int MESExchangeKeyDeliver::kSGrpIdFieldNumber;
const int MESExchangeKeyDeliver::kSMsgIdFieldNumber;
const int MESExchangeKeyDeliver::kExchangeModeFieldNumber;
const int MESExchangeKeyDeliver::kSKeyFieldNumber;
const int MESExchangeKeyDeliver::kEncryptFieldNumber;
const int MESExchangeKeyDeliver::kSOprUserIdFieldNumber;
const int MESExchangeKeyDeliver::kMsgTimeFieldNumber;
const int MESExchangeKeyDeliver::kExtendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESExchangeKeyDeliver::MESExchangeKeyDeliver()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info_MESExchangeKeyDeliver.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESExchangeKeyDeliver)
}
MESExchangeKeyDeliver::MESExchangeKeyDeliver(const MESExchangeKeyDeliver& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sfromid().size() > 0) {
    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stoid().size() > 0) {
    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sgrpid().size() > 0) {
    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  skey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.skey().size() > 0) {
    skey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.skey_);
  }
  sopruserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sopruserid().size() > 0) {
    sopruserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sopruserid_);
  }
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extend().size() > 0) {
    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  ::memcpy(&exchangemode_, &from.exchangemode_,
    static_cast<size_t>(reinterpret_cast<char*>(&msgtime_) -
    reinterpret_cast<char*>(&exchangemode_)) + sizeof(msgtime_));
  // @@protoc_insertion_point(copy_constructor:im.MESExchangeKeyDeliver)
}

void MESExchangeKeyDeliver::SharedCtor() {
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  skey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sopruserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&exchangemode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msgtime_) -
      reinterpret_cast<char*>(&exchangemode_)) + sizeof(msgtime_));
}

MESExchangeKeyDeliver::~MESExchangeKeyDeliver() {
  // @@protoc_insertion_point(destructor:im.MESExchangeKeyDeliver)
  SharedDtor();
}

void MESExchangeKeyDeliver::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  skey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sopruserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MESExchangeKeyDeliver::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MESExchangeKeyDeliver& MESExchangeKeyDeliver::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info_MESExchangeKeyDeliver.base);
  return *internal_default_instance();
}


void MESExchangeKeyDeliver::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESExchangeKeyDeliver)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  skey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sopruserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&exchangemode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msgtime_) -
      reinterpret_cast<char*>(&exchangemode_)) + sizeof(msgtime_));
  _internal_metadata_.Clear();
}

bool MESExchangeKeyDeliver::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.MESExchangeKeyDeliver)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sFromId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), static_cast<int>(this->sfromid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESExchangeKeyDeliver.sFromId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sToId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), static_cast<int>(this->stoid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESExchangeKeyDeliver.sToId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sGrpId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgrpid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgrpid().data(), static_cast<int>(this->sgrpid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESExchangeKeyDeliver.sGrpId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESExchangeKeyDeliver.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 exchangeMode = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &exchangemode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sKey = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_skey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->skey().data(), static_cast<int>(this->skey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESExchangeKeyDeliver.sKey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 encrypt = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &encrypt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sOprUserId = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sopruserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sopruserid().data(), static_cast<int>(this->sopruserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESExchangeKeyDeliver.sOprUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgTime = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string extend = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extend()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extend().data(), static_cast<int>(this->extend().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESExchangeKeyDeliver.extend"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESExchangeKeyDeliver)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESExchangeKeyDeliver)
  return false;
#undef DO_
}

void MESExchangeKeyDeliver::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESExchangeKeyDeliver)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), static_cast<int>(this->sfromid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESExchangeKeyDeliver.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // string sToId = 2;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), static_cast<int>(this->stoid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESExchangeKeyDeliver.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stoid(), output);
  }

  // string sGrpId = 3;
  if (this->sgrpid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgrpid().data(), static_cast<int>(this->sgrpid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESExchangeKeyDeliver.sGrpId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sgrpid(), output);
  }

  // string sMsgId = 4;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESExchangeKeyDeliver.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->smsgid(), output);
  }

  // uint32 exchangeMode = 5;
  if (this->exchangemode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->exchangemode(), output);
  }

  // string sKey = 6;
  if (this->skey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->skey().data(), static_cast<int>(this->skey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESExchangeKeyDeliver.sKey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->skey(), output);
  }

  // uint32 encrypt = 7;
  if (this->encrypt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->encrypt(), output);
  }

  // string sOprUserId = 8;
  if (this->sopruserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sopruserid().data(), static_cast<int>(this->sopruserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESExchangeKeyDeliver.sOprUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->sopruserid(), output);
  }

  // uint64 msgTime = 9;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->msgtime(), output);
  }

  // string extend = 10;
  if (this->extend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extend().data(), static_cast<int>(this->extend().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESExchangeKeyDeliver.extend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->extend(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.MESExchangeKeyDeliver)
}

size_t MESExchangeKeyDeliver::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESExchangeKeyDeliver)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // string sToId = 2;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // string sGrpId = 3;
  if (this->sgrpid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgrpid());
  }

  // string sMsgId = 4;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // string sKey = 6;
  if (this->skey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->skey());
  }

  // string sOprUserId = 8;
  if (this->sopruserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sopruserid());
  }

  // string extend = 10;
  if (this->extend().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extend());
  }

  // uint32 exchangeMode = 5;
  if (this->exchangemode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->exchangemode());
  }

  // uint32 encrypt = 7;
  if (this->encrypt() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->encrypt());
  }

  // uint64 msgTime = 9;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MESExchangeKeyDeliver::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESExchangeKeyDeliver*>(&from));
}

void MESExchangeKeyDeliver::MergeFrom(const MESExchangeKeyDeliver& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESExchangeKeyDeliver)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.sgrpid().size() > 0) {

    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.skey().size() > 0) {

    skey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.skey_);
  }
  if (from.sopruserid().size() > 0) {

    sopruserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sopruserid_);
  }
  if (from.extend().size() > 0) {

    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  if (from.exchangemode() != 0) {
    set_exchangemode(from.exchangemode());
  }
  if (from.encrypt() != 0) {
    set_encrypt(from.encrypt());
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
}

void MESExchangeKeyDeliver::CopyFrom(const MESExchangeKeyDeliver& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESExchangeKeyDeliver)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESExchangeKeyDeliver::IsInitialized() const {
  return true;
}

void MESExchangeKeyDeliver::Swap(MESExchangeKeyDeliver* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESExchangeKeyDeliver::InternalSwap(MESExchangeKeyDeliver* other) {
  using std::swap;
  sfromid_.Swap(&other->sfromid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  stoid_.Swap(&other->stoid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sgrpid_.Swap(&other->sgrpid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  skey_.Swap(&other->skey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sopruserid_.Swap(&other->sopruserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  extend_.Swap(&other->extend_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(exchangemode_, other->exchangemode_);
  swap(encrypt_, other->encrypt_);
  swap(msgtime_, other->msgtime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MESExchangeKeyDeliver::GetTypeName() const {
  return "im.MESExchangeKeyDeliver";
}


// ===================================================================

void MESExchangeKeyDeliverAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESExchangeKeyDeliverAck::kSFromIdFieldNumber;
const int MESExchangeKeyDeliverAck::kSToIdFieldNumber;
const int MESExchangeKeyDeliverAck::kSGrpIdFieldNumber;
const int MESExchangeKeyDeliverAck::kSMsgIdFieldNumber;
const int MESExchangeKeyDeliverAck::kSKeyFieldNumber;
const int MESExchangeKeyDeliverAck::kEncryptFieldNumber;
const int MESExchangeKeyDeliverAck::kErrcodeFieldNumber;
const int MESExchangeKeyDeliverAck::kMsgTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESExchangeKeyDeliverAck::MESExchangeKeyDeliverAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info_MESExchangeKeyDeliverAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESExchangeKeyDeliverAck)
}
MESExchangeKeyDeliverAck::MESExchangeKeyDeliverAck(const MESExchangeKeyDeliverAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sfromid().size() > 0) {
    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stoid().size() > 0) {
    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sgrpid().size() > 0) {
    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  skey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.skey().size() > 0) {
    skey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.skey_);
  }
  ::memcpy(&encrypt_, &from.encrypt_,
    static_cast<size_t>(reinterpret_cast<char*>(&msgtime_) -
    reinterpret_cast<char*>(&encrypt_)) + sizeof(msgtime_));
  // @@protoc_insertion_point(copy_constructor:im.MESExchangeKeyDeliverAck)
}

void MESExchangeKeyDeliverAck::SharedCtor() {
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  skey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&encrypt_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msgtime_) -
      reinterpret_cast<char*>(&encrypt_)) + sizeof(msgtime_));
}

MESExchangeKeyDeliverAck::~MESExchangeKeyDeliverAck() {
  // @@protoc_insertion_point(destructor:im.MESExchangeKeyDeliverAck)
  SharedDtor();
}

void MESExchangeKeyDeliverAck::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  skey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MESExchangeKeyDeliverAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MESExchangeKeyDeliverAck& MESExchangeKeyDeliverAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info_MESExchangeKeyDeliverAck.base);
  return *internal_default_instance();
}


void MESExchangeKeyDeliverAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESExchangeKeyDeliverAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  skey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&encrypt_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msgtime_) -
      reinterpret_cast<char*>(&encrypt_)) + sizeof(msgtime_));
  _internal_metadata_.Clear();
}

bool MESExchangeKeyDeliverAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.MESExchangeKeyDeliverAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sFromId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), static_cast<int>(this->sfromid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESExchangeKeyDeliverAck.sFromId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sToId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), static_cast<int>(this->stoid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESExchangeKeyDeliverAck.sToId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sGrpId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgrpid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgrpid().data(), static_cast<int>(this->sgrpid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESExchangeKeyDeliverAck.sGrpId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESExchangeKeyDeliverAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sKey = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_skey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->skey().data(), static_cast<int>(this->skey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESExchangeKeyDeliverAck.sKey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 encrypt = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &encrypt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode errcode = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgTime = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESExchangeKeyDeliverAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESExchangeKeyDeliverAck)
  return false;
#undef DO_
}

void MESExchangeKeyDeliverAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESExchangeKeyDeliverAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), static_cast<int>(this->sfromid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESExchangeKeyDeliverAck.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // string sToId = 2;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), static_cast<int>(this->stoid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESExchangeKeyDeliverAck.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stoid(), output);
  }

  // string sGrpId = 3;
  if (this->sgrpid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgrpid().data(), static_cast<int>(this->sgrpid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESExchangeKeyDeliverAck.sGrpId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sgrpid(), output);
  }

  // string sMsgId = 4;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESExchangeKeyDeliverAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->smsgid(), output);
  }

  // string sKey = 5;
  if (this->skey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->skey().data(), static_cast<int>(this->skey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESExchangeKeyDeliverAck.sKey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->skey(), output);
  }

  // uint32 encrypt = 6;
  if (this->encrypt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->encrypt(), output);
  }

  // .im.ErrCode errcode = 7;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->errcode(), output);
  }

  // uint64 msgTime = 8;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->msgtime(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.MESExchangeKeyDeliverAck)
}

size_t MESExchangeKeyDeliverAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESExchangeKeyDeliverAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // string sToId = 2;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // string sGrpId = 3;
  if (this->sgrpid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgrpid());
  }

  // string sMsgId = 4;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // string sKey = 5;
  if (this->skey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->skey());
  }

  // uint32 encrypt = 6;
  if (this->encrypt() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->encrypt());
  }

  // .im.ErrCode errcode = 7;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  // uint64 msgTime = 8;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MESExchangeKeyDeliverAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESExchangeKeyDeliverAck*>(&from));
}

void MESExchangeKeyDeliverAck::MergeFrom(const MESExchangeKeyDeliverAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESExchangeKeyDeliverAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.sgrpid().size() > 0) {

    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.skey().size() > 0) {

    skey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.skey_);
  }
  if (from.encrypt() != 0) {
    set_encrypt(from.encrypt());
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
}

void MESExchangeKeyDeliverAck::CopyFrom(const MESExchangeKeyDeliverAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESExchangeKeyDeliverAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESExchangeKeyDeliverAck::IsInitialized() const {
  return true;
}

void MESExchangeKeyDeliverAck::Swap(MESExchangeKeyDeliverAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESExchangeKeyDeliverAck::InternalSwap(MESExchangeKeyDeliverAck* other) {
  using std::swap;
  sfromid_.Swap(&other->sfromid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  stoid_.Swap(&other->stoid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sgrpid_.Swap(&other->sgrpid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  skey_.Swap(&other->skey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(encrypt_, other->encrypt_);
  swap(errcode_, other->errcode_);
  swap(msgtime_, other->msgtime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MESExchangeKeyDeliverAck::GetTypeName() const {
  return "im.MESExchangeKeyDeliverAck";
}


// ===================================================================

void MESExchangeKeyDeliverNotifyAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESExchangeKeyDeliverNotifyAck::kSUserIdFieldNumber;
const int MESExchangeKeyDeliverNotifyAck::kSMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESExchangeKeyDeliverNotifyAck::MESExchangeKeyDeliverNotifyAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info_MESExchangeKeyDeliverNotifyAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESExchangeKeyDeliverNotifyAck)
}
MESExchangeKeyDeliverNotifyAck::MESExchangeKeyDeliverNotifyAck(const MESExchangeKeyDeliverNotifyAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  // @@protoc_insertion_point(copy_constructor:im.MESExchangeKeyDeliverNotifyAck)
}

void MESExchangeKeyDeliverNotifyAck::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MESExchangeKeyDeliverNotifyAck::~MESExchangeKeyDeliverNotifyAck() {
  // @@protoc_insertion_point(destructor:im.MESExchangeKeyDeliverNotifyAck)
  SharedDtor();
}

void MESExchangeKeyDeliverNotifyAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MESExchangeKeyDeliverNotifyAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MESExchangeKeyDeliverNotifyAck& MESExchangeKeyDeliverNotifyAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info_MESExchangeKeyDeliverNotifyAck.base);
  return *internal_default_instance();
}


void MESExchangeKeyDeliverNotifyAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESExchangeKeyDeliverNotifyAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool MESExchangeKeyDeliverNotifyAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.MESExchangeKeyDeliverNotifyAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESExchangeKeyDeliverNotifyAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESExchangeKeyDeliverNotifyAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESExchangeKeyDeliverNotifyAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESExchangeKeyDeliverNotifyAck)
  return false;
#undef DO_
}

void MESExchangeKeyDeliverNotifyAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESExchangeKeyDeliverNotifyAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESExchangeKeyDeliverNotifyAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESExchangeKeyDeliverNotifyAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.MESExchangeKeyDeliverNotifyAck)
}

size_t MESExchangeKeyDeliverNotifyAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESExchangeKeyDeliverNotifyAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MESExchangeKeyDeliverNotifyAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESExchangeKeyDeliverNotifyAck*>(&from));
}

void MESExchangeKeyDeliverNotifyAck::MergeFrom(const MESExchangeKeyDeliverNotifyAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESExchangeKeyDeliverNotifyAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
}

void MESExchangeKeyDeliverNotifyAck::CopyFrom(const MESExchangeKeyDeliverNotifyAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESExchangeKeyDeliverNotifyAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESExchangeKeyDeliverNotifyAck::IsInitialized() const {
  return true;
}

void MESExchangeKeyDeliverNotifyAck::Swap(MESExchangeKeyDeliverNotifyAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESExchangeKeyDeliverNotifyAck::InternalSwap(MESExchangeKeyDeliverNotifyAck* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MESExchangeKeyDeliverNotifyAck::GetTypeName() const {
  return "im.MESExchangeKeyDeliverNotifyAck";
}


// ===================================================================

void _InnerGrpNotify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int _InnerGrpNotify::kSGrpIdFieldNumber;
const int _InnerGrpNotify::kLsToIdFieldNumber;
const int _InnerGrpNotify::kSMsgIdFieldNumber;
const int _InnerGrpNotify::kMsgTimeFieldNumber;
const int _InnerGrpNotify::kSOprUserIdFieldNumber;
const int _InnerGrpNotify::kSMnpledUserIdFieldNumber;
const int _InnerGrpNotify::kSContentFieldNumber;
const int _InnerGrpNotify::kNotifyTypeFieldNumber;
const int _InnerGrpNotify::kErrcodeFieldNumber;
const int _InnerGrpNotify::kExtendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

_InnerGrpNotify::_InnerGrpNotify()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info__InnerGrpNotify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im._InnerGrpNotify)
}
_InnerGrpNotify::_InnerGrpNotify(const _InnerGrpNotify& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      lstoid_(from.lstoid_),
      smnpleduserid_(from.smnpleduserid_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sgrpid().size() > 0) {
    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  sopruserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sopruserid().size() > 0) {
    sopruserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sopruserid_);
  }
  scontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.scontent().size() > 0) {
    scontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scontent_);
  }
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extend().size() > 0) {
    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  ::memcpy(&msgtime_, &from.msgtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&errcode_) -
    reinterpret_cast<char*>(&msgtime_)) + sizeof(errcode_));
  // @@protoc_insertion_point(copy_constructor:im._InnerGrpNotify)
}

void _InnerGrpNotify::SharedCtor() {
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sopruserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&errcode_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(errcode_));
}

_InnerGrpNotify::~_InnerGrpNotify() {
  // @@protoc_insertion_point(destructor:im._InnerGrpNotify)
  SharedDtor();
}

void _InnerGrpNotify::SharedDtor() {
  sgrpid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sopruserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void _InnerGrpNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const _InnerGrpNotify& _InnerGrpNotify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info__InnerGrpNotify.base);
  return *internal_default_instance();
}


void _InnerGrpNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:im._InnerGrpNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lstoid_.Clear();
  smnpleduserid_.Clear();
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sopruserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&errcode_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(errcode_));
  _internal_metadata_.Clear();
}

bool _InnerGrpNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im._InnerGrpNotify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sGrpId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgrpid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgrpid().data(), static_cast<int>(this->sgrpid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._InnerGrpNotify.sGrpId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string lsToId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_lstoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->lstoid(this->lstoid_size() - 1).data(),
            static_cast<int>(this->lstoid(this->lstoid_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._InnerGrpNotify.lsToId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._InnerGrpNotify.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgTime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sOprUserId = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sopruserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sopruserid().data(), static_cast<int>(this->sopruserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._InnerGrpNotify.sOprUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string sMnpledUserId = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_smnpleduserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smnpleduserid(this->smnpleduserid_size() - 1).data(),
            static_cast<int>(this->smnpleduserid(this->smnpleduserid_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._InnerGrpNotify.sMnpledUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sContent = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scontent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scontent().data(), static_cast<int>(this->scontent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._InnerGrpNotify.sContent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.NotifyType notifyType = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_notifytype(static_cast< ::im::NotifyType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode errcode = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string extend = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extend()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extend().data(), static_cast<int>(this->extend().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._InnerGrpNotify.extend"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im._InnerGrpNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im._InnerGrpNotify)
  return false;
#undef DO_
}

void _InnerGrpNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im._InnerGrpNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sGrpId = 1;
  if (this->sgrpid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgrpid().data(), static_cast<int>(this->sgrpid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._InnerGrpNotify.sGrpId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sgrpid(), output);
  }

  // repeated string lsToId = 2;
  for (int i = 0, n = this->lstoid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lstoid(i).data(), static_cast<int>(this->lstoid(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._InnerGrpNotify.lsToId");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->lstoid(i), output);
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._InnerGrpNotify.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // uint64 msgTime = 4;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->msgtime(), output);
  }

  // string sOprUserId = 5;
  if (this->sopruserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sopruserid().data(), static_cast<int>(this->sopruserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._InnerGrpNotify.sOprUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->sopruserid(), output);
  }

  // repeated string sMnpledUserId = 6;
  for (int i = 0, n = this->smnpleduserid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smnpleduserid(i).data(), static_cast<int>(this->smnpleduserid(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._InnerGrpNotify.sMnpledUserId");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->smnpleduserid(i), output);
  }

  // string sContent = 7;
  if (this->scontent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scontent().data(), static_cast<int>(this->scontent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._InnerGrpNotify.sContent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->scontent(), output);
  }

  // .im.NotifyType notifyType = 8;
  if (this->notifytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->notifytype(), output);
  }

  // .im.ErrCode errcode = 9;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->errcode(), output);
  }

  // string extend = 10;
  if (this->extend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extend().data(), static_cast<int>(this->extend().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._InnerGrpNotify.extend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->extend(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im._InnerGrpNotify)
}

size_t _InnerGrpNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im._InnerGrpNotify)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated string lsToId = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->lstoid_size());
  for (int i = 0, n = this->lstoid_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->lstoid(i));
  }

  // repeated string sMnpledUserId = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->smnpleduserid_size());
  for (int i = 0, n = this->smnpleduserid_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->smnpleduserid(i));
  }

  // string sGrpId = 1;
  if (this->sgrpid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgrpid());
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // string sOprUserId = 5;
  if (this->sopruserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sopruserid());
  }

  // string sContent = 7;
  if (this->scontent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scontent());
  }

  // string extend = 10;
  if (this->extend().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extend());
  }

  // uint64 msgTime = 4;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // .im.NotifyType notifyType = 8;
  if (this->notifytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->notifytype());
  }

  // .im.ErrCode errcode = 9;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void _InnerGrpNotify::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const _InnerGrpNotify*>(&from));
}

void _InnerGrpNotify::MergeFrom(const _InnerGrpNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im._InnerGrpNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  lstoid_.MergeFrom(from.lstoid_);
  smnpleduserid_.MergeFrom(from.smnpleduserid_);
  if (from.sgrpid().size() > 0) {

    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.sopruserid().size() > 0) {

    sopruserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sopruserid_);
  }
  if (from.scontent().size() > 0) {

    scontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scontent_);
  }
  if (from.extend().size() > 0) {

    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.notifytype() != 0) {
    set_notifytype(from.notifytype());
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void _InnerGrpNotify::CopyFrom(const _InnerGrpNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im._InnerGrpNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool _InnerGrpNotify::IsInitialized() const {
  return true;
}

void _InnerGrpNotify::Swap(_InnerGrpNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void _InnerGrpNotify::InternalSwap(_InnerGrpNotify* other) {
  using std::swap;
  lstoid_.InternalSwap(CastToBase(&other->lstoid_));
  smnpleduserid_.InternalSwap(CastToBase(&other->smnpleduserid_));
  sgrpid_.Swap(&other->sgrpid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sopruserid_.Swap(&other->sopruserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  scontent_.Swap(&other->scontent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  extend_.Swap(&other->extend_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgtime_, other->msgtime_);
  swap(notifytype_, other->notifytype_);
  swap(errcode_, other->errcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string _InnerGrpNotify::GetTypeName() const {
  return "im._InnerGrpNotify";
}


// ===================================================================

void _MESGrpInterNotify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int _MESGrpInterNotify::kSGrpIdFieldNumber;
const int _MESGrpInterNotify::kSToIdFieldNumber;
const int _MESGrpInterNotify::kSMsgIdFieldNumber;
const int _MESGrpInterNotify::kMsgTimeFieldNumber;
const int _MESGrpInterNotify::kSOprUserIdFieldNumber;
const int _MESGrpInterNotify::kSMnpledUserIdFieldNumber;
const int _MESGrpInterNotify::kSContentFieldNumber;
const int _MESGrpInterNotify::kNotifyTypeFieldNumber;
const int _MESGrpInterNotify::kErrcodeFieldNumber;
const int _MESGrpInterNotify::kExtendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

_MESGrpInterNotify::_MESGrpInterNotify()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info__MESGrpInterNotify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im._MESGrpInterNotify)
}
_MESGrpInterNotify::_MESGrpInterNotify(const _MESGrpInterNotify& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      stoid_(from.stoid_),
      smnpleduserid_(from.smnpleduserid_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sgrpid().size() > 0) {
    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  sopruserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sopruserid().size() > 0) {
    sopruserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sopruserid_);
  }
  scontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.scontent().size() > 0) {
    scontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scontent_);
  }
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extend().size() > 0) {
    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  ::memcpy(&msgtime_, &from.msgtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&errcode_) -
    reinterpret_cast<char*>(&msgtime_)) + sizeof(errcode_));
  // @@protoc_insertion_point(copy_constructor:im._MESGrpInterNotify)
}

void _MESGrpInterNotify::SharedCtor() {
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sopruserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&errcode_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(errcode_));
}

_MESGrpInterNotify::~_MESGrpInterNotify() {
  // @@protoc_insertion_point(destructor:im._MESGrpInterNotify)
  SharedDtor();
}

void _MESGrpInterNotify::SharedDtor() {
  sgrpid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sopruserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void _MESGrpInterNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const _MESGrpInterNotify& _MESGrpInterNotify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info__MESGrpInterNotify.base);
  return *internal_default_instance();
}


void _MESGrpInterNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:im._MESGrpInterNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stoid_.Clear();
  smnpleduserid_.Clear();
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sopruserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&errcode_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(errcode_));
  _internal_metadata_.Clear();
}

bool _MESGrpInterNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im._MESGrpInterNotify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sGrpId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgrpid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgrpid().data(), static_cast<int>(this->sgrpid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._MESGrpInterNotify.sGrpId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string sToId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid(this->stoid_size() - 1).data(),
            static_cast<int>(this->stoid(this->stoid_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._MESGrpInterNotify.sToId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._MESGrpInterNotify.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgTime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sOprUserId = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sopruserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sopruserid().data(), static_cast<int>(this->sopruserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._MESGrpInterNotify.sOprUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string sMnpledUserId = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_smnpleduserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smnpleduserid(this->smnpleduserid_size() - 1).data(),
            static_cast<int>(this->smnpleduserid(this->smnpleduserid_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._MESGrpInterNotify.sMnpledUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sContent = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scontent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scontent().data(), static_cast<int>(this->scontent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._MESGrpInterNotify.sContent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.NotifyType notifyType = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_notifytype(static_cast< ::im::NotifyType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode errcode = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string extend = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extend()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extend().data(), static_cast<int>(this->extend().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._MESGrpInterNotify.extend"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im._MESGrpInterNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im._MESGrpInterNotify)
  return false;
#undef DO_
}

void _MESGrpInterNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im._MESGrpInterNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sGrpId = 1;
  if (this->sgrpid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgrpid().data(), static_cast<int>(this->sgrpid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._MESGrpInterNotify.sGrpId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sgrpid(), output);
  }

  // repeated string sToId = 2;
  for (int i = 0, n = this->stoid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid(i).data(), static_cast<int>(this->stoid(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._MESGrpInterNotify.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->stoid(i), output);
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._MESGrpInterNotify.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // uint64 msgTime = 4;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->msgtime(), output);
  }

  // string sOprUserId = 5;
  if (this->sopruserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sopruserid().data(), static_cast<int>(this->sopruserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._MESGrpInterNotify.sOprUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->sopruserid(), output);
  }

  // repeated string sMnpledUserId = 6;
  for (int i = 0, n = this->smnpleduserid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smnpleduserid(i).data(), static_cast<int>(this->smnpleduserid(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._MESGrpInterNotify.sMnpledUserId");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->smnpleduserid(i), output);
  }

  // string sContent = 7;
  if (this->scontent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scontent().data(), static_cast<int>(this->scontent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._MESGrpInterNotify.sContent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->scontent(), output);
  }

  // .im.NotifyType notifyType = 8;
  if (this->notifytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->notifytype(), output);
  }

  // .im.ErrCode errcode = 9;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->errcode(), output);
  }

  // string extend = 10;
  if (this->extend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extend().data(), static_cast<int>(this->extend().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._MESGrpInterNotify.extend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->extend(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im._MESGrpInterNotify)
}

size_t _MESGrpInterNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im._MESGrpInterNotify)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated string sToId = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->stoid_size());
  for (int i = 0, n = this->stoid_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->stoid(i));
  }

  // repeated string sMnpledUserId = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->smnpleduserid_size());
  for (int i = 0, n = this->smnpleduserid_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->smnpleduserid(i));
  }

  // string sGrpId = 1;
  if (this->sgrpid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgrpid());
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // string sOprUserId = 5;
  if (this->sopruserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sopruserid());
  }

  // string sContent = 7;
  if (this->scontent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scontent());
  }

  // string extend = 10;
  if (this->extend().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extend());
  }

  // uint64 msgTime = 4;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // .im.NotifyType notifyType = 8;
  if (this->notifytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->notifytype());
  }

  // .im.ErrCode errcode = 9;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void _MESGrpInterNotify::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const _MESGrpInterNotify*>(&from));
}

void _MESGrpInterNotify::MergeFrom(const _MESGrpInterNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im._MESGrpInterNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stoid_.MergeFrom(from.stoid_);
  smnpleduserid_.MergeFrom(from.smnpleduserid_);
  if (from.sgrpid().size() > 0) {

    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.sopruserid().size() > 0) {

    sopruserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sopruserid_);
  }
  if (from.scontent().size() > 0) {

    scontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scontent_);
  }
  if (from.extend().size() > 0) {

    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.notifytype() != 0) {
    set_notifytype(from.notifytype());
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void _MESGrpInterNotify::CopyFrom(const _MESGrpInterNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im._MESGrpInterNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool _MESGrpInterNotify::IsInitialized() const {
  return true;
}

void _MESGrpInterNotify::Swap(_MESGrpInterNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void _MESGrpInterNotify::InternalSwap(_MESGrpInterNotify* other) {
  using std::swap;
  stoid_.InternalSwap(CastToBase(&other->stoid_));
  smnpleduserid_.InternalSwap(CastToBase(&other->smnpleduserid_));
  sgrpid_.Swap(&other->sgrpid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sopruserid_.Swap(&other->sopruserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  scontent_.Swap(&other->scontent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  extend_.Swap(&other->extend_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgtime_, other->msgtime_);
  swap(notifytype_, other->notifytype_);
  swap(errcode_, other->errcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string _MESGrpInterNotify::GetTypeName() const {
  return "im._MESGrpInterNotify";
}


// ===================================================================

void _MESGrpInterNotifyAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int _MESGrpInterNotifyAck::kSUserIdFieldNumber;
const int _MESGrpInterNotifyAck::kSGrpIdFieldNumber;
const int _MESGrpInterNotifyAck::kSMsgIdFieldNumber;
const int _MESGrpInterNotifyAck::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

_MESGrpInterNotifyAck::_MESGrpInterNotifyAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info__MESGrpInterNotifyAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im._MESGrpInterNotifyAck)
}
_MESGrpInterNotifyAck::_MESGrpInterNotifyAck(const _MESGrpInterNotifyAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sgrpid().size() > 0) {
    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  errcode_ = from.errcode_;
  // @@protoc_insertion_point(copy_constructor:im._MESGrpInterNotifyAck)
}

void _MESGrpInterNotifyAck::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

_MESGrpInterNotifyAck::~_MESGrpInterNotifyAck() {
  // @@protoc_insertion_point(destructor:im._MESGrpInterNotifyAck)
  SharedDtor();
}

void _MESGrpInterNotifyAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void _MESGrpInterNotifyAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const _MESGrpInterNotifyAck& _MESGrpInterNotifyAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info__MESGrpInterNotifyAck.base);
  return *internal_default_instance();
}


void _MESGrpInterNotifyAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im._MESGrpInterNotifyAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
  _internal_metadata_.Clear();
}

bool _MESGrpInterNotifyAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im._MESGrpInterNotifyAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._MESGrpInterNotifyAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sGrpId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgrpid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgrpid().data(), static_cast<int>(this->sgrpid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._MESGrpInterNotifyAck.sGrpId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._MESGrpInterNotifyAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode errcode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im._MESGrpInterNotifyAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im._MESGrpInterNotifyAck)
  return false;
#undef DO_
}

void _MESGrpInterNotifyAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im._MESGrpInterNotifyAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._MESGrpInterNotifyAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string sGrpId = 2;
  if (this->sgrpid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgrpid().data(), static_cast<int>(this->sgrpid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._MESGrpInterNotifyAck.sGrpId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sgrpid(), output);
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._MESGrpInterNotifyAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // .im.ErrCode errcode = 4;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->errcode(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im._MESGrpInterNotifyAck)
}

size_t _MESGrpInterNotifyAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im._MESGrpInterNotifyAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sGrpId = 2;
  if (this->sgrpid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgrpid());
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // .im.ErrCode errcode = 4;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void _MESGrpInterNotifyAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const _MESGrpInterNotifyAck*>(&from));
}

void _MESGrpInterNotifyAck::MergeFrom(const _MESGrpInterNotifyAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im._MESGrpInterNotifyAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.sgrpid().size() > 0) {

    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void _MESGrpInterNotifyAck::CopyFrom(const _MESGrpInterNotifyAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im._MESGrpInterNotifyAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool _MESGrpInterNotifyAck::IsInitialized() const {
  return true;
}

void _MESGrpInterNotifyAck::Swap(_MESGrpInterNotifyAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void _MESGrpInterNotifyAck::InternalSwap(_MESGrpInterNotifyAck* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sgrpid_.Swap(&other->sgrpid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(errcode_, other->errcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string _MESGrpInterNotifyAck::GetTypeName() const {
  return "im._MESGrpInterNotifyAck";
}


// ===================================================================

void MESGrpNotify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESGrpNotify::kSGrpIdFieldNumber;
const int MESGrpNotify::kSToIdFieldNumber;
const int MESGrpNotify::kSMsgIdFieldNumber;
const int MESGrpNotify::kMsgTimeFieldNumber;
const int MESGrpNotify::kSOprUserIdFieldNumber;
const int MESGrpNotify::kSMnpledUserIdFieldNumber;
const int MESGrpNotify::kSContentFieldNumber;
const int MESGrpNotify::kNotifyTypeFieldNumber;
const int MESGrpNotify::kErrcodeFieldNumber;
const int MESGrpNotify::kExtendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESGrpNotify::MESGrpNotify()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info_MESGrpNotify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESGrpNotify)
}
MESGrpNotify::MESGrpNotify(const MESGrpNotify& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      smnpleduserid_(from.smnpleduserid_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sgrpid().size() > 0) {
    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stoid().size() > 0) {
    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  sopruserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sopruserid().size() > 0) {
    sopruserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sopruserid_);
  }
  scontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.scontent().size() > 0) {
    scontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scontent_);
  }
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extend().size() > 0) {
    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  ::memcpy(&msgtime_, &from.msgtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&errcode_) -
    reinterpret_cast<char*>(&msgtime_)) + sizeof(errcode_));
  // @@protoc_insertion_point(copy_constructor:im.MESGrpNotify)
}

void MESGrpNotify::SharedCtor() {
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sopruserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&errcode_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(errcode_));
}

MESGrpNotify::~MESGrpNotify() {
  // @@protoc_insertion_point(destructor:im.MESGrpNotify)
  SharedDtor();
}

void MESGrpNotify::SharedDtor() {
  sgrpid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sopruserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MESGrpNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MESGrpNotify& MESGrpNotify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info_MESGrpNotify.base);
  return *internal_default_instance();
}


void MESGrpNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESGrpNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  smnpleduserid_.Clear();
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sopruserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&errcode_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(errcode_));
  _internal_metadata_.Clear();
}

bool MESGrpNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.MESGrpNotify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sGrpId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgrpid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgrpid().data(), static_cast<int>(this->sgrpid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESGrpNotify.sGrpId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sToId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), static_cast<int>(this->stoid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESGrpNotify.sToId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESGrpNotify.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgTime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sOprUserId = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sopruserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sopruserid().data(), static_cast<int>(this->sopruserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESGrpNotify.sOprUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string sMnpledUserId = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_smnpleduserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smnpleduserid(this->smnpleduserid_size() - 1).data(),
            static_cast<int>(this->smnpleduserid(this->smnpleduserid_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESGrpNotify.sMnpledUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sContent = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scontent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scontent().data(), static_cast<int>(this->scontent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESGrpNotify.sContent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.NotifyType notifyType = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_notifytype(static_cast< ::im::NotifyType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode errcode = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string extend = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extend()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extend().data(), static_cast<int>(this->extend().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESGrpNotify.extend"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESGrpNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESGrpNotify)
  return false;
#undef DO_
}

void MESGrpNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESGrpNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sGrpId = 1;
  if (this->sgrpid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgrpid().data(), static_cast<int>(this->sgrpid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESGrpNotify.sGrpId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sgrpid(), output);
  }

  // string sToId = 2;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), static_cast<int>(this->stoid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESGrpNotify.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stoid(), output);
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESGrpNotify.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // uint64 msgTime = 4;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->msgtime(), output);
  }

  // string sOprUserId = 5;
  if (this->sopruserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sopruserid().data(), static_cast<int>(this->sopruserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESGrpNotify.sOprUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->sopruserid(), output);
  }

  // repeated string sMnpledUserId = 6;
  for (int i = 0, n = this->smnpleduserid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smnpleduserid(i).data(), static_cast<int>(this->smnpleduserid(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESGrpNotify.sMnpledUserId");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->smnpleduserid(i), output);
  }

  // string sContent = 7;
  if (this->scontent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scontent().data(), static_cast<int>(this->scontent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESGrpNotify.sContent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->scontent(), output);
  }

  // .im.NotifyType notifyType = 8;
  if (this->notifytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->notifytype(), output);
  }

  // .im.ErrCode errcode = 9;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->errcode(), output);
  }

  // string extend = 10;
  if (this->extend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extend().data(), static_cast<int>(this->extend().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESGrpNotify.extend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->extend(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.MESGrpNotify)
}

size_t MESGrpNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESGrpNotify)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated string sMnpledUserId = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->smnpleduserid_size());
  for (int i = 0, n = this->smnpleduserid_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->smnpleduserid(i));
  }

  // string sGrpId = 1;
  if (this->sgrpid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgrpid());
  }

  // string sToId = 2;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // string sOprUserId = 5;
  if (this->sopruserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sopruserid());
  }

  // string sContent = 7;
  if (this->scontent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scontent());
  }

  // string extend = 10;
  if (this->extend().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extend());
  }

  // uint64 msgTime = 4;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // .im.NotifyType notifyType = 8;
  if (this->notifytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->notifytype());
  }

  // .im.ErrCode errcode = 9;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MESGrpNotify::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESGrpNotify*>(&from));
}

void MESGrpNotify::MergeFrom(const MESGrpNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESGrpNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  smnpleduserid_.MergeFrom(from.smnpleduserid_);
  if (from.sgrpid().size() > 0) {

    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.sopruserid().size() > 0) {

    sopruserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sopruserid_);
  }
  if (from.scontent().size() > 0) {

    scontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scontent_);
  }
  if (from.extend().size() > 0) {

    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.notifytype() != 0) {
    set_notifytype(from.notifytype());
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void MESGrpNotify::CopyFrom(const MESGrpNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESGrpNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESGrpNotify::IsInitialized() const {
  return true;
}

void MESGrpNotify::Swap(MESGrpNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESGrpNotify::InternalSwap(MESGrpNotify* other) {
  using std::swap;
  smnpleduserid_.InternalSwap(CastToBase(&other->smnpleduserid_));
  sgrpid_.Swap(&other->sgrpid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  stoid_.Swap(&other->stoid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sopruserid_.Swap(&other->sopruserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  scontent_.Swap(&other->scontent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  extend_.Swap(&other->extend_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgtime_, other->msgtime_);
  swap(notifytype_, other->notifytype_);
  swap(errcode_, other->errcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MESGrpNotify::GetTypeName() const {
  return "im.MESGrpNotify";
}


// ===================================================================

void MESGrpNotifyDeliverAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESGrpNotifyDeliverAck::kSUserIdFieldNumber;
const int MESGrpNotifyDeliverAck::kSGrpIdFieldNumber;
const int MESGrpNotifyDeliverAck::kSMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESGrpNotifyDeliverAck::MESGrpNotifyDeliverAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info_MESGrpNotifyDeliverAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESGrpNotifyDeliverAck)
}
MESGrpNotifyDeliverAck::MESGrpNotifyDeliverAck(const MESGrpNotifyDeliverAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sgrpid().size() > 0) {
    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  // @@protoc_insertion_point(copy_constructor:im.MESGrpNotifyDeliverAck)
}

void MESGrpNotifyDeliverAck::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MESGrpNotifyDeliverAck::~MESGrpNotifyDeliverAck() {
  // @@protoc_insertion_point(destructor:im.MESGrpNotifyDeliverAck)
  SharedDtor();
}

void MESGrpNotifyDeliverAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MESGrpNotifyDeliverAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MESGrpNotifyDeliverAck& MESGrpNotifyDeliverAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info_MESGrpNotifyDeliverAck.base);
  return *internal_default_instance();
}


void MESGrpNotifyDeliverAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESGrpNotifyDeliverAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool MESGrpNotifyDeliverAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.MESGrpNotifyDeliverAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESGrpNotifyDeliverAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sGrpId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgrpid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgrpid().data(), static_cast<int>(this->sgrpid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESGrpNotifyDeliverAck.sGrpId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESGrpNotifyDeliverAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESGrpNotifyDeliverAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESGrpNotifyDeliverAck)
  return false;
#undef DO_
}

void MESGrpNotifyDeliverAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESGrpNotifyDeliverAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESGrpNotifyDeliverAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string sGrpId = 2;
  if (this->sgrpid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgrpid().data(), static_cast<int>(this->sgrpid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESGrpNotifyDeliverAck.sGrpId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sgrpid(), output);
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESGrpNotifyDeliverAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.MESGrpNotifyDeliverAck)
}

size_t MESGrpNotifyDeliverAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESGrpNotifyDeliverAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sGrpId = 2;
  if (this->sgrpid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgrpid());
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MESGrpNotifyDeliverAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESGrpNotifyDeliverAck*>(&from));
}

void MESGrpNotifyDeliverAck::MergeFrom(const MESGrpNotifyDeliverAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESGrpNotifyDeliverAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.sgrpid().size() > 0) {

    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
}

void MESGrpNotifyDeliverAck::CopyFrom(const MESGrpNotifyDeliverAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESGrpNotifyDeliverAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESGrpNotifyDeliverAck::IsInitialized() const {
  return true;
}

void MESGrpNotifyDeliverAck::Swap(MESGrpNotifyDeliverAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESGrpNotifyDeliverAck::InternalSwap(MESGrpNotifyDeliverAck* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sgrpid_.Swap(&other->sgrpid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MESGrpNotifyDeliverAck::GetTypeName() const {
  return "im.MESGrpNotifyDeliverAck";
}


// ===================================================================

void _MESGrpInterChat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int _MESGrpInterChat::kSFromIdFieldNumber;
const int _MESGrpInterChat::kSGrpIdFieldNumber;
const int _MESGrpInterChat::kSToIdFieldNumber;
const int _MESGrpInterChat::kNNotifyCountFieldNumber;
const int _MESGrpInterChat::kSMsgIdFieldNumber;
const int _MESGrpInterChat::kMsgTypeFieldNumber;
const int _MESGrpInterChat::kMsgTimeFieldNumber;
const int _MESGrpInterChat::kEncryptFieldNumber;
const int _MESGrpInterChat::kSContentFieldNumber;
const int _MESGrpInterChat::kSNotifyUsersFieldNumber;
const int _MESGrpInterChat::kExtendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

_MESGrpInterChat::_MESGrpInterChat()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info__MESGrpInterChat.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im._MESGrpInterChat)
}
_MESGrpInterChat::_MESGrpInterChat(const _MESGrpInterChat& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      stoid_(from.stoid_),
      snotifyusers_(from.snotifyusers_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sfromid().size() > 0) {
    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sgrpid().size() > 0) {
    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  scontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.scontent().size() > 0) {
    scontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scontent_);
  }
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extend().size() > 0) {
    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  ::memcpy(&nnotifycount_, &from.nnotifycount_,
    static_cast<size_t>(reinterpret_cast<char*>(&encrypt_) -
    reinterpret_cast<char*>(&nnotifycount_)) + sizeof(encrypt_));
  // @@protoc_insertion_point(copy_constructor:im._MESGrpInterChat)
}

void _MESGrpInterChat::SharedCtor() {
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nnotifycount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&encrypt_) -
      reinterpret_cast<char*>(&nnotifycount_)) + sizeof(encrypt_));
}

_MESGrpInterChat::~_MESGrpInterChat() {
  // @@protoc_insertion_point(destructor:im._MESGrpInterChat)
  SharedDtor();
}

void _MESGrpInterChat::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void _MESGrpInterChat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const _MESGrpInterChat& _MESGrpInterChat::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info__MESGrpInterChat.base);
  return *internal_default_instance();
}


void _MESGrpInterChat::Clear() {
// @@protoc_insertion_point(message_clear_start:im._MESGrpInterChat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stoid_.Clear();
  snotifyusers_.Clear();
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nnotifycount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&encrypt_) -
      reinterpret_cast<char*>(&nnotifycount_)) + sizeof(encrypt_));
  _internal_metadata_.Clear();
}

bool _MESGrpInterChat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im._MESGrpInterChat)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sFromId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), static_cast<int>(this->sfromid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._MESGrpInterChat.sFromId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sGrpId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgrpid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgrpid().data(), static_cast<int>(this->sgrpid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._MESGrpInterChat.sGrpId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string sToId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid(this->stoid_size() - 1).data(),
            static_cast<int>(this->stoid(this->stoid_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._MESGrpInterChat.sToId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nNotifyCount = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nnotifycount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._MESGrpInterChat.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 msgType = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgTime = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 encrypt = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &encrypt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sContent = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scontent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scontent().data(), static_cast<int>(this->scontent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._MESGrpInterChat.sContent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string sNotifyUsers = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_snotifyusers()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->snotifyusers(this->snotifyusers_size() - 1).data(),
            static_cast<int>(this->snotifyusers(this->snotifyusers_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._MESGrpInterChat.sNotifyUsers"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string extend = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extend()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extend().data(), static_cast<int>(this->extend().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._MESGrpInterChat.extend"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im._MESGrpInterChat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im._MESGrpInterChat)
  return false;
#undef DO_
}

void _MESGrpInterChat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im._MESGrpInterChat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), static_cast<int>(this->sfromid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._MESGrpInterChat.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // string sGrpId = 2;
  if (this->sgrpid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgrpid().data(), static_cast<int>(this->sgrpid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._MESGrpInterChat.sGrpId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sgrpid(), output);
  }

  // repeated string sToId = 3;
  for (int i = 0, n = this->stoid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid(i).data(), static_cast<int>(this->stoid(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._MESGrpInterChat.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->stoid(i), output);
  }

  // uint32 nNotifyCount = 4;
  if (this->nnotifycount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->nnotifycount(), output);
  }

  // string sMsgId = 5;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._MESGrpInterChat.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->smsgid(), output);
  }

  // uint32 msgType = 6;
  if (this->msgtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->msgtype(), output);
  }

  // uint64 msgTime = 7;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->msgtime(), output);
  }

  // uint32 encrypt = 8;
  if (this->encrypt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->encrypt(), output);
  }

  // string sContent = 9;
  if (this->scontent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scontent().data(), static_cast<int>(this->scontent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._MESGrpInterChat.sContent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->scontent(), output);
  }

  // repeated string sNotifyUsers = 10;
  for (int i = 0, n = this->snotifyusers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->snotifyusers(i).data(), static_cast<int>(this->snotifyusers(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._MESGrpInterChat.sNotifyUsers");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->snotifyusers(i), output);
  }

  // string extend = 11;
  if (this->extend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extend().data(), static_cast<int>(this->extend().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._MESGrpInterChat.extend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->extend(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im._MESGrpInterChat)
}

size_t _MESGrpInterChat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im._MESGrpInterChat)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated string sToId = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->stoid_size());
  for (int i = 0, n = this->stoid_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->stoid(i));
  }

  // repeated string sNotifyUsers = 10;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->snotifyusers_size());
  for (int i = 0, n = this->snotifyusers_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->snotifyusers(i));
  }

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // string sGrpId = 2;
  if (this->sgrpid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgrpid());
  }

  // string sMsgId = 5;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // string sContent = 9;
  if (this->scontent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scontent());
  }

  // string extend = 11;
  if (this->extend().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extend());
  }

  // uint32 nNotifyCount = 4;
  if (this->nnotifycount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nnotifycount());
  }

  // uint32 msgType = 6;
  if (this->msgtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgtype());
  }

  // uint64 msgTime = 7;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // uint32 encrypt = 8;
  if (this->encrypt() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->encrypt());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void _MESGrpInterChat::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const _MESGrpInterChat*>(&from));
}

void _MESGrpInterChat::MergeFrom(const _MESGrpInterChat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im._MESGrpInterChat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stoid_.MergeFrom(from.stoid_);
  snotifyusers_.MergeFrom(from.snotifyusers_);
  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.sgrpid().size() > 0) {

    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.scontent().size() > 0) {

    scontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scontent_);
  }
  if (from.extend().size() > 0) {

    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  if (from.nnotifycount() != 0) {
    set_nnotifycount(from.nnotifycount());
  }
  if (from.msgtype() != 0) {
    set_msgtype(from.msgtype());
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.encrypt() != 0) {
    set_encrypt(from.encrypt());
  }
}

void _MESGrpInterChat::CopyFrom(const _MESGrpInterChat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im._MESGrpInterChat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool _MESGrpInterChat::IsInitialized() const {
  return true;
}

void _MESGrpInterChat::Swap(_MESGrpInterChat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void _MESGrpInterChat::InternalSwap(_MESGrpInterChat* other) {
  using std::swap;
  stoid_.InternalSwap(CastToBase(&other->stoid_));
  snotifyusers_.InternalSwap(CastToBase(&other->snotifyusers_));
  sfromid_.Swap(&other->sfromid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sgrpid_.Swap(&other->sgrpid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  scontent_.Swap(&other->scontent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  extend_.Swap(&other->extend_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(nnotifycount_, other->nnotifycount_);
  swap(msgtype_, other->msgtype_);
  swap(msgtime_, other->msgtime_);
  swap(encrypt_, other->encrypt_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string _MESGrpInterChat::GetTypeName() const {
  return "im._MESGrpInterChat";
}


// ===================================================================

void _MESGrpInterChatAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int _MESGrpInterChatAck::kSUserIdFieldNumber;
const int _MESGrpInterChatAck::kSGrpIdFieldNumber;
const int _MESGrpInterChatAck::kSMsgIdFieldNumber;
const int _MESGrpInterChatAck::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

_MESGrpInterChatAck::_MESGrpInterChatAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info__MESGrpInterChatAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im._MESGrpInterChatAck)
}
_MESGrpInterChatAck::_MESGrpInterChatAck(const _MESGrpInterChatAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sgrpid().size() > 0) {
    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  errcode_ = from.errcode_;
  // @@protoc_insertion_point(copy_constructor:im._MESGrpInterChatAck)
}

void _MESGrpInterChatAck::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

_MESGrpInterChatAck::~_MESGrpInterChatAck() {
  // @@protoc_insertion_point(destructor:im._MESGrpInterChatAck)
  SharedDtor();
}

void _MESGrpInterChatAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void _MESGrpInterChatAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const _MESGrpInterChatAck& _MESGrpInterChatAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info__MESGrpInterChatAck.base);
  return *internal_default_instance();
}


void _MESGrpInterChatAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im._MESGrpInterChatAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
  _internal_metadata_.Clear();
}

bool _MESGrpInterChatAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im._MESGrpInterChatAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._MESGrpInterChatAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sGrpId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgrpid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgrpid().data(), static_cast<int>(this->sgrpid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._MESGrpInterChatAck.sGrpId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._MESGrpInterChatAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode errcode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im._MESGrpInterChatAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im._MESGrpInterChatAck)
  return false;
#undef DO_
}

void _MESGrpInterChatAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im._MESGrpInterChatAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._MESGrpInterChatAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string sGrpId = 2;
  if (this->sgrpid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgrpid().data(), static_cast<int>(this->sgrpid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._MESGrpInterChatAck.sGrpId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sgrpid(), output);
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._MESGrpInterChatAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // .im.ErrCode errcode = 4;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->errcode(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im._MESGrpInterChatAck)
}

size_t _MESGrpInterChatAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im._MESGrpInterChatAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sGrpId = 2;
  if (this->sgrpid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgrpid());
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // .im.ErrCode errcode = 4;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void _MESGrpInterChatAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const _MESGrpInterChatAck*>(&from));
}

void _MESGrpInterChatAck::MergeFrom(const _MESGrpInterChatAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im._MESGrpInterChatAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.sgrpid().size() > 0) {

    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void _MESGrpInterChatAck::CopyFrom(const _MESGrpInterChatAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im._MESGrpInterChatAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool _MESGrpInterChatAck::IsInitialized() const {
  return true;
}

void _MESGrpInterChatAck::Swap(_MESGrpInterChatAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void _MESGrpInterChatAck::InternalSwap(_MESGrpInterChatAck* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sgrpid_.Swap(&other->sgrpid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(errcode_, other->errcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string _MESGrpInterChatAck::GetTypeName() const {
  return "im._MESGrpInterChatAck";
}


// ===================================================================

void MESGrpChatDeliveredAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESGrpChatDeliveredAck::kSFromIdFieldNumber;
const int MESGrpChatDeliveredAck::kSGrpIdFieldNumber;
const int MESGrpChatDeliveredAck::kSMsgIdFieldNumber;
const int MESGrpChatDeliveredAck::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESGrpChatDeliveredAck::MESGrpChatDeliveredAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info_MESGrpChatDeliveredAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESGrpChatDeliveredAck)
}
MESGrpChatDeliveredAck::MESGrpChatDeliveredAck(const MESGrpChatDeliveredAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sfromid().size() > 0) {
    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sgrpid().size() > 0) {
    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  errcode_ = from.errcode_;
  // @@protoc_insertion_point(copy_constructor:im.MESGrpChatDeliveredAck)
}

void MESGrpChatDeliveredAck::SharedCtor() {
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

MESGrpChatDeliveredAck::~MESGrpChatDeliveredAck() {
  // @@protoc_insertion_point(destructor:im.MESGrpChatDeliveredAck)
  SharedDtor();
}

void MESGrpChatDeliveredAck::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MESGrpChatDeliveredAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MESGrpChatDeliveredAck& MESGrpChatDeliveredAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info_MESGrpChatDeliveredAck.base);
  return *internal_default_instance();
}


void MESGrpChatDeliveredAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESGrpChatDeliveredAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
  _internal_metadata_.Clear();
}

bool MESGrpChatDeliveredAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.MESGrpChatDeliveredAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sFromId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), static_cast<int>(this->sfromid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESGrpChatDeliveredAck.sFromId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sGrpId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgrpid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgrpid().data(), static_cast<int>(this->sgrpid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESGrpChatDeliveredAck.sGrpId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESGrpChatDeliveredAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode errcode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESGrpChatDeliveredAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESGrpChatDeliveredAck)
  return false;
#undef DO_
}

void MESGrpChatDeliveredAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESGrpChatDeliveredAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), static_cast<int>(this->sfromid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESGrpChatDeliveredAck.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // string sGrpId = 2;
  if (this->sgrpid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgrpid().data(), static_cast<int>(this->sgrpid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESGrpChatDeliveredAck.sGrpId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sgrpid(), output);
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESGrpChatDeliveredAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // .im.ErrCode errcode = 4;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->errcode(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.MESGrpChatDeliveredAck)
}

size_t MESGrpChatDeliveredAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESGrpChatDeliveredAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // string sGrpId = 2;
  if (this->sgrpid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgrpid());
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // .im.ErrCode errcode = 4;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MESGrpChatDeliveredAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESGrpChatDeliveredAck*>(&from));
}

void MESGrpChatDeliveredAck::MergeFrom(const MESGrpChatDeliveredAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESGrpChatDeliveredAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.sgrpid().size() > 0) {

    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void MESGrpChatDeliveredAck::CopyFrom(const MESGrpChatDeliveredAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESGrpChatDeliveredAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESGrpChatDeliveredAck::IsInitialized() const {
  return true;
}

void MESGrpChatDeliveredAck::Swap(MESGrpChatDeliveredAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESGrpChatDeliveredAck::InternalSwap(MESGrpChatDeliveredAck* other) {
  using std::swap;
  sfromid_.Swap(&other->sfromid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sgrpid_.Swap(&other->sgrpid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(errcode_, other->errcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MESGrpChatDeliveredAck::GetTypeName() const {
  return "im.MESGrpChatDeliveredAck";
}


// ===================================================================

void MESGrpChat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESGrpChat::kSFromIdFieldNumber;
const int MESGrpChat::kSGrpIdFieldNumber;
const int MESGrpChat::kSToIdFieldNumber;
const int MESGrpChat::kNNotifyCountFieldNumber;
const int MESGrpChat::kSMsgIdFieldNumber;
const int MESGrpChat::kMsgTypeFieldNumber;
const int MESGrpChat::kMsgTimeFieldNumber;
const int MESGrpChat::kEncryptFieldNumber;
const int MESGrpChat::kSContentFieldNumber;
const int MESGrpChat::kSNotifyUsersFieldNumber;
const int MESGrpChat::kExtendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESGrpChat::MESGrpChat()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info_MESGrpChat.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESGrpChat)
}
MESGrpChat::MESGrpChat(const MESGrpChat& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      snotifyusers_(from.snotifyusers_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sfromid().size() > 0) {
    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sgrpid().size() > 0) {
    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stoid().size() > 0) {
    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  scontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.scontent().size() > 0) {
    scontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scontent_);
  }
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extend().size() > 0) {
    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  ::memcpy(&nnotifycount_, &from.nnotifycount_,
    static_cast<size_t>(reinterpret_cast<char*>(&encrypt_) -
    reinterpret_cast<char*>(&nnotifycount_)) + sizeof(encrypt_));
  // @@protoc_insertion_point(copy_constructor:im.MESGrpChat)
}

void MESGrpChat::SharedCtor() {
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nnotifycount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&encrypt_) -
      reinterpret_cast<char*>(&nnotifycount_)) + sizeof(encrypt_));
}

MESGrpChat::~MESGrpChat() {
  // @@protoc_insertion_point(destructor:im.MESGrpChat)
  SharedDtor();
}

void MESGrpChat::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MESGrpChat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MESGrpChat& MESGrpChat::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info_MESGrpChat.base);
  return *internal_default_instance();
}


void MESGrpChat::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESGrpChat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  snotifyusers_.Clear();
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nnotifycount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&encrypt_) -
      reinterpret_cast<char*>(&nnotifycount_)) + sizeof(encrypt_));
  _internal_metadata_.Clear();
}

bool MESGrpChat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.MESGrpChat)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sFromId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), static_cast<int>(this->sfromid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESGrpChat.sFromId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sGrpId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgrpid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgrpid().data(), static_cast<int>(this->sgrpid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESGrpChat.sGrpId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sToId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), static_cast<int>(this->stoid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESGrpChat.sToId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nNotifyCount = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nnotifycount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESGrpChat.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 msgType = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgTime = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 encrypt = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &encrypt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sContent = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scontent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scontent().data(), static_cast<int>(this->scontent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESGrpChat.sContent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string sNotifyUsers = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_snotifyusers()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->snotifyusers(this->snotifyusers_size() - 1).data(),
            static_cast<int>(this->snotifyusers(this->snotifyusers_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESGrpChat.sNotifyUsers"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string extend = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extend()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extend().data(), static_cast<int>(this->extend().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESGrpChat.extend"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESGrpChat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESGrpChat)
  return false;
#undef DO_
}

void MESGrpChat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESGrpChat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), static_cast<int>(this->sfromid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESGrpChat.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // string sGrpId = 2;
  if (this->sgrpid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgrpid().data(), static_cast<int>(this->sgrpid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESGrpChat.sGrpId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sgrpid(), output);
  }

  // string sToId = 3;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), static_cast<int>(this->stoid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESGrpChat.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->stoid(), output);
  }

  // uint32 nNotifyCount = 4;
  if (this->nnotifycount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->nnotifycount(), output);
  }

  // string sMsgId = 5;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESGrpChat.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->smsgid(), output);
  }

  // uint32 msgType = 6;
  if (this->msgtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->msgtype(), output);
  }

  // uint64 msgTime = 7;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->msgtime(), output);
  }

  // uint32 encrypt = 8;
  if (this->encrypt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->encrypt(), output);
  }

  // string sContent = 9;
  if (this->scontent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scontent().data(), static_cast<int>(this->scontent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESGrpChat.sContent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->scontent(), output);
  }

  // repeated string sNotifyUsers = 10;
  for (int i = 0, n = this->snotifyusers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->snotifyusers(i).data(), static_cast<int>(this->snotifyusers(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESGrpChat.sNotifyUsers");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->snotifyusers(i), output);
  }

  // string extend = 11;
  if (this->extend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extend().data(), static_cast<int>(this->extend().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESGrpChat.extend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->extend(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.MESGrpChat)
}

size_t MESGrpChat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESGrpChat)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated string sNotifyUsers = 10;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->snotifyusers_size());
  for (int i = 0, n = this->snotifyusers_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->snotifyusers(i));
  }

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // string sGrpId = 2;
  if (this->sgrpid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgrpid());
  }

  // string sToId = 3;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // string sMsgId = 5;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // string sContent = 9;
  if (this->scontent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scontent());
  }

  // string extend = 11;
  if (this->extend().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extend());
  }

  // uint32 nNotifyCount = 4;
  if (this->nnotifycount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nnotifycount());
  }

  // uint32 msgType = 6;
  if (this->msgtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgtype());
  }

  // uint64 msgTime = 7;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // uint32 encrypt = 8;
  if (this->encrypt() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->encrypt());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MESGrpChat::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESGrpChat*>(&from));
}

void MESGrpChat::MergeFrom(const MESGrpChat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESGrpChat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  snotifyusers_.MergeFrom(from.snotifyusers_);
  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.sgrpid().size() > 0) {

    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.scontent().size() > 0) {

    scontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scontent_);
  }
  if (from.extend().size() > 0) {

    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  if (from.nnotifycount() != 0) {
    set_nnotifycount(from.nnotifycount());
  }
  if (from.msgtype() != 0) {
    set_msgtype(from.msgtype());
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.encrypt() != 0) {
    set_encrypt(from.encrypt());
  }
}

void MESGrpChat::CopyFrom(const MESGrpChat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESGrpChat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESGrpChat::IsInitialized() const {
  return true;
}

void MESGrpChat::Swap(MESGrpChat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESGrpChat::InternalSwap(MESGrpChat* other) {
  using std::swap;
  snotifyusers_.InternalSwap(CastToBase(&other->snotifyusers_));
  sfromid_.Swap(&other->sfromid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sgrpid_.Swap(&other->sgrpid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  stoid_.Swap(&other->stoid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  scontent_.Swap(&other->scontent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  extend_.Swap(&other->extend_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(nnotifycount_, other->nnotifycount_);
  swap(msgtype_, other->msgtype_);
  swap(msgtime_, other->msgtime_);
  swap(encrypt_, other->encrypt_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MESGrpChat::GetTypeName() const {
  return "im.MESGrpChat";
}


// ===================================================================

void _MESGrpInterChatCancel::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int _MESGrpInterChatCancel::kSFromIdFieldNumber;
const int _MESGrpInterChatCancel::kSGrpIdFieldNumber;
const int _MESGrpInterChatCancel::kSToIdFieldNumber;
const int _MESGrpInterChatCancel::kSMsgIdFieldNumber;
const int _MESGrpInterChatCancel::kMsgTimeFieldNumber;
const int _MESGrpInterChatCancel::kCancelTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

_MESGrpInterChatCancel::_MESGrpInterChatCancel()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info__MESGrpInterChatCancel.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im._MESGrpInterChatCancel)
}
_MESGrpInterChatCancel::_MESGrpInterChatCancel(const _MESGrpInterChatCancel& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      stoid_(from.stoid_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sfromid().size() > 0) {
    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sgrpid().size() > 0) {
    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  ::memcpy(&msgtime_, &from.msgtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&canceltime_) -
    reinterpret_cast<char*>(&msgtime_)) + sizeof(canceltime_));
  // @@protoc_insertion_point(copy_constructor:im._MESGrpInterChatCancel)
}

void _MESGrpInterChatCancel::SharedCtor() {
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&canceltime_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(canceltime_));
}

_MESGrpInterChatCancel::~_MESGrpInterChatCancel() {
  // @@protoc_insertion_point(destructor:im._MESGrpInterChatCancel)
  SharedDtor();
}

void _MESGrpInterChatCancel::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void _MESGrpInterChatCancel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const _MESGrpInterChatCancel& _MESGrpInterChatCancel::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info__MESGrpInterChatCancel.base);
  return *internal_default_instance();
}


void _MESGrpInterChatCancel::Clear() {
// @@protoc_insertion_point(message_clear_start:im._MESGrpInterChatCancel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stoid_.Clear();
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&canceltime_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(canceltime_));
  _internal_metadata_.Clear();
}

bool _MESGrpInterChatCancel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im._MESGrpInterChatCancel)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sFromId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), static_cast<int>(this->sfromid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._MESGrpInterChatCancel.sFromId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sGrpId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgrpid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgrpid().data(), static_cast<int>(this->sgrpid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._MESGrpInterChatCancel.sGrpId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string sToId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid(this->stoid_size() - 1).data(),
            static_cast<int>(this->stoid(this->stoid_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._MESGrpInterChatCancel.sToId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._MESGrpInterChatCancel.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgTime = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 cancelTime = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &canceltime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im._MESGrpInterChatCancel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im._MESGrpInterChatCancel)
  return false;
#undef DO_
}

void _MESGrpInterChatCancel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im._MESGrpInterChatCancel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), static_cast<int>(this->sfromid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._MESGrpInterChatCancel.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // string sGrpId = 2;
  if (this->sgrpid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgrpid().data(), static_cast<int>(this->sgrpid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._MESGrpInterChatCancel.sGrpId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sgrpid(), output);
  }

  // repeated string sToId = 3;
  for (int i = 0, n = this->stoid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid(i).data(), static_cast<int>(this->stoid(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._MESGrpInterChatCancel.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->stoid(i), output);
  }

  // string sMsgId = 4;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._MESGrpInterChatCancel.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->smsgid(), output);
  }

  // uint64 msgTime = 5;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->msgtime(), output);
  }

  // uint64 cancelTime = 6;
  if (this->canceltime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->canceltime(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im._MESGrpInterChatCancel)
}

size_t _MESGrpInterChatCancel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im._MESGrpInterChatCancel)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated string sToId = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->stoid_size());
  for (int i = 0, n = this->stoid_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->stoid(i));
  }

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // string sGrpId = 2;
  if (this->sgrpid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgrpid());
  }

  // string sMsgId = 4;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // uint64 msgTime = 5;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // uint64 cancelTime = 6;
  if (this->canceltime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->canceltime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void _MESGrpInterChatCancel::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const _MESGrpInterChatCancel*>(&from));
}

void _MESGrpInterChatCancel::MergeFrom(const _MESGrpInterChatCancel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im._MESGrpInterChatCancel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stoid_.MergeFrom(from.stoid_);
  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.sgrpid().size() > 0) {

    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.canceltime() != 0) {
    set_canceltime(from.canceltime());
  }
}

void _MESGrpInterChatCancel::CopyFrom(const _MESGrpInterChatCancel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im._MESGrpInterChatCancel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool _MESGrpInterChatCancel::IsInitialized() const {
  return true;
}

void _MESGrpInterChatCancel::Swap(_MESGrpInterChatCancel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void _MESGrpInterChatCancel::InternalSwap(_MESGrpInterChatCancel* other) {
  using std::swap;
  stoid_.InternalSwap(CastToBase(&other->stoid_));
  sfromid_.Swap(&other->sfromid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sgrpid_.Swap(&other->sgrpid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgtime_, other->msgtime_);
  swap(canceltime_, other->canceltime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string _MESGrpInterChatCancel::GetTypeName() const {
  return "im._MESGrpInterChatCancel";
}


// ===================================================================

void _MESGrpInterChatCancelAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int _MESGrpInterChatCancelAck::kSUserIdFieldNumber;
const int _MESGrpInterChatCancelAck::kSGrpIdFieldNumber;
const int _MESGrpInterChatCancelAck::kSMsgIdFieldNumber;
const int _MESGrpInterChatCancelAck::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

_MESGrpInterChatCancelAck::_MESGrpInterChatCancelAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info__MESGrpInterChatCancelAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im._MESGrpInterChatCancelAck)
}
_MESGrpInterChatCancelAck::_MESGrpInterChatCancelAck(const _MESGrpInterChatCancelAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sgrpid().size() > 0) {
    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  errcode_ = from.errcode_;
  // @@protoc_insertion_point(copy_constructor:im._MESGrpInterChatCancelAck)
}

void _MESGrpInterChatCancelAck::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

_MESGrpInterChatCancelAck::~_MESGrpInterChatCancelAck() {
  // @@protoc_insertion_point(destructor:im._MESGrpInterChatCancelAck)
  SharedDtor();
}

void _MESGrpInterChatCancelAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void _MESGrpInterChatCancelAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const _MESGrpInterChatCancelAck& _MESGrpInterChatCancelAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info__MESGrpInterChatCancelAck.base);
  return *internal_default_instance();
}


void _MESGrpInterChatCancelAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im._MESGrpInterChatCancelAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
  _internal_metadata_.Clear();
}

bool _MESGrpInterChatCancelAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im._MESGrpInterChatCancelAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._MESGrpInterChatCancelAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sGrpId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgrpid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgrpid().data(), static_cast<int>(this->sgrpid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._MESGrpInterChatCancelAck.sGrpId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._MESGrpInterChatCancelAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode errcode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im._MESGrpInterChatCancelAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im._MESGrpInterChatCancelAck)
  return false;
#undef DO_
}

void _MESGrpInterChatCancelAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im._MESGrpInterChatCancelAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._MESGrpInterChatCancelAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string sGrpId = 2;
  if (this->sgrpid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgrpid().data(), static_cast<int>(this->sgrpid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._MESGrpInterChatCancelAck.sGrpId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sgrpid(), output);
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._MESGrpInterChatCancelAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // .im.ErrCode errcode = 4;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->errcode(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im._MESGrpInterChatCancelAck)
}

size_t _MESGrpInterChatCancelAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im._MESGrpInterChatCancelAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sGrpId = 2;
  if (this->sgrpid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgrpid());
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // .im.ErrCode errcode = 4;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void _MESGrpInterChatCancelAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const _MESGrpInterChatCancelAck*>(&from));
}

void _MESGrpInterChatCancelAck::MergeFrom(const _MESGrpInterChatCancelAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im._MESGrpInterChatCancelAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.sgrpid().size() > 0) {

    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void _MESGrpInterChatCancelAck::CopyFrom(const _MESGrpInterChatCancelAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im._MESGrpInterChatCancelAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool _MESGrpInterChatCancelAck::IsInitialized() const {
  return true;
}

void _MESGrpInterChatCancelAck::Swap(_MESGrpInterChatCancelAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void _MESGrpInterChatCancelAck::InternalSwap(_MESGrpInterChatCancelAck* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sgrpid_.Swap(&other->sgrpid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(errcode_, other->errcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string _MESGrpInterChatCancelAck::GetTypeName() const {
  return "im._MESGrpInterChatCancelAck";
}


// ===================================================================

void MESChatCancel::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESChatCancel::kSFromIdFieldNumber;
const int MESChatCancel::kSToIdFieldNumber;
const int MESChatCancel::kNCancelTypeFieldNumber;
const int MESChatCancel::kSGroupIdFieldNumber;
const int MESChatCancel::kSMsgIdFieldNumber;
const int MESChatCancel::kMsgTimeFieldNumber;
const int MESChatCancel::kCancelTimeFieldNumber;
const int MESChatCancel::kSendStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESChatCancel::MESChatCancel()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info_MESChatCancel.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESChatCancel)
}
MESChatCancel::MESChatCancel(const MESChatCancel& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sfromid().size() > 0) {
    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stoid().size() > 0) {
    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  sgroupid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sgroupid().size() > 0) {
    sgroupid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgroupid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  ::memcpy(&ncanceltype_, &from.ncanceltype_,
    static_cast<size_t>(reinterpret_cast<char*>(&canceltime_) -
    reinterpret_cast<char*>(&ncanceltype_)) + sizeof(canceltime_));
  // @@protoc_insertion_point(copy_constructor:im.MESChatCancel)
}

void MESChatCancel::SharedCtor() {
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ncanceltype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&canceltime_) -
      reinterpret_cast<char*>(&ncanceltype_)) + sizeof(canceltime_));
}

MESChatCancel::~MESChatCancel() {
  // @@protoc_insertion_point(destructor:im.MESChatCancel)
  SharedDtor();
}

void MESChatCancel::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MESChatCancel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MESChatCancel& MESChatCancel::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info_MESChatCancel.base);
  return *internal_default_instance();
}


void MESChatCancel::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESChatCancel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ncanceltype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&canceltime_) -
      reinterpret_cast<char*>(&ncanceltype_)) + sizeof(canceltime_));
  _internal_metadata_.Clear();
}

bool MESChatCancel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.MESChatCancel)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sFromId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), static_cast<int>(this->sfromid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESChatCancel.sFromId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sToId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), static_cast<int>(this->stoid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESChatCancel.sToId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nCancelType = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ncanceltype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sGroupId = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgroupid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgroupid().data(), static_cast<int>(this->sgroupid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESChatCancel.sGroupId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESChatCancel.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgTime = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 cancelTime = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &canceltime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 sendState = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sendstate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESChatCancel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESChatCancel)
  return false;
#undef DO_
}

void MESChatCancel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESChatCancel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), static_cast<int>(this->sfromid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESChatCancel.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // string sToId = 2;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), static_cast<int>(this->stoid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESChatCancel.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stoid(), output);
  }

  // uint32 nCancelType = 3;
  if (this->ncanceltype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ncanceltype(), output);
  }

  // string sGroupId = 4;
  if (this->sgroupid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgroupid().data(), static_cast<int>(this->sgroupid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESChatCancel.sGroupId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sgroupid(), output);
  }

  // string sMsgId = 5;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESChatCancel.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->smsgid(), output);
  }

  // uint64 msgTime = 6;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->msgtime(), output);
  }

  // uint64 cancelTime = 7;
  if (this->canceltime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->canceltime(), output);
  }

  // uint32 sendState = 8;
  if (this->sendstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->sendstate(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.MESChatCancel)
}

size_t MESChatCancel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESChatCancel)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // string sToId = 2;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // string sGroupId = 4;
  if (this->sgroupid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgroupid());
  }

  // string sMsgId = 5;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // uint32 nCancelType = 3;
  if (this->ncanceltype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ncanceltype());
  }

  // uint32 sendState = 8;
  if (this->sendstate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sendstate());
  }

  // uint64 msgTime = 6;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // uint64 cancelTime = 7;
  if (this->canceltime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->canceltime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MESChatCancel::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESChatCancel*>(&from));
}

void MESChatCancel::MergeFrom(const MESChatCancel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESChatCancel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.sgroupid().size() > 0) {

    sgroupid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgroupid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.ncanceltype() != 0) {
    set_ncanceltype(from.ncanceltype());
  }
  if (from.sendstate() != 0) {
    set_sendstate(from.sendstate());
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.canceltime() != 0) {
    set_canceltime(from.canceltime());
  }
}

void MESChatCancel::CopyFrom(const MESChatCancel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESChatCancel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESChatCancel::IsInitialized() const {
  return true;
}

void MESChatCancel::Swap(MESChatCancel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESChatCancel::InternalSwap(MESChatCancel* other) {
  using std::swap;
  sfromid_.Swap(&other->sfromid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  stoid_.Swap(&other->stoid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sgroupid_.Swap(&other->sgroupid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(ncanceltype_, other->ncanceltype_);
  swap(sendstate_, other->sendstate_);
  swap(msgtime_, other->msgtime_);
  swap(canceltime_, other->canceltime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MESChatCancel::GetTypeName() const {
  return "im.MESChatCancel";
}


// ===================================================================

void MESChatCancelAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESChatCancelAck::kSUserIdFieldNumber;
const int MESChatCancelAck::kSMsgIdFieldNumber;
const int MESChatCancelAck::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESChatCancelAck::MESChatCancelAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info_MESChatCancelAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESChatCancelAck)
}
MESChatCancelAck::MESChatCancelAck(const MESChatCancelAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  errcode_ = from.errcode_;
  // @@protoc_insertion_point(copy_constructor:im.MESChatCancelAck)
}

void MESChatCancelAck::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

MESChatCancelAck::~MESChatCancelAck() {
  // @@protoc_insertion_point(destructor:im.MESChatCancelAck)
  SharedDtor();
}

void MESChatCancelAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MESChatCancelAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MESChatCancelAck& MESChatCancelAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info_MESChatCancelAck.base);
  return *internal_default_instance();
}


void MESChatCancelAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESChatCancelAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
  _internal_metadata_.Clear();
}

bool MESChatCancelAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.MESChatCancelAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESChatCancelAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESChatCancelAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode errcode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESChatCancelAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESChatCancelAck)
  return false;
#undef DO_
}

void MESChatCancelAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESChatCancelAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESChatCancelAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESChatCancelAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  // .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->errcode(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.MESChatCancelAck)
}

size_t MESChatCancelAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESChatCancelAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MESChatCancelAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESChatCancelAck*>(&from));
}

void MESChatCancelAck::MergeFrom(const MESChatCancelAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESChatCancelAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void MESChatCancelAck::CopyFrom(const MESChatCancelAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESChatCancelAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESChatCancelAck::IsInitialized() const {
  return true;
}

void MESChatCancelAck::Swap(MESChatCancelAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESChatCancelAck::InternalSwap(MESChatCancelAck* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(errcode_, other->errcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MESChatCancelAck::GetTypeName() const {
  return "im.MESChatCancelAck";
}


// ===================================================================

void MSGCommonNotify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MSGCommonNotify::kSFromIdFieldNumber;
const int MSGCommonNotify::kSToIdsFieldNumber;
const int MSGCommonNotify::kSMsgIdFieldNumber;
const int MSGCommonNotify::kNotifyTypeFieldNumber;
const int MSGCommonNotify::kSContentFieldNumber;
const int MSGCommonNotify::kMsgTimeFieldNumber;
const int MSGCommonNotify::kSToIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MSGCommonNotify::MSGCommonNotify()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info_MSGCommonNotify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MSGCommonNotify)
}
MSGCommonNotify::MSGCommonNotify(const MSGCommonNotify& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      stoids_(from.stoids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sfromid().size() > 0) {
    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  scontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.scontent().size() > 0) {
    scontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scontent_);
  }
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stoid().size() > 0) {
    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  ::memcpy(&msgtime_, &from.msgtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&notifytype_) -
    reinterpret_cast<char*>(&msgtime_)) + sizeof(notifytype_));
  // @@protoc_insertion_point(copy_constructor:im.MSGCommonNotify)
}

void MSGCommonNotify::SharedCtor() {
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&notifytype_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(notifytype_));
}

MSGCommonNotify::~MSGCommonNotify() {
  // @@protoc_insertion_point(destructor:im.MSGCommonNotify)
  SharedDtor();
}

void MSGCommonNotify::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MSGCommonNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSGCommonNotify& MSGCommonNotify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info_MSGCommonNotify.base);
  return *internal_default_instance();
}


void MSGCommonNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MSGCommonNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stoids_.Clear();
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&notifytype_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(notifytype_));
  _internal_metadata_.Clear();
}

bool MSGCommonNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.MSGCommonNotify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sFromId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), static_cast<int>(this->sfromid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MSGCommonNotify.sFromId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string sToIds = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_stoids()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoids(this->stoids_size() - 1).data(),
            static_cast<int>(this->stoids(this->stoids_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MSGCommonNotify.sToIds"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MSGCommonNotify.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.CommonNotifyType notifyType = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_notifytype(static_cast< ::im::CommonNotifyType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sContent = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scontent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scontent().data(), static_cast<int>(this->scontent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MSGCommonNotify.sContent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgTime = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sToId = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), static_cast<int>(this->stoid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MSGCommonNotify.sToId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MSGCommonNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MSGCommonNotify)
  return false;
#undef DO_
}

void MSGCommonNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MSGCommonNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), static_cast<int>(this->sfromid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MSGCommonNotify.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // repeated string sToIds = 2;
  for (int i = 0, n = this->stoids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoids(i).data(), static_cast<int>(this->stoids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MSGCommonNotify.sToIds");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->stoids(i), output);
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MSGCommonNotify.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // .im.CommonNotifyType notifyType = 4;
  if (this->notifytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->notifytype(), output);
  }

  // string sContent = 5;
  if (this->scontent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scontent().data(), static_cast<int>(this->scontent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MSGCommonNotify.sContent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->scontent(), output);
  }

  // uint64 msgTime = 6;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->msgtime(), output);
  }

  // string sToId = 7;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), static_cast<int>(this->stoid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MSGCommonNotify.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->stoid(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.MSGCommonNotify)
}

size_t MSGCommonNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.MSGCommonNotify)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated string sToIds = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->stoids_size());
  for (int i = 0, n = this->stoids_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->stoids(i));
  }

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // string sContent = 5;
  if (this->scontent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scontent());
  }

  // string sToId = 7;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // uint64 msgTime = 6;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // .im.CommonNotifyType notifyType = 4;
  if (this->notifytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->notifytype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSGCommonNotify::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MSGCommonNotify*>(&from));
}

void MSGCommonNotify::MergeFrom(const MSGCommonNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MSGCommonNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stoids_.MergeFrom(from.stoids_);
  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.scontent().size() > 0) {

    scontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scontent_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.notifytype() != 0) {
    set_notifytype(from.notifytype());
  }
}

void MSGCommonNotify::CopyFrom(const MSGCommonNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MSGCommonNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSGCommonNotify::IsInitialized() const {
  return true;
}

void MSGCommonNotify::Swap(MSGCommonNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MSGCommonNotify::InternalSwap(MSGCommonNotify* other) {
  using std::swap;
  stoids_.InternalSwap(CastToBase(&other->stoids_));
  sfromid_.Swap(&other->sfromid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  scontent_.Swap(&other->scontent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  stoid_.Swap(&other->stoid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgtime_, other->msgtime_);
  swap(notifytype_, other->notifytype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MSGCommonNotify::GetTypeName() const {
  return "im.MSGCommonNotify";
}


// ===================================================================

void MSGCommonNotifyACK::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MSGCommonNotifyACK::kSUserIdFieldNumber;
const int MSGCommonNotifyACK::kSMsgIdFieldNumber;
const int MSGCommonNotifyACK::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MSGCommonNotifyACK::MSGCommonNotifyACK()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info_MSGCommonNotifyACK.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MSGCommonNotifyACK)
}
MSGCommonNotifyACK::MSGCommonNotifyACK(const MSGCommonNotifyACK& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  errcode_ = from.errcode_;
  // @@protoc_insertion_point(copy_constructor:im.MSGCommonNotifyACK)
}

void MSGCommonNotifyACK::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

MSGCommonNotifyACK::~MSGCommonNotifyACK() {
  // @@protoc_insertion_point(destructor:im.MSGCommonNotifyACK)
  SharedDtor();
}

void MSGCommonNotifyACK::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MSGCommonNotifyACK::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSGCommonNotifyACK& MSGCommonNotifyACK::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info_MSGCommonNotifyACK.base);
  return *internal_default_instance();
}


void MSGCommonNotifyACK::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MSGCommonNotifyACK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
  _internal_metadata_.Clear();
}

bool MSGCommonNotifyACK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.MSGCommonNotifyACK)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MSGCommonNotifyACK.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MSGCommonNotifyACK.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode errcode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MSGCommonNotifyACK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MSGCommonNotifyACK)
  return false;
#undef DO_
}

void MSGCommonNotifyACK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MSGCommonNotifyACK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MSGCommonNotifyACK.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MSGCommonNotifyACK.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  // .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->errcode(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.MSGCommonNotifyACK)
}

size_t MSGCommonNotifyACK::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.MSGCommonNotifyACK)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSGCommonNotifyACK::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MSGCommonNotifyACK*>(&from));
}

void MSGCommonNotifyACK::MergeFrom(const MSGCommonNotifyACK& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MSGCommonNotifyACK)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void MSGCommonNotifyACK::CopyFrom(const MSGCommonNotifyACK& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MSGCommonNotifyACK)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSGCommonNotifyACK::IsInitialized() const {
  return true;
}

void MSGCommonNotifyACK::Swap(MSGCommonNotifyACK* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MSGCommonNotifyACK::InternalSwap(MSGCommonNotifyACK* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(errcode_, other->errcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MSGCommonNotifyACK::GetTypeName() const {
  return "im.MSGCommonNotifyACK";
}


// ===================================================================

void SVRMSGGroupRelationNotify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SVRMSGGroupRelationNotify::kSGrpIdFieldNumber;
const int SVRMSGGroupRelationNotify::kSMsgIdFieldNumber;
const int SVRMSGGroupRelationNotify::kSToIdsFieldNumber;
const int SVRMSGGroupRelationNotify::kMsgTimeFieldNumber;
const int SVRMSGGroupRelationNotify::kSOprUserIdFieldNumber;
const int SVRMSGGroupRelationNotify::kSMnpledUserIdFieldNumber;
const int SVRMSGGroupRelationNotify::kSContentFieldNumber;
const int SVRMSGGroupRelationNotify::kNotifyTypeFieldNumber;
const int SVRMSGGroupRelationNotify::kExtendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SVRMSGGroupRelationNotify::SVRMSGGroupRelationNotify()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info_SVRMSGGroupRelationNotify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.SVRMSGGroupRelationNotify)
}
SVRMSGGroupRelationNotify::SVRMSGGroupRelationNotify(const SVRMSGGroupRelationNotify& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      stoids_(from.stoids_),
      smnpleduserid_(from.smnpleduserid_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sgrpid().size() > 0) {
    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  sopruserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sopruserid().size() > 0) {
    sopruserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sopruserid_);
  }
  scontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.scontent().size() > 0) {
    scontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scontent_);
  }
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extend().size() > 0) {
    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  ::memcpy(&msgtime_, &from.msgtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&notifytype_) -
    reinterpret_cast<char*>(&msgtime_)) + sizeof(notifytype_));
  // @@protoc_insertion_point(copy_constructor:im.SVRMSGGroupRelationNotify)
}

void SVRMSGGroupRelationNotify::SharedCtor() {
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sopruserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&notifytype_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(notifytype_));
}

SVRMSGGroupRelationNotify::~SVRMSGGroupRelationNotify() {
  // @@protoc_insertion_point(destructor:im.SVRMSGGroupRelationNotify)
  SharedDtor();
}

void SVRMSGGroupRelationNotify::SharedDtor() {
  sgrpid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sopruserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SVRMSGGroupRelationNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SVRMSGGroupRelationNotify& SVRMSGGroupRelationNotify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info_SVRMSGGroupRelationNotify.base);
  return *internal_default_instance();
}


void SVRMSGGroupRelationNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:im.SVRMSGGroupRelationNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stoids_.Clear();
  smnpleduserid_.Clear();
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sopruserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&notifytype_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(notifytype_));
  _internal_metadata_.Clear();
}

bool SVRMSGGroupRelationNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.SVRMSGGroupRelationNotify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sGrpId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgrpid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgrpid().data(), static_cast<int>(this->sgrpid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SVRMSGGroupRelationNotify.sGrpId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SVRMSGGroupRelationNotify.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string sToIds = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_stoids()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoids(this->stoids_size() - 1).data(),
            static_cast<int>(this->stoids(this->stoids_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SVRMSGGroupRelationNotify.sToIds"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgTime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sOprUserId = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sopruserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sopruserid().data(), static_cast<int>(this->sopruserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SVRMSGGroupRelationNotify.sOprUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string sMnpledUserId = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_smnpleduserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smnpleduserid(this->smnpleduserid_size() - 1).data(),
            static_cast<int>(this->smnpleduserid(this->smnpleduserid_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SVRMSGGroupRelationNotify.sMnpledUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sContent = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scontent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scontent().data(), static_cast<int>(this->scontent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SVRMSGGroupRelationNotify.sContent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.SVRGroupRelationNotifyType notifyType = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_notifytype(static_cast< ::im::SVRGroupRelationNotifyType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string extend = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extend()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extend().data(), static_cast<int>(this->extend().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SVRMSGGroupRelationNotify.extend"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.SVRMSGGroupRelationNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.SVRMSGGroupRelationNotify)
  return false;
#undef DO_
}

void SVRMSGGroupRelationNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.SVRMSGGroupRelationNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sGrpId = 1;
  if (this->sgrpid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgrpid().data(), static_cast<int>(this->sgrpid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SVRMSGGroupRelationNotify.sGrpId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sgrpid(), output);
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SVRMSGGroupRelationNotify.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  // repeated string sToIds = 3;
  for (int i = 0, n = this->stoids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoids(i).data(), static_cast<int>(this->stoids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SVRMSGGroupRelationNotify.sToIds");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->stoids(i), output);
  }

  // uint64 msgTime = 4;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->msgtime(), output);
  }

  // string sOprUserId = 5;
  if (this->sopruserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sopruserid().data(), static_cast<int>(this->sopruserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SVRMSGGroupRelationNotify.sOprUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->sopruserid(), output);
  }

  // repeated string sMnpledUserId = 6;
  for (int i = 0, n = this->smnpleduserid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smnpleduserid(i).data(), static_cast<int>(this->smnpleduserid(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SVRMSGGroupRelationNotify.sMnpledUserId");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->smnpleduserid(i), output);
  }

  // string sContent = 7;
  if (this->scontent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scontent().data(), static_cast<int>(this->scontent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SVRMSGGroupRelationNotify.sContent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->scontent(), output);
  }

  // .im.SVRGroupRelationNotifyType notifyType = 8;
  if (this->notifytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->notifytype(), output);
  }

  // string extend = 9;
  if (this->extend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extend().data(), static_cast<int>(this->extend().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SVRMSGGroupRelationNotify.extend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->extend(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.SVRMSGGroupRelationNotify)
}

size_t SVRMSGGroupRelationNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.SVRMSGGroupRelationNotify)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated string sToIds = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->stoids_size());
  for (int i = 0, n = this->stoids_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->stoids(i));
  }

  // repeated string sMnpledUserId = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->smnpleduserid_size());
  for (int i = 0, n = this->smnpleduserid_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->smnpleduserid(i));
  }

  // string sGrpId = 1;
  if (this->sgrpid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgrpid());
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // string sOprUserId = 5;
  if (this->sopruserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sopruserid());
  }

  // string sContent = 7;
  if (this->scontent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scontent());
  }

  // string extend = 9;
  if (this->extend().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extend());
  }

  // uint64 msgTime = 4;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // .im.SVRGroupRelationNotifyType notifyType = 8;
  if (this->notifytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->notifytype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SVRMSGGroupRelationNotify::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SVRMSGGroupRelationNotify*>(&from));
}

void SVRMSGGroupRelationNotify::MergeFrom(const SVRMSGGroupRelationNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.SVRMSGGroupRelationNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stoids_.MergeFrom(from.stoids_);
  smnpleduserid_.MergeFrom(from.smnpleduserid_);
  if (from.sgrpid().size() > 0) {

    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.sopruserid().size() > 0) {

    sopruserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sopruserid_);
  }
  if (from.scontent().size() > 0) {

    scontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scontent_);
  }
  if (from.extend().size() > 0) {

    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.notifytype() != 0) {
    set_notifytype(from.notifytype());
  }
}

void SVRMSGGroupRelationNotify::CopyFrom(const SVRMSGGroupRelationNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.SVRMSGGroupRelationNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SVRMSGGroupRelationNotify::IsInitialized() const {
  return true;
}

void SVRMSGGroupRelationNotify::Swap(SVRMSGGroupRelationNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SVRMSGGroupRelationNotify::InternalSwap(SVRMSGGroupRelationNotify* other) {
  using std::swap;
  stoids_.InternalSwap(CastToBase(&other->stoids_));
  smnpleduserid_.InternalSwap(CastToBase(&other->smnpleduserid_));
  sgrpid_.Swap(&other->sgrpid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sopruserid_.Swap(&other->sopruserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  scontent_.Swap(&other->scontent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  extend_.Swap(&other->extend_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgtime_, other->msgtime_);
  swap(notifytype_, other->notifytype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string SVRMSGGroupRelationNotify::GetTypeName() const {
  return "im.SVRMSGGroupRelationNotify";
}


// ===================================================================

void SVRMSGFriendRelationNotify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SVRMSGFriendRelationNotify::kSFromIdFieldNumber;
const int SVRMSGFriendRelationNotify::kSToIdFieldNumber;
const int SVRMSGFriendRelationNotify::kSMsgIdFieldNumber;
const int SVRMSGFriendRelationNotify::kSMemoNameFieldNumber;
const int SVRMSGFriendRelationNotify::kNotifyTypeFieldNumber;
const int SVRMSGFriendRelationNotify::kSSelfIntroduceFieldNumber;
const int SVRMSGFriendRelationNotify::kMsgTimeFieldNumber;
const int SVRMSGFriendRelationNotify::kExtendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SVRMSGFriendRelationNotify::SVRMSGFriendRelationNotify()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info_SVRMSGFriendRelationNotify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.SVRMSGFriendRelationNotify)
}
SVRMSGFriendRelationNotify::SVRMSGFriendRelationNotify(const SVRMSGFriendRelationNotify& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sfromid().size() > 0) {
    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stoid().size() > 0) {
    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  smemoname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smemoname().size() > 0) {
    smemoname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smemoname_);
  }
  sselfintroduce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sselfintroduce().size() > 0) {
    sselfintroduce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sselfintroduce_);
  }
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extend().size() > 0) {
    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  ::memcpy(&msgtime_, &from.msgtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&notifytype_) -
    reinterpret_cast<char*>(&msgtime_)) + sizeof(notifytype_));
  // @@protoc_insertion_point(copy_constructor:im.SVRMSGFriendRelationNotify)
}

void SVRMSGFriendRelationNotify::SharedCtor() {
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smemoname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sselfintroduce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&notifytype_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(notifytype_));
}

SVRMSGFriendRelationNotify::~SVRMSGFriendRelationNotify() {
  // @@protoc_insertion_point(destructor:im.SVRMSGFriendRelationNotify)
  SharedDtor();
}

void SVRMSGFriendRelationNotify::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smemoname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sselfintroduce_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SVRMSGFriendRelationNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SVRMSGFriendRelationNotify& SVRMSGFriendRelationNotify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info_SVRMSGFriendRelationNotify.base);
  return *internal_default_instance();
}


void SVRMSGFriendRelationNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:im.SVRMSGFriendRelationNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smemoname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sselfintroduce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&notifytype_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(notifytype_));
  _internal_metadata_.Clear();
}

bool SVRMSGFriendRelationNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.SVRMSGFriendRelationNotify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sFromId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), static_cast<int>(this->sfromid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SVRMSGFriendRelationNotify.sFromId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sToId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), static_cast<int>(this->stoid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SVRMSGFriendRelationNotify.sToId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SVRMSGFriendRelationNotify.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMemoName = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smemoname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smemoname().data(), static_cast<int>(this->smemoname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SVRMSGFriendRelationNotify.sMemoName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.SVRFriendRelationNotifyType notifyType = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_notifytype(static_cast< ::im::SVRFriendRelationNotifyType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sSelfIntroduce = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sselfintroduce()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sselfintroduce().data(), static_cast<int>(this->sselfintroduce().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SVRMSGFriendRelationNotify.sSelfIntroduce"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgTime = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string extend = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extend()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extend().data(), static_cast<int>(this->extend().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SVRMSGFriendRelationNotify.extend"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.SVRMSGFriendRelationNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.SVRMSGFriendRelationNotify)
  return false;
#undef DO_
}

void SVRMSGFriendRelationNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.SVRMSGFriendRelationNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), static_cast<int>(this->sfromid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SVRMSGFriendRelationNotify.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // string sToId = 2;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), static_cast<int>(this->stoid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SVRMSGFriendRelationNotify.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stoid(), output);
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SVRMSGFriendRelationNotify.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // string sMemoName = 4;
  if (this->smemoname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smemoname().data(), static_cast<int>(this->smemoname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SVRMSGFriendRelationNotify.sMemoName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->smemoname(), output);
  }

  // .im.SVRFriendRelationNotifyType notifyType = 5;
  if (this->notifytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->notifytype(), output);
  }

  // string sSelfIntroduce = 6;
  if (this->sselfintroduce().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sselfintroduce().data(), static_cast<int>(this->sselfintroduce().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SVRMSGFriendRelationNotify.sSelfIntroduce");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->sselfintroduce(), output);
  }

  // uint64 msgTime = 7;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->msgtime(), output);
  }

  // string extend = 8;
  if (this->extend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extend().data(), static_cast<int>(this->extend().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SVRMSGFriendRelationNotify.extend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->extend(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.SVRMSGFriendRelationNotify)
}

size_t SVRMSGFriendRelationNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.SVRMSGFriendRelationNotify)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // string sToId = 2;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // string sMemoName = 4;
  if (this->smemoname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smemoname());
  }

  // string sSelfIntroduce = 6;
  if (this->sselfintroduce().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sselfintroduce());
  }

  // string extend = 8;
  if (this->extend().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extend());
  }

  // uint64 msgTime = 7;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // .im.SVRFriendRelationNotifyType notifyType = 5;
  if (this->notifytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->notifytype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SVRMSGFriendRelationNotify::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SVRMSGFriendRelationNotify*>(&from));
}

void SVRMSGFriendRelationNotify::MergeFrom(const SVRMSGFriendRelationNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.SVRMSGFriendRelationNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.smemoname().size() > 0) {

    smemoname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smemoname_);
  }
  if (from.sselfintroduce().size() > 0) {

    sselfintroduce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sselfintroduce_);
  }
  if (from.extend().size() > 0) {

    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.notifytype() != 0) {
    set_notifytype(from.notifytype());
  }
}

void SVRMSGFriendRelationNotify::CopyFrom(const SVRMSGFriendRelationNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.SVRMSGFriendRelationNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SVRMSGFriendRelationNotify::IsInitialized() const {
  return true;
}

void SVRMSGFriendRelationNotify::Swap(SVRMSGFriendRelationNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SVRMSGFriendRelationNotify::InternalSwap(SVRMSGFriendRelationNotify* other) {
  using std::swap;
  sfromid_.Swap(&other->sfromid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  stoid_.Swap(&other->stoid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smemoname_.Swap(&other->smemoname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sselfintroduce_.Swap(&other->sselfintroduce_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  extend_.Swap(&other->extend_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgtime_, other->msgtime_);
  swap(notifytype_, other->notifytype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string SVRMSGFriendRelationNotify::GetTypeName() const {
  return "im.SVRMSGFriendRelationNotify";
}


// ===================================================================

void SVRMSGCommonMsgNotify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SVRMSGCommonMsgNotify::kSFromIdFieldNumber;
const int SVRMSGCommonMsgNotify::kSToIdsFieldNumber;
const int SVRMSGCommonMsgNotify::kSMsgIdFieldNumber;
const int SVRMSGCommonMsgNotify::kNotifyTypeFieldNumber;
const int SVRMSGCommonMsgNotify::kSContentFieldNumber;
const int SVRMSGCommonMsgNotify::kMsgTimeFieldNumber;
const int SVRMSGCommonMsgNotify::kExtendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SVRMSGCommonMsgNotify::SVRMSGCommonMsgNotify()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info_SVRMSGCommonMsgNotify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.SVRMSGCommonMsgNotify)
}
SVRMSGCommonMsgNotify::SVRMSGCommonMsgNotify(const SVRMSGCommonMsgNotify& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      stoids_(from.stoids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sfromid().size() > 0) {
    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  scontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.scontent().size() > 0) {
    scontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scontent_);
  }
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extend().size() > 0) {
    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  ::memcpy(&msgtime_, &from.msgtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&notifytype_) -
    reinterpret_cast<char*>(&msgtime_)) + sizeof(notifytype_));
  // @@protoc_insertion_point(copy_constructor:im.SVRMSGCommonMsgNotify)
}

void SVRMSGCommonMsgNotify::SharedCtor() {
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&notifytype_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(notifytype_));
}

SVRMSGCommonMsgNotify::~SVRMSGCommonMsgNotify() {
  // @@protoc_insertion_point(destructor:im.SVRMSGCommonMsgNotify)
  SharedDtor();
}

void SVRMSGCommonMsgNotify::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SVRMSGCommonMsgNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SVRMSGCommonMsgNotify& SVRMSGCommonMsgNotify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info_SVRMSGCommonMsgNotify.base);
  return *internal_default_instance();
}


void SVRMSGCommonMsgNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:im.SVRMSGCommonMsgNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stoids_.Clear();
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&notifytype_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(notifytype_));
  _internal_metadata_.Clear();
}

bool SVRMSGCommonMsgNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.SVRMSGCommonMsgNotify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sFromId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), static_cast<int>(this->sfromid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SVRMSGCommonMsgNotify.sFromId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string sToIds = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_stoids()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoids(this->stoids_size() - 1).data(),
            static_cast<int>(this->stoids(this->stoids_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SVRMSGCommonMsgNotify.sToIds"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SVRMSGCommonMsgNotify.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.SVRCommonNotifyType notifyType = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_notifytype(static_cast< ::im::SVRCommonNotifyType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sContent = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scontent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scontent().data(), static_cast<int>(this->scontent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SVRMSGCommonMsgNotify.sContent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgTime = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string extend = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extend()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extend().data(), static_cast<int>(this->extend().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SVRMSGCommonMsgNotify.extend"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.SVRMSGCommonMsgNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.SVRMSGCommonMsgNotify)
  return false;
#undef DO_
}

void SVRMSGCommonMsgNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.SVRMSGCommonMsgNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), static_cast<int>(this->sfromid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SVRMSGCommonMsgNotify.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // repeated string sToIds = 2;
  for (int i = 0, n = this->stoids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoids(i).data(), static_cast<int>(this->stoids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SVRMSGCommonMsgNotify.sToIds");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->stoids(i), output);
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SVRMSGCommonMsgNotify.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // .im.SVRCommonNotifyType notifyType = 4;
  if (this->notifytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->notifytype(), output);
  }

  // string sContent = 5;
  if (this->scontent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scontent().data(), static_cast<int>(this->scontent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SVRMSGCommonMsgNotify.sContent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->scontent(), output);
  }

  // uint64 msgTime = 6;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->msgtime(), output);
  }

  // string extend = 7;
  if (this->extend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extend().data(), static_cast<int>(this->extend().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SVRMSGCommonMsgNotify.extend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->extend(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.SVRMSGCommonMsgNotify)
}

size_t SVRMSGCommonMsgNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.SVRMSGCommonMsgNotify)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated string sToIds = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->stoids_size());
  for (int i = 0, n = this->stoids_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->stoids(i));
  }

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // string sContent = 5;
  if (this->scontent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scontent());
  }

  // string extend = 7;
  if (this->extend().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extend());
  }

  // uint64 msgTime = 6;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // .im.SVRCommonNotifyType notifyType = 4;
  if (this->notifytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->notifytype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SVRMSGCommonMsgNotify::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SVRMSGCommonMsgNotify*>(&from));
}

void SVRMSGCommonMsgNotify::MergeFrom(const SVRMSGCommonMsgNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.SVRMSGCommonMsgNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stoids_.MergeFrom(from.stoids_);
  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.scontent().size() > 0) {

    scontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scontent_);
  }
  if (from.extend().size() > 0) {

    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.notifytype() != 0) {
    set_notifytype(from.notifytype());
  }
}

void SVRMSGCommonMsgNotify::CopyFrom(const SVRMSGCommonMsgNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.SVRMSGCommonMsgNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SVRMSGCommonMsgNotify::IsInitialized() const {
  return true;
}

void SVRMSGCommonMsgNotify::Swap(SVRMSGCommonMsgNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SVRMSGCommonMsgNotify::InternalSwap(SVRMSGCommonMsgNotify* other) {
  using std::swap;
  stoids_.InternalSwap(CastToBase(&other->stoids_));
  sfromid_.Swap(&other->sfromid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  scontent_.Swap(&other->scontent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  extend_.Swap(&other->extend_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgtime_, other->msgtime_);
  swap(notifytype_, other->notifytype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string SVRMSGCommonMsgNotify::GetTypeName() const {
  return "im.SVRMSGCommonMsgNotify";
}


// ===================================================================

void SVRMSGNotifyACK::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SVRMSGNotifyACK::kSMsgIdFieldNumber;
const int SVRMSGNotifyACK::kMsgTimeFieldNumber;
const int SVRMSGNotifyACK::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SVRMSGNotifyACK::SVRMSGNotifyACK()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2emes_2eproto::scc_info_SVRMSGNotifyACK.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.SVRMSGNotifyACK)
}
SVRMSGNotifyACK::SVRMSGNotifyACK(const SVRMSGNotifyACK& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  ::memcpy(&msgtime_, &from.msgtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&errcode_) -
    reinterpret_cast<char*>(&msgtime_)) + sizeof(errcode_));
  // @@protoc_insertion_point(copy_constructor:im.SVRMSGNotifyACK)
}

void SVRMSGNotifyACK::SharedCtor() {
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&errcode_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(errcode_));
}

SVRMSGNotifyACK::~SVRMSGNotifyACK() {
  // @@protoc_insertion_point(destructor:im.SVRMSGNotifyACK)
  SharedDtor();
}

void SVRMSGNotifyACK::SharedDtor() {
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SVRMSGNotifyACK::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SVRMSGNotifyACK& SVRMSGNotifyACK::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2emes_2eproto::scc_info_SVRMSGNotifyACK.base);
  return *internal_default_instance();
}


void SVRMSGNotifyACK::Clear() {
// @@protoc_insertion_point(message_clear_start:im.SVRMSGNotifyACK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&errcode_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(errcode_));
  _internal_metadata_.Clear();
}

bool SVRMSGNotifyACK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.SVRMSGNotifyACK)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sMsgId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SVRMSGNotifyACK.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgTime = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode errcode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.SVRMSGNotifyACK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.SVRMSGNotifyACK)
  return false;
#undef DO_
}

void SVRMSGNotifyACK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.SVRMSGNotifyACK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sMsgId = 1;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SVRMSGNotifyACK.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->smsgid(), output);
  }

  // uint64 msgTime = 2;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->msgtime(), output);
  }

  // .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->errcode(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.SVRMSGNotifyACK)
}

size_t SVRMSGNotifyACK::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.SVRMSGNotifyACK)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sMsgId = 1;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // uint64 msgTime = 2;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SVRMSGNotifyACK::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SVRMSGNotifyACK*>(&from));
}

void SVRMSGNotifyACK::MergeFrom(const SVRMSGNotifyACK& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.SVRMSGNotifyACK)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void SVRMSGNotifyACK::CopyFrom(const SVRMSGNotifyACK& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.SVRMSGNotifyACK)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SVRMSGNotifyACK::IsInitialized() const {
  return true;
}

void SVRMSGNotifyACK::Swap(SVRMSGNotifyACK* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SVRMSGNotifyACK::InternalSwap(SVRMSGNotifyACK* other) {
  using std::swap;
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgtime_, other->msgtime_);
  swap(errcode_, other->errcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string SVRMSGNotifyACK::GetTypeName() const {
  return "im.SVRMSGNotifyACK";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace im
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::MESChat* Arena::CreateMaybeMessage< ::im::MESChat >(Arena* arena) {
  return Arena::CreateInternal< ::im::MESChat >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::MESChatAck* Arena::CreateMaybeMessage< ::im::MESChatAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::MESChatAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::MESChatDeliveredAck* Arena::CreateMaybeMessage< ::im::MESChatDeliveredAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::MESChatDeliveredAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::MESChatDeliveredNotificationAck* Arena::CreateMaybeMessage< ::im::MESChatDeliveredNotificationAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::MESChatDeliveredNotificationAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::MsgReadResult* Arena::CreateMaybeMessage< ::im::MsgReadResult >(Arena* arena) {
  return Arena::CreateInternal< ::im::MsgReadResult >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::MESChatRead* Arena::CreateMaybeMessage< ::im::MESChatRead >(Arena* arena) {
  return Arena::CreateInternal< ::im::MESChatRead >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::MESChatReadAck* Arena::CreateMaybeMessage< ::im::MESChatReadAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::MESChatReadAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::MESChatReadDelivereAck* Arena::CreateMaybeMessage< ::im::MESChatReadDelivereAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::MESChatReadDelivereAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::OfflineTotal* Arena::CreateMaybeMessage< ::im::OfflineTotal >(Arena* arena) {
  return Arena::CreateInternal< ::im::OfflineTotal >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::MESOfflineSummary* Arena::CreateMaybeMessage< ::im::MESOfflineSummary >(Arena* arena) {
  return Arena::CreateInternal< ::im::MESOfflineSummary >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::MESOfflineSummaryAck* Arena::CreateMaybeMessage< ::im::MESOfflineSummaryAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::MESOfflineSummaryAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::MESOfflineTotal* Arena::CreateMaybeMessage< ::im::MESOfflineTotal >(Arena* arena) {
  return Arena::CreateInternal< ::im::MESOfflineTotal >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::MESOfflineMsg* Arena::CreateMaybeMessage< ::im::MESOfflineMsg >(Arena* arena) {
  return Arena::CreateInternal< ::im::MESOfflineMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::OfflineMsgData* Arena::CreateMaybeMessage< ::im::OfflineMsgData >(Arena* arena) {
  return Arena::CreateInternal< ::im::OfflineMsgData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::MESOfflineMsgAck* Arena::CreateMaybeMessage< ::im::MESOfflineMsgAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::MESOfflineMsgAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::OfflineDeliveredMsg* Arena::CreateMaybeMessage< ::im::OfflineDeliveredMsg >(Arena* arena) {
  return Arena::CreateInternal< ::im::OfflineDeliveredMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::MESOfflineMsgDelivered* Arena::CreateMaybeMessage< ::im::MESOfflineMsgDelivered >(Arena* arena) {
  return Arena::CreateInternal< ::im::MESOfflineMsgDelivered >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::MESOfflineMsgDelivereddAck* Arena::CreateMaybeMessage< ::im::MESOfflineMsgDelivereddAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::MESOfflineMsgDelivereddAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::MESOfflineMsgDeliveredNotifyAck* Arena::CreateMaybeMessage< ::im::MESOfflineMsgDeliveredNotifyAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::MESOfflineMsgDeliveredNotifyAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::MESAddFriend* Arena::CreateMaybeMessage< ::im::MESAddFriend >(Arena* arena) {
  return Arena::CreateInternal< ::im::MESAddFriend >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::MESAddFriendAck* Arena::CreateMaybeMessage< ::im::MESAddFriendAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::MESAddFriendAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::MESAddFriendDeliverAck* Arena::CreateMaybeMessage< ::im::MESAddFriendDeliverAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::MESAddFriendDeliverAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::MESAddFriendAns* Arena::CreateMaybeMessage< ::im::MESAddFriendAns >(Arena* arena) {
  return Arena::CreateInternal< ::im::MESAddFriendAns >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::MESAddFriendAnsAck* Arena::CreateMaybeMessage< ::im::MESAddFriendAnsAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::MESAddFriendAnsAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::MESAddFriendAnsDeliverACK* Arena::CreateMaybeMessage< ::im::MESAddFriendAnsDeliverACK >(Arena* arena) {
  return Arena::CreateInternal< ::im::MESAddFriendAnsDeliverACK >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::MESDelFriend* Arena::CreateMaybeMessage< ::im::MESDelFriend >(Arena* arena) {
  return Arena::CreateInternal< ::im::MESDelFriend >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::MESDelFriendAck* Arena::CreateMaybeMessage< ::im::MESDelFriendAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::MESDelFriendAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::MESIncBlacklist* Arena::CreateMaybeMessage< ::im::MESIncBlacklist >(Arena* arena) {
  return Arena::CreateInternal< ::im::MESIncBlacklist >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::MESIncBlacklistAck* Arena::CreateMaybeMessage< ::im::MESIncBlacklistAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::MESIncBlacklistAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::MESDecBlacklist* Arena::CreateMaybeMessage< ::im::MESDecBlacklist >(Arena* arena) {
  return Arena::CreateInternal< ::im::MESDecBlacklist >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::MESDecBlacklistAck* Arena::CreateMaybeMessage< ::im::MESDecBlacklistAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::MESDecBlacklistAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::MESJoinGrp* Arena::CreateMaybeMessage< ::im::MESJoinGrp >(Arena* arena) {
  return Arena::CreateInternal< ::im::MESJoinGrp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::MESJoinGrpAck* Arena::CreateMaybeMessage< ::im::MESJoinGrpAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::MESJoinGrpAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::MESJoinGrpDeliverAck* Arena::CreateMaybeMessage< ::im::MESJoinGrpDeliverAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::MESJoinGrpDeliverAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::UserKey* Arena::CreateMaybeMessage< ::im::UserKey >(Arena* arena) {
  return Arena::CreateInternal< ::im::UserKey >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::MESExchangeKey* Arena::CreateMaybeMessage< ::im::MESExchangeKey >(Arena* arena) {
  return Arena::CreateInternal< ::im::MESExchangeKey >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::MESExchangeKeyAck* Arena::CreateMaybeMessage< ::im::MESExchangeKeyAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::MESExchangeKeyAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::MESExchangeKeyDeliver* Arena::CreateMaybeMessage< ::im::MESExchangeKeyDeliver >(Arena* arena) {
  return Arena::CreateInternal< ::im::MESExchangeKeyDeliver >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::MESExchangeKeyDeliverAck* Arena::CreateMaybeMessage< ::im::MESExchangeKeyDeliverAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::MESExchangeKeyDeliverAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::MESExchangeKeyDeliverNotifyAck* Arena::CreateMaybeMessage< ::im::MESExchangeKeyDeliverNotifyAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::MESExchangeKeyDeliverNotifyAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::_InnerGrpNotify* Arena::CreateMaybeMessage< ::im::_InnerGrpNotify >(Arena* arena) {
  return Arena::CreateInternal< ::im::_InnerGrpNotify >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::_MESGrpInterNotify* Arena::CreateMaybeMessage< ::im::_MESGrpInterNotify >(Arena* arena) {
  return Arena::CreateInternal< ::im::_MESGrpInterNotify >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::_MESGrpInterNotifyAck* Arena::CreateMaybeMessage< ::im::_MESGrpInterNotifyAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::_MESGrpInterNotifyAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::MESGrpNotify* Arena::CreateMaybeMessage< ::im::MESGrpNotify >(Arena* arena) {
  return Arena::CreateInternal< ::im::MESGrpNotify >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::MESGrpNotifyDeliverAck* Arena::CreateMaybeMessage< ::im::MESGrpNotifyDeliverAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::MESGrpNotifyDeliverAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::_MESGrpInterChat* Arena::CreateMaybeMessage< ::im::_MESGrpInterChat >(Arena* arena) {
  return Arena::CreateInternal< ::im::_MESGrpInterChat >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::_MESGrpInterChatAck* Arena::CreateMaybeMessage< ::im::_MESGrpInterChatAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::_MESGrpInterChatAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::MESGrpChatDeliveredAck* Arena::CreateMaybeMessage< ::im::MESGrpChatDeliveredAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::MESGrpChatDeliveredAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::MESGrpChat* Arena::CreateMaybeMessage< ::im::MESGrpChat >(Arena* arena) {
  return Arena::CreateInternal< ::im::MESGrpChat >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::_MESGrpInterChatCancel* Arena::CreateMaybeMessage< ::im::_MESGrpInterChatCancel >(Arena* arena) {
  return Arena::CreateInternal< ::im::_MESGrpInterChatCancel >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::_MESGrpInterChatCancelAck* Arena::CreateMaybeMessage< ::im::_MESGrpInterChatCancelAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::_MESGrpInterChatCancelAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::MESChatCancel* Arena::CreateMaybeMessage< ::im::MESChatCancel >(Arena* arena) {
  return Arena::CreateInternal< ::im::MESChatCancel >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::MESChatCancelAck* Arena::CreateMaybeMessage< ::im::MESChatCancelAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::MESChatCancelAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::MSGCommonNotify* Arena::CreateMaybeMessage< ::im::MSGCommonNotify >(Arena* arena) {
  return Arena::CreateInternal< ::im::MSGCommonNotify >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::MSGCommonNotifyACK* Arena::CreateMaybeMessage< ::im::MSGCommonNotifyACK >(Arena* arena) {
  return Arena::CreateInternal< ::im::MSGCommonNotifyACK >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::SVRMSGGroupRelationNotify* Arena::CreateMaybeMessage< ::im::SVRMSGGroupRelationNotify >(Arena* arena) {
  return Arena::CreateInternal< ::im::SVRMSGGroupRelationNotify >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::SVRMSGFriendRelationNotify* Arena::CreateMaybeMessage< ::im::SVRMSGFriendRelationNotify >(Arena* arena) {
  return Arena::CreateInternal< ::im::SVRMSGFriendRelationNotify >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::SVRMSGCommonMsgNotify* Arena::CreateMaybeMessage< ::im::SVRMSGCommonMsgNotify >(Arena* arena) {
  return Arena::CreateInternal< ::im::SVRMSGCommonMsgNotify >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::SVRMSGNotifyACK* Arena::CreateMaybeMessage< ::im::SVRMSGNotifyACK >(Arena* arena) {
  return Arena::CreateInternal< ::im::SVRMSGNotifyACK >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
