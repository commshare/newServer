// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: im.cm.proto

#include "im.cm.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace im {
class CMLoginDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMLogin>
      _instance;
} _CMLogin_default_instance_;
class CMLoginAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMLoginAck>
      _instance;
} _CMLoginAck_default_instance_;
class CMLogoutDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMLogout>
      _instance;
} _CMLogout_default_instance_;
class CMLogoutAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMLogoutAck>
      _instance;
} _CMLogoutAck_default_instance_;
class CMKickoutNotificationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMKickoutNotification>
      _instance;
} _CMKickoutNotification_default_instance_;
class CMLoginNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMLoginNotify>
      _instance;
} _CMLoginNotify_default_instance_;
class CMLoginNotifyAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMLoginNotifyAck>
      _instance;
} _CMLoginNotifyAck_default_instance_;
class LoginCMNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoginCMNotify>
      _instance;
} _LoginCMNotify_default_instance_;
class LoginCMNotifyAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoginCMNotifyAck>
      _instance;
} _LoginCMNotifyAck_default_instance_;
class CMLoginTransDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMLoginTrans>
      _instance;
} _CMLoginTrans_default_instance_;
class CMPHPLoginNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMPHPLoginNotify>
      _instance;
} _CMPHPLoginNotify_default_instance_;
class CMPHPLoginNotifyACKDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMPHPLoginNotifyACK>
      _instance;
} _CMPHPLoginNotifyACK_default_instance_;
}  // namespace im
namespace protobuf_im_2ecm_2eproto {
static void InitDefaultsCMLogin() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_CMLogin_default_instance_;
    new (ptr) ::im::CMLogin();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::CMLogin::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMLogin =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMLogin}, {}};

static void InitDefaultsCMLoginAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_CMLoginAck_default_instance_;
    new (ptr) ::im::CMLoginAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::CMLoginAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMLoginAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMLoginAck}, {}};

static void InitDefaultsCMLogout() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_CMLogout_default_instance_;
    new (ptr) ::im::CMLogout();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::CMLogout::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMLogout =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMLogout}, {}};

static void InitDefaultsCMLogoutAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_CMLogoutAck_default_instance_;
    new (ptr) ::im::CMLogoutAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::CMLogoutAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMLogoutAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMLogoutAck}, {}};

static void InitDefaultsCMKickoutNotification() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_CMKickoutNotification_default_instance_;
    new (ptr) ::im::CMKickoutNotification();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::CMKickoutNotification::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMKickoutNotification =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMKickoutNotification}, {}};

static void InitDefaultsCMLoginNotify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_CMLoginNotify_default_instance_;
    new (ptr) ::im::CMLoginNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::CMLoginNotify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMLoginNotify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMLoginNotify}, {}};

static void InitDefaultsCMLoginNotifyAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_CMLoginNotifyAck_default_instance_;
    new (ptr) ::im::CMLoginNotifyAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::CMLoginNotifyAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMLoginNotifyAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMLoginNotifyAck}, {}};

static void InitDefaultsLoginCMNotify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_LoginCMNotify_default_instance_;
    new (ptr) ::im::LoginCMNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::LoginCMNotify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LoginCMNotify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLoginCMNotify}, {}};

static void InitDefaultsLoginCMNotifyAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_LoginCMNotifyAck_default_instance_;
    new (ptr) ::im::LoginCMNotifyAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::LoginCMNotifyAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LoginCMNotifyAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLoginCMNotifyAck}, {}};

static void InitDefaultsCMLoginTrans() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_CMLoginTrans_default_instance_;
    new (ptr) ::im::CMLoginTrans();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::CMLoginTrans::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMLoginTrans =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMLoginTrans}, {}};

static void InitDefaultsCMPHPLoginNotify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_CMPHPLoginNotify_default_instance_;
    new (ptr) ::im::CMPHPLoginNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::CMPHPLoginNotify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMPHPLoginNotify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMPHPLoginNotify}, {}};

static void InitDefaultsCMPHPLoginNotifyACK() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_CMPHPLoginNotifyACK_default_instance_;
    new (ptr) ::im::CMPHPLoginNotifyACK();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::CMPHPLoginNotifyACK::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMPHPLoginNotifyACK =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMPHPLoginNotifyACK}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CMLogin.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMLoginAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMLogout.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMLogoutAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMKickoutNotification.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMLoginNotify.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMLoginNotifyAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LoginCMNotify.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LoginCMNotifyAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMLoginTrans.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMPHPLoginNotify.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMPHPLoginNotifyACK.base);
}

}  // namespace protobuf_im_2ecm_2eproto
namespace im {

// ===================================================================

void CMLogin::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMLogin::kSUserIdFieldNumber;
const int CMLogin::kSLoginTokenFieldNumber;
const int CMLogin::kSDeviceTokenFieldNumber;
const int CMLogin::kNLoginTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMLogin::CMLogin()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2ecm_2eproto::scc_info_CMLogin.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.CMLogin)
}
CMLogin::CMLogin(const CMLogin& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  slogintoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.slogintoken().size() > 0) {
    slogintoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.slogintoken_);
  }
  sdevicetoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sdevicetoken().size() > 0) {
    sdevicetoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdevicetoken_);
  }
  nlogintime_ = from.nlogintime_;
  // @@protoc_insertion_point(copy_constructor:im.CMLogin)
}

void CMLogin::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  slogintoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdevicetoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nlogintime_ = GOOGLE_ULONGLONG(0);
}

CMLogin::~CMLogin() {
  // @@protoc_insertion_point(destructor:im.CMLogin)
  SharedDtor();
}

void CMLogin::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  slogintoken_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdevicetoken_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMLogin::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMLogin& CMLogin::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2ecm_2eproto::scc_info_CMLogin.base);
  return *internal_default_instance();
}


void CMLogin::Clear() {
// @@protoc_insertion_point(message_clear_start:im.CMLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  slogintoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdevicetoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nlogintime_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool CMLogin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.CMLogin)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.CMLogin.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sLoginToken = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_slogintoken()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->slogintoken().data(), static_cast<int>(this->slogintoken().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.CMLogin.sLoginToken"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sDeviceToken = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sdevicetoken()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sdevicetoken().data(), static_cast<int>(this->sdevicetoken().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.CMLogin.sDeviceToken"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 nLoginTime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &nlogintime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.CMLogin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.CMLogin)
  return false;
#undef DO_
}

void CMLogin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.CMLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.CMLogin.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string sLoginToken = 2;
  if (this->slogintoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->slogintoken().data(), static_cast<int>(this->slogintoken().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.CMLogin.sLoginToken");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->slogintoken(), output);
  }

  // string sDeviceToken = 3;
  if (this->sdevicetoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sdevicetoken().data(), static_cast<int>(this->sdevicetoken().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.CMLogin.sDeviceToken");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sdevicetoken(), output);
  }

  // uint64 nLoginTime = 4;
  if (this->nlogintime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->nlogintime(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.CMLogin)
}

size_t CMLogin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.CMLogin)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sLoginToken = 2;
  if (this->slogintoken().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->slogintoken());
  }

  // string sDeviceToken = 3;
  if (this->sdevicetoken().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sdevicetoken());
  }

  // uint64 nLoginTime = 4;
  if (this->nlogintime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->nlogintime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMLogin::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CMLogin*>(&from));
}

void CMLogin::MergeFrom(const CMLogin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.CMLogin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.slogintoken().size() > 0) {

    slogintoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.slogintoken_);
  }
  if (from.sdevicetoken().size() > 0) {

    sdevicetoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdevicetoken_);
  }
  if (from.nlogintime() != 0) {
    set_nlogintime(from.nlogintime());
  }
}

void CMLogin::CopyFrom(const CMLogin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.CMLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMLogin::IsInitialized() const {
  return true;
}

void CMLogin::Swap(CMLogin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMLogin::InternalSwap(CMLogin* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  slogintoken_.Swap(&other->slogintoken_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sdevicetoken_.Swap(&other->sdevicetoken_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(nlogintime_, other->nlogintime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string CMLogin::GetTypeName() const {
  return "im.CMLogin";
}


// ===================================================================

void CMLoginAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMLoginAck::kSUserIdFieldNumber;
const int CMLoginAck::kNErrFieldNumber;
const int CMLoginAck::kNLastLoginTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMLoginAck::CMLoginAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2ecm_2eproto::scc_info_CMLoginAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.CMLoginAck)
}
CMLoginAck::CMLoginAck(const CMLoginAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  ::memcpy(&nlastlogintime_, &from.nlastlogintime_,
    static_cast<size_t>(reinterpret_cast<char*>(&nerr_) -
    reinterpret_cast<char*>(&nlastlogintime_)) + sizeof(nerr_));
  // @@protoc_insertion_point(copy_constructor:im.CMLoginAck)
}

void CMLoginAck::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nlastlogintime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nerr_) -
      reinterpret_cast<char*>(&nlastlogintime_)) + sizeof(nerr_));
}

CMLoginAck::~CMLoginAck() {
  // @@protoc_insertion_point(destructor:im.CMLoginAck)
  SharedDtor();
}

void CMLoginAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMLoginAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMLoginAck& CMLoginAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2ecm_2eproto::scc_info_CMLoginAck.base);
  return *internal_default_instance();
}


void CMLoginAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.CMLoginAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nlastlogintime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nerr_) -
      reinterpret_cast<char*>(&nlastlogintime_)) + sizeof(nerr_));
  _internal_metadata_.Clear();
}

bool CMLoginAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.CMLoginAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.CMLoginAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode nErr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_nerr(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 nLastLoginTime = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &nlastlogintime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.CMLoginAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.CMLoginAck)
  return false;
#undef DO_
}

void CMLoginAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.CMLoginAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.CMLoginAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // .im.ErrCode nErr = 2;
  if (this->nerr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->nerr(), output);
  }

  // uint64 nLastLoginTime = 3;
  if (this->nlastlogintime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->nlastlogintime(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.CMLoginAck)
}

size_t CMLoginAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.CMLoginAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // uint64 nLastLoginTime = 3;
  if (this->nlastlogintime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->nlastlogintime());
  }

  // .im.ErrCode nErr = 2;
  if (this->nerr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->nerr());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMLoginAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CMLoginAck*>(&from));
}

void CMLoginAck::MergeFrom(const CMLoginAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.CMLoginAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.nlastlogintime() != 0) {
    set_nlastlogintime(from.nlastlogintime());
  }
  if (from.nerr() != 0) {
    set_nerr(from.nerr());
  }
}

void CMLoginAck::CopyFrom(const CMLoginAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.CMLoginAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMLoginAck::IsInitialized() const {
  return true;
}

void CMLoginAck::Swap(CMLoginAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMLoginAck::InternalSwap(CMLoginAck* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(nlastlogintime_, other->nlastlogintime_);
  swap(nerr_, other->nerr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string CMLoginAck::GetTypeName() const {
  return "im.CMLoginAck";
}


// ===================================================================

void CMLogout::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMLogout::kSUserIdFieldNumber;
const int CMLogout::kNDeviceTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMLogout::CMLogout()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2ecm_2eproto::scc_info_CMLogout.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.CMLogout)
}
CMLogout::CMLogout(const CMLogout& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  ndevicetype_ = from.ndevicetype_;
  // @@protoc_insertion_point(copy_constructor:im.CMLogout)
}

void CMLogout::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ndevicetype_ = 0u;
}

CMLogout::~CMLogout() {
  // @@protoc_insertion_point(destructor:im.CMLogout)
  SharedDtor();
}

void CMLogout::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMLogout::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMLogout& CMLogout::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2ecm_2eproto::scc_info_CMLogout.base);
  return *internal_default_instance();
}


void CMLogout::Clear() {
// @@protoc_insertion_point(message_clear_start:im.CMLogout)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ndevicetype_ = 0u;
  _internal_metadata_.Clear();
}

bool CMLogout::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.CMLogout)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.CMLogout.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nDeviceType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ndevicetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.CMLogout)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.CMLogout)
  return false;
#undef DO_
}

void CMLogout::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.CMLogout)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.CMLogout.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // uint32 nDeviceType = 2;
  if (this->ndevicetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ndevicetype(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.CMLogout)
}

size_t CMLogout::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.CMLogout)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // uint32 nDeviceType = 2;
  if (this->ndevicetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ndevicetype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMLogout::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CMLogout*>(&from));
}

void CMLogout::MergeFrom(const CMLogout& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.CMLogout)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.ndevicetype() != 0) {
    set_ndevicetype(from.ndevicetype());
  }
}

void CMLogout::CopyFrom(const CMLogout& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.CMLogout)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMLogout::IsInitialized() const {
  return true;
}

void CMLogout::Swap(CMLogout* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMLogout::InternalSwap(CMLogout* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(ndevicetype_, other->ndevicetype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string CMLogout::GetTypeName() const {
  return "im.CMLogout";
}


// ===================================================================

void CMLogoutAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMLogoutAck::kNErrFieldNumber;
const int CMLogoutAck::kSUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMLogoutAck::CMLogoutAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2ecm_2eproto::scc_info_CMLogoutAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.CMLogoutAck)
}
CMLogoutAck::CMLogoutAck(const CMLogoutAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  nerr_ = from.nerr_;
  // @@protoc_insertion_point(copy_constructor:im.CMLogoutAck)
}

void CMLogoutAck::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nerr_ = 0;
}

CMLogoutAck::~CMLogoutAck() {
  // @@protoc_insertion_point(destructor:im.CMLogoutAck)
  SharedDtor();
}

void CMLogoutAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMLogoutAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMLogoutAck& CMLogoutAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2ecm_2eproto::scc_info_CMLogoutAck.base);
  return *internal_default_instance();
}


void CMLogoutAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.CMLogoutAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nerr_ = 0;
  _internal_metadata_.Clear();
}

bool CMLogoutAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.CMLogoutAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .im.ErrCode nErr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_nerr(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sUserId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.CMLogoutAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.CMLogoutAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.CMLogoutAck)
  return false;
#undef DO_
}

void CMLogoutAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.CMLogoutAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .im.ErrCode nErr = 1;
  if (this->nerr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->nerr(), output);
  }

  // string sUserId = 2;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.CMLogoutAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->suserid(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.CMLogoutAck)
}

size_t CMLogoutAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.CMLogoutAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 2;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // .im.ErrCode nErr = 1;
  if (this->nerr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->nerr());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMLogoutAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CMLogoutAck*>(&from));
}

void CMLogoutAck::MergeFrom(const CMLogoutAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.CMLogoutAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.nerr() != 0) {
    set_nerr(from.nerr());
  }
}

void CMLogoutAck::CopyFrom(const CMLogoutAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.CMLogoutAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMLogoutAck::IsInitialized() const {
  return true;
}

void CMLogoutAck::Swap(CMLogoutAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMLogoutAck::InternalSwap(CMLogoutAck* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(nerr_, other->nerr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string CMLogoutAck::GetTypeName() const {
  return "im.CMLogoutAck";
}


// ===================================================================

void CMKickoutNotification::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMKickoutNotification::kSUserIdFieldNumber;
const int CMKickoutNotification::kIpFieldNumber;
const int CMKickoutNotification::kPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMKickoutNotification::CMKickoutNotification()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2ecm_2eproto::scc_info_CMKickoutNotification.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.CMKickoutNotification)
}
CMKickoutNotification::CMKickoutNotification(const CMKickoutNotification& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip().size() > 0) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  port_ = from.port_;
  // @@protoc_insertion_point(copy_constructor:im.CMKickoutNotification)
}

void CMKickoutNotification::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0u;
}

CMKickoutNotification::~CMKickoutNotification() {
  // @@protoc_insertion_point(destructor:im.CMKickoutNotification)
  SharedDtor();
}

void CMKickoutNotification::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMKickoutNotification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMKickoutNotification& CMKickoutNotification::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2ecm_2eproto::scc_info_CMKickoutNotification.base);
  return *internal_default_instance();
}


void CMKickoutNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:im.CMKickoutNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0u;
  _internal_metadata_.Clear();
}

bool CMKickoutNotification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.CMKickoutNotification)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.CMKickoutNotification.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ip = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip().data(), static_cast<int>(this->ip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.CMKickoutNotification.ip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 port = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.CMKickoutNotification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.CMKickoutNotification)
  return false;
#undef DO_
}

void CMKickoutNotification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.CMKickoutNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.CMKickoutNotification.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string ip = 2;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), static_cast<int>(this->ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.CMKickoutNotification.ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->ip(), output);
  }

  // uint32 port = 3;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->port(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.CMKickoutNotification)
}

size_t CMKickoutNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.CMKickoutNotification)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string ip = 2;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip());
  }

  // uint32 port = 3;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMKickoutNotification::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CMKickoutNotification*>(&from));
}

void CMKickoutNotification::MergeFrom(const CMKickoutNotification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.CMKickoutNotification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.ip().size() > 0) {

    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
}

void CMKickoutNotification::CopyFrom(const CMKickoutNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.CMKickoutNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMKickoutNotification::IsInitialized() const {
  return true;
}

void CMKickoutNotification::Swap(CMKickoutNotification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMKickoutNotification::InternalSwap(CMKickoutNotification* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ip_.Swap(&other->ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(port_, other->port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string CMKickoutNotification::GetTypeName() const {
  return "im.CMKickoutNotification";
}


// ===================================================================

void CMLoginNotify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMLoginNotify::kSUserIdFieldNumber;
const int CMLoginNotify::kSIpFieldNumber;
const int CMLoginNotify::kNPortFieldNumber;
const int CMLoginNotify::kNotifyTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMLoginNotify::CMLoginNotify()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2ecm_2eproto::scc_info_CMLoginNotify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.CMLoginNotify)
}
CMLoginNotify::CMLoginNotify(const CMLoginNotify& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  sip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sip().size() > 0) {
    sip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sip_);
  }
  ::memcpy(&nport_, &from.nport_,
    static_cast<size_t>(reinterpret_cast<char*>(&notifytype_) -
    reinterpret_cast<char*>(&nport_)) + sizeof(notifytype_));
  // @@protoc_insertion_point(copy_constructor:im.CMLoginNotify)
}

void CMLoginNotify::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nport_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&notifytype_) -
      reinterpret_cast<char*>(&nport_)) + sizeof(notifytype_));
}

CMLoginNotify::~CMLoginNotify() {
  // @@protoc_insertion_point(destructor:im.CMLoginNotify)
  SharedDtor();
}

void CMLoginNotify::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMLoginNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMLoginNotify& CMLoginNotify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2ecm_2eproto::scc_info_CMLoginNotify.base);
  return *internal_default_instance();
}


void CMLoginNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:im.CMLoginNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nport_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&notifytype_) -
      reinterpret_cast<char*>(&nport_)) + sizeof(notifytype_));
  _internal_metadata_.Clear();
}

bool CMLoginNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.CMLoginNotify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.CMLoginNotify.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sIp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sip().data(), static_cast<int>(this->sip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.CMLoginNotify.sIp"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nPort = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.CMLoginNotifyType notifyType = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_notifytype(static_cast< ::im::CMLoginNotifyType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.CMLoginNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.CMLoginNotify)
  return false;
#undef DO_
}

void CMLoginNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.CMLoginNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.CMLoginNotify.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string sIp = 2;
  if (this->sip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sip().data(), static_cast<int>(this->sip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.CMLoginNotify.sIp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sip(), output);
  }

  // uint32 nPort = 3;
  if (this->nport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->nport(), output);
  }

  // .im.CMLoginNotifyType notifyType = 4;
  if (this->notifytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->notifytype(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.CMLoginNotify)
}

size_t CMLoginNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.CMLoginNotify)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sIp = 2;
  if (this->sip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sip());
  }

  // uint32 nPort = 3;
  if (this->nport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nport());
  }

  // .im.CMLoginNotifyType notifyType = 4;
  if (this->notifytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->notifytype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMLoginNotify::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CMLoginNotify*>(&from));
}

void CMLoginNotify::MergeFrom(const CMLoginNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.CMLoginNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.sip().size() > 0) {

    sip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sip_);
  }
  if (from.nport() != 0) {
    set_nport(from.nport());
  }
  if (from.notifytype() != 0) {
    set_notifytype(from.notifytype());
  }
}

void CMLoginNotify::CopyFrom(const CMLoginNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.CMLoginNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMLoginNotify::IsInitialized() const {
  return true;
}

void CMLoginNotify::Swap(CMLoginNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMLoginNotify::InternalSwap(CMLoginNotify* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sip_.Swap(&other->sip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(nport_, other->nport_);
  swap(notifytype_, other->notifytype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string CMLoginNotify::GetTypeName() const {
  return "im.CMLoginNotify";
}


// ===================================================================

void CMLoginNotifyAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMLoginNotifyAck::kSUserIdFieldNumber;
const int CMLoginNotifyAck::kNErrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMLoginNotifyAck::CMLoginNotifyAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2ecm_2eproto::scc_info_CMLoginNotifyAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.CMLoginNotifyAck)
}
CMLoginNotifyAck::CMLoginNotifyAck(const CMLoginNotifyAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  nerr_ = from.nerr_;
  // @@protoc_insertion_point(copy_constructor:im.CMLoginNotifyAck)
}

void CMLoginNotifyAck::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nerr_ = 0;
}

CMLoginNotifyAck::~CMLoginNotifyAck() {
  // @@protoc_insertion_point(destructor:im.CMLoginNotifyAck)
  SharedDtor();
}

void CMLoginNotifyAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMLoginNotifyAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMLoginNotifyAck& CMLoginNotifyAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2ecm_2eproto::scc_info_CMLoginNotifyAck.base);
  return *internal_default_instance();
}


void CMLoginNotifyAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.CMLoginNotifyAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nerr_ = 0;
  _internal_metadata_.Clear();
}

bool CMLoginNotifyAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.CMLoginNotifyAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.CMLoginNotifyAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode nErr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_nerr(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.CMLoginNotifyAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.CMLoginNotifyAck)
  return false;
#undef DO_
}

void CMLoginNotifyAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.CMLoginNotifyAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.CMLoginNotifyAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // .im.ErrCode nErr = 2;
  if (this->nerr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->nerr(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.CMLoginNotifyAck)
}

size_t CMLoginNotifyAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.CMLoginNotifyAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // .im.ErrCode nErr = 2;
  if (this->nerr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->nerr());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMLoginNotifyAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CMLoginNotifyAck*>(&from));
}

void CMLoginNotifyAck::MergeFrom(const CMLoginNotifyAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.CMLoginNotifyAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.nerr() != 0) {
    set_nerr(from.nerr());
  }
}

void CMLoginNotifyAck::CopyFrom(const CMLoginNotifyAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.CMLoginNotifyAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMLoginNotifyAck::IsInitialized() const {
  return true;
}

void CMLoginNotifyAck::Swap(CMLoginNotifyAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMLoginNotifyAck::InternalSwap(CMLoginNotifyAck* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(nerr_, other->nerr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string CMLoginNotifyAck::GetTypeName() const {
  return "im.CMLoginNotifyAck";
}


// ===================================================================

void LoginCMNotify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginCMNotify::kSUserIdFieldNumber;
const int LoginCMNotify::kNotifyTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginCMNotify::LoginCMNotify()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2ecm_2eproto::scc_info_LoginCMNotify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.LoginCMNotify)
}
LoginCMNotify::LoginCMNotify(const LoginCMNotify& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  notifytype_ = from.notifytype_;
  // @@protoc_insertion_point(copy_constructor:im.LoginCMNotify)
}

void LoginCMNotify::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  notifytype_ = 0;
}

LoginCMNotify::~LoginCMNotify() {
  // @@protoc_insertion_point(destructor:im.LoginCMNotify)
  SharedDtor();
}

void LoginCMNotify::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginCMNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LoginCMNotify& LoginCMNotify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2ecm_2eproto::scc_info_LoginCMNotify.base);
  return *internal_default_instance();
}


void LoginCMNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:im.LoginCMNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  notifytype_ = 0;
  _internal_metadata_.Clear();
}

bool LoginCMNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.LoginCMNotify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.LoginCMNotify.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.LoginCMNotifyType notifyType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_notifytype(static_cast< ::im::LoginCMNotifyType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.LoginCMNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.LoginCMNotify)
  return false;
#undef DO_
}

void LoginCMNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.LoginCMNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.LoginCMNotify.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // .im.LoginCMNotifyType notifyType = 2;
  if (this->notifytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->notifytype(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.LoginCMNotify)
}

size_t LoginCMNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.LoginCMNotify)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // .im.LoginCMNotifyType notifyType = 2;
  if (this->notifytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->notifytype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoginCMNotify::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const LoginCMNotify*>(&from));
}

void LoginCMNotify::MergeFrom(const LoginCMNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.LoginCMNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.notifytype() != 0) {
    set_notifytype(from.notifytype());
  }
}

void LoginCMNotify::CopyFrom(const LoginCMNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.LoginCMNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginCMNotify::IsInitialized() const {
  return true;
}

void LoginCMNotify::Swap(LoginCMNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginCMNotify::InternalSwap(LoginCMNotify* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(notifytype_, other->notifytype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string LoginCMNotify::GetTypeName() const {
  return "im.LoginCMNotify";
}


// ===================================================================

void LoginCMNotifyAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginCMNotifyAck::kSUserIdFieldNumber;
const int LoginCMNotifyAck::kNErrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginCMNotifyAck::LoginCMNotifyAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2ecm_2eproto::scc_info_LoginCMNotifyAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.LoginCMNotifyAck)
}
LoginCMNotifyAck::LoginCMNotifyAck(const LoginCMNotifyAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  nerr_ = from.nerr_;
  // @@protoc_insertion_point(copy_constructor:im.LoginCMNotifyAck)
}

void LoginCMNotifyAck::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nerr_ = 0;
}

LoginCMNotifyAck::~LoginCMNotifyAck() {
  // @@protoc_insertion_point(destructor:im.LoginCMNotifyAck)
  SharedDtor();
}

void LoginCMNotifyAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginCMNotifyAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LoginCMNotifyAck& LoginCMNotifyAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2ecm_2eproto::scc_info_LoginCMNotifyAck.base);
  return *internal_default_instance();
}


void LoginCMNotifyAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.LoginCMNotifyAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nerr_ = 0;
  _internal_metadata_.Clear();
}

bool LoginCMNotifyAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.LoginCMNotifyAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.LoginCMNotifyAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode nErr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_nerr(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.LoginCMNotifyAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.LoginCMNotifyAck)
  return false;
#undef DO_
}

void LoginCMNotifyAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.LoginCMNotifyAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.LoginCMNotifyAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // .im.ErrCode nErr = 2;
  if (this->nerr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->nerr(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.LoginCMNotifyAck)
}

size_t LoginCMNotifyAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.LoginCMNotifyAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // .im.ErrCode nErr = 2;
  if (this->nerr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->nerr());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoginCMNotifyAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const LoginCMNotifyAck*>(&from));
}

void LoginCMNotifyAck::MergeFrom(const LoginCMNotifyAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.LoginCMNotifyAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.nerr() != 0) {
    set_nerr(from.nerr());
  }
}

void LoginCMNotifyAck::CopyFrom(const LoginCMNotifyAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.LoginCMNotifyAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginCMNotifyAck::IsInitialized() const {
  return true;
}

void LoginCMNotifyAck::Swap(LoginCMNotifyAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginCMNotifyAck::InternalSwap(LoginCMNotifyAck* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(nerr_, other->nerr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string LoginCMNotifyAck::GetTypeName() const {
  return "im.LoginCMNotifyAck";
}


// ===================================================================

void CMLoginTrans::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMLoginTrans::kSUserIdFieldNumber;
const int CMLoginTrans::kSLoginTokenFieldNumber;
const int CMLoginTrans::kSDeviceTokenFieldNumber;
const int CMLoginTrans::kNLoginTimeFieldNumber;
const int CMLoginTrans::kSLoginIpFieldNumber;
const int CMLoginTrans::kNLoginPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMLoginTrans::CMLoginTrans()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2ecm_2eproto::scc_info_CMLoginTrans.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.CMLoginTrans)
}
CMLoginTrans::CMLoginTrans(const CMLoginTrans& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  slogintoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.slogintoken().size() > 0) {
    slogintoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.slogintoken_);
  }
  sdevicetoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sdevicetoken().size() > 0) {
    sdevicetoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdevicetoken_);
  }
  sloginip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sloginip().size() > 0) {
    sloginip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sloginip_);
  }
  ::memcpy(&nlogintime_, &from.nlogintime_,
    static_cast<size_t>(reinterpret_cast<char*>(&nloginport_) -
    reinterpret_cast<char*>(&nlogintime_)) + sizeof(nloginport_));
  // @@protoc_insertion_point(copy_constructor:im.CMLoginTrans)
}

void CMLoginTrans::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  slogintoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdevicetoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sloginip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nlogintime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nloginport_) -
      reinterpret_cast<char*>(&nlogintime_)) + sizeof(nloginport_));
}

CMLoginTrans::~CMLoginTrans() {
  // @@protoc_insertion_point(destructor:im.CMLoginTrans)
  SharedDtor();
}

void CMLoginTrans::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  slogintoken_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdevicetoken_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sloginip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMLoginTrans::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMLoginTrans& CMLoginTrans::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2ecm_2eproto::scc_info_CMLoginTrans.base);
  return *internal_default_instance();
}


void CMLoginTrans::Clear() {
// @@protoc_insertion_point(message_clear_start:im.CMLoginTrans)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  slogintoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdevicetoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sloginip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nlogintime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nloginport_) -
      reinterpret_cast<char*>(&nlogintime_)) + sizeof(nloginport_));
  _internal_metadata_.Clear();
}

bool CMLoginTrans::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.CMLoginTrans)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.CMLoginTrans.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sLoginToken = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_slogintoken()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->slogintoken().data(), static_cast<int>(this->slogintoken().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.CMLoginTrans.sLoginToken"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sDeviceToken = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sdevicetoken()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sdevicetoken().data(), static_cast<int>(this->sdevicetoken().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.CMLoginTrans.sDeviceToken"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 nLoginTime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &nlogintime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sLoginIp = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sloginip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sloginip().data(), static_cast<int>(this->sloginip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.CMLoginTrans.sLoginIp"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nLoginPort = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nloginport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.CMLoginTrans)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.CMLoginTrans)
  return false;
#undef DO_
}

void CMLoginTrans::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.CMLoginTrans)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.CMLoginTrans.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string sLoginToken = 2;
  if (this->slogintoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->slogintoken().data(), static_cast<int>(this->slogintoken().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.CMLoginTrans.sLoginToken");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->slogintoken(), output);
  }

  // string sDeviceToken = 3;
  if (this->sdevicetoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sdevicetoken().data(), static_cast<int>(this->sdevicetoken().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.CMLoginTrans.sDeviceToken");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sdevicetoken(), output);
  }

  // uint64 nLoginTime = 4;
  if (this->nlogintime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->nlogintime(), output);
  }

  // string sLoginIp = 5;
  if (this->sloginip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sloginip().data(), static_cast<int>(this->sloginip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.CMLoginTrans.sLoginIp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->sloginip(), output);
  }

  // uint32 nLoginPort = 6;
  if (this->nloginport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->nloginport(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.CMLoginTrans)
}

size_t CMLoginTrans::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.CMLoginTrans)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sLoginToken = 2;
  if (this->slogintoken().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->slogintoken());
  }

  // string sDeviceToken = 3;
  if (this->sdevicetoken().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sdevicetoken());
  }

  // string sLoginIp = 5;
  if (this->sloginip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sloginip());
  }

  // uint64 nLoginTime = 4;
  if (this->nlogintime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->nlogintime());
  }

  // uint32 nLoginPort = 6;
  if (this->nloginport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nloginport());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMLoginTrans::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CMLoginTrans*>(&from));
}

void CMLoginTrans::MergeFrom(const CMLoginTrans& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.CMLoginTrans)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.slogintoken().size() > 0) {

    slogintoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.slogintoken_);
  }
  if (from.sdevicetoken().size() > 0) {

    sdevicetoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdevicetoken_);
  }
  if (from.sloginip().size() > 0) {

    sloginip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sloginip_);
  }
  if (from.nlogintime() != 0) {
    set_nlogintime(from.nlogintime());
  }
  if (from.nloginport() != 0) {
    set_nloginport(from.nloginport());
  }
}

void CMLoginTrans::CopyFrom(const CMLoginTrans& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.CMLoginTrans)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMLoginTrans::IsInitialized() const {
  return true;
}

void CMLoginTrans::Swap(CMLoginTrans* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMLoginTrans::InternalSwap(CMLoginTrans* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  slogintoken_.Swap(&other->slogintoken_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sdevicetoken_.Swap(&other->sdevicetoken_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sloginip_.Swap(&other->sloginip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(nlogintime_, other->nlogintime_);
  swap(nloginport_, other->nloginport_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string CMLoginTrans::GetTypeName() const {
  return "im.CMLoginTrans";
}


// ===================================================================

void CMPHPLoginNotify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMPHPLoginNotify::kSUserIdFieldNumber;
const int CMPHPLoginNotify::kMsgTimeFieldNumber;
const int CMPHPLoginNotify::kLoginTypeFieldNumber;
const int CMPHPLoginNotify::kExtendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMPHPLoginNotify::CMPHPLoginNotify()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2ecm_2eproto::scc_info_CMPHPLoginNotify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.CMPHPLoginNotify)
}
CMPHPLoginNotify::CMPHPLoginNotify(const CMPHPLoginNotify& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extend().size() > 0) {
    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  ::memcpy(&msgtime_, &from.msgtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&logintype_) -
    reinterpret_cast<char*>(&msgtime_)) + sizeof(logintype_));
  // @@protoc_insertion_point(copy_constructor:im.CMPHPLoginNotify)
}

void CMPHPLoginNotify::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&logintype_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(logintype_));
}

CMPHPLoginNotify::~CMPHPLoginNotify() {
  // @@protoc_insertion_point(destructor:im.CMPHPLoginNotify)
  SharedDtor();
}

void CMPHPLoginNotify::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMPHPLoginNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMPHPLoginNotify& CMPHPLoginNotify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2ecm_2eproto::scc_info_CMPHPLoginNotify.base);
  return *internal_default_instance();
}


void CMPHPLoginNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:im.CMPHPLoginNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&logintype_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(logintype_));
  _internal_metadata_.Clear();
}

bool CMPHPLoginNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.CMPHPLoginNotify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.CMPHPLoginNotify.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgTime = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.PHPLoginNotifyType loginType = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_logintype(static_cast< ::im::PHPLoginNotifyType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string extend = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extend()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extend().data(), static_cast<int>(this->extend().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.CMPHPLoginNotify.extend"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.CMPHPLoginNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.CMPHPLoginNotify)
  return false;
#undef DO_
}

void CMPHPLoginNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.CMPHPLoginNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.CMPHPLoginNotify.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // uint64 msgTime = 2;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->msgtime(), output);
  }

  // .im.PHPLoginNotifyType loginType = 3;
  if (this->logintype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->logintype(), output);
  }

  // string extend = 4;
  if (this->extend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extend().data(), static_cast<int>(this->extend().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.CMPHPLoginNotify.extend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->extend(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.CMPHPLoginNotify)
}

size_t CMPHPLoginNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.CMPHPLoginNotify)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string extend = 4;
  if (this->extend().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extend());
  }

  // uint64 msgTime = 2;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // .im.PHPLoginNotifyType loginType = 3;
  if (this->logintype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->logintype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMPHPLoginNotify::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CMPHPLoginNotify*>(&from));
}

void CMPHPLoginNotify::MergeFrom(const CMPHPLoginNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.CMPHPLoginNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.extend().size() > 0) {

    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.logintype() != 0) {
    set_logintype(from.logintype());
  }
}

void CMPHPLoginNotify::CopyFrom(const CMPHPLoginNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.CMPHPLoginNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMPHPLoginNotify::IsInitialized() const {
  return true;
}

void CMPHPLoginNotify::Swap(CMPHPLoginNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMPHPLoginNotify::InternalSwap(CMPHPLoginNotify* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  extend_.Swap(&other->extend_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgtime_, other->msgtime_);
  swap(logintype_, other->logintype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string CMPHPLoginNotify::GetTypeName() const {
  return "im.CMPHPLoginNotify";
}


// ===================================================================

void CMPHPLoginNotifyACK::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMPHPLoginNotifyACK::kSUserIdFieldNumber;
const int CMPHPLoginNotifyACK::kMsgTimeFieldNumber;
const int CMPHPLoginNotifyACK::kNErrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMPHPLoginNotifyACK::CMPHPLoginNotifyACK()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2ecm_2eproto::scc_info_CMPHPLoginNotifyACK.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.CMPHPLoginNotifyACK)
}
CMPHPLoginNotifyACK::CMPHPLoginNotifyACK(const CMPHPLoginNotifyACK& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  ::memcpy(&msgtime_, &from.msgtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&nerr_) -
    reinterpret_cast<char*>(&msgtime_)) + sizeof(nerr_));
  // @@protoc_insertion_point(copy_constructor:im.CMPHPLoginNotifyACK)
}

void CMPHPLoginNotifyACK::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nerr_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(nerr_));
}

CMPHPLoginNotifyACK::~CMPHPLoginNotifyACK() {
  // @@protoc_insertion_point(destructor:im.CMPHPLoginNotifyACK)
  SharedDtor();
}

void CMPHPLoginNotifyACK::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMPHPLoginNotifyACK::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMPHPLoginNotifyACK& CMPHPLoginNotifyACK::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2ecm_2eproto::scc_info_CMPHPLoginNotifyACK.base);
  return *internal_default_instance();
}


void CMPHPLoginNotifyACK::Clear() {
// @@protoc_insertion_point(message_clear_start:im.CMPHPLoginNotifyACK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nerr_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(nerr_));
  _internal_metadata_.Clear();
}

bool CMPHPLoginNotifyACK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.CMPHPLoginNotifyACK)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.CMPHPLoginNotifyACK.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgTime = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode nErr = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_nerr(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.CMPHPLoginNotifyACK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.CMPHPLoginNotifyACK)
  return false;
#undef DO_
}

void CMPHPLoginNotifyACK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.CMPHPLoginNotifyACK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.CMPHPLoginNotifyACK.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // uint64 msgTime = 2;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->msgtime(), output);
  }

  // .im.ErrCode nErr = 3;
  if (this->nerr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->nerr(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.CMPHPLoginNotifyACK)
}

size_t CMPHPLoginNotifyACK::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.CMPHPLoginNotifyACK)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // uint64 msgTime = 2;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // .im.ErrCode nErr = 3;
  if (this->nerr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->nerr());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMPHPLoginNotifyACK::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CMPHPLoginNotifyACK*>(&from));
}

void CMPHPLoginNotifyACK::MergeFrom(const CMPHPLoginNotifyACK& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.CMPHPLoginNotifyACK)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.nerr() != 0) {
    set_nerr(from.nerr());
  }
}

void CMPHPLoginNotifyACK::CopyFrom(const CMPHPLoginNotifyACK& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.CMPHPLoginNotifyACK)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMPHPLoginNotifyACK::IsInitialized() const {
  return true;
}

void CMPHPLoginNotifyACK::Swap(CMPHPLoginNotifyACK* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMPHPLoginNotifyACK::InternalSwap(CMPHPLoginNotifyACK* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgtime_, other->msgtime_);
  swap(nerr_, other->nerr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string CMPHPLoginNotifyACK::GetTypeName() const {
  return "im.CMPHPLoginNotifyACK";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace im
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::CMLogin* Arena::CreateMaybeMessage< ::im::CMLogin >(Arena* arena) {
  return Arena::CreateInternal< ::im::CMLogin >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::CMLoginAck* Arena::CreateMaybeMessage< ::im::CMLoginAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::CMLoginAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::CMLogout* Arena::CreateMaybeMessage< ::im::CMLogout >(Arena* arena) {
  return Arena::CreateInternal< ::im::CMLogout >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::CMLogoutAck* Arena::CreateMaybeMessage< ::im::CMLogoutAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::CMLogoutAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::CMKickoutNotification* Arena::CreateMaybeMessage< ::im::CMKickoutNotification >(Arena* arena) {
  return Arena::CreateInternal< ::im::CMKickoutNotification >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::CMLoginNotify* Arena::CreateMaybeMessage< ::im::CMLoginNotify >(Arena* arena) {
  return Arena::CreateInternal< ::im::CMLoginNotify >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::CMLoginNotifyAck* Arena::CreateMaybeMessage< ::im::CMLoginNotifyAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::CMLoginNotifyAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::LoginCMNotify* Arena::CreateMaybeMessage< ::im::LoginCMNotify >(Arena* arena) {
  return Arena::CreateInternal< ::im::LoginCMNotify >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::LoginCMNotifyAck* Arena::CreateMaybeMessage< ::im::LoginCMNotifyAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::LoginCMNotifyAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::CMLoginTrans* Arena::CreateMaybeMessage< ::im::CMLoginTrans >(Arena* arena) {
  return Arena::CreateInternal< ::im::CMLoginTrans >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::CMPHPLoginNotify* Arena::CreateMaybeMessage< ::im::CMPHPLoginNotify >(Arena* arena) {
  return Arena::CreateInternal< ::im::CMPHPLoginNotify >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::CMPHPLoginNotifyACK* Arena::CreateMaybeMessage< ::im::CMPHPLoginNotifyACK >(Arena* arena) {
  return Arena::CreateInternal< ::im::CMPHPLoginNotifyACK >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
