// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: im.sig.proto

#include "im.sig.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace im {
class SIGSponsorCallDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SIGSponsorCall>
      _instance;
} _SIGSponsorCall_default_instance_;
class SIGSponsorCallAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SIGSponsorCallAck>
      _instance;
} _SIGSponsorCallAck_default_instance_;
class SIGSponsorCallDeliverAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SIGSponsorCallDeliverAck>
      _instance;
} _SIGSponsorCallDeliverAck_default_instance_;
class SIGSponsorCallAnsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SIGSponsorCallAns>
      _instance;
} _SIGSponsorCallAns_default_instance_;
class SIGSponsorCallAnsAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SIGSponsorCallAnsAck>
      _instance;
} _SIGSponsorCallAnsAck_default_instance_;
class SIGSponsorCallAnsDeliverACKDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SIGSponsorCallAnsDeliverACK>
      _instance;
} _SIGSponsorCallAnsDeliverACK_default_instance_;
class SIGP2PCallExchangeNatInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SIGP2PCallExchangeNatInfo>
      _instance;
} _SIGP2PCallExchangeNatInfo_default_instance_;
class SIGP2PCallExchangeNatInfoAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SIGP2PCallExchangeNatInfoAck>
      _instance;
} _SIGP2PCallExchangeNatInfoAck_default_instance_;
class SIGP2PCallExchangeNatInfoDeliverAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SIGP2PCallExchangeNatInfoDeliverAck>
      _instance;
} _SIGP2PCallExchangeNatInfoDeliverAck_default_instance_;
class SIGHangUpDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SIGHangUp>
      _instance;
} _SIGHangUp_default_instance_;
class SIGHangUpAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SIGHangUpAck>
      _instance;
} _SIGHangUpAck_default_instance_;
class SIGHangUpDeliverAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SIGHangUpDeliverAck>
      _instance;
} _SIGHangUpDeliverAck_default_instance_;
class SIGP2PCallStateNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SIGP2PCallStateNotify>
      _instance;
} _SIGP2PCallStateNotify_default_instance_;
class SIGP2PCallStateNotifyACKDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SIGP2PCallStateNotifyACK>
      _instance;
} _SIGP2PCallStateNotifyACK_default_instance_;
class SIGP2PCallStateNotifyDeliverAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SIGP2PCallStateNotifyDeliverAck>
      _instance;
} _SIGP2PCallStateNotifyDeliverAck_default_instance_;
}  // namespace im
namespace protobuf_im_2esig_2eproto {
static void InitDefaultsSIGSponsorCall() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_SIGSponsorCall_default_instance_;
    new (ptr) ::im::SIGSponsorCall();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::SIGSponsorCall::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SIGSponsorCall =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSIGSponsorCall}, {}};

static void InitDefaultsSIGSponsorCallAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_SIGSponsorCallAck_default_instance_;
    new (ptr) ::im::SIGSponsorCallAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::SIGSponsorCallAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SIGSponsorCallAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSIGSponsorCallAck}, {}};

static void InitDefaultsSIGSponsorCallDeliverAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_SIGSponsorCallDeliverAck_default_instance_;
    new (ptr) ::im::SIGSponsorCallDeliverAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::SIGSponsorCallDeliverAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SIGSponsorCallDeliverAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSIGSponsorCallDeliverAck}, {}};

static void InitDefaultsSIGSponsorCallAns() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_SIGSponsorCallAns_default_instance_;
    new (ptr) ::im::SIGSponsorCallAns();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::SIGSponsorCallAns::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SIGSponsorCallAns =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSIGSponsorCallAns}, {}};

static void InitDefaultsSIGSponsorCallAnsAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_SIGSponsorCallAnsAck_default_instance_;
    new (ptr) ::im::SIGSponsorCallAnsAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::SIGSponsorCallAnsAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SIGSponsorCallAnsAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSIGSponsorCallAnsAck}, {}};

static void InitDefaultsSIGSponsorCallAnsDeliverACK() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_SIGSponsorCallAnsDeliverACK_default_instance_;
    new (ptr) ::im::SIGSponsorCallAnsDeliverACK();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::SIGSponsorCallAnsDeliverACK::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SIGSponsorCallAnsDeliverACK =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSIGSponsorCallAnsDeliverACK}, {}};

static void InitDefaultsSIGP2PCallExchangeNatInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_SIGP2PCallExchangeNatInfo_default_instance_;
    new (ptr) ::im::SIGP2PCallExchangeNatInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::SIGP2PCallExchangeNatInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SIGP2PCallExchangeNatInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSIGP2PCallExchangeNatInfo}, {}};

static void InitDefaultsSIGP2PCallExchangeNatInfoAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_SIGP2PCallExchangeNatInfoAck_default_instance_;
    new (ptr) ::im::SIGP2PCallExchangeNatInfoAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::SIGP2PCallExchangeNatInfoAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SIGP2PCallExchangeNatInfoAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSIGP2PCallExchangeNatInfoAck}, {}};

static void InitDefaultsSIGP2PCallExchangeNatInfoDeliverAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_SIGP2PCallExchangeNatInfoDeliverAck_default_instance_;
    new (ptr) ::im::SIGP2PCallExchangeNatInfoDeliverAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::SIGP2PCallExchangeNatInfoDeliverAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SIGP2PCallExchangeNatInfoDeliverAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSIGP2PCallExchangeNatInfoDeliverAck}, {}};

static void InitDefaultsSIGHangUp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_SIGHangUp_default_instance_;
    new (ptr) ::im::SIGHangUp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::SIGHangUp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SIGHangUp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSIGHangUp}, {}};

static void InitDefaultsSIGHangUpAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_SIGHangUpAck_default_instance_;
    new (ptr) ::im::SIGHangUpAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::SIGHangUpAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SIGHangUpAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSIGHangUpAck}, {}};

static void InitDefaultsSIGHangUpDeliverAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_SIGHangUpDeliverAck_default_instance_;
    new (ptr) ::im::SIGHangUpDeliverAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::SIGHangUpDeliverAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SIGHangUpDeliverAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSIGHangUpDeliverAck}, {}};

static void InitDefaultsSIGP2PCallStateNotify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_SIGP2PCallStateNotify_default_instance_;
    new (ptr) ::im::SIGP2PCallStateNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::SIGP2PCallStateNotify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SIGP2PCallStateNotify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSIGP2PCallStateNotify}, {}};

static void InitDefaultsSIGP2PCallStateNotifyACK() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_SIGP2PCallStateNotifyACK_default_instance_;
    new (ptr) ::im::SIGP2PCallStateNotifyACK();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::SIGP2PCallStateNotifyACK::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SIGP2PCallStateNotifyACK =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSIGP2PCallStateNotifyACK}, {}};

static void InitDefaultsSIGP2PCallStateNotifyDeliverAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_SIGP2PCallStateNotifyDeliverAck_default_instance_;
    new (ptr) ::im::SIGP2PCallStateNotifyDeliverAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::SIGP2PCallStateNotifyDeliverAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SIGP2PCallStateNotifyDeliverAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSIGP2PCallStateNotifyDeliverAck}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_SIGSponsorCall.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SIGSponsorCallAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SIGSponsorCallDeliverAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SIGSponsorCallAns.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SIGSponsorCallAnsAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SIGSponsorCallAnsDeliverACK.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SIGP2PCallExchangeNatInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SIGP2PCallExchangeNatInfoAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SIGP2PCallExchangeNatInfoDeliverAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SIGHangUp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SIGHangUpAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SIGHangUpDeliverAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SIGP2PCallStateNotify.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SIGP2PCallStateNotifyACK.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SIGP2PCallStateNotifyDeliverAck.base);
}

}  // namespace protobuf_im_2esig_2eproto
namespace im {

// ===================================================================

void SIGSponsorCall::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SIGSponsorCall::kSFromIdFieldNumber;
const int SIGSponsorCall::kSInviteIdFieldNumber;
const int SIGSponsorCall::kSMsgIdFieldNumber;
const int SIGSponsorCall::kMsgTimeFieldNumber;
const int SIGSponsorCall::kEncryptFieldNumber;
const int SIGSponsorCall::kSContentFieldNumber;
const int SIGSponsorCall::kCallTypeFieldNumber;
const int SIGSponsorCall::kScallIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SIGSponsorCall::SIGSponsorCall()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2esig_2eproto::scc_info_SIGSponsorCall.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.SIGSponsorCall)
}
SIGSponsorCall::SIGSponsorCall(const SIGSponsorCall& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sfromid().size() > 0) {
    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  sinviteid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sinviteid().size() > 0) {
    sinviteid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sinviteid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  scontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.scontent().size() > 0) {
    scontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scontent_);
  }
  scallid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.scallid().size() > 0) {
    scallid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scallid_);
  }
  ::memcpy(&msgtime_, &from.msgtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&calltype_) -
    reinterpret_cast<char*>(&msgtime_)) + sizeof(calltype_));
  // @@protoc_insertion_point(copy_constructor:im.SIGSponsorCall)
}

void SIGSponsorCall::SharedCtor() {
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sinviteid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scallid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&calltype_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(calltype_));
}

SIGSponsorCall::~SIGSponsorCall() {
  // @@protoc_insertion_point(destructor:im.SIGSponsorCall)
  SharedDtor();
}

void SIGSponsorCall::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sinviteid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scallid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SIGSponsorCall::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SIGSponsorCall& SIGSponsorCall::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2esig_2eproto::scc_info_SIGSponsorCall.base);
  return *internal_default_instance();
}


void SIGSponsorCall::Clear() {
// @@protoc_insertion_point(message_clear_start:im.SIGSponsorCall)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sinviteid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scallid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&calltype_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(calltype_));
  _internal_metadata_.Clear();
}

bool SIGSponsorCall::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.SIGSponsorCall)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sFromId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), static_cast<int>(this->sfromid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGSponsorCall.sFromId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sInviteId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sinviteid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sinviteid().data(), static_cast<int>(this->sinviteid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGSponsorCall.sInviteId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGSponsorCall.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgTime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 encrypt = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &encrypt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sContent = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scontent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scontent().data(), static_cast<int>(this->scontent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGSponsorCall.sContent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 callType = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &calltype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string scallId = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scallid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scallid().data(), static_cast<int>(this->scallid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGSponsorCall.scallId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.SIGSponsorCall)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.SIGSponsorCall)
  return false;
#undef DO_
}

void SIGSponsorCall::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.SIGSponsorCall)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), static_cast<int>(this->sfromid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGSponsorCall.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // string sInviteId = 2;
  if (this->sinviteid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sinviteid().data(), static_cast<int>(this->sinviteid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGSponsorCall.sInviteId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sinviteid(), output);
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGSponsorCall.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // uint64 msgTime = 4;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->msgtime(), output);
  }

  // uint32 encrypt = 5;
  if (this->encrypt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->encrypt(), output);
  }

  // string sContent = 6;
  if (this->scontent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scontent().data(), static_cast<int>(this->scontent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGSponsorCall.sContent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->scontent(), output);
  }

  // uint32 callType = 7;
  if (this->calltype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->calltype(), output);
  }

  // string scallId = 8;
  if (this->scallid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scallid().data(), static_cast<int>(this->scallid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGSponsorCall.scallId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->scallid(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.SIGSponsorCall)
}

size_t SIGSponsorCall::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.SIGSponsorCall)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // string sInviteId = 2;
  if (this->sinviteid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sinviteid());
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // string sContent = 6;
  if (this->scontent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scontent());
  }

  // string scallId = 8;
  if (this->scallid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scallid());
  }

  // uint64 msgTime = 4;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // uint32 encrypt = 5;
  if (this->encrypt() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->encrypt());
  }

  // uint32 callType = 7;
  if (this->calltype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->calltype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SIGSponsorCall::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SIGSponsorCall*>(&from));
}

void SIGSponsorCall::MergeFrom(const SIGSponsorCall& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.SIGSponsorCall)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.sinviteid().size() > 0) {

    sinviteid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sinviteid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.scontent().size() > 0) {

    scontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scontent_);
  }
  if (from.scallid().size() > 0) {

    scallid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scallid_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.encrypt() != 0) {
    set_encrypt(from.encrypt());
  }
  if (from.calltype() != 0) {
    set_calltype(from.calltype());
  }
}

void SIGSponsorCall::CopyFrom(const SIGSponsorCall& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.SIGSponsorCall)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SIGSponsorCall::IsInitialized() const {
  return true;
}

void SIGSponsorCall::Swap(SIGSponsorCall* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SIGSponsorCall::InternalSwap(SIGSponsorCall* other) {
  using std::swap;
  sfromid_.Swap(&other->sfromid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sinviteid_.Swap(&other->sinviteid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  scontent_.Swap(&other->scontent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  scallid_.Swap(&other->scallid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgtime_, other->msgtime_);
  swap(encrypt_, other->encrypt_);
  swap(calltype_, other->calltype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string SIGSponsorCall::GetTypeName() const {
  return "im.SIGSponsorCall";
}


// ===================================================================

void SIGSponsorCallAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SIGSponsorCallAck::kSToIdFieldNumber;
const int SIGSponsorCallAck::kSMsgIdFieldNumber;
const int SIGSponsorCallAck::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SIGSponsorCallAck::SIGSponsorCallAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2esig_2eproto::scc_info_SIGSponsorCallAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.SIGSponsorCallAck)
}
SIGSponsorCallAck::SIGSponsorCallAck(const SIGSponsorCallAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stoid().size() > 0) {
    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  errcode_ = from.errcode_;
  // @@protoc_insertion_point(copy_constructor:im.SIGSponsorCallAck)
}

void SIGSponsorCallAck::SharedCtor() {
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

SIGSponsorCallAck::~SIGSponsorCallAck() {
  // @@protoc_insertion_point(destructor:im.SIGSponsorCallAck)
  SharedDtor();
}

void SIGSponsorCallAck::SharedDtor() {
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SIGSponsorCallAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SIGSponsorCallAck& SIGSponsorCallAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2esig_2eproto::scc_info_SIGSponsorCallAck.base);
  return *internal_default_instance();
}


void SIGSponsorCallAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.SIGSponsorCallAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
  _internal_metadata_.Clear();
}

bool SIGSponsorCallAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.SIGSponsorCallAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sToId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), static_cast<int>(this->stoid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGSponsorCallAck.sToId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGSponsorCallAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode errcode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.SIGSponsorCallAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.SIGSponsorCallAck)
  return false;
#undef DO_
}

void SIGSponsorCallAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.SIGSponsorCallAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sToId = 1;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), static_cast<int>(this->stoid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGSponsorCallAck.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->stoid(), output);
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGSponsorCallAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  // .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->errcode(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.SIGSponsorCallAck)
}

size_t SIGSponsorCallAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.SIGSponsorCallAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sToId = 1;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SIGSponsorCallAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SIGSponsorCallAck*>(&from));
}

void SIGSponsorCallAck::MergeFrom(const SIGSponsorCallAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.SIGSponsorCallAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void SIGSponsorCallAck::CopyFrom(const SIGSponsorCallAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.SIGSponsorCallAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SIGSponsorCallAck::IsInitialized() const {
  return true;
}

void SIGSponsorCallAck::Swap(SIGSponsorCallAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SIGSponsorCallAck::InternalSwap(SIGSponsorCallAck* other) {
  using std::swap;
  stoid_.Swap(&other->stoid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(errcode_, other->errcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string SIGSponsorCallAck::GetTypeName() const {
  return "im.SIGSponsorCallAck";
}


// ===================================================================

void SIGSponsorCallDeliverAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SIGSponsorCallDeliverAck::kSUserIdFieldNumber;
const int SIGSponsorCallDeliverAck::kSMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SIGSponsorCallDeliverAck::SIGSponsorCallDeliverAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2esig_2eproto::scc_info_SIGSponsorCallDeliverAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.SIGSponsorCallDeliverAck)
}
SIGSponsorCallDeliverAck::SIGSponsorCallDeliverAck(const SIGSponsorCallDeliverAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  // @@protoc_insertion_point(copy_constructor:im.SIGSponsorCallDeliverAck)
}

void SIGSponsorCallDeliverAck::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SIGSponsorCallDeliverAck::~SIGSponsorCallDeliverAck() {
  // @@protoc_insertion_point(destructor:im.SIGSponsorCallDeliverAck)
  SharedDtor();
}

void SIGSponsorCallDeliverAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SIGSponsorCallDeliverAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SIGSponsorCallDeliverAck& SIGSponsorCallDeliverAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2esig_2eproto::scc_info_SIGSponsorCallDeliverAck.base);
  return *internal_default_instance();
}


void SIGSponsorCallDeliverAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.SIGSponsorCallDeliverAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SIGSponsorCallDeliverAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.SIGSponsorCallDeliverAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGSponsorCallDeliverAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGSponsorCallDeliverAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.SIGSponsorCallDeliverAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.SIGSponsorCallDeliverAck)
  return false;
#undef DO_
}

void SIGSponsorCallDeliverAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.SIGSponsorCallDeliverAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGSponsorCallDeliverAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGSponsorCallDeliverAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.SIGSponsorCallDeliverAck)
}

size_t SIGSponsorCallDeliverAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.SIGSponsorCallDeliverAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SIGSponsorCallDeliverAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SIGSponsorCallDeliverAck*>(&from));
}

void SIGSponsorCallDeliverAck::MergeFrom(const SIGSponsorCallDeliverAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.SIGSponsorCallDeliverAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
}

void SIGSponsorCallDeliverAck::CopyFrom(const SIGSponsorCallDeliverAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.SIGSponsorCallDeliverAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SIGSponsorCallDeliverAck::IsInitialized() const {
  return true;
}

void SIGSponsorCallDeliverAck::Swap(SIGSponsorCallDeliverAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SIGSponsorCallDeliverAck::InternalSwap(SIGSponsorCallDeliverAck* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string SIGSponsorCallDeliverAck::GetTypeName() const {
  return "im.SIGSponsorCallDeliverAck";
}


// ===================================================================

void SIGSponsorCallAns::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SIGSponsorCallAns::kSFromIdFieldNumber;
const int SIGSponsorCallAns::kSToIdFieldNumber;
const int SIGSponsorCallAns::kSMsgIdFieldNumber;
const int SIGSponsorCallAns::kMsgTimeFieldNumber;
const int SIGSponsorCallAns::kEncryptFieldNumber;
const int SIGSponsorCallAns::kSContentFieldNumber;
const int SIGSponsorCallAns::kErrcodeFieldNumber;
const int SIGSponsorCallAns::kScallIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SIGSponsorCallAns::SIGSponsorCallAns()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2esig_2eproto::scc_info_SIGSponsorCallAns.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.SIGSponsorCallAns)
}
SIGSponsorCallAns::SIGSponsorCallAns(const SIGSponsorCallAns& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sfromid().size() > 0) {
    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stoid().size() > 0) {
    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  scontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.scontent().size() > 0) {
    scontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scontent_);
  }
  scallid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.scallid().size() > 0) {
    scallid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scallid_);
  }
  ::memcpy(&msgtime_, &from.msgtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&errcode_) -
    reinterpret_cast<char*>(&msgtime_)) + sizeof(errcode_));
  // @@protoc_insertion_point(copy_constructor:im.SIGSponsorCallAns)
}

void SIGSponsorCallAns::SharedCtor() {
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scallid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&errcode_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(errcode_));
}

SIGSponsorCallAns::~SIGSponsorCallAns() {
  // @@protoc_insertion_point(destructor:im.SIGSponsorCallAns)
  SharedDtor();
}

void SIGSponsorCallAns::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scallid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SIGSponsorCallAns::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SIGSponsorCallAns& SIGSponsorCallAns::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2esig_2eproto::scc_info_SIGSponsorCallAns.base);
  return *internal_default_instance();
}


void SIGSponsorCallAns::Clear() {
// @@protoc_insertion_point(message_clear_start:im.SIGSponsorCallAns)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scallid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&errcode_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(errcode_));
  _internal_metadata_.Clear();
}

bool SIGSponsorCallAns::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.SIGSponsorCallAns)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sFromId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), static_cast<int>(this->sfromid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGSponsorCallAns.sFromId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sToId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), static_cast<int>(this->stoid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGSponsorCallAns.sToId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGSponsorCallAns.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgTime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 encrypt = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &encrypt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sContent = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scontent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scontent().data(), static_cast<int>(this->scontent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGSponsorCallAns.sContent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode errcode = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string scallId = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scallid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scallid().data(), static_cast<int>(this->scallid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGSponsorCallAns.scallId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.SIGSponsorCallAns)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.SIGSponsorCallAns)
  return false;
#undef DO_
}

void SIGSponsorCallAns::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.SIGSponsorCallAns)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), static_cast<int>(this->sfromid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGSponsorCallAns.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // string sToId = 2;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), static_cast<int>(this->stoid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGSponsorCallAns.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stoid(), output);
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGSponsorCallAns.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // uint64 msgTime = 4;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->msgtime(), output);
  }

  // uint32 encrypt = 5;
  if (this->encrypt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->encrypt(), output);
  }

  // string sContent = 6;
  if (this->scontent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scontent().data(), static_cast<int>(this->scontent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGSponsorCallAns.sContent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->scontent(), output);
  }

  // .im.ErrCode errcode = 7;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->errcode(), output);
  }

  // string scallId = 8;
  if (this->scallid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scallid().data(), static_cast<int>(this->scallid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGSponsorCallAns.scallId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->scallid(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.SIGSponsorCallAns)
}

size_t SIGSponsorCallAns::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.SIGSponsorCallAns)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // string sToId = 2;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // string sContent = 6;
  if (this->scontent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scontent());
  }

  // string scallId = 8;
  if (this->scallid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scallid());
  }

  // uint64 msgTime = 4;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // uint32 encrypt = 5;
  if (this->encrypt() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->encrypt());
  }

  // .im.ErrCode errcode = 7;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SIGSponsorCallAns::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SIGSponsorCallAns*>(&from));
}

void SIGSponsorCallAns::MergeFrom(const SIGSponsorCallAns& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.SIGSponsorCallAns)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.scontent().size() > 0) {

    scontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scontent_);
  }
  if (from.scallid().size() > 0) {

    scallid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scallid_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.encrypt() != 0) {
    set_encrypt(from.encrypt());
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void SIGSponsorCallAns::CopyFrom(const SIGSponsorCallAns& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.SIGSponsorCallAns)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SIGSponsorCallAns::IsInitialized() const {
  return true;
}

void SIGSponsorCallAns::Swap(SIGSponsorCallAns* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SIGSponsorCallAns::InternalSwap(SIGSponsorCallAns* other) {
  using std::swap;
  sfromid_.Swap(&other->sfromid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  stoid_.Swap(&other->stoid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  scontent_.Swap(&other->scontent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  scallid_.Swap(&other->scallid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgtime_, other->msgtime_);
  swap(encrypt_, other->encrypt_);
  swap(errcode_, other->errcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string SIGSponsorCallAns::GetTypeName() const {
  return "im.SIGSponsorCallAns";
}


// ===================================================================

void SIGSponsorCallAnsAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SIGSponsorCallAnsAck::kSToIdFieldNumber;
const int SIGSponsorCallAnsAck::kSMsgIdFieldNumber;
const int SIGSponsorCallAnsAck::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SIGSponsorCallAnsAck::SIGSponsorCallAnsAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2esig_2eproto::scc_info_SIGSponsorCallAnsAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.SIGSponsorCallAnsAck)
}
SIGSponsorCallAnsAck::SIGSponsorCallAnsAck(const SIGSponsorCallAnsAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stoid().size() > 0) {
    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  errcode_ = from.errcode_;
  // @@protoc_insertion_point(copy_constructor:im.SIGSponsorCallAnsAck)
}

void SIGSponsorCallAnsAck::SharedCtor() {
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

SIGSponsorCallAnsAck::~SIGSponsorCallAnsAck() {
  // @@protoc_insertion_point(destructor:im.SIGSponsorCallAnsAck)
  SharedDtor();
}

void SIGSponsorCallAnsAck::SharedDtor() {
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SIGSponsorCallAnsAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SIGSponsorCallAnsAck& SIGSponsorCallAnsAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2esig_2eproto::scc_info_SIGSponsorCallAnsAck.base);
  return *internal_default_instance();
}


void SIGSponsorCallAnsAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.SIGSponsorCallAnsAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
  _internal_metadata_.Clear();
}

bool SIGSponsorCallAnsAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.SIGSponsorCallAnsAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sToId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), static_cast<int>(this->stoid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGSponsorCallAnsAck.sToId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGSponsorCallAnsAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode errcode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.SIGSponsorCallAnsAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.SIGSponsorCallAnsAck)
  return false;
#undef DO_
}

void SIGSponsorCallAnsAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.SIGSponsorCallAnsAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sToId = 1;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), static_cast<int>(this->stoid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGSponsorCallAnsAck.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->stoid(), output);
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGSponsorCallAnsAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  // .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->errcode(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.SIGSponsorCallAnsAck)
}

size_t SIGSponsorCallAnsAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.SIGSponsorCallAnsAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sToId = 1;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SIGSponsorCallAnsAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SIGSponsorCallAnsAck*>(&from));
}

void SIGSponsorCallAnsAck::MergeFrom(const SIGSponsorCallAnsAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.SIGSponsorCallAnsAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void SIGSponsorCallAnsAck::CopyFrom(const SIGSponsorCallAnsAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.SIGSponsorCallAnsAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SIGSponsorCallAnsAck::IsInitialized() const {
  return true;
}

void SIGSponsorCallAnsAck::Swap(SIGSponsorCallAnsAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SIGSponsorCallAnsAck::InternalSwap(SIGSponsorCallAnsAck* other) {
  using std::swap;
  stoid_.Swap(&other->stoid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(errcode_, other->errcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string SIGSponsorCallAnsAck::GetTypeName() const {
  return "im.SIGSponsorCallAnsAck";
}


// ===================================================================

void SIGSponsorCallAnsDeliverACK::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SIGSponsorCallAnsDeliverACK::kSUserIdFieldNumber;
const int SIGSponsorCallAnsDeliverACK::kSMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SIGSponsorCallAnsDeliverACK::SIGSponsorCallAnsDeliverACK()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2esig_2eproto::scc_info_SIGSponsorCallAnsDeliverACK.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.SIGSponsorCallAnsDeliverACK)
}
SIGSponsorCallAnsDeliverACK::SIGSponsorCallAnsDeliverACK(const SIGSponsorCallAnsDeliverACK& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  // @@protoc_insertion_point(copy_constructor:im.SIGSponsorCallAnsDeliverACK)
}

void SIGSponsorCallAnsDeliverACK::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SIGSponsorCallAnsDeliverACK::~SIGSponsorCallAnsDeliverACK() {
  // @@protoc_insertion_point(destructor:im.SIGSponsorCallAnsDeliverACK)
  SharedDtor();
}

void SIGSponsorCallAnsDeliverACK::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SIGSponsorCallAnsDeliverACK::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SIGSponsorCallAnsDeliverACK& SIGSponsorCallAnsDeliverACK::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2esig_2eproto::scc_info_SIGSponsorCallAnsDeliverACK.base);
  return *internal_default_instance();
}


void SIGSponsorCallAnsDeliverACK::Clear() {
// @@protoc_insertion_point(message_clear_start:im.SIGSponsorCallAnsDeliverACK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SIGSponsorCallAnsDeliverACK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.SIGSponsorCallAnsDeliverACK)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGSponsorCallAnsDeliverACK.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGSponsorCallAnsDeliverACK.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.SIGSponsorCallAnsDeliverACK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.SIGSponsorCallAnsDeliverACK)
  return false;
#undef DO_
}

void SIGSponsorCallAnsDeliverACK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.SIGSponsorCallAnsDeliverACK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGSponsorCallAnsDeliverACK.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGSponsorCallAnsDeliverACK.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.SIGSponsorCallAnsDeliverACK)
}

size_t SIGSponsorCallAnsDeliverACK::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.SIGSponsorCallAnsDeliverACK)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SIGSponsorCallAnsDeliverACK::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SIGSponsorCallAnsDeliverACK*>(&from));
}

void SIGSponsorCallAnsDeliverACK::MergeFrom(const SIGSponsorCallAnsDeliverACK& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.SIGSponsorCallAnsDeliverACK)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
}

void SIGSponsorCallAnsDeliverACK::CopyFrom(const SIGSponsorCallAnsDeliverACK& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.SIGSponsorCallAnsDeliverACK)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SIGSponsorCallAnsDeliverACK::IsInitialized() const {
  return true;
}

void SIGSponsorCallAnsDeliverACK::Swap(SIGSponsorCallAnsDeliverACK* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SIGSponsorCallAnsDeliverACK::InternalSwap(SIGSponsorCallAnsDeliverACK* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string SIGSponsorCallAnsDeliverACK::GetTypeName() const {
  return "im.SIGSponsorCallAnsDeliverACK";
}


// ===================================================================

void SIGP2PCallExchangeNatInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SIGP2PCallExchangeNatInfo::kSFromIdFieldNumber;
const int SIGP2PCallExchangeNatInfo::kSToIdFieldNumber;
const int SIGP2PCallExchangeNatInfo::kSMsgIdFieldNumber;
const int SIGP2PCallExchangeNatInfo::kSContentFieldNumber;
const int SIGP2PCallExchangeNatInfo::kMsgTimeFieldNumber;
const int SIGP2PCallExchangeNatInfo::kScallIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SIGP2PCallExchangeNatInfo::SIGP2PCallExchangeNatInfo()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2esig_2eproto::scc_info_SIGP2PCallExchangeNatInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.SIGP2PCallExchangeNatInfo)
}
SIGP2PCallExchangeNatInfo::SIGP2PCallExchangeNatInfo(const SIGP2PCallExchangeNatInfo& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sfromid().size() > 0) {
    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stoid().size() > 0) {
    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  scontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.scontent().size() > 0) {
    scontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scontent_);
  }
  scallid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.scallid().size() > 0) {
    scallid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scallid_);
  }
  msgtime_ = from.msgtime_;
  // @@protoc_insertion_point(copy_constructor:im.SIGP2PCallExchangeNatInfo)
}

void SIGP2PCallExchangeNatInfo::SharedCtor() {
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scallid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgtime_ = GOOGLE_ULONGLONG(0);
}

SIGP2PCallExchangeNatInfo::~SIGP2PCallExchangeNatInfo() {
  // @@protoc_insertion_point(destructor:im.SIGP2PCallExchangeNatInfo)
  SharedDtor();
}

void SIGP2PCallExchangeNatInfo::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scallid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SIGP2PCallExchangeNatInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SIGP2PCallExchangeNatInfo& SIGP2PCallExchangeNatInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2esig_2eproto::scc_info_SIGP2PCallExchangeNatInfo.base);
  return *internal_default_instance();
}


void SIGP2PCallExchangeNatInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:im.SIGP2PCallExchangeNatInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scallid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgtime_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool SIGP2PCallExchangeNatInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.SIGP2PCallExchangeNatInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sFromId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), static_cast<int>(this->sfromid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGP2PCallExchangeNatInfo.sFromId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sToId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), static_cast<int>(this->stoid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGP2PCallExchangeNatInfo.sToId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGP2PCallExchangeNatInfo.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sContent = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scontent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scontent().data(), static_cast<int>(this->scontent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGP2PCallExchangeNatInfo.sContent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgTime = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string scallId = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scallid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scallid().data(), static_cast<int>(this->scallid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGP2PCallExchangeNatInfo.scallId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.SIGP2PCallExchangeNatInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.SIGP2PCallExchangeNatInfo)
  return false;
#undef DO_
}

void SIGP2PCallExchangeNatInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.SIGP2PCallExchangeNatInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), static_cast<int>(this->sfromid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGP2PCallExchangeNatInfo.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // string sToId = 2;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), static_cast<int>(this->stoid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGP2PCallExchangeNatInfo.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stoid(), output);
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGP2PCallExchangeNatInfo.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // string sContent = 4;
  if (this->scontent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scontent().data(), static_cast<int>(this->scontent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGP2PCallExchangeNatInfo.sContent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->scontent(), output);
  }

  // uint64 msgTime = 5;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->msgtime(), output);
  }

  // string scallId = 6;
  if (this->scallid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scallid().data(), static_cast<int>(this->scallid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGP2PCallExchangeNatInfo.scallId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->scallid(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.SIGP2PCallExchangeNatInfo)
}

size_t SIGP2PCallExchangeNatInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.SIGP2PCallExchangeNatInfo)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // string sToId = 2;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // string sContent = 4;
  if (this->scontent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scontent());
  }

  // string scallId = 6;
  if (this->scallid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scallid());
  }

  // uint64 msgTime = 5;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SIGP2PCallExchangeNatInfo::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SIGP2PCallExchangeNatInfo*>(&from));
}

void SIGP2PCallExchangeNatInfo::MergeFrom(const SIGP2PCallExchangeNatInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.SIGP2PCallExchangeNatInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.scontent().size() > 0) {

    scontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scontent_);
  }
  if (from.scallid().size() > 0) {

    scallid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scallid_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
}

void SIGP2PCallExchangeNatInfo::CopyFrom(const SIGP2PCallExchangeNatInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.SIGP2PCallExchangeNatInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SIGP2PCallExchangeNatInfo::IsInitialized() const {
  return true;
}

void SIGP2PCallExchangeNatInfo::Swap(SIGP2PCallExchangeNatInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SIGP2PCallExchangeNatInfo::InternalSwap(SIGP2PCallExchangeNatInfo* other) {
  using std::swap;
  sfromid_.Swap(&other->sfromid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  stoid_.Swap(&other->stoid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  scontent_.Swap(&other->scontent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  scallid_.Swap(&other->scallid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgtime_, other->msgtime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string SIGP2PCallExchangeNatInfo::GetTypeName() const {
  return "im.SIGP2PCallExchangeNatInfo";
}


// ===================================================================

void SIGP2PCallExchangeNatInfoAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SIGP2PCallExchangeNatInfoAck::kSToIdFieldNumber;
const int SIGP2PCallExchangeNatInfoAck::kSMsgIdFieldNumber;
const int SIGP2PCallExchangeNatInfoAck::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SIGP2PCallExchangeNatInfoAck::SIGP2PCallExchangeNatInfoAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2esig_2eproto::scc_info_SIGP2PCallExchangeNatInfoAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.SIGP2PCallExchangeNatInfoAck)
}
SIGP2PCallExchangeNatInfoAck::SIGP2PCallExchangeNatInfoAck(const SIGP2PCallExchangeNatInfoAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stoid().size() > 0) {
    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  errcode_ = from.errcode_;
  // @@protoc_insertion_point(copy_constructor:im.SIGP2PCallExchangeNatInfoAck)
}

void SIGP2PCallExchangeNatInfoAck::SharedCtor() {
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

SIGP2PCallExchangeNatInfoAck::~SIGP2PCallExchangeNatInfoAck() {
  // @@protoc_insertion_point(destructor:im.SIGP2PCallExchangeNatInfoAck)
  SharedDtor();
}

void SIGP2PCallExchangeNatInfoAck::SharedDtor() {
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SIGP2PCallExchangeNatInfoAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SIGP2PCallExchangeNatInfoAck& SIGP2PCallExchangeNatInfoAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2esig_2eproto::scc_info_SIGP2PCallExchangeNatInfoAck.base);
  return *internal_default_instance();
}


void SIGP2PCallExchangeNatInfoAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.SIGP2PCallExchangeNatInfoAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
  _internal_metadata_.Clear();
}

bool SIGP2PCallExchangeNatInfoAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.SIGP2PCallExchangeNatInfoAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sToId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), static_cast<int>(this->stoid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGP2PCallExchangeNatInfoAck.sToId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGP2PCallExchangeNatInfoAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode errcode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.SIGP2PCallExchangeNatInfoAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.SIGP2PCallExchangeNatInfoAck)
  return false;
#undef DO_
}

void SIGP2PCallExchangeNatInfoAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.SIGP2PCallExchangeNatInfoAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sToId = 1;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), static_cast<int>(this->stoid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGP2PCallExchangeNatInfoAck.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->stoid(), output);
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGP2PCallExchangeNatInfoAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  // .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->errcode(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.SIGP2PCallExchangeNatInfoAck)
}

size_t SIGP2PCallExchangeNatInfoAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.SIGP2PCallExchangeNatInfoAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sToId = 1;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SIGP2PCallExchangeNatInfoAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SIGP2PCallExchangeNatInfoAck*>(&from));
}

void SIGP2PCallExchangeNatInfoAck::MergeFrom(const SIGP2PCallExchangeNatInfoAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.SIGP2PCallExchangeNatInfoAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void SIGP2PCallExchangeNatInfoAck::CopyFrom(const SIGP2PCallExchangeNatInfoAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.SIGP2PCallExchangeNatInfoAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SIGP2PCallExchangeNatInfoAck::IsInitialized() const {
  return true;
}

void SIGP2PCallExchangeNatInfoAck::Swap(SIGP2PCallExchangeNatInfoAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SIGP2PCallExchangeNatInfoAck::InternalSwap(SIGP2PCallExchangeNatInfoAck* other) {
  using std::swap;
  stoid_.Swap(&other->stoid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(errcode_, other->errcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string SIGP2PCallExchangeNatInfoAck::GetTypeName() const {
  return "im.SIGP2PCallExchangeNatInfoAck";
}


// ===================================================================

void SIGP2PCallExchangeNatInfoDeliverAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SIGP2PCallExchangeNatInfoDeliverAck::kSUserIdFieldNumber;
const int SIGP2PCallExchangeNatInfoDeliverAck::kSMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SIGP2PCallExchangeNatInfoDeliverAck::SIGP2PCallExchangeNatInfoDeliverAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2esig_2eproto::scc_info_SIGP2PCallExchangeNatInfoDeliverAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.SIGP2PCallExchangeNatInfoDeliverAck)
}
SIGP2PCallExchangeNatInfoDeliverAck::SIGP2PCallExchangeNatInfoDeliverAck(const SIGP2PCallExchangeNatInfoDeliverAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  // @@protoc_insertion_point(copy_constructor:im.SIGP2PCallExchangeNatInfoDeliverAck)
}

void SIGP2PCallExchangeNatInfoDeliverAck::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SIGP2PCallExchangeNatInfoDeliverAck::~SIGP2PCallExchangeNatInfoDeliverAck() {
  // @@protoc_insertion_point(destructor:im.SIGP2PCallExchangeNatInfoDeliverAck)
  SharedDtor();
}

void SIGP2PCallExchangeNatInfoDeliverAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SIGP2PCallExchangeNatInfoDeliverAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SIGP2PCallExchangeNatInfoDeliverAck& SIGP2PCallExchangeNatInfoDeliverAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2esig_2eproto::scc_info_SIGP2PCallExchangeNatInfoDeliverAck.base);
  return *internal_default_instance();
}


void SIGP2PCallExchangeNatInfoDeliverAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.SIGP2PCallExchangeNatInfoDeliverAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SIGP2PCallExchangeNatInfoDeliverAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.SIGP2PCallExchangeNatInfoDeliverAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGP2PCallExchangeNatInfoDeliverAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGP2PCallExchangeNatInfoDeliverAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.SIGP2PCallExchangeNatInfoDeliverAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.SIGP2PCallExchangeNatInfoDeliverAck)
  return false;
#undef DO_
}

void SIGP2PCallExchangeNatInfoDeliverAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.SIGP2PCallExchangeNatInfoDeliverAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGP2PCallExchangeNatInfoDeliverAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGP2PCallExchangeNatInfoDeliverAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.SIGP2PCallExchangeNatInfoDeliverAck)
}

size_t SIGP2PCallExchangeNatInfoDeliverAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.SIGP2PCallExchangeNatInfoDeliverAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SIGP2PCallExchangeNatInfoDeliverAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SIGP2PCallExchangeNatInfoDeliverAck*>(&from));
}

void SIGP2PCallExchangeNatInfoDeliverAck::MergeFrom(const SIGP2PCallExchangeNatInfoDeliverAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.SIGP2PCallExchangeNatInfoDeliverAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
}

void SIGP2PCallExchangeNatInfoDeliverAck::CopyFrom(const SIGP2PCallExchangeNatInfoDeliverAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.SIGP2PCallExchangeNatInfoDeliverAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SIGP2PCallExchangeNatInfoDeliverAck::IsInitialized() const {
  return true;
}

void SIGP2PCallExchangeNatInfoDeliverAck::Swap(SIGP2PCallExchangeNatInfoDeliverAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SIGP2PCallExchangeNatInfoDeliverAck::InternalSwap(SIGP2PCallExchangeNatInfoDeliverAck* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string SIGP2PCallExchangeNatInfoDeliverAck::GetTypeName() const {
  return "im.SIGP2PCallExchangeNatInfoDeliverAck";
}


// ===================================================================

void SIGHangUp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SIGHangUp::kSFromIdFieldNumber;
const int SIGHangUp::kSToIdFieldNumber;
const int SIGHangUp::kSMsgIdFieldNumber;
const int SIGHangUp::kMsgTimeFieldNumber;
const int SIGHangUp::kScallIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SIGHangUp::SIGHangUp()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2esig_2eproto::scc_info_SIGHangUp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.SIGHangUp)
}
SIGHangUp::SIGHangUp(const SIGHangUp& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sfromid().size() > 0) {
    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stoid().size() > 0) {
    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  scallid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.scallid().size() > 0) {
    scallid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scallid_);
  }
  msgtime_ = from.msgtime_;
  // @@protoc_insertion_point(copy_constructor:im.SIGHangUp)
}

void SIGHangUp::SharedCtor() {
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scallid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgtime_ = GOOGLE_ULONGLONG(0);
}

SIGHangUp::~SIGHangUp() {
  // @@protoc_insertion_point(destructor:im.SIGHangUp)
  SharedDtor();
}

void SIGHangUp::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scallid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SIGHangUp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SIGHangUp& SIGHangUp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2esig_2eproto::scc_info_SIGHangUp.base);
  return *internal_default_instance();
}


void SIGHangUp::Clear() {
// @@protoc_insertion_point(message_clear_start:im.SIGHangUp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scallid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgtime_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool SIGHangUp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.SIGHangUp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sFromId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), static_cast<int>(this->sfromid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGHangUp.sFromId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sToId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), static_cast<int>(this->stoid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGHangUp.sToId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGHangUp.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgTime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string scallId = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scallid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scallid().data(), static_cast<int>(this->scallid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGHangUp.scallId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.SIGHangUp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.SIGHangUp)
  return false;
#undef DO_
}

void SIGHangUp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.SIGHangUp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), static_cast<int>(this->sfromid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGHangUp.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // string sToId = 2;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), static_cast<int>(this->stoid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGHangUp.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stoid(), output);
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGHangUp.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // uint64 msgTime = 4;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->msgtime(), output);
  }

  // string scallId = 5;
  if (this->scallid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scallid().data(), static_cast<int>(this->scallid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGHangUp.scallId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->scallid(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.SIGHangUp)
}

size_t SIGHangUp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.SIGHangUp)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // string sToId = 2;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // string scallId = 5;
  if (this->scallid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scallid());
  }

  // uint64 msgTime = 4;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SIGHangUp::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SIGHangUp*>(&from));
}

void SIGHangUp::MergeFrom(const SIGHangUp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.SIGHangUp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.scallid().size() > 0) {

    scallid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scallid_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
}

void SIGHangUp::CopyFrom(const SIGHangUp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.SIGHangUp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SIGHangUp::IsInitialized() const {
  return true;
}

void SIGHangUp::Swap(SIGHangUp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SIGHangUp::InternalSwap(SIGHangUp* other) {
  using std::swap;
  sfromid_.Swap(&other->sfromid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  stoid_.Swap(&other->stoid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  scallid_.Swap(&other->scallid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgtime_, other->msgtime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string SIGHangUp::GetTypeName() const {
  return "im.SIGHangUp";
}


// ===================================================================

void SIGHangUpAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SIGHangUpAck::kSToIdFieldNumber;
const int SIGHangUpAck::kSMsgIdFieldNumber;
const int SIGHangUpAck::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SIGHangUpAck::SIGHangUpAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2esig_2eproto::scc_info_SIGHangUpAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.SIGHangUpAck)
}
SIGHangUpAck::SIGHangUpAck(const SIGHangUpAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stoid().size() > 0) {
    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  errcode_ = from.errcode_;
  // @@protoc_insertion_point(copy_constructor:im.SIGHangUpAck)
}

void SIGHangUpAck::SharedCtor() {
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

SIGHangUpAck::~SIGHangUpAck() {
  // @@protoc_insertion_point(destructor:im.SIGHangUpAck)
  SharedDtor();
}

void SIGHangUpAck::SharedDtor() {
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SIGHangUpAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SIGHangUpAck& SIGHangUpAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2esig_2eproto::scc_info_SIGHangUpAck.base);
  return *internal_default_instance();
}


void SIGHangUpAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.SIGHangUpAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
  _internal_metadata_.Clear();
}

bool SIGHangUpAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.SIGHangUpAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sToId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), static_cast<int>(this->stoid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGHangUpAck.sToId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGHangUpAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode errcode = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.SIGHangUpAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.SIGHangUpAck)
  return false;
#undef DO_
}

void SIGHangUpAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.SIGHangUpAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sToId = 1;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), static_cast<int>(this->stoid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGHangUpAck.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->stoid(), output);
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGHangUpAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  // .im.ErrCode errcode = 5;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->errcode(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.SIGHangUpAck)
}

size_t SIGHangUpAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.SIGHangUpAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sToId = 1;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // .im.ErrCode errcode = 5;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SIGHangUpAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SIGHangUpAck*>(&from));
}

void SIGHangUpAck::MergeFrom(const SIGHangUpAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.SIGHangUpAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void SIGHangUpAck::CopyFrom(const SIGHangUpAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.SIGHangUpAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SIGHangUpAck::IsInitialized() const {
  return true;
}

void SIGHangUpAck::Swap(SIGHangUpAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SIGHangUpAck::InternalSwap(SIGHangUpAck* other) {
  using std::swap;
  stoid_.Swap(&other->stoid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(errcode_, other->errcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string SIGHangUpAck::GetTypeName() const {
  return "im.SIGHangUpAck";
}


// ===================================================================

void SIGHangUpDeliverAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SIGHangUpDeliverAck::kSUserIdFieldNumber;
const int SIGHangUpDeliverAck::kSMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SIGHangUpDeliverAck::SIGHangUpDeliverAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2esig_2eproto::scc_info_SIGHangUpDeliverAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.SIGHangUpDeliverAck)
}
SIGHangUpDeliverAck::SIGHangUpDeliverAck(const SIGHangUpDeliverAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  // @@protoc_insertion_point(copy_constructor:im.SIGHangUpDeliverAck)
}

void SIGHangUpDeliverAck::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SIGHangUpDeliverAck::~SIGHangUpDeliverAck() {
  // @@protoc_insertion_point(destructor:im.SIGHangUpDeliverAck)
  SharedDtor();
}

void SIGHangUpDeliverAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SIGHangUpDeliverAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SIGHangUpDeliverAck& SIGHangUpDeliverAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2esig_2eproto::scc_info_SIGHangUpDeliverAck.base);
  return *internal_default_instance();
}


void SIGHangUpDeliverAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.SIGHangUpDeliverAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SIGHangUpDeliverAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.SIGHangUpDeliverAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGHangUpDeliverAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGHangUpDeliverAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.SIGHangUpDeliverAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.SIGHangUpDeliverAck)
  return false;
#undef DO_
}

void SIGHangUpDeliverAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.SIGHangUpDeliverAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGHangUpDeliverAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGHangUpDeliverAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.SIGHangUpDeliverAck)
}

size_t SIGHangUpDeliverAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.SIGHangUpDeliverAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SIGHangUpDeliverAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SIGHangUpDeliverAck*>(&from));
}

void SIGHangUpDeliverAck::MergeFrom(const SIGHangUpDeliverAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.SIGHangUpDeliverAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
}

void SIGHangUpDeliverAck::CopyFrom(const SIGHangUpDeliverAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.SIGHangUpDeliverAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SIGHangUpDeliverAck::IsInitialized() const {
  return true;
}

void SIGHangUpDeliverAck::Swap(SIGHangUpDeliverAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SIGHangUpDeliverAck::InternalSwap(SIGHangUpDeliverAck* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string SIGHangUpDeliverAck::GetTypeName() const {
  return "im.SIGHangUpDeliverAck";
}


// ===================================================================

void SIGP2PCallStateNotify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SIGP2PCallStateNotify::kSFromIdFieldNumber;
const int SIGP2PCallStateNotify::kSToIdFieldNumber;
const int SIGP2PCallStateNotify::kSMsgIdFieldNumber;
const int SIGP2PCallStateNotify::kMsgTimeFieldNumber;
const int SIGP2PCallStateNotify::kNotifyTypeFieldNumber;
const int SIGP2PCallStateNotify::kNotifyValueFieldNumber;
const int SIGP2PCallStateNotify::kScallIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SIGP2PCallStateNotify::SIGP2PCallStateNotify()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2esig_2eproto::scc_info_SIGP2PCallStateNotify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.SIGP2PCallStateNotify)
}
SIGP2PCallStateNotify::SIGP2PCallStateNotify(const SIGP2PCallStateNotify& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sfromid().size() > 0) {
    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stoid().size() > 0) {
    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  scallid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.scallid().size() > 0) {
    scallid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scallid_);
  }
  ::memcpy(&msgtime_, &from.msgtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&notifyvalue_) -
    reinterpret_cast<char*>(&msgtime_)) + sizeof(notifyvalue_));
  // @@protoc_insertion_point(copy_constructor:im.SIGP2PCallStateNotify)
}

void SIGP2PCallStateNotify::SharedCtor() {
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scallid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&notifyvalue_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(notifyvalue_));
}

SIGP2PCallStateNotify::~SIGP2PCallStateNotify() {
  // @@protoc_insertion_point(destructor:im.SIGP2PCallStateNotify)
  SharedDtor();
}

void SIGP2PCallStateNotify::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scallid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SIGP2PCallStateNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SIGP2PCallStateNotify& SIGP2PCallStateNotify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2esig_2eproto::scc_info_SIGP2PCallStateNotify.base);
  return *internal_default_instance();
}


void SIGP2PCallStateNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:im.SIGP2PCallStateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scallid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&notifyvalue_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(notifyvalue_));
  _internal_metadata_.Clear();
}

bool SIGP2PCallStateNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.SIGP2PCallStateNotify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sFromId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), static_cast<int>(this->sfromid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGP2PCallStateNotify.sFromId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sToId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), static_cast<int>(this->stoid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGP2PCallStateNotify.sToId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGP2PCallStateNotify.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgTime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 notifyType = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &notifytype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 notifyValue = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &notifyvalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string scallId = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scallid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scallid().data(), static_cast<int>(this->scallid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGP2PCallStateNotify.scallId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.SIGP2PCallStateNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.SIGP2PCallStateNotify)
  return false;
#undef DO_
}

void SIGP2PCallStateNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.SIGP2PCallStateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), static_cast<int>(this->sfromid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGP2PCallStateNotify.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // string sToId = 2;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), static_cast<int>(this->stoid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGP2PCallStateNotify.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stoid(), output);
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGP2PCallStateNotify.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // uint64 msgTime = 4;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->msgtime(), output);
  }

  // uint32 notifyType = 8;
  if (this->notifytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->notifytype(), output);
  }

  // uint32 notifyValue = 9;
  if (this->notifyvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->notifyvalue(), output);
  }

  // string scallId = 10;
  if (this->scallid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scallid().data(), static_cast<int>(this->scallid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGP2PCallStateNotify.scallId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->scallid(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.SIGP2PCallStateNotify)
}

size_t SIGP2PCallStateNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.SIGP2PCallStateNotify)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // string sToId = 2;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // string scallId = 10;
  if (this->scallid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scallid());
  }

  // uint64 msgTime = 4;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // uint32 notifyType = 8;
  if (this->notifytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->notifytype());
  }

  // uint32 notifyValue = 9;
  if (this->notifyvalue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->notifyvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SIGP2PCallStateNotify::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SIGP2PCallStateNotify*>(&from));
}

void SIGP2PCallStateNotify::MergeFrom(const SIGP2PCallStateNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.SIGP2PCallStateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.scallid().size() > 0) {

    scallid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scallid_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.notifytype() != 0) {
    set_notifytype(from.notifytype());
  }
  if (from.notifyvalue() != 0) {
    set_notifyvalue(from.notifyvalue());
  }
}

void SIGP2PCallStateNotify::CopyFrom(const SIGP2PCallStateNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.SIGP2PCallStateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SIGP2PCallStateNotify::IsInitialized() const {
  return true;
}

void SIGP2PCallStateNotify::Swap(SIGP2PCallStateNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SIGP2PCallStateNotify::InternalSwap(SIGP2PCallStateNotify* other) {
  using std::swap;
  sfromid_.Swap(&other->sfromid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  stoid_.Swap(&other->stoid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  scallid_.Swap(&other->scallid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgtime_, other->msgtime_);
  swap(notifytype_, other->notifytype_);
  swap(notifyvalue_, other->notifyvalue_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string SIGP2PCallStateNotify::GetTypeName() const {
  return "im.SIGP2PCallStateNotify";
}


// ===================================================================

void SIGP2PCallStateNotifyACK::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SIGP2PCallStateNotifyACK::kSToIdFieldNumber;
const int SIGP2PCallStateNotifyACK::kSMsgIdFieldNumber;
const int SIGP2PCallStateNotifyACK::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SIGP2PCallStateNotifyACK::SIGP2PCallStateNotifyACK()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2esig_2eproto::scc_info_SIGP2PCallStateNotifyACK.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.SIGP2PCallStateNotifyACK)
}
SIGP2PCallStateNotifyACK::SIGP2PCallStateNotifyACK(const SIGP2PCallStateNotifyACK& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stoid().size() > 0) {
    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  errcode_ = from.errcode_;
  // @@protoc_insertion_point(copy_constructor:im.SIGP2PCallStateNotifyACK)
}

void SIGP2PCallStateNotifyACK::SharedCtor() {
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

SIGP2PCallStateNotifyACK::~SIGP2PCallStateNotifyACK() {
  // @@protoc_insertion_point(destructor:im.SIGP2PCallStateNotifyACK)
  SharedDtor();
}

void SIGP2PCallStateNotifyACK::SharedDtor() {
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SIGP2PCallStateNotifyACK::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SIGP2PCallStateNotifyACK& SIGP2PCallStateNotifyACK::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2esig_2eproto::scc_info_SIGP2PCallStateNotifyACK.base);
  return *internal_default_instance();
}


void SIGP2PCallStateNotifyACK::Clear() {
// @@protoc_insertion_point(message_clear_start:im.SIGP2PCallStateNotifyACK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
  _internal_metadata_.Clear();
}

bool SIGP2PCallStateNotifyACK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.SIGP2PCallStateNotifyACK)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sToId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), static_cast<int>(this->stoid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGP2PCallStateNotifyACK.sToId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGP2PCallStateNotifyACK.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode errcode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.SIGP2PCallStateNotifyACK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.SIGP2PCallStateNotifyACK)
  return false;
#undef DO_
}

void SIGP2PCallStateNotifyACK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.SIGP2PCallStateNotifyACK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sToId = 1;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), static_cast<int>(this->stoid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGP2PCallStateNotifyACK.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->stoid(), output);
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGP2PCallStateNotifyACK.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  // .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->errcode(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.SIGP2PCallStateNotifyACK)
}

size_t SIGP2PCallStateNotifyACK::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.SIGP2PCallStateNotifyACK)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sToId = 1;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SIGP2PCallStateNotifyACK::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SIGP2PCallStateNotifyACK*>(&from));
}

void SIGP2PCallStateNotifyACK::MergeFrom(const SIGP2PCallStateNotifyACK& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.SIGP2PCallStateNotifyACK)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void SIGP2PCallStateNotifyACK::CopyFrom(const SIGP2PCallStateNotifyACK& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.SIGP2PCallStateNotifyACK)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SIGP2PCallStateNotifyACK::IsInitialized() const {
  return true;
}

void SIGP2PCallStateNotifyACK::Swap(SIGP2PCallStateNotifyACK* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SIGP2PCallStateNotifyACK::InternalSwap(SIGP2PCallStateNotifyACK* other) {
  using std::swap;
  stoid_.Swap(&other->stoid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(errcode_, other->errcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string SIGP2PCallStateNotifyACK::GetTypeName() const {
  return "im.SIGP2PCallStateNotifyACK";
}


// ===================================================================

void SIGP2PCallStateNotifyDeliverAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SIGP2PCallStateNotifyDeliverAck::kSUserIdFieldNumber;
const int SIGP2PCallStateNotifyDeliverAck::kSMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SIGP2PCallStateNotifyDeliverAck::SIGP2PCallStateNotifyDeliverAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2esig_2eproto::scc_info_SIGP2PCallStateNotifyDeliverAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.SIGP2PCallStateNotifyDeliverAck)
}
SIGP2PCallStateNotifyDeliverAck::SIGP2PCallStateNotifyDeliverAck(const SIGP2PCallStateNotifyDeliverAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  // @@protoc_insertion_point(copy_constructor:im.SIGP2PCallStateNotifyDeliverAck)
}

void SIGP2PCallStateNotifyDeliverAck::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SIGP2PCallStateNotifyDeliverAck::~SIGP2PCallStateNotifyDeliverAck() {
  // @@protoc_insertion_point(destructor:im.SIGP2PCallStateNotifyDeliverAck)
  SharedDtor();
}

void SIGP2PCallStateNotifyDeliverAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SIGP2PCallStateNotifyDeliverAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SIGP2PCallStateNotifyDeliverAck& SIGP2PCallStateNotifyDeliverAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2esig_2eproto::scc_info_SIGP2PCallStateNotifyDeliverAck.base);
  return *internal_default_instance();
}


void SIGP2PCallStateNotifyDeliverAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.SIGP2PCallStateNotifyDeliverAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SIGP2PCallStateNotifyDeliverAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.SIGP2PCallStateNotifyDeliverAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGP2PCallStateNotifyDeliverAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGP2PCallStateNotifyDeliverAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.SIGP2PCallStateNotifyDeliverAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.SIGP2PCallStateNotifyDeliverAck)
  return false;
#undef DO_
}

void SIGP2PCallStateNotifyDeliverAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.SIGP2PCallStateNotifyDeliverAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGP2PCallStateNotifyDeliverAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGP2PCallStateNotifyDeliverAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.SIGP2PCallStateNotifyDeliverAck)
}

size_t SIGP2PCallStateNotifyDeliverAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.SIGP2PCallStateNotifyDeliverAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SIGP2PCallStateNotifyDeliverAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SIGP2PCallStateNotifyDeliverAck*>(&from));
}

void SIGP2PCallStateNotifyDeliverAck::MergeFrom(const SIGP2PCallStateNotifyDeliverAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.SIGP2PCallStateNotifyDeliverAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
}

void SIGP2PCallStateNotifyDeliverAck::CopyFrom(const SIGP2PCallStateNotifyDeliverAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.SIGP2PCallStateNotifyDeliverAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SIGP2PCallStateNotifyDeliverAck::IsInitialized() const {
  return true;
}

void SIGP2PCallStateNotifyDeliverAck::Swap(SIGP2PCallStateNotifyDeliverAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SIGP2PCallStateNotifyDeliverAck::InternalSwap(SIGP2PCallStateNotifyDeliverAck* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string SIGP2PCallStateNotifyDeliverAck::GetTypeName() const {
  return "im.SIGP2PCallStateNotifyDeliverAck";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace im
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::SIGSponsorCall* Arena::CreateMaybeMessage< ::im::SIGSponsorCall >(Arena* arena) {
  return Arena::CreateInternal< ::im::SIGSponsorCall >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::SIGSponsorCallAck* Arena::CreateMaybeMessage< ::im::SIGSponsorCallAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::SIGSponsorCallAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::SIGSponsorCallDeliverAck* Arena::CreateMaybeMessage< ::im::SIGSponsorCallDeliverAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::SIGSponsorCallDeliverAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::SIGSponsorCallAns* Arena::CreateMaybeMessage< ::im::SIGSponsorCallAns >(Arena* arena) {
  return Arena::CreateInternal< ::im::SIGSponsorCallAns >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::SIGSponsorCallAnsAck* Arena::CreateMaybeMessage< ::im::SIGSponsorCallAnsAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::SIGSponsorCallAnsAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::SIGSponsorCallAnsDeliverACK* Arena::CreateMaybeMessage< ::im::SIGSponsorCallAnsDeliverACK >(Arena* arena) {
  return Arena::CreateInternal< ::im::SIGSponsorCallAnsDeliverACK >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::SIGP2PCallExchangeNatInfo* Arena::CreateMaybeMessage< ::im::SIGP2PCallExchangeNatInfo >(Arena* arena) {
  return Arena::CreateInternal< ::im::SIGP2PCallExchangeNatInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::SIGP2PCallExchangeNatInfoAck* Arena::CreateMaybeMessage< ::im::SIGP2PCallExchangeNatInfoAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::SIGP2PCallExchangeNatInfoAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::SIGP2PCallExchangeNatInfoDeliverAck* Arena::CreateMaybeMessage< ::im::SIGP2PCallExchangeNatInfoDeliverAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::SIGP2PCallExchangeNatInfoDeliverAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::SIGHangUp* Arena::CreateMaybeMessage< ::im::SIGHangUp >(Arena* arena) {
  return Arena::CreateInternal< ::im::SIGHangUp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::SIGHangUpAck* Arena::CreateMaybeMessage< ::im::SIGHangUpAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::SIGHangUpAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::SIGHangUpDeliverAck* Arena::CreateMaybeMessage< ::im::SIGHangUpDeliverAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::SIGHangUpDeliverAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::SIGP2PCallStateNotify* Arena::CreateMaybeMessage< ::im::SIGP2PCallStateNotify >(Arena* arena) {
  return Arena::CreateInternal< ::im::SIGP2PCallStateNotify >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::SIGP2PCallStateNotifyACK* Arena::CreateMaybeMessage< ::im::SIGP2PCallStateNotifyACK >(Arena* arena) {
  return Arena::CreateInternal< ::im::SIGP2PCallStateNotifyACK >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::SIGP2PCallStateNotifyDeliverAck* Arena::CreateMaybeMessage< ::im::SIGP2PCallStateNotifyDeliverAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::SIGP2PCallStateNotifyDeliverAck >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
