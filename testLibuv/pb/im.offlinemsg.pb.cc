// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: im.offlinemsg.proto

#include "im.offlinemsg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_im_2eofflinemsg_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_im_2eofflinemsg_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_OfflineDeliveredMsg;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_im_2eofflinemsg_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_OfflineMsgData;
}  // namespace protobuf_im_2eofflinemsg_2eproto
namespace imofflinemsg {
class OfflineDeliveredMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OfflineDeliveredMsg>
      _instance;
} _OfflineDeliveredMsg_default_instance_;
class MESOfflineMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MESOfflineMsg>
      _instance;
} _MESOfflineMsg_default_instance_;
class OfflineMsgDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OfflineMsgData>
      _instance;
} _OfflineMsgData_default_instance_;
class MESOfflineMsgAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MESOfflineMsgAck>
      _instance;
} _MESOfflineMsgAck_default_instance_;
}  // namespace imofflinemsg
namespace protobuf_im_2eofflinemsg_2eproto {
static void InitDefaultsOfflineDeliveredMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::imofflinemsg::_OfflineDeliveredMsg_default_instance_;
    new (ptr) ::imofflinemsg::OfflineDeliveredMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::imofflinemsg::OfflineDeliveredMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OfflineDeliveredMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOfflineDeliveredMsg}, {}};

static void InitDefaultsMESOfflineMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::imofflinemsg::_MESOfflineMsg_default_instance_;
    new (ptr) ::imofflinemsg::MESOfflineMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::imofflinemsg::MESOfflineMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MESOfflineMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMESOfflineMsg}, {
      &protobuf_im_2eofflinemsg_2eproto::scc_info_OfflineDeliveredMsg.base,}};

static void InitDefaultsOfflineMsgData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::imofflinemsg::_OfflineMsgData_default_instance_;
    new (ptr) ::imofflinemsg::OfflineMsgData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::imofflinemsg::OfflineMsgData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OfflineMsgData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOfflineMsgData}, {}};

static void InitDefaultsMESOfflineMsgAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::imofflinemsg::_MESOfflineMsgAck_default_instance_;
    new (ptr) ::imofflinemsg::MESOfflineMsgAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::imofflinemsg::MESOfflineMsgAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MESOfflineMsgAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMESOfflineMsgAck}, {
      &protobuf_im_2eofflinemsg_2eproto::scc_info_OfflineMsgData.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_OfflineDeliveredMsg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MESOfflineMsg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OfflineMsgData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MESOfflineMsgAck.base);
}

::google::protobuf::Metadata file_level_metadata[4];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imofflinemsg::OfflineDeliveredMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imofflinemsg::OfflineDeliveredMsg, cmdid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imofflinemsg::OfflineDeliveredMsg, sfromid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imofflinemsg::OfflineDeliveredMsg, stoid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imofflinemsg::OfflineDeliveredMsg, smsgid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imofflinemsg::MESOfflineMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imofflinemsg::MESOfflineMsg, cmdid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imofflinemsg::MESOfflineMsg, sfromid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imofflinemsg::MESOfflineMsg, stoid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imofflinemsg::MESOfflineMsg, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imofflinemsg::MESOfflineMsg, smsgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imofflinemsg::MESOfflineMsg, lsmsgs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imofflinemsg::OfflineMsgData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imofflinemsg::OfflineMsgData, cmdid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imofflinemsg::OfflineMsgData, smsgdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imofflinemsg::OfflineMsgData, smsgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imofflinemsg::OfflineMsgData, sfromid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imofflinemsg::OfflineMsgData, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imofflinemsg::OfflineMsgData, ucreatetime_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imofflinemsg::MESOfflineMsgAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imofflinemsg::MESOfflineMsgAck, sfromid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imofflinemsg::MESOfflineMsgAck, stoid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imofflinemsg::MESOfflineMsgAck, errcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imofflinemsg::MESOfflineMsgAck, smsgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imofflinemsg::MESOfflineMsgAck, msgtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imofflinemsg::MESOfflineMsgAck, msglist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imofflinemsg::MESOfflineMsgAck, msgtotal_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::imofflinemsg::OfflineDeliveredMsg)},
  { 9, -1, sizeof(::imofflinemsg::MESOfflineMsg)},
  { 20, -1, sizeof(::imofflinemsg::OfflineMsgData)},
  { 31, -1, sizeof(::imofflinemsg::MESOfflineMsgAck)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::imofflinemsg::_OfflineDeliveredMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::imofflinemsg::_MESOfflineMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::imofflinemsg::_OfflineMsgData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::imofflinemsg::_MESOfflineMsgAck_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "im.offlinemsg.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023im.offlinemsg.proto\022\014imofflinemsg\"T\n\023O"
      "fflineDeliveredMsg\022\r\n\005cmdId\030\001 \001(\r\022\017\n\007sFr"
      "omId\030\002 \001(\t\022\r\n\005sToId\030\003 \001(\t\022\016\n\006sMsgId\030\004 \001("
      "\t\"\220\001\n\rMESOfflineMsg\022\r\n\005cmdId\030\001 \001(\r\022\017\n\007sF"
      "romId\030\002 \001(\t\022\r\n\005sToId\030\003 \001(\t\022\r\n\005count\030\004 \001("
      "\005\022\016\n\006sMsgId\030\005 \001(\t\0221\n\006lsMsgs\030\006 \003(\0132!.imof"
      "flinemsg.OfflineDeliveredMsg\"w\n\016OfflineM"
      "sgData\022\r\n\005cmdId\030\001 \001(\r\022\020\n\010sMsgData\030\002 \001(\014\022"
      "\016\n\006sMsgId\030\003 \001(\t\022\017\n\007sFromId\030\004 \001(\t\022\016\n\006stat"
      "us\030\005 \001(\r\022\023\n\013uCreateTime\030\006 \001(\004\"\274\001\n\020MESOff"
      "lineMsgAck\022\017\n\007sFromId\030\001 \001(\t\022\r\n\005sToId\030\002 \001"
      "(\t\022&\n\007errcode\030\004 \001(\0162\025.imofflinemsg.ErrCo"
      "de\022\016\n\006sMsgId\030\005 \001(\t\022\017\n\007msgTime\030\006 \001(\004\022-\n\007m"
      "sglist\030\r \003(\0132\034.imofflinemsg.OfflineMsgDa"
      "ta\022\020\n\010msgTotal\030\016 \001(\r*\260\n\n\007ErrCode\022\016\n\nEXCE"
      "PT_ERR\020\000\022\r\n\007NON_ERR\020\200\200\002\022\024\n\016ERR_SYS_REGIS"
      "T\020\201\200\002\022\024\n\016ERR_LOGIN_AUTH\020\201\202\002\022\031\n\023ERR_LOGIN"
      "_FORBIDDEN\020\202\202\002\022\020\n\nERR_LOGOUT\020\203\202\002\022\036\n\030ERR_"
      "DEVICESYNC_PARAMETER\020\204\202\002\022\036\n\030ERR_DEVICESY"
      "NC_FORBIDDEN\020\205\202\002\022\036\n\030ERR_DEVICESYNC_EXCEP"
      "TION\020\206\202\002\022 \n\032ERR_TRANSMISSION_FORBIDDEN\020\207"
      "\202\002\022\036\n\030ERR_TRANSMISSION_SESSION\020\210\202\002\022\026\n\020ER"
      "R_CM_EXCEPTION\020\211\202\002\022\033\n\025ERR_CM_AUTH_KICKED"
      "OUT\020\220\202\002\022\030\n\022ERR_CHAT_FORBIDDEN\020\201\204\002\022\030\n\022ERR"
      "_CHAT_UNHEALTHY\020\202\204\002\022\030\n\022ERR_CHAT_PARAMETE"
      "R\020\203\204\002\022\035\n\027ERR_CHAT_CANCEL_OUTTIME\020\204\204\002\022\034\n\026"
      "ERR_CHAT_FRIEND_REFUSE\020\221\204\002\022\033\n\025ERR_CHAT_F"
      "RIEND_BLOCK\020\222\204\002\022\031\n\023ERR_CHAT_FRIEND_DEL\020\223"
      "\204\002\022\033\n\025ERR_CHAT_FRIEND_ADDED\020\224\204\002\022\034\n\026ERR_C"
      "HAT_FRIEND_ADDING\020\225\204\002\022 \n\032ERR_CHAT_FRIEND"
      "_HIDENADDED\020\226\204\002\022\035\n\027ERR_CHAT_DEENCRY_FAIL"
      "ED\020\243\204\002\022\030\n\022INFO_GROUP_PENDING\020\200\206\002\022\031\n\023ERR_"
      "GROUP_PARAMETER\020\201\206\002\022\034\n\026ERR_GROUP_OVERCRE"
      "ATION\020\202\206\002\022\030\n\022ERR_GROUP_OVERJOIN\020\203\206\002\022 \n\032E"
      "RR_GROUP_NETWORKEXCEPTION\020\204\206\002\022\031\n\023ERR_GRO"
      "UP_FORBIDDEN\020\205\206\002\022\036\n\030ERR_GROUP_INTEREXCEP"
      "TION\020\206\206\002\022\033\n\025ERR_GROUP_MEMBEREXIST\020\207\206\002\022\036\n"
      "\030ERR_GROUP_MEMBERNONEXIST\020\210\206\002\022\037\n\031ERR_GRO"
      "UP_INTERPERMISSION\020\211\206\002\022\035\n\027ERR_GROUP_NONP"
      "ERMISSION\020\220\206\002\022\026\n\020ERR_GROUP_MASTER\020\221\206\002\022\031\n"
      "\023ERR_GROUP_NOTMASTER\020\222\206\002\022\037\n\031ERR_GROUP_IN"
      "VITEEXCEPTION\020\223\206\002\022\035\n\027ERR_GROUP_INVITESUC"
      "CESS\020\224\206\002\022\031\n\023ERR_GROUP_DISMISSED\020\225\206\002\022 \n\032E"
      "RR_GROUP_MEMBEREXIST_HIDE\020\226\206\002\022\033\n\025ERR_GRO"
      "UP_JOIN_REJECT\020\240\206\002\022\035\n\027ERR_GROUP_NOTIFY_R"
      "EJECT\020\241\206\002\022\033\n\025ERR_GROUP_MASTER_QUIT\020\242\206\002\022\025"
      "\n\017ERR_CALL_REFUSE\020\200\210\002\022\023\n\rERR_CALL_BUSY\020\201"
      "\210\002\022\033\n\025ERR_CALL_PEER_OFFLINE\020\202\210\0022b\n\021Offli"
      "neMsgService\022M\n\014OnOfflineMsg\022\033.imoffline"
      "msg.MESOfflineMsg\032\036.imofflinemsg.MESOffl"
      "ineMsgAck\"\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2019);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "im.offlinemsg.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_im_2eofflinemsg_2eproto
namespace imofflinemsg {
const ::google::protobuf::EnumDescriptor* ErrCode_descriptor() {
  protobuf_im_2eofflinemsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_im_2eofflinemsg_2eproto::file_level_enum_descriptors[0];
}
bool ErrCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 32768:
    case 32769:
    case 33025:
    case 33026:
    case 33027:
    case 33028:
    case 33029:
    case 33030:
    case 33031:
    case 33032:
    case 33033:
    case 33040:
    case 33281:
    case 33282:
    case 33283:
    case 33284:
    case 33297:
    case 33298:
    case 33299:
    case 33300:
    case 33301:
    case 33302:
    case 33315:
    case 33536:
    case 33537:
    case 33538:
    case 33539:
    case 33540:
    case 33541:
    case 33542:
    case 33543:
    case 33544:
    case 33545:
    case 33552:
    case 33553:
    case 33554:
    case 33555:
    case 33556:
    case 33557:
    case 33558:
    case 33568:
    case 33569:
    case 33570:
    case 33792:
    case 33793:
    case 33794:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void OfflineDeliveredMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OfflineDeliveredMsg::kCmdIdFieldNumber;
const int OfflineDeliveredMsg::kSFromIdFieldNumber;
const int OfflineDeliveredMsg::kSToIdFieldNumber;
const int OfflineDeliveredMsg::kSMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OfflineDeliveredMsg::OfflineDeliveredMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2eofflinemsg_2eproto::scc_info_OfflineDeliveredMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:imofflinemsg.OfflineDeliveredMsg)
}
OfflineDeliveredMsg::OfflineDeliveredMsg(const OfflineDeliveredMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sfromid().size() > 0) {
    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stoid().size() > 0) {
    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  cmdid_ = from.cmdid_;
  // @@protoc_insertion_point(copy_constructor:imofflinemsg.OfflineDeliveredMsg)
}

void OfflineDeliveredMsg::SharedCtor() {
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cmdid_ = 0u;
}

OfflineDeliveredMsg::~OfflineDeliveredMsg() {
  // @@protoc_insertion_point(destructor:imofflinemsg.OfflineDeliveredMsg)
  SharedDtor();
}

void OfflineDeliveredMsg::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OfflineDeliveredMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OfflineDeliveredMsg::descriptor() {
  ::protobuf_im_2eofflinemsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_im_2eofflinemsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OfflineDeliveredMsg& OfflineDeliveredMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2eofflinemsg_2eproto::scc_info_OfflineDeliveredMsg.base);
  return *internal_default_instance();
}


void OfflineDeliveredMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:imofflinemsg.OfflineDeliveredMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cmdid_ = 0u;
  _internal_metadata_.Clear();
}

bool OfflineDeliveredMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:imofflinemsg.OfflineDeliveredMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 cmdId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cmdid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sFromId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), static_cast<int>(this->sfromid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "imofflinemsg.OfflineDeliveredMsg.sFromId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sToId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), static_cast<int>(this->stoid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "imofflinemsg.OfflineDeliveredMsg.sToId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "imofflinemsg.OfflineDeliveredMsg.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:imofflinemsg.OfflineDeliveredMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:imofflinemsg.OfflineDeliveredMsg)
  return false;
#undef DO_
}

void OfflineDeliveredMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:imofflinemsg.OfflineDeliveredMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cmdId = 1;
  if (this->cmdid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->cmdid(), output);
  }

  // string sFromId = 2;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), static_cast<int>(this->sfromid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imofflinemsg.OfflineDeliveredMsg.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sfromid(), output);
  }

  // string sToId = 3;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), static_cast<int>(this->stoid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imofflinemsg.OfflineDeliveredMsg.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->stoid(), output);
  }

  // string sMsgId = 4;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imofflinemsg.OfflineDeliveredMsg.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->smsgid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:imofflinemsg.OfflineDeliveredMsg)
}

::google::protobuf::uint8* OfflineDeliveredMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:imofflinemsg.OfflineDeliveredMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cmdId = 1;
  if (this->cmdid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->cmdid(), target);
  }

  // string sFromId = 2;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), static_cast<int>(this->sfromid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imofflinemsg.OfflineDeliveredMsg.sFromId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sfromid(), target);
  }

  // string sToId = 3;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), static_cast<int>(this->stoid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imofflinemsg.OfflineDeliveredMsg.sToId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->stoid(), target);
  }

  // string sMsgId = 4;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imofflinemsg.OfflineDeliveredMsg.sMsgId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->smsgid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:imofflinemsg.OfflineDeliveredMsg)
  return target;
}

size_t OfflineDeliveredMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:imofflinemsg.OfflineDeliveredMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string sFromId = 2;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // string sToId = 3;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // string sMsgId = 4;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // uint32 cmdId = 1;
  if (this->cmdid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cmdid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OfflineDeliveredMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:imofflinemsg.OfflineDeliveredMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const OfflineDeliveredMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OfflineDeliveredMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:imofflinemsg.OfflineDeliveredMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:imofflinemsg.OfflineDeliveredMsg)
    MergeFrom(*source);
  }
}

void OfflineDeliveredMsg::MergeFrom(const OfflineDeliveredMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:imofflinemsg.OfflineDeliveredMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.cmdid() != 0) {
    set_cmdid(from.cmdid());
  }
}

void OfflineDeliveredMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:imofflinemsg.OfflineDeliveredMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OfflineDeliveredMsg::CopyFrom(const OfflineDeliveredMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:imofflinemsg.OfflineDeliveredMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OfflineDeliveredMsg::IsInitialized() const {
  return true;
}

void OfflineDeliveredMsg::Swap(OfflineDeliveredMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OfflineDeliveredMsg::InternalSwap(OfflineDeliveredMsg* other) {
  using std::swap;
  sfromid_.Swap(&other->sfromid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  stoid_.Swap(&other->stoid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(cmdid_, other->cmdid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OfflineDeliveredMsg::GetMetadata() const {
  protobuf_im_2eofflinemsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_im_2eofflinemsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MESOfflineMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESOfflineMsg::kCmdIdFieldNumber;
const int MESOfflineMsg::kSFromIdFieldNumber;
const int MESOfflineMsg::kSToIdFieldNumber;
const int MESOfflineMsg::kCountFieldNumber;
const int MESOfflineMsg::kSMsgIdFieldNumber;
const int MESOfflineMsg::kLsMsgsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESOfflineMsg::MESOfflineMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2eofflinemsg_2eproto::scc_info_MESOfflineMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:imofflinemsg.MESOfflineMsg)
}
MESOfflineMsg::MESOfflineMsg(const MESOfflineMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      lsmsgs_(from.lsmsgs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sfromid().size() > 0) {
    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stoid().size() > 0) {
    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  ::memcpy(&cmdid_, &from.cmdid_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&cmdid_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:imofflinemsg.MESOfflineMsg)
}

void MESOfflineMsg::SharedCtor() {
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&cmdid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&cmdid_)) + sizeof(count_));
}

MESOfflineMsg::~MESOfflineMsg() {
  // @@protoc_insertion_point(destructor:imofflinemsg.MESOfflineMsg)
  SharedDtor();
}

void MESOfflineMsg::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MESOfflineMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MESOfflineMsg::descriptor() {
  ::protobuf_im_2eofflinemsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_im_2eofflinemsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MESOfflineMsg& MESOfflineMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2eofflinemsg_2eproto::scc_info_MESOfflineMsg.base);
  return *internal_default_instance();
}


void MESOfflineMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:imofflinemsg.MESOfflineMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lsmsgs_.Clear();
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&cmdid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&cmdid_)) + sizeof(count_));
  _internal_metadata_.Clear();
}

bool MESOfflineMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:imofflinemsg.MESOfflineMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 cmdId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cmdid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sFromId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), static_cast<int>(this->sfromid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "imofflinemsg.MESOfflineMsg.sFromId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sToId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), static_cast<int>(this->stoid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "imofflinemsg.MESOfflineMsg.sToId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 count = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "imofflinemsg.MESOfflineMsg.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .imofflinemsg.OfflineDeliveredMsg lsMsgs = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_lsmsgs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:imofflinemsg.MESOfflineMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:imofflinemsg.MESOfflineMsg)
  return false;
#undef DO_
}

void MESOfflineMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:imofflinemsg.MESOfflineMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cmdId = 1;
  if (this->cmdid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->cmdid(), output);
  }

  // string sFromId = 2;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), static_cast<int>(this->sfromid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imofflinemsg.MESOfflineMsg.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sfromid(), output);
  }

  // string sToId = 3;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), static_cast<int>(this->stoid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imofflinemsg.MESOfflineMsg.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->stoid(), output);
  }

  // int32 count = 4;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->count(), output);
  }

  // string sMsgId = 5;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imofflinemsg.MESOfflineMsg.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->smsgid(), output);
  }

  // repeated .imofflinemsg.OfflineDeliveredMsg lsMsgs = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lsmsgs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->lsmsgs(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:imofflinemsg.MESOfflineMsg)
}

::google::protobuf::uint8* MESOfflineMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:imofflinemsg.MESOfflineMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cmdId = 1;
  if (this->cmdid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->cmdid(), target);
  }

  // string sFromId = 2;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), static_cast<int>(this->sfromid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imofflinemsg.MESOfflineMsg.sFromId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sfromid(), target);
  }

  // string sToId = 3;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), static_cast<int>(this->stoid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imofflinemsg.MESOfflineMsg.sToId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->stoid(), target);
  }

  // int32 count = 4;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->count(), target);
  }

  // string sMsgId = 5;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imofflinemsg.MESOfflineMsg.sMsgId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->smsgid(), target);
  }

  // repeated .imofflinemsg.OfflineDeliveredMsg lsMsgs = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lsmsgs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->lsmsgs(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:imofflinemsg.MESOfflineMsg)
  return target;
}

size_t MESOfflineMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:imofflinemsg.MESOfflineMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .imofflinemsg.OfflineDeliveredMsg lsMsgs = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->lsmsgs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->lsmsgs(static_cast<int>(i)));
    }
  }

  // string sFromId = 2;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // string sToId = 3;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // string sMsgId = 5;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // uint32 cmdId = 1;
  if (this->cmdid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cmdid());
  }

  // int32 count = 4;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MESOfflineMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:imofflinemsg.MESOfflineMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const MESOfflineMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MESOfflineMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:imofflinemsg.MESOfflineMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:imofflinemsg.MESOfflineMsg)
    MergeFrom(*source);
  }
}

void MESOfflineMsg::MergeFrom(const MESOfflineMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:imofflinemsg.MESOfflineMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  lsmsgs_.MergeFrom(from.lsmsgs_);
  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.cmdid() != 0) {
    set_cmdid(from.cmdid());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void MESOfflineMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:imofflinemsg.MESOfflineMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MESOfflineMsg::CopyFrom(const MESOfflineMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:imofflinemsg.MESOfflineMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESOfflineMsg::IsInitialized() const {
  return true;
}

void MESOfflineMsg::Swap(MESOfflineMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESOfflineMsg::InternalSwap(MESOfflineMsg* other) {
  using std::swap;
  CastToBase(&lsmsgs_)->InternalSwap(CastToBase(&other->lsmsgs_));
  sfromid_.Swap(&other->sfromid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  stoid_.Swap(&other->stoid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(cmdid_, other->cmdid_);
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MESOfflineMsg::GetMetadata() const {
  protobuf_im_2eofflinemsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_im_2eofflinemsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OfflineMsgData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OfflineMsgData::kCmdIdFieldNumber;
const int OfflineMsgData::kSMsgDataFieldNumber;
const int OfflineMsgData::kSMsgIdFieldNumber;
const int OfflineMsgData::kSFromIdFieldNumber;
const int OfflineMsgData::kStatusFieldNumber;
const int OfflineMsgData::kUCreateTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OfflineMsgData::OfflineMsgData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2eofflinemsg_2eproto::scc_info_OfflineMsgData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:imofflinemsg.OfflineMsgData)
}
OfflineMsgData::OfflineMsgData(const OfflineMsgData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  smsgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgdata().size() > 0) {
    smsgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgdata_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sfromid().size() > 0) {
    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  ::memcpy(&cmdid_, &from.cmdid_,
    static_cast<size_t>(reinterpret_cast<char*>(&ucreatetime_) -
    reinterpret_cast<char*>(&cmdid_)) + sizeof(ucreatetime_));
  // @@protoc_insertion_point(copy_constructor:imofflinemsg.OfflineMsgData)
}

void OfflineMsgData::SharedCtor() {
  smsgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&cmdid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ucreatetime_) -
      reinterpret_cast<char*>(&cmdid_)) + sizeof(ucreatetime_));
}

OfflineMsgData::~OfflineMsgData() {
  // @@protoc_insertion_point(destructor:imofflinemsg.OfflineMsgData)
  SharedDtor();
}

void OfflineMsgData::SharedDtor() {
  smsgdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OfflineMsgData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OfflineMsgData::descriptor() {
  ::protobuf_im_2eofflinemsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_im_2eofflinemsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OfflineMsgData& OfflineMsgData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2eofflinemsg_2eproto::scc_info_OfflineMsgData.base);
  return *internal_default_instance();
}


void OfflineMsgData::Clear() {
// @@protoc_insertion_point(message_clear_start:imofflinemsg.OfflineMsgData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  smsgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&cmdid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ucreatetime_) -
      reinterpret_cast<char*>(&cmdid_)) + sizeof(ucreatetime_));
  _internal_metadata_.Clear();
}

bool OfflineMsgData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:imofflinemsg.OfflineMsgData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 cmdId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cmdid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes sMsgData = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_smsgdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "imofflinemsg.OfflineMsgData.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sFromId = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), static_cast<int>(this->sfromid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "imofflinemsg.OfflineMsgData.sFromId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 status = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 uCreateTime = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ucreatetime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:imofflinemsg.OfflineMsgData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:imofflinemsg.OfflineMsgData)
  return false;
#undef DO_
}

void OfflineMsgData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:imofflinemsg.OfflineMsgData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cmdId = 1;
  if (this->cmdid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->cmdid(), output);
  }

  // bytes sMsgData = 2;
  if (this->smsgdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->smsgdata(), output);
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imofflinemsg.OfflineMsgData.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // string sFromId = 4;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), static_cast<int>(this->sfromid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imofflinemsg.OfflineMsgData.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sfromid(), output);
  }

  // uint32 status = 5;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->status(), output);
  }

  // uint64 uCreateTime = 6;
  if (this->ucreatetime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->ucreatetime(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:imofflinemsg.OfflineMsgData)
}

::google::protobuf::uint8* OfflineMsgData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:imofflinemsg.OfflineMsgData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cmdId = 1;
  if (this->cmdid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->cmdid(), target);
  }

  // bytes sMsgData = 2;
  if (this->smsgdata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->smsgdata(), target);
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imofflinemsg.OfflineMsgData.sMsgId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->smsgid(), target);
  }

  // string sFromId = 4;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), static_cast<int>(this->sfromid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imofflinemsg.OfflineMsgData.sFromId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->sfromid(), target);
  }

  // uint32 status = 5;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->status(), target);
  }

  // uint64 uCreateTime = 6;
  if (this->ucreatetime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->ucreatetime(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:imofflinemsg.OfflineMsgData)
  return target;
}

size_t OfflineMsgData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:imofflinemsg.OfflineMsgData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes sMsgData = 2;
  if (this->smsgdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->smsgdata());
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // string sFromId = 4;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // uint32 cmdId = 1;
  if (this->cmdid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cmdid());
  }

  // uint32 status = 5;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->status());
  }

  // uint64 uCreateTime = 6;
  if (this->ucreatetime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ucreatetime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OfflineMsgData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:imofflinemsg.OfflineMsgData)
  GOOGLE_DCHECK_NE(&from, this);
  const OfflineMsgData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OfflineMsgData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:imofflinemsg.OfflineMsgData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:imofflinemsg.OfflineMsgData)
    MergeFrom(*source);
  }
}

void OfflineMsgData::MergeFrom(const OfflineMsgData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:imofflinemsg.OfflineMsgData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.smsgdata().size() > 0) {

    smsgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgdata_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.cmdid() != 0) {
    set_cmdid(from.cmdid());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.ucreatetime() != 0) {
    set_ucreatetime(from.ucreatetime());
  }
}

void OfflineMsgData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:imofflinemsg.OfflineMsgData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OfflineMsgData::CopyFrom(const OfflineMsgData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:imofflinemsg.OfflineMsgData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OfflineMsgData::IsInitialized() const {
  return true;
}

void OfflineMsgData::Swap(OfflineMsgData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OfflineMsgData::InternalSwap(OfflineMsgData* other) {
  using std::swap;
  smsgdata_.Swap(&other->smsgdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sfromid_.Swap(&other->sfromid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(cmdid_, other->cmdid_);
  swap(status_, other->status_);
  swap(ucreatetime_, other->ucreatetime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OfflineMsgData::GetMetadata() const {
  protobuf_im_2eofflinemsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_im_2eofflinemsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MESOfflineMsgAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESOfflineMsgAck::kSFromIdFieldNumber;
const int MESOfflineMsgAck::kSToIdFieldNumber;
const int MESOfflineMsgAck::kErrcodeFieldNumber;
const int MESOfflineMsgAck::kSMsgIdFieldNumber;
const int MESOfflineMsgAck::kMsgTimeFieldNumber;
const int MESOfflineMsgAck::kMsglistFieldNumber;
const int MESOfflineMsgAck::kMsgTotalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESOfflineMsgAck::MESOfflineMsgAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2eofflinemsg_2eproto::scc_info_MESOfflineMsgAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:imofflinemsg.MESOfflineMsgAck)
}
MESOfflineMsgAck::MESOfflineMsgAck(const MESOfflineMsgAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      msglist_(from.msglist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sfromid().size() > 0) {
    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stoid().size() > 0) {
    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  ::memcpy(&msgtime_, &from.msgtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&msgtotal_) -
    reinterpret_cast<char*>(&msgtime_)) + sizeof(msgtotal_));
  // @@protoc_insertion_point(copy_constructor:imofflinemsg.MESOfflineMsgAck)
}

void MESOfflineMsgAck::SharedCtor() {
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msgtotal_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(msgtotal_));
}

MESOfflineMsgAck::~MESOfflineMsgAck() {
  // @@protoc_insertion_point(destructor:imofflinemsg.MESOfflineMsgAck)
  SharedDtor();
}

void MESOfflineMsgAck::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MESOfflineMsgAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MESOfflineMsgAck::descriptor() {
  ::protobuf_im_2eofflinemsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_im_2eofflinemsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MESOfflineMsgAck& MESOfflineMsgAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2eofflinemsg_2eproto::scc_info_MESOfflineMsgAck.base);
  return *internal_default_instance();
}


void MESOfflineMsgAck::Clear() {
// @@protoc_insertion_point(message_clear_start:imofflinemsg.MESOfflineMsgAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msglist_.Clear();
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msgtotal_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(msgtotal_));
  _internal_metadata_.Clear();
}

bool MESOfflineMsgAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:imofflinemsg.MESOfflineMsgAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sFromId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), static_cast<int>(this->sfromid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "imofflinemsg.MESOfflineMsgAck.sFromId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sToId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), static_cast<int>(this->stoid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "imofflinemsg.MESOfflineMsgAck.sToId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .imofflinemsg.ErrCode errcode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::imofflinemsg::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "imofflinemsg.MESOfflineMsgAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgTime = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .imofflinemsg.OfflineMsgData msglist = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_msglist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 msgTotal = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgtotal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:imofflinemsg.MESOfflineMsgAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:imofflinemsg.MESOfflineMsgAck)
  return false;
#undef DO_
}

void MESOfflineMsgAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:imofflinemsg.MESOfflineMsgAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), static_cast<int>(this->sfromid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imofflinemsg.MESOfflineMsgAck.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // string sToId = 2;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), static_cast<int>(this->stoid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imofflinemsg.MESOfflineMsgAck.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stoid(), output);
  }

  // .imofflinemsg.ErrCode errcode = 4;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->errcode(), output);
  }

  // string sMsgId = 5;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imofflinemsg.MESOfflineMsgAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->smsgid(), output);
  }

  // uint64 msgTime = 6;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->msgtime(), output);
  }

  // repeated .imofflinemsg.OfflineMsgData msglist = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->msglist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13,
      this->msglist(static_cast<int>(i)),
      output);
  }

  // uint32 msgTotal = 14;
  if (this->msgtotal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->msgtotal(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:imofflinemsg.MESOfflineMsgAck)
}

::google::protobuf::uint8* MESOfflineMsgAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:imofflinemsg.MESOfflineMsgAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), static_cast<int>(this->sfromid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imofflinemsg.MESOfflineMsgAck.sFromId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sfromid(), target);
  }

  // string sToId = 2;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), static_cast<int>(this->stoid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imofflinemsg.MESOfflineMsgAck.sToId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->stoid(), target);
  }

  // .imofflinemsg.ErrCode errcode = 4;
  if (this->errcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->errcode(), target);
  }

  // string sMsgId = 5;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imofflinemsg.MESOfflineMsgAck.sMsgId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->smsgid(), target);
  }

  // uint64 msgTime = 6;
  if (this->msgtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->msgtime(), target);
  }

  // repeated .imofflinemsg.OfflineMsgData msglist = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->msglist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->msglist(static_cast<int>(i)), deterministic, target);
  }

  // uint32 msgTotal = 14;
  if (this->msgtotal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->msgtotal(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:imofflinemsg.MESOfflineMsgAck)
  return target;
}

size_t MESOfflineMsgAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:imofflinemsg.MESOfflineMsgAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .imofflinemsg.OfflineMsgData msglist = 13;
  {
    unsigned int count = static_cast<unsigned int>(this->msglist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->msglist(static_cast<int>(i)));
    }
  }

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // string sToId = 2;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // string sMsgId = 5;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // uint64 msgTime = 6;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // .imofflinemsg.ErrCode errcode = 4;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  // uint32 msgTotal = 14;
  if (this->msgtotal() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgtotal());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MESOfflineMsgAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:imofflinemsg.MESOfflineMsgAck)
  GOOGLE_DCHECK_NE(&from, this);
  const MESOfflineMsgAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MESOfflineMsgAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:imofflinemsg.MESOfflineMsgAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:imofflinemsg.MESOfflineMsgAck)
    MergeFrom(*source);
  }
}

void MESOfflineMsgAck::MergeFrom(const MESOfflineMsgAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:imofflinemsg.MESOfflineMsgAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  msglist_.MergeFrom(from.msglist_);
  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
  if (from.msgtotal() != 0) {
    set_msgtotal(from.msgtotal());
  }
}

void MESOfflineMsgAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:imofflinemsg.MESOfflineMsgAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MESOfflineMsgAck::CopyFrom(const MESOfflineMsgAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:imofflinemsg.MESOfflineMsgAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESOfflineMsgAck::IsInitialized() const {
  return true;
}

void MESOfflineMsgAck::Swap(MESOfflineMsgAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESOfflineMsgAck::InternalSwap(MESOfflineMsgAck* other) {
  using std::swap;
  CastToBase(&msglist_)->InternalSwap(CastToBase(&other->msglist_));
  sfromid_.Swap(&other->sfromid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  stoid_.Swap(&other->stoid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgtime_, other->msgtime_);
  swap(errcode_, other->errcode_);
  swap(msgtotal_, other->msgtotal_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MESOfflineMsgAck::GetMetadata() const {
  protobuf_im_2eofflinemsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_im_2eofflinemsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace imofflinemsg
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::imofflinemsg::OfflineDeliveredMsg* Arena::CreateMaybeMessage< ::imofflinemsg::OfflineDeliveredMsg >(Arena* arena) {
  return Arena::CreateInternal< ::imofflinemsg::OfflineDeliveredMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::imofflinemsg::MESOfflineMsg* Arena::CreateMaybeMessage< ::imofflinemsg::MESOfflineMsg >(Arena* arena) {
  return Arena::CreateInternal< ::imofflinemsg::MESOfflineMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::imofflinemsg::OfflineMsgData* Arena::CreateMaybeMessage< ::imofflinemsg::OfflineMsgData >(Arena* arena) {
  return Arena::CreateInternal< ::imofflinemsg::OfflineMsgData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::imofflinemsg::MESOfflineMsgAck* Arena::CreateMaybeMessage< ::imofflinemsg::MESOfflineMsgAck >(Arena* arena) {
  return Arena::CreateInternal< ::imofflinemsg::MESOfflineMsgAck >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
