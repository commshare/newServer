// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: im.offlinemsg.proto

#ifndef PROTOBUF_INCLUDED_im_2eofflinemsg_2eproto
#define PROTOBUF_INCLUDED_im_2eofflinemsg_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_im_2eofflinemsg_2eproto 

namespace protobuf_im_2eofflinemsg_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_im_2eofflinemsg_2eproto
namespace imofflinemsg {
class MESOfflineMsg;
class MESOfflineMsgDefaultTypeInternal;
extern MESOfflineMsgDefaultTypeInternal _MESOfflineMsg_default_instance_;
class MESOfflineMsgAck;
class MESOfflineMsgAckDefaultTypeInternal;
extern MESOfflineMsgAckDefaultTypeInternal _MESOfflineMsgAck_default_instance_;
class OfflineDeliveredMsg;
class OfflineDeliveredMsgDefaultTypeInternal;
extern OfflineDeliveredMsgDefaultTypeInternal _OfflineDeliveredMsg_default_instance_;
class OfflineMsgData;
class OfflineMsgDataDefaultTypeInternal;
extern OfflineMsgDataDefaultTypeInternal _OfflineMsgData_default_instance_;
}  // namespace imofflinemsg
namespace google {
namespace protobuf {
template<> ::imofflinemsg::MESOfflineMsg* Arena::CreateMaybeMessage<::imofflinemsg::MESOfflineMsg>(Arena*);
template<> ::imofflinemsg::MESOfflineMsgAck* Arena::CreateMaybeMessage<::imofflinemsg::MESOfflineMsgAck>(Arena*);
template<> ::imofflinemsg::OfflineDeliveredMsg* Arena::CreateMaybeMessage<::imofflinemsg::OfflineDeliveredMsg>(Arena*);
template<> ::imofflinemsg::OfflineMsgData* Arena::CreateMaybeMessage<::imofflinemsg::OfflineMsgData>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace imofflinemsg {

enum ErrCode {
  EXCEPT_ERR = 0,
  NON_ERR = 32768,
  ERR_SYS_REGIST = 32769,
  ERR_LOGIN_AUTH = 33025,
  ERR_LOGIN_FORBIDDEN = 33026,
  ERR_LOGOUT = 33027,
  ERR_DEVICESYNC_PARAMETER = 33028,
  ERR_DEVICESYNC_FORBIDDEN = 33029,
  ERR_DEVICESYNC_EXCEPTION = 33030,
  ERR_TRANSMISSION_FORBIDDEN = 33031,
  ERR_TRANSMISSION_SESSION = 33032,
  ERR_CM_EXCEPTION = 33033,
  ERR_CM_AUTH_KICKEDOUT = 33040,
  ERR_CHAT_FORBIDDEN = 33281,
  ERR_CHAT_UNHEALTHY = 33282,
  ERR_CHAT_PARAMETER = 33283,
  ERR_CHAT_CANCEL_OUTTIME = 33284,
  ERR_CHAT_FRIEND_REFUSE = 33297,
  ERR_CHAT_FRIEND_BLOCK = 33298,
  ERR_CHAT_FRIEND_DEL = 33299,
  ERR_CHAT_FRIEND_ADDED = 33300,
  ERR_CHAT_FRIEND_ADDING = 33301,
  ERR_CHAT_FRIEND_HIDENADDED = 33302,
  ERR_CHAT_DEENCRY_FAILED = 33315,
  INFO_GROUP_PENDING = 33536,
  ERR_GROUP_PARAMETER = 33537,
  ERR_GROUP_OVERCREATION = 33538,
  ERR_GROUP_OVERJOIN = 33539,
  ERR_GROUP_NETWORKEXCEPTION = 33540,
  ERR_GROUP_FORBIDDEN = 33541,
  ERR_GROUP_INTEREXCEPTION = 33542,
  ERR_GROUP_MEMBEREXIST = 33543,
  ERR_GROUP_MEMBERNONEXIST = 33544,
  ERR_GROUP_INTERPERMISSION = 33545,
  ERR_GROUP_NONPERMISSION = 33552,
  ERR_GROUP_MASTER = 33553,
  ERR_GROUP_NOTMASTER = 33554,
  ERR_GROUP_INVITEEXCEPTION = 33555,
  ERR_GROUP_INVITESUCCESS = 33556,
  ERR_GROUP_DISMISSED = 33557,
  ERR_GROUP_MEMBEREXIST_HIDE = 33558,
  ERR_GROUP_JOIN_REJECT = 33568,
  ERR_GROUP_NOTIFY_REJECT = 33569,
  ERR_GROUP_MASTER_QUIT = 33570,
  ERR_CALL_REFUSE = 33792,
  ERR_CALL_BUSY = 33793,
  ERR_CALL_PEER_OFFLINE = 33794,
  ErrCode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ErrCode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ErrCode_IsValid(int value);
const ErrCode ErrCode_MIN = EXCEPT_ERR;
const ErrCode ErrCode_MAX = ERR_CALL_PEER_OFFLINE;
const int ErrCode_ARRAYSIZE = ErrCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* ErrCode_descriptor();
inline const ::std::string& ErrCode_Name(ErrCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    ErrCode_descriptor(), value);
}
inline bool ErrCode_Parse(
    const ::std::string& name, ErrCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ErrCode>(
    ErrCode_descriptor(), name, value);
}
// ===================================================================

class OfflineDeliveredMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:imofflinemsg.OfflineDeliveredMsg) */ {
 public:
  OfflineDeliveredMsg();
  virtual ~OfflineDeliveredMsg();

  OfflineDeliveredMsg(const OfflineDeliveredMsg& from);

  inline OfflineDeliveredMsg& operator=(const OfflineDeliveredMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OfflineDeliveredMsg(OfflineDeliveredMsg&& from) noexcept
    : OfflineDeliveredMsg() {
    *this = ::std::move(from);
  }

  inline OfflineDeliveredMsg& operator=(OfflineDeliveredMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OfflineDeliveredMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OfflineDeliveredMsg* internal_default_instance() {
    return reinterpret_cast<const OfflineDeliveredMsg*>(
               &_OfflineDeliveredMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(OfflineDeliveredMsg* other);
  friend void swap(OfflineDeliveredMsg& a, OfflineDeliveredMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OfflineDeliveredMsg* New() const final {
    return CreateMaybeMessage<OfflineDeliveredMsg>(NULL);
  }

  OfflineDeliveredMsg* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OfflineDeliveredMsg>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OfflineDeliveredMsg& from);
  void MergeFrom(const OfflineDeliveredMsg& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OfflineDeliveredMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string sFromId = 2;
  void clear_sfromid();
  static const int kSFromIdFieldNumber = 2;
  const ::std::string& sfromid() const;
  void set_sfromid(const ::std::string& value);
  #if LANG_CXX11
  void set_sfromid(::std::string&& value);
  #endif
  void set_sfromid(const char* value);
  void set_sfromid(const char* value, size_t size);
  ::std::string* mutable_sfromid();
  ::std::string* release_sfromid();
  void set_allocated_sfromid(::std::string* sfromid);

  // string sToId = 3;
  void clear_stoid();
  static const int kSToIdFieldNumber = 3;
  const ::std::string& stoid() const;
  void set_stoid(const ::std::string& value);
  #if LANG_CXX11
  void set_stoid(::std::string&& value);
  #endif
  void set_stoid(const char* value);
  void set_stoid(const char* value, size_t size);
  ::std::string* mutable_stoid();
  ::std::string* release_stoid();
  void set_allocated_stoid(::std::string* stoid);

  // string sMsgId = 4;
  void clear_smsgid();
  static const int kSMsgIdFieldNumber = 4;
  const ::std::string& smsgid() const;
  void set_smsgid(const ::std::string& value);
  #if LANG_CXX11
  void set_smsgid(::std::string&& value);
  #endif
  void set_smsgid(const char* value);
  void set_smsgid(const char* value, size_t size);
  ::std::string* mutable_smsgid();
  ::std::string* release_smsgid();
  void set_allocated_smsgid(::std::string* smsgid);

  // uint32 cmdId = 1;
  void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  ::google::protobuf::uint32 cmdid() const;
  void set_cmdid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:imofflinemsg.OfflineDeliveredMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr sfromid_;
  ::google::protobuf::internal::ArenaStringPtr stoid_;
  ::google::protobuf::internal::ArenaStringPtr smsgid_;
  ::google::protobuf::uint32 cmdid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_im_2eofflinemsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MESOfflineMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:imofflinemsg.MESOfflineMsg) */ {
 public:
  MESOfflineMsg();
  virtual ~MESOfflineMsg();

  MESOfflineMsg(const MESOfflineMsg& from);

  inline MESOfflineMsg& operator=(const MESOfflineMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MESOfflineMsg(MESOfflineMsg&& from) noexcept
    : MESOfflineMsg() {
    *this = ::std::move(from);
  }

  inline MESOfflineMsg& operator=(MESOfflineMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MESOfflineMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MESOfflineMsg* internal_default_instance() {
    return reinterpret_cast<const MESOfflineMsg*>(
               &_MESOfflineMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(MESOfflineMsg* other);
  friend void swap(MESOfflineMsg& a, MESOfflineMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MESOfflineMsg* New() const final {
    return CreateMaybeMessage<MESOfflineMsg>(NULL);
  }

  MESOfflineMsg* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MESOfflineMsg>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MESOfflineMsg& from);
  void MergeFrom(const MESOfflineMsg& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MESOfflineMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .imofflinemsg.OfflineDeliveredMsg lsMsgs = 6;
  int lsmsgs_size() const;
  void clear_lsmsgs();
  static const int kLsMsgsFieldNumber = 6;
  ::imofflinemsg::OfflineDeliveredMsg* mutable_lsmsgs(int index);
  ::google::protobuf::RepeatedPtrField< ::imofflinemsg::OfflineDeliveredMsg >*
      mutable_lsmsgs();
  const ::imofflinemsg::OfflineDeliveredMsg& lsmsgs(int index) const;
  ::imofflinemsg::OfflineDeliveredMsg* add_lsmsgs();
  const ::google::protobuf::RepeatedPtrField< ::imofflinemsg::OfflineDeliveredMsg >&
      lsmsgs() const;

  // string sFromId = 2;
  void clear_sfromid();
  static const int kSFromIdFieldNumber = 2;
  const ::std::string& sfromid() const;
  void set_sfromid(const ::std::string& value);
  #if LANG_CXX11
  void set_sfromid(::std::string&& value);
  #endif
  void set_sfromid(const char* value);
  void set_sfromid(const char* value, size_t size);
  ::std::string* mutable_sfromid();
  ::std::string* release_sfromid();
  void set_allocated_sfromid(::std::string* sfromid);

  // string sToId = 3;
  void clear_stoid();
  static const int kSToIdFieldNumber = 3;
  const ::std::string& stoid() const;
  void set_stoid(const ::std::string& value);
  #if LANG_CXX11
  void set_stoid(::std::string&& value);
  #endif
  void set_stoid(const char* value);
  void set_stoid(const char* value, size_t size);
  ::std::string* mutable_stoid();
  ::std::string* release_stoid();
  void set_allocated_stoid(::std::string* stoid);

  // string sMsgId = 5;
  void clear_smsgid();
  static const int kSMsgIdFieldNumber = 5;
  const ::std::string& smsgid() const;
  void set_smsgid(const ::std::string& value);
  #if LANG_CXX11
  void set_smsgid(::std::string&& value);
  #endif
  void set_smsgid(const char* value);
  void set_smsgid(const char* value, size_t size);
  ::std::string* mutable_smsgid();
  ::std::string* release_smsgid();
  void set_allocated_smsgid(::std::string* smsgid);

  // uint32 cmdId = 1;
  void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  ::google::protobuf::uint32 cmdid() const;
  void set_cmdid(::google::protobuf::uint32 value);

  // int32 count = 4;
  void clear_count();
  static const int kCountFieldNumber = 4;
  ::google::protobuf::int32 count() const;
  void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:imofflinemsg.MESOfflineMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::imofflinemsg::OfflineDeliveredMsg > lsmsgs_;
  ::google::protobuf::internal::ArenaStringPtr sfromid_;
  ::google::protobuf::internal::ArenaStringPtr stoid_;
  ::google::protobuf::internal::ArenaStringPtr smsgid_;
  ::google::protobuf::uint32 cmdid_;
  ::google::protobuf::int32 count_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_im_2eofflinemsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OfflineMsgData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:imofflinemsg.OfflineMsgData) */ {
 public:
  OfflineMsgData();
  virtual ~OfflineMsgData();

  OfflineMsgData(const OfflineMsgData& from);

  inline OfflineMsgData& operator=(const OfflineMsgData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OfflineMsgData(OfflineMsgData&& from) noexcept
    : OfflineMsgData() {
    *this = ::std::move(from);
  }

  inline OfflineMsgData& operator=(OfflineMsgData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OfflineMsgData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OfflineMsgData* internal_default_instance() {
    return reinterpret_cast<const OfflineMsgData*>(
               &_OfflineMsgData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(OfflineMsgData* other);
  friend void swap(OfflineMsgData& a, OfflineMsgData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OfflineMsgData* New() const final {
    return CreateMaybeMessage<OfflineMsgData>(NULL);
  }

  OfflineMsgData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OfflineMsgData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OfflineMsgData& from);
  void MergeFrom(const OfflineMsgData& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OfflineMsgData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes sMsgData = 2;
  void clear_smsgdata();
  static const int kSMsgDataFieldNumber = 2;
  const ::std::string& smsgdata() const;
  void set_smsgdata(const ::std::string& value);
  #if LANG_CXX11
  void set_smsgdata(::std::string&& value);
  #endif
  void set_smsgdata(const char* value);
  void set_smsgdata(const void* value, size_t size);
  ::std::string* mutable_smsgdata();
  ::std::string* release_smsgdata();
  void set_allocated_smsgdata(::std::string* smsgdata);

  // string sMsgId = 3;
  void clear_smsgid();
  static const int kSMsgIdFieldNumber = 3;
  const ::std::string& smsgid() const;
  void set_smsgid(const ::std::string& value);
  #if LANG_CXX11
  void set_smsgid(::std::string&& value);
  #endif
  void set_smsgid(const char* value);
  void set_smsgid(const char* value, size_t size);
  ::std::string* mutable_smsgid();
  ::std::string* release_smsgid();
  void set_allocated_smsgid(::std::string* smsgid);

  // string sFromId = 4;
  void clear_sfromid();
  static const int kSFromIdFieldNumber = 4;
  const ::std::string& sfromid() const;
  void set_sfromid(const ::std::string& value);
  #if LANG_CXX11
  void set_sfromid(::std::string&& value);
  #endif
  void set_sfromid(const char* value);
  void set_sfromid(const char* value, size_t size);
  ::std::string* mutable_sfromid();
  ::std::string* release_sfromid();
  void set_allocated_sfromid(::std::string* sfromid);

  // uint32 cmdId = 1;
  void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  ::google::protobuf::uint32 cmdid() const;
  void set_cmdid(::google::protobuf::uint32 value);

  // uint32 status = 5;
  void clear_status();
  static const int kStatusFieldNumber = 5;
  ::google::protobuf::uint32 status() const;
  void set_status(::google::protobuf::uint32 value);

  // uint64 uCreateTime = 6;
  void clear_ucreatetime();
  static const int kUCreateTimeFieldNumber = 6;
  ::google::protobuf::uint64 ucreatetime() const;
  void set_ucreatetime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:imofflinemsg.OfflineMsgData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr smsgdata_;
  ::google::protobuf::internal::ArenaStringPtr smsgid_;
  ::google::protobuf::internal::ArenaStringPtr sfromid_;
  ::google::protobuf::uint32 cmdid_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint64 ucreatetime_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_im_2eofflinemsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MESOfflineMsgAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:imofflinemsg.MESOfflineMsgAck) */ {
 public:
  MESOfflineMsgAck();
  virtual ~MESOfflineMsgAck();

  MESOfflineMsgAck(const MESOfflineMsgAck& from);

  inline MESOfflineMsgAck& operator=(const MESOfflineMsgAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MESOfflineMsgAck(MESOfflineMsgAck&& from) noexcept
    : MESOfflineMsgAck() {
    *this = ::std::move(from);
  }

  inline MESOfflineMsgAck& operator=(MESOfflineMsgAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MESOfflineMsgAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MESOfflineMsgAck* internal_default_instance() {
    return reinterpret_cast<const MESOfflineMsgAck*>(
               &_MESOfflineMsgAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(MESOfflineMsgAck* other);
  friend void swap(MESOfflineMsgAck& a, MESOfflineMsgAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MESOfflineMsgAck* New() const final {
    return CreateMaybeMessage<MESOfflineMsgAck>(NULL);
  }

  MESOfflineMsgAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MESOfflineMsgAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MESOfflineMsgAck& from);
  void MergeFrom(const MESOfflineMsgAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MESOfflineMsgAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .imofflinemsg.OfflineMsgData msglist = 13;
  int msglist_size() const;
  void clear_msglist();
  static const int kMsglistFieldNumber = 13;
  ::imofflinemsg::OfflineMsgData* mutable_msglist(int index);
  ::google::protobuf::RepeatedPtrField< ::imofflinemsg::OfflineMsgData >*
      mutable_msglist();
  const ::imofflinemsg::OfflineMsgData& msglist(int index) const;
  ::imofflinemsg::OfflineMsgData* add_msglist();
  const ::google::protobuf::RepeatedPtrField< ::imofflinemsg::OfflineMsgData >&
      msglist() const;

  // string sFromId = 1;
  void clear_sfromid();
  static const int kSFromIdFieldNumber = 1;
  const ::std::string& sfromid() const;
  void set_sfromid(const ::std::string& value);
  #if LANG_CXX11
  void set_sfromid(::std::string&& value);
  #endif
  void set_sfromid(const char* value);
  void set_sfromid(const char* value, size_t size);
  ::std::string* mutable_sfromid();
  ::std::string* release_sfromid();
  void set_allocated_sfromid(::std::string* sfromid);

  // string sToId = 2;
  void clear_stoid();
  static const int kSToIdFieldNumber = 2;
  const ::std::string& stoid() const;
  void set_stoid(const ::std::string& value);
  #if LANG_CXX11
  void set_stoid(::std::string&& value);
  #endif
  void set_stoid(const char* value);
  void set_stoid(const char* value, size_t size);
  ::std::string* mutable_stoid();
  ::std::string* release_stoid();
  void set_allocated_stoid(::std::string* stoid);

  // string sMsgId = 5;
  void clear_smsgid();
  static const int kSMsgIdFieldNumber = 5;
  const ::std::string& smsgid() const;
  void set_smsgid(const ::std::string& value);
  #if LANG_CXX11
  void set_smsgid(::std::string&& value);
  #endif
  void set_smsgid(const char* value);
  void set_smsgid(const char* value, size_t size);
  ::std::string* mutable_smsgid();
  ::std::string* release_smsgid();
  void set_allocated_smsgid(::std::string* smsgid);

  // uint64 msgTime = 6;
  void clear_msgtime();
  static const int kMsgTimeFieldNumber = 6;
  ::google::protobuf::uint64 msgtime() const;
  void set_msgtime(::google::protobuf::uint64 value);

  // .imofflinemsg.ErrCode errcode = 4;
  void clear_errcode();
  static const int kErrcodeFieldNumber = 4;
  ::imofflinemsg::ErrCode errcode() const;
  void set_errcode(::imofflinemsg::ErrCode value);

  // uint32 msgTotal = 14;
  void clear_msgtotal();
  static const int kMsgTotalFieldNumber = 14;
  ::google::protobuf::uint32 msgtotal() const;
  void set_msgtotal(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:imofflinemsg.MESOfflineMsgAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::imofflinemsg::OfflineMsgData > msglist_;
  ::google::protobuf::internal::ArenaStringPtr sfromid_;
  ::google::protobuf::internal::ArenaStringPtr stoid_;
  ::google::protobuf::internal::ArenaStringPtr smsgid_;
  ::google::protobuf::uint64 msgtime_;
  int errcode_;
  ::google::protobuf::uint32 msgtotal_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_im_2eofflinemsg_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// OfflineDeliveredMsg

// uint32 cmdId = 1;
inline void OfflineDeliveredMsg::clear_cmdid() {
  cmdid_ = 0u;
}
inline ::google::protobuf::uint32 OfflineDeliveredMsg::cmdid() const {
  // @@protoc_insertion_point(field_get:imofflinemsg.OfflineDeliveredMsg.cmdId)
  return cmdid_;
}
inline void OfflineDeliveredMsg::set_cmdid(::google::protobuf::uint32 value) {
  
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:imofflinemsg.OfflineDeliveredMsg.cmdId)
}

// string sFromId = 2;
inline void OfflineDeliveredMsg::clear_sfromid() {
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OfflineDeliveredMsg::sfromid() const {
  // @@protoc_insertion_point(field_get:imofflinemsg.OfflineDeliveredMsg.sFromId)
  return sfromid_.GetNoArena();
}
inline void OfflineDeliveredMsg::set_sfromid(const ::std::string& value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:imofflinemsg.OfflineDeliveredMsg.sFromId)
}
#if LANG_CXX11
inline void OfflineDeliveredMsg::set_sfromid(::std::string&& value) {
  
  sfromid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:imofflinemsg.OfflineDeliveredMsg.sFromId)
}
#endif
inline void OfflineDeliveredMsg::set_sfromid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:imofflinemsg.OfflineDeliveredMsg.sFromId)
}
inline void OfflineDeliveredMsg::set_sfromid(const char* value, size_t size) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:imofflinemsg.OfflineDeliveredMsg.sFromId)
}
inline ::std::string* OfflineDeliveredMsg::mutable_sfromid() {
  
  // @@protoc_insertion_point(field_mutable:imofflinemsg.OfflineDeliveredMsg.sFromId)
  return sfromid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OfflineDeliveredMsg::release_sfromid() {
  // @@protoc_insertion_point(field_release:imofflinemsg.OfflineDeliveredMsg.sFromId)
  
  return sfromid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OfflineDeliveredMsg::set_allocated_sfromid(::std::string* sfromid) {
  if (sfromid != NULL) {
    
  } else {
    
  }
  sfromid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sfromid);
  // @@protoc_insertion_point(field_set_allocated:imofflinemsg.OfflineDeliveredMsg.sFromId)
}

// string sToId = 3;
inline void OfflineDeliveredMsg::clear_stoid() {
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OfflineDeliveredMsg::stoid() const {
  // @@protoc_insertion_point(field_get:imofflinemsg.OfflineDeliveredMsg.sToId)
  return stoid_.GetNoArena();
}
inline void OfflineDeliveredMsg::set_stoid(const ::std::string& value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:imofflinemsg.OfflineDeliveredMsg.sToId)
}
#if LANG_CXX11
inline void OfflineDeliveredMsg::set_stoid(::std::string&& value) {
  
  stoid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:imofflinemsg.OfflineDeliveredMsg.sToId)
}
#endif
inline void OfflineDeliveredMsg::set_stoid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:imofflinemsg.OfflineDeliveredMsg.sToId)
}
inline void OfflineDeliveredMsg::set_stoid(const char* value, size_t size) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:imofflinemsg.OfflineDeliveredMsg.sToId)
}
inline ::std::string* OfflineDeliveredMsg::mutable_stoid() {
  
  // @@protoc_insertion_point(field_mutable:imofflinemsg.OfflineDeliveredMsg.sToId)
  return stoid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OfflineDeliveredMsg::release_stoid() {
  // @@protoc_insertion_point(field_release:imofflinemsg.OfflineDeliveredMsg.sToId)
  
  return stoid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OfflineDeliveredMsg::set_allocated_stoid(::std::string* stoid) {
  if (stoid != NULL) {
    
  } else {
    
  }
  stoid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stoid);
  // @@protoc_insertion_point(field_set_allocated:imofflinemsg.OfflineDeliveredMsg.sToId)
}

// string sMsgId = 4;
inline void OfflineDeliveredMsg::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OfflineDeliveredMsg::smsgid() const {
  // @@protoc_insertion_point(field_get:imofflinemsg.OfflineDeliveredMsg.sMsgId)
  return smsgid_.GetNoArena();
}
inline void OfflineDeliveredMsg::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:imofflinemsg.OfflineDeliveredMsg.sMsgId)
}
#if LANG_CXX11
inline void OfflineDeliveredMsg::set_smsgid(::std::string&& value) {
  
  smsgid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:imofflinemsg.OfflineDeliveredMsg.sMsgId)
}
#endif
inline void OfflineDeliveredMsg::set_smsgid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:imofflinemsg.OfflineDeliveredMsg.sMsgId)
}
inline void OfflineDeliveredMsg::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:imofflinemsg.OfflineDeliveredMsg.sMsgId)
}
inline ::std::string* OfflineDeliveredMsg::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:imofflinemsg.OfflineDeliveredMsg.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OfflineDeliveredMsg::release_smsgid() {
  // @@protoc_insertion_point(field_release:imofflinemsg.OfflineDeliveredMsg.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OfflineDeliveredMsg::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:imofflinemsg.OfflineDeliveredMsg.sMsgId)
}

// -------------------------------------------------------------------

// MESOfflineMsg

// uint32 cmdId = 1;
inline void MESOfflineMsg::clear_cmdid() {
  cmdid_ = 0u;
}
inline ::google::protobuf::uint32 MESOfflineMsg::cmdid() const {
  // @@protoc_insertion_point(field_get:imofflinemsg.MESOfflineMsg.cmdId)
  return cmdid_;
}
inline void MESOfflineMsg::set_cmdid(::google::protobuf::uint32 value) {
  
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:imofflinemsg.MESOfflineMsg.cmdId)
}

// string sFromId = 2;
inline void MESOfflineMsg::clear_sfromid() {
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MESOfflineMsg::sfromid() const {
  // @@protoc_insertion_point(field_get:imofflinemsg.MESOfflineMsg.sFromId)
  return sfromid_.GetNoArena();
}
inline void MESOfflineMsg::set_sfromid(const ::std::string& value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:imofflinemsg.MESOfflineMsg.sFromId)
}
#if LANG_CXX11
inline void MESOfflineMsg::set_sfromid(::std::string&& value) {
  
  sfromid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:imofflinemsg.MESOfflineMsg.sFromId)
}
#endif
inline void MESOfflineMsg::set_sfromid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:imofflinemsg.MESOfflineMsg.sFromId)
}
inline void MESOfflineMsg::set_sfromid(const char* value, size_t size) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:imofflinemsg.MESOfflineMsg.sFromId)
}
inline ::std::string* MESOfflineMsg::mutable_sfromid() {
  
  // @@protoc_insertion_point(field_mutable:imofflinemsg.MESOfflineMsg.sFromId)
  return sfromid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MESOfflineMsg::release_sfromid() {
  // @@protoc_insertion_point(field_release:imofflinemsg.MESOfflineMsg.sFromId)
  
  return sfromid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MESOfflineMsg::set_allocated_sfromid(::std::string* sfromid) {
  if (sfromid != NULL) {
    
  } else {
    
  }
  sfromid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sfromid);
  // @@protoc_insertion_point(field_set_allocated:imofflinemsg.MESOfflineMsg.sFromId)
}

// string sToId = 3;
inline void MESOfflineMsg::clear_stoid() {
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MESOfflineMsg::stoid() const {
  // @@protoc_insertion_point(field_get:imofflinemsg.MESOfflineMsg.sToId)
  return stoid_.GetNoArena();
}
inline void MESOfflineMsg::set_stoid(const ::std::string& value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:imofflinemsg.MESOfflineMsg.sToId)
}
#if LANG_CXX11
inline void MESOfflineMsg::set_stoid(::std::string&& value) {
  
  stoid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:imofflinemsg.MESOfflineMsg.sToId)
}
#endif
inline void MESOfflineMsg::set_stoid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:imofflinemsg.MESOfflineMsg.sToId)
}
inline void MESOfflineMsg::set_stoid(const char* value, size_t size) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:imofflinemsg.MESOfflineMsg.sToId)
}
inline ::std::string* MESOfflineMsg::mutable_stoid() {
  
  // @@protoc_insertion_point(field_mutable:imofflinemsg.MESOfflineMsg.sToId)
  return stoid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MESOfflineMsg::release_stoid() {
  // @@protoc_insertion_point(field_release:imofflinemsg.MESOfflineMsg.sToId)
  
  return stoid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MESOfflineMsg::set_allocated_stoid(::std::string* stoid) {
  if (stoid != NULL) {
    
  } else {
    
  }
  stoid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stoid);
  // @@protoc_insertion_point(field_set_allocated:imofflinemsg.MESOfflineMsg.sToId)
}

// int32 count = 4;
inline void MESOfflineMsg::clear_count() {
  count_ = 0;
}
inline ::google::protobuf::int32 MESOfflineMsg::count() const {
  // @@protoc_insertion_point(field_get:imofflinemsg.MESOfflineMsg.count)
  return count_;
}
inline void MESOfflineMsg::set_count(::google::protobuf::int32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:imofflinemsg.MESOfflineMsg.count)
}

// string sMsgId = 5;
inline void MESOfflineMsg::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MESOfflineMsg::smsgid() const {
  // @@protoc_insertion_point(field_get:imofflinemsg.MESOfflineMsg.sMsgId)
  return smsgid_.GetNoArena();
}
inline void MESOfflineMsg::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:imofflinemsg.MESOfflineMsg.sMsgId)
}
#if LANG_CXX11
inline void MESOfflineMsg::set_smsgid(::std::string&& value) {
  
  smsgid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:imofflinemsg.MESOfflineMsg.sMsgId)
}
#endif
inline void MESOfflineMsg::set_smsgid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:imofflinemsg.MESOfflineMsg.sMsgId)
}
inline void MESOfflineMsg::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:imofflinemsg.MESOfflineMsg.sMsgId)
}
inline ::std::string* MESOfflineMsg::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:imofflinemsg.MESOfflineMsg.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MESOfflineMsg::release_smsgid() {
  // @@protoc_insertion_point(field_release:imofflinemsg.MESOfflineMsg.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MESOfflineMsg::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:imofflinemsg.MESOfflineMsg.sMsgId)
}

// repeated .imofflinemsg.OfflineDeliveredMsg lsMsgs = 6;
inline int MESOfflineMsg::lsmsgs_size() const {
  return lsmsgs_.size();
}
inline void MESOfflineMsg::clear_lsmsgs() {
  lsmsgs_.Clear();
}
inline ::imofflinemsg::OfflineDeliveredMsg* MESOfflineMsg::mutable_lsmsgs(int index) {
  // @@protoc_insertion_point(field_mutable:imofflinemsg.MESOfflineMsg.lsMsgs)
  return lsmsgs_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::imofflinemsg::OfflineDeliveredMsg >*
MESOfflineMsg::mutable_lsmsgs() {
  // @@protoc_insertion_point(field_mutable_list:imofflinemsg.MESOfflineMsg.lsMsgs)
  return &lsmsgs_;
}
inline const ::imofflinemsg::OfflineDeliveredMsg& MESOfflineMsg::lsmsgs(int index) const {
  // @@protoc_insertion_point(field_get:imofflinemsg.MESOfflineMsg.lsMsgs)
  return lsmsgs_.Get(index);
}
inline ::imofflinemsg::OfflineDeliveredMsg* MESOfflineMsg::add_lsmsgs() {
  // @@protoc_insertion_point(field_add:imofflinemsg.MESOfflineMsg.lsMsgs)
  return lsmsgs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::imofflinemsg::OfflineDeliveredMsg >&
MESOfflineMsg::lsmsgs() const {
  // @@protoc_insertion_point(field_list:imofflinemsg.MESOfflineMsg.lsMsgs)
  return lsmsgs_;
}

// -------------------------------------------------------------------

// OfflineMsgData

// uint32 cmdId = 1;
inline void OfflineMsgData::clear_cmdid() {
  cmdid_ = 0u;
}
inline ::google::protobuf::uint32 OfflineMsgData::cmdid() const {
  // @@protoc_insertion_point(field_get:imofflinemsg.OfflineMsgData.cmdId)
  return cmdid_;
}
inline void OfflineMsgData::set_cmdid(::google::protobuf::uint32 value) {
  
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:imofflinemsg.OfflineMsgData.cmdId)
}

// bytes sMsgData = 2;
inline void OfflineMsgData::clear_smsgdata() {
  smsgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OfflineMsgData::smsgdata() const {
  // @@protoc_insertion_point(field_get:imofflinemsg.OfflineMsgData.sMsgData)
  return smsgdata_.GetNoArena();
}
inline void OfflineMsgData::set_smsgdata(const ::std::string& value) {
  
  smsgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:imofflinemsg.OfflineMsgData.sMsgData)
}
#if LANG_CXX11
inline void OfflineMsgData::set_smsgdata(::std::string&& value) {
  
  smsgdata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:imofflinemsg.OfflineMsgData.sMsgData)
}
#endif
inline void OfflineMsgData::set_smsgdata(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  smsgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:imofflinemsg.OfflineMsgData.sMsgData)
}
inline void OfflineMsgData::set_smsgdata(const void* value, size_t size) {
  
  smsgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:imofflinemsg.OfflineMsgData.sMsgData)
}
inline ::std::string* OfflineMsgData::mutable_smsgdata() {
  
  // @@protoc_insertion_point(field_mutable:imofflinemsg.OfflineMsgData.sMsgData)
  return smsgdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OfflineMsgData::release_smsgdata() {
  // @@protoc_insertion_point(field_release:imofflinemsg.OfflineMsgData.sMsgData)
  
  return smsgdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OfflineMsgData::set_allocated_smsgdata(::std::string* smsgdata) {
  if (smsgdata != NULL) {
    
  } else {
    
  }
  smsgdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgdata);
  // @@protoc_insertion_point(field_set_allocated:imofflinemsg.OfflineMsgData.sMsgData)
}

// string sMsgId = 3;
inline void OfflineMsgData::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OfflineMsgData::smsgid() const {
  // @@protoc_insertion_point(field_get:imofflinemsg.OfflineMsgData.sMsgId)
  return smsgid_.GetNoArena();
}
inline void OfflineMsgData::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:imofflinemsg.OfflineMsgData.sMsgId)
}
#if LANG_CXX11
inline void OfflineMsgData::set_smsgid(::std::string&& value) {
  
  smsgid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:imofflinemsg.OfflineMsgData.sMsgId)
}
#endif
inline void OfflineMsgData::set_smsgid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:imofflinemsg.OfflineMsgData.sMsgId)
}
inline void OfflineMsgData::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:imofflinemsg.OfflineMsgData.sMsgId)
}
inline ::std::string* OfflineMsgData::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:imofflinemsg.OfflineMsgData.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OfflineMsgData::release_smsgid() {
  // @@protoc_insertion_point(field_release:imofflinemsg.OfflineMsgData.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OfflineMsgData::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:imofflinemsg.OfflineMsgData.sMsgId)
}

// string sFromId = 4;
inline void OfflineMsgData::clear_sfromid() {
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OfflineMsgData::sfromid() const {
  // @@protoc_insertion_point(field_get:imofflinemsg.OfflineMsgData.sFromId)
  return sfromid_.GetNoArena();
}
inline void OfflineMsgData::set_sfromid(const ::std::string& value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:imofflinemsg.OfflineMsgData.sFromId)
}
#if LANG_CXX11
inline void OfflineMsgData::set_sfromid(::std::string&& value) {
  
  sfromid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:imofflinemsg.OfflineMsgData.sFromId)
}
#endif
inline void OfflineMsgData::set_sfromid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:imofflinemsg.OfflineMsgData.sFromId)
}
inline void OfflineMsgData::set_sfromid(const char* value, size_t size) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:imofflinemsg.OfflineMsgData.sFromId)
}
inline ::std::string* OfflineMsgData::mutable_sfromid() {
  
  // @@protoc_insertion_point(field_mutable:imofflinemsg.OfflineMsgData.sFromId)
  return sfromid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OfflineMsgData::release_sfromid() {
  // @@protoc_insertion_point(field_release:imofflinemsg.OfflineMsgData.sFromId)
  
  return sfromid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OfflineMsgData::set_allocated_sfromid(::std::string* sfromid) {
  if (sfromid != NULL) {
    
  } else {
    
  }
  sfromid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sfromid);
  // @@protoc_insertion_point(field_set_allocated:imofflinemsg.OfflineMsgData.sFromId)
}

// uint32 status = 5;
inline void OfflineMsgData::clear_status() {
  status_ = 0u;
}
inline ::google::protobuf::uint32 OfflineMsgData::status() const {
  // @@protoc_insertion_point(field_get:imofflinemsg.OfflineMsgData.status)
  return status_;
}
inline void OfflineMsgData::set_status(::google::protobuf::uint32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:imofflinemsg.OfflineMsgData.status)
}

// uint64 uCreateTime = 6;
inline void OfflineMsgData::clear_ucreatetime() {
  ucreatetime_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 OfflineMsgData::ucreatetime() const {
  // @@protoc_insertion_point(field_get:imofflinemsg.OfflineMsgData.uCreateTime)
  return ucreatetime_;
}
inline void OfflineMsgData::set_ucreatetime(::google::protobuf::uint64 value) {
  
  ucreatetime_ = value;
  // @@protoc_insertion_point(field_set:imofflinemsg.OfflineMsgData.uCreateTime)
}

// -------------------------------------------------------------------

// MESOfflineMsgAck

// string sFromId = 1;
inline void MESOfflineMsgAck::clear_sfromid() {
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MESOfflineMsgAck::sfromid() const {
  // @@protoc_insertion_point(field_get:imofflinemsg.MESOfflineMsgAck.sFromId)
  return sfromid_.GetNoArena();
}
inline void MESOfflineMsgAck::set_sfromid(const ::std::string& value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:imofflinemsg.MESOfflineMsgAck.sFromId)
}
#if LANG_CXX11
inline void MESOfflineMsgAck::set_sfromid(::std::string&& value) {
  
  sfromid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:imofflinemsg.MESOfflineMsgAck.sFromId)
}
#endif
inline void MESOfflineMsgAck::set_sfromid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:imofflinemsg.MESOfflineMsgAck.sFromId)
}
inline void MESOfflineMsgAck::set_sfromid(const char* value, size_t size) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:imofflinemsg.MESOfflineMsgAck.sFromId)
}
inline ::std::string* MESOfflineMsgAck::mutable_sfromid() {
  
  // @@protoc_insertion_point(field_mutable:imofflinemsg.MESOfflineMsgAck.sFromId)
  return sfromid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MESOfflineMsgAck::release_sfromid() {
  // @@protoc_insertion_point(field_release:imofflinemsg.MESOfflineMsgAck.sFromId)
  
  return sfromid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MESOfflineMsgAck::set_allocated_sfromid(::std::string* sfromid) {
  if (sfromid != NULL) {
    
  } else {
    
  }
  sfromid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sfromid);
  // @@protoc_insertion_point(field_set_allocated:imofflinemsg.MESOfflineMsgAck.sFromId)
}

// string sToId = 2;
inline void MESOfflineMsgAck::clear_stoid() {
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MESOfflineMsgAck::stoid() const {
  // @@protoc_insertion_point(field_get:imofflinemsg.MESOfflineMsgAck.sToId)
  return stoid_.GetNoArena();
}
inline void MESOfflineMsgAck::set_stoid(const ::std::string& value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:imofflinemsg.MESOfflineMsgAck.sToId)
}
#if LANG_CXX11
inline void MESOfflineMsgAck::set_stoid(::std::string&& value) {
  
  stoid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:imofflinemsg.MESOfflineMsgAck.sToId)
}
#endif
inline void MESOfflineMsgAck::set_stoid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:imofflinemsg.MESOfflineMsgAck.sToId)
}
inline void MESOfflineMsgAck::set_stoid(const char* value, size_t size) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:imofflinemsg.MESOfflineMsgAck.sToId)
}
inline ::std::string* MESOfflineMsgAck::mutable_stoid() {
  
  // @@protoc_insertion_point(field_mutable:imofflinemsg.MESOfflineMsgAck.sToId)
  return stoid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MESOfflineMsgAck::release_stoid() {
  // @@protoc_insertion_point(field_release:imofflinemsg.MESOfflineMsgAck.sToId)
  
  return stoid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MESOfflineMsgAck::set_allocated_stoid(::std::string* stoid) {
  if (stoid != NULL) {
    
  } else {
    
  }
  stoid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stoid);
  // @@protoc_insertion_point(field_set_allocated:imofflinemsg.MESOfflineMsgAck.sToId)
}

// .imofflinemsg.ErrCode errcode = 4;
inline void MESOfflineMsgAck::clear_errcode() {
  errcode_ = 0;
}
inline ::imofflinemsg::ErrCode MESOfflineMsgAck::errcode() const {
  // @@protoc_insertion_point(field_get:imofflinemsg.MESOfflineMsgAck.errcode)
  return static_cast< ::imofflinemsg::ErrCode >(errcode_);
}
inline void MESOfflineMsgAck::set_errcode(::imofflinemsg::ErrCode value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:imofflinemsg.MESOfflineMsgAck.errcode)
}

// string sMsgId = 5;
inline void MESOfflineMsgAck::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MESOfflineMsgAck::smsgid() const {
  // @@protoc_insertion_point(field_get:imofflinemsg.MESOfflineMsgAck.sMsgId)
  return smsgid_.GetNoArena();
}
inline void MESOfflineMsgAck::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:imofflinemsg.MESOfflineMsgAck.sMsgId)
}
#if LANG_CXX11
inline void MESOfflineMsgAck::set_smsgid(::std::string&& value) {
  
  smsgid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:imofflinemsg.MESOfflineMsgAck.sMsgId)
}
#endif
inline void MESOfflineMsgAck::set_smsgid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:imofflinemsg.MESOfflineMsgAck.sMsgId)
}
inline void MESOfflineMsgAck::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:imofflinemsg.MESOfflineMsgAck.sMsgId)
}
inline ::std::string* MESOfflineMsgAck::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:imofflinemsg.MESOfflineMsgAck.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MESOfflineMsgAck::release_smsgid() {
  // @@protoc_insertion_point(field_release:imofflinemsg.MESOfflineMsgAck.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MESOfflineMsgAck::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:imofflinemsg.MESOfflineMsgAck.sMsgId)
}

// uint64 msgTime = 6;
inline void MESOfflineMsgAck::clear_msgtime() {
  msgtime_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MESOfflineMsgAck::msgtime() const {
  // @@protoc_insertion_point(field_get:imofflinemsg.MESOfflineMsgAck.msgTime)
  return msgtime_;
}
inline void MESOfflineMsgAck::set_msgtime(::google::protobuf::uint64 value) {
  
  msgtime_ = value;
  // @@protoc_insertion_point(field_set:imofflinemsg.MESOfflineMsgAck.msgTime)
}

// repeated .imofflinemsg.OfflineMsgData msglist = 13;
inline int MESOfflineMsgAck::msglist_size() const {
  return msglist_.size();
}
inline void MESOfflineMsgAck::clear_msglist() {
  msglist_.Clear();
}
inline ::imofflinemsg::OfflineMsgData* MESOfflineMsgAck::mutable_msglist(int index) {
  // @@protoc_insertion_point(field_mutable:imofflinemsg.MESOfflineMsgAck.msglist)
  return msglist_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::imofflinemsg::OfflineMsgData >*
MESOfflineMsgAck::mutable_msglist() {
  // @@protoc_insertion_point(field_mutable_list:imofflinemsg.MESOfflineMsgAck.msglist)
  return &msglist_;
}
inline const ::imofflinemsg::OfflineMsgData& MESOfflineMsgAck::msglist(int index) const {
  // @@protoc_insertion_point(field_get:imofflinemsg.MESOfflineMsgAck.msglist)
  return msglist_.Get(index);
}
inline ::imofflinemsg::OfflineMsgData* MESOfflineMsgAck::add_msglist() {
  // @@protoc_insertion_point(field_add:imofflinemsg.MESOfflineMsgAck.msglist)
  return msglist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::imofflinemsg::OfflineMsgData >&
MESOfflineMsgAck::msglist() const {
  // @@protoc_insertion_point(field_list:imofflinemsg.MESOfflineMsgAck.msglist)
  return msglist_;
}

// uint32 msgTotal = 14;
inline void MESOfflineMsgAck::clear_msgtotal() {
  msgtotal_ = 0u;
}
inline ::google::protobuf::uint32 MESOfflineMsgAck::msgtotal() const {
  // @@protoc_insertion_point(field_get:imofflinemsg.MESOfflineMsgAck.msgTotal)
  return msgtotal_;
}
inline void MESOfflineMsgAck::set_msgtotal(::google::protobuf::uint32 value) {
  
  msgtotal_ = value;
  // @@protoc_insertion_point(field_set:imofflinemsg.MESOfflineMsgAck.msgTotal)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace imofflinemsg

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::imofflinemsg::ErrCode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::imofflinemsg::ErrCode>() {
  return ::imofflinemsg::ErrCode_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_im_2eofflinemsg_2eproto
