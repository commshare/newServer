// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: im.cm.proto

#include "im.cm.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace im {
class CMLoginDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMLogin>
      _instance;
} _CMLogin_default_instance_;
class CMLoginAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMLoginAck>
      _instance;
} _CMLoginAck_default_instance_;
class CMLogoutDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMLogout>
      _instance;
} _CMLogout_default_instance_;
class CMLogoutAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMLogoutAck>
      _instance;
} _CMLogoutAck_default_instance_;
class CMDeviceTokenSyncDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMDeviceTokenSync>
      _instance;
} _CMDeviceTokenSync_default_instance_;
class CMDeviceTokenSyncAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMDeviceTokenSyncAck>
      _instance;
} _CMDeviceTokenSyncAck_default_instance_;
class CMKickoutNotificationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMKickoutNotification>
      _instance;
} _CMKickoutNotification_default_instance_;
}  // namespace im
namespace protobuf_im_2ecm_2eproto {
static void InitDefaultsCMLogin() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_CMLogin_default_instance_;
    new (ptr) ::im::CMLogin();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::CMLogin::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMLogin =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMLogin}, {}};

static void InitDefaultsCMLoginAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_CMLoginAck_default_instance_;
    new (ptr) ::im::CMLoginAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::CMLoginAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMLoginAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMLoginAck}, {}};

static void InitDefaultsCMLogout() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_CMLogout_default_instance_;
    new (ptr) ::im::CMLogout();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::CMLogout::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMLogout =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMLogout}, {}};

static void InitDefaultsCMLogoutAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_CMLogoutAck_default_instance_;
    new (ptr) ::im::CMLogoutAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::CMLogoutAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMLogoutAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMLogoutAck}, {}};

static void InitDefaultsCMDeviceTokenSync() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_CMDeviceTokenSync_default_instance_;
    new (ptr) ::im::CMDeviceTokenSync();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::CMDeviceTokenSync::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMDeviceTokenSync =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMDeviceTokenSync}, {}};

static void InitDefaultsCMDeviceTokenSyncAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_CMDeviceTokenSyncAck_default_instance_;
    new (ptr) ::im::CMDeviceTokenSyncAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::CMDeviceTokenSyncAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMDeviceTokenSyncAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMDeviceTokenSyncAck}, {}};

static void InitDefaultsCMKickoutNotification() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_CMKickoutNotification_default_instance_;
    new (ptr) ::im::CMKickoutNotification();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::CMKickoutNotification::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMKickoutNotification =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMKickoutNotification}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CMLogin.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMLoginAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMLogout.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMLogoutAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMDeviceTokenSync.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMDeviceTokenSyncAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMKickoutNotification.base);
}

}  // namespace protobuf_im_2ecm_2eproto
namespace im {

// ===================================================================

void CMLogin::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMLogin::kSUserIdFieldNumber;
const int CMLogin::kSUserTokenFieldNumber;
const int CMLogin::kNDeviceTypeFieldNumber;
const int CMLogin::kSDeviceVersionFieldNumber;
const int CMLogin::kSDeviceTokenFieldNumber;
const int CMLogin::kSDeviceVoipTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMLogin::CMLogin()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2ecm_2eproto::scc_info_CMLogin.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.CMLogin)
}
CMLogin::CMLogin(const CMLogin& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  susertoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.susertoken().size() > 0) {
    susertoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.susertoken_);
  }
  sdeviceversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sdeviceversion().size() > 0) {
    sdeviceversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdeviceversion_);
  }
  sdevicetoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sdevicetoken().size() > 0) {
    sdevicetoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdevicetoken_);
  }
  sdevicevoiptoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sdevicevoiptoken().size() > 0) {
    sdevicevoiptoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdevicevoiptoken_);
  }
  ndevicetype_ = from.ndevicetype_;
  // @@protoc_insertion_point(copy_constructor:im.CMLogin)
}

void CMLogin::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  susertoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdeviceversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdevicetoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdevicevoiptoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ndevicetype_ = 0u;
}

CMLogin::~CMLogin() {
  // @@protoc_insertion_point(destructor:im.CMLogin)
  SharedDtor();
}

void CMLogin::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  susertoken_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdeviceversion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdevicetoken_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdevicevoiptoken_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMLogin::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMLogin& CMLogin::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2ecm_2eproto::scc_info_CMLogin.base);
  return *internal_default_instance();
}


void CMLogin::Clear() {
// @@protoc_insertion_point(message_clear_start:im.CMLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  susertoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdeviceversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdevicetoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdevicevoiptoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ndevicetype_ = 0u;
  _internal_metadata_.Clear();
}

bool CMLogin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.CMLogin)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.CMLogin.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sUserToken = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_susertoken()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->susertoken().data(), static_cast<int>(this->susertoken().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.CMLogin.sUserToken"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nDeviceType = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ndevicetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sDeviceVersion = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sdeviceversion()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sdeviceversion().data(), static_cast<int>(this->sdeviceversion().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.CMLogin.sDeviceVersion"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sDeviceToken = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sdevicetoken()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sdevicetoken().data(), static_cast<int>(this->sdevicetoken().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.CMLogin.sDeviceToken"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sDeviceVoipToken = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sdevicevoiptoken()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sdevicevoiptoken().data(), static_cast<int>(this->sdevicevoiptoken().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.CMLogin.sDeviceVoipToken"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.CMLogin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.CMLogin)
  return false;
#undef DO_
}

void CMLogin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.CMLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.CMLogin.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string sUserToken = 2;
  if (this->susertoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->susertoken().data(), static_cast<int>(this->susertoken().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.CMLogin.sUserToken");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->susertoken(), output);
  }

  // uint32 nDeviceType = 6;
  if (this->ndevicetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->ndevicetype(), output);
  }

  // string sDeviceVersion = 7;
  if (this->sdeviceversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sdeviceversion().data(), static_cast<int>(this->sdeviceversion().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.CMLogin.sDeviceVersion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->sdeviceversion(), output);
  }

  // string sDeviceToken = 8;
  if (this->sdevicetoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sdevicetoken().data(), static_cast<int>(this->sdevicetoken().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.CMLogin.sDeviceToken");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->sdevicetoken(), output);
  }

  // string sDeviceVoipToken = 9;
  if (this->sdevicevoiptoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sdevicevoiptoken().data(), static_cast<int>(this->sdevicevoiptoken().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.CMLogin.sDeviceVoipToken");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->sdevicevoiptoken(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.CMLogin)
}

size_t CMLogin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.CMLogin)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sUserToken = 2;
  if (this->susertoken().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->susertoken());
  }

  // string sDeviceVersion = 7;
  if (this->sdeviceversion().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sdeviceversion());
  }

  // string sDeviceToken = 8;
  if (this->sdevicetoken().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sdevicetoken());
  }

  // string sDeviceVoipToken = 9;
  if (this->sdevicevoiptoken().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sdevicevoiptoken());
  }

  // uint32 nDeviceType = 6;
  if (this->ndevicetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ndevicetype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMLogin::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CMLogin*>(&from));
}

void CMLogin::MergeFrom(const CMLogin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.CMLogin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.susertoken().size() > 0) {

    susertoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.susertoken_);
  }
  if (from.sdeviceversion().size() > 0) {

    sdeviceversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdeviceversion_);
  }
  if (from.sdevicetoken().size() > 0) {

    sdevicetoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdevicetoken_);
  }
  if (from.sdevicevoiptoken().size() > 0) {

    sdevicevoiptoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdevicevoiptoken_);
  }
  if (from.ndevicetype() != 0) {
    set_ndevicetype(from.ndevicetype());
  }
}

void CMLogin::CopyFrom(const CMLogin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.CMLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMLogin::IsInitialized() const {
  return true;
}

void CMLogin::Swap(CMLogin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMLogin::InternalSwap(CMLogin* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  susertoken_.Swap(&other->susertoken_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sdeviceversion_.Swap(&other->sdeviceversion_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sdevicetoken_.Swap(&other->sdevicetoken_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sdevicevoiptoken_.Swap(&other->sdevicevoiptoken_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(ndevicetype_, other->ndevicetype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string CMLogin::GetTypeName() const {
  return "im.CMLogin";
}


// ===================================================================

void CMLoginAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMLoginAck::kSUserIdFieldNumber;
const int CMLoginAck::kNErrFieldNumber;
const int CMLoginAck::kNLastLoginTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMLoginAck::CMLoginAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2ecm_2eproto::scc_info_CMLoginAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.CMLoginAck)
}
CMLoginAck::CMLoginAck(const CMLoginAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  ::memcpy(&nlastlogintime_, &from.nlastlogintime_,
    static_cast<size_t>(reinterpret_cast<char*>(&nerr_) -
    reinterpret_cast<char*>(&nlastlogintime_)) + sizeof(nerr_));
  // @@protoc_insertion_point(copy_constructor:im.CMLoginAck)
}

void CMLoginAck::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nlastlogintime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nerr_) -
      reinterpret_cast<char*>(&nlastlogintime_)) + sizeof(nerr_));
}

CMLoginAck::~CMLoginAck() {
  // @@protoc_insertion_point(destructor:im.CMLoginAck)
  SharedDtor();
}

void CMLoginAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMLoginAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMLoginAck& CMLoginAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2ecm_2eproto::scc_info_CMLoginAck.base);
  return *internal_default_instance();
}


void CMLoginAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.CMLoginAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nlastlogintime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nerr_) -
      reinterpret_cast<char*>(&nlastlogintime_)) + sizeof(nerr_));
  _internal_metadata_.Clear();
}

bool CMLoginAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.CMLoginAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.CMLoginAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode nErr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_nerr(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 nLastLoginTime = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &nlastlogintime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.CMLoginAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.CMLoginAck)
  return false;
#undef DO_
}

void CMLoginAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.CMLoginAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.CMLoginAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // .im.ErrCode nErr = 2;
  if (this->nerr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->nerr(), output);
  }

  // uint64 nLastLoginTime = 3;
  if (this->nlastlogintime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->nlastlogintime(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.CMLoginAck)
}

size_t CMLoginAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.CMLoginAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // uint64 nLastLoginTime = 3;
  if (this->nlastlogintime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->nlastlogintime());
  }

  // .im.ErrCode nErr = 2;
  if (this->nerr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->nerr());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMLoginAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CMLoginAck*>(&from));
}

void CMLoginAck::MergeFrom(const CMLoginAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.CMLoginAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.nlastlogintime() != 0) {
    set_nlastlogintime(from.nlastlogintime());
  }
  if (from.nerr() != 0) {
    set_nerr(from.nerr());
  }
}

void CMLoginAck::CopyFrom(const CMLoginAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.CMLoginAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMLoginAck::IsInitialized() const {
  return true;
}

void CMLoginAck::Swap(CMLoginAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMLoginAck::InternalSwap(CMLoginAck* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(nlastlogintime_, other->nlastlogintime_);
  swap(nerr_, other->nerr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string CMLoginAck::GetTypeName() const {
  return "im.CMLoginAck";
}


// ===================================================================

void CMLogout::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMLogout::kSUserIdFieldNumber;
const int CMLogout::kNDeviceTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMLogout::CMLogout()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2ecm_2eproto::scc_info_CMLogout.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.CMLogout)
}
CMLogout::CMLogout(const CMLogout& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  ndevicetype_ = from.ndevicetype_;
  // @@protoc_insertion_point(copy_constructor:im.CMLogout)
}

void CMLogout::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ndevicetype_ = 0u;
}

CMLogout::~CMLogout() {
  // @@protoc_insertion_point(destructor:im.CMLogout)
  SharedDtor();
}

void CMLogout::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMLogout::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMLogout& CMLogout::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2ecm_2eproto::scc_info_CMLogout.base);
  return *internal_default_instance();
}


void CMLogout::Clear() {
// @@protoc_insertion_point(message_clear_start:im.CMLogout)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ndevicetype_ = 0u;
  _internal_metadata_.Clear();
}

bool CMLogout::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.CMLogout)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.CMLogout.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nDeviceType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ndevicetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.CMLogout)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.CMLogout)
  return false;
#undef DO_
}

void CMLogout::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.CMLogout)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.CMLogout.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // uint32 nDeviceType = 2;
  if (this->ndevicetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ndevicetype(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.CMLogout)
}

size_t CMLogout::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.CMLogout)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // uint32 nDeviceType = 2;
  if (this->ndevicetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ndevicetype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMLogout::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CMLogout*>(&from));
}

void CMLogout::MergeFrom(const CMLogout& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.CMLogout)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.ndevicetype() != 0) {
    set_ndevicetype(from.ndevicetype());
  }
}

void CMLogout::CopyFrom(const CMLogout& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.CMLogout)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMLogout::IsInitialized() const {
  return true;
}

void CMLogout::Swap(CMLogout* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMLogout::InternalSwap(CMLogout* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(ndevicetype_, other->ndevicetype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string CMLogout::GetTypeName() const {
  return "im.CMLogout";
}


// ===================================================================

void CMLogoutAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMLogoutAck::kNErrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMLogoutAck::CMLogoutAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2ecm_2eproto::scc_info_CMLogoutAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.CMLogoutAck)
}
CMLogoutAck::CMLogoutAck(const CMLogoutAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nerr_ = from.nerr_;
  // @@protoc_insertion_point(copy_constructor:im.CMLogoutAck)
}

void CMLogoutAck::SharedCtor() {
  nerr_ = 0;
}

CMLogoutAck::~CMLogoutAck() {
  // @@protoc_insertion_point(destructor:im.CMLogoutAck)
  SharedDtor();
}

void CMLogoutAck::SharedDtor() {
}

void CMLogoutAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMLogoutAck& CMLogoutAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2ecm_2eproto::scc_info_CMLogoutAck.base);
  return *internal_default_instance();
}


void CMLogoutAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.CMLogoutAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nerr_ = 0;
  _internal_metadata_.Clear();
}

bool CMLogoutAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.CMLogoutAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .im.ErrCode nErr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_nerr(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.CMLogoutAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.CMLogoutAck)
  return false;
#undef DO_
}

void CMLogoutAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.CMLogoutAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .im.ErrCode nErr = 1;
  if (this->nerr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->nerr(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.CMLogoutAck)
}

size_t CMLogoutAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.CMLogoutAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // .im.ErrCode nErr = 1;
  if (this->nerr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->nerr());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMLogoutAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CMLogoutAck*>(&from));
}

void CMLogoutAck::MergeFrom(const CMLogoutAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.CMLogoutAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nerr() != 0) {
    set_nerr(from.nerr());
  }
}

void CMLogoutAck::CopyFrom(const CMLogoutAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.CMLogoutAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMLogoutAck::IsInitialized() const {
  return true;
}

void CMLogoutAck::Swap(CMLogoutAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMLogoutAck::InternalSwap(CMLogoutAck* other) {
  using std::swap;
  swap(nerr_, other->nerr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string CMLogoutAck::GetTypeName() const {
  return "im.CMLogoutAck";
}


// ===================================================================

void CMDeviceTokenSync::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDeviceTokenSync::kSUserIdFieldNumber;
const int CMDeviceTokenSync::kNDeviceTypeFieldNumber;
const int CMDeviceTokenSync::kSDeviceVersionFieldNumber;
const int CMDeviceTokenSync::kSDeviceTokenFieldNumber;
const int CMDeviceTokenSync::kNDeviceTokenTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDeviceTokenSync::CMDeviceTokenSync()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2ecm_2eproto::scc_info_CMDeviceTokenSync.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.CMDeviceTokenSync)
}
CMDeviceTokenSync::CMDeviceTokenSync(const CMDeviceTokenSync& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  sdeviceversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sdeviceversion().size() > 0) {
    sdeviceversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdeviceversion_);
  }
  sdevicetoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sdevicetoken().size() > 0) {
    sdevicetoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdevicetoken_);
  }
  ::memcpy(&ndevicetype_, &from.ndevicetype_,
    static_cast<size_t>(reinterpret_cast<char*>(&ndevicetokentype_) -
    reinterpret_cast<char*>(&ndevicetype_)) + sizeof(ndevicetokentype_));
  // @@protoc_insertion_point(copy_constructor:im.CMDeviceTokenSync)
}

void CMDeviceTokenSync::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdeviceversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdevicetoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ndevicetype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ndevicetokentype_) -
      reinterpret_cast<char*>(&ndevicetype_)) + sizeof(ndevicetokentype_));
}

CMDeviceTokenSync::~CMDeviceTokenSync() {
  // @@protoc_insertion_point(destructor:im.CMDeviceTokenSync)
  SharedDtor();
}

void CMDeviceTokenSync::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdeviceversion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdevicetoken_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMDeviceTokenSync::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMDeviceTokenSync& CMDeviceTokenSync::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2ecm_2eproto::scc_info_CMDeviceTokenSync.base);
  return *internal_default_instance();
}


void CMDeviceTokenSync::Clear() {
// @@protoc_insertion_point(message_clear_start:im.CMDeviceTokenSync)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdeviceversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdevicetoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ndevicetype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ndevicetokentype_) -
      reinterpret_cast<char*>(&ndevicetype_)) + sizeof(ndevicetokentype_));
  _internal_metadata_.Clear();
}

bool CMDeviceTokenSync::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.CMDeviceTokenSync)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.CMDeviceTokenSync.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nDeviceType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ndevicetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sDeviceVersion = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sdeviceversion()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sdeviceversion().data(), static_cast<int>(this->sdeviceversion().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.CMDeviceTokenSync.sDeviceVersion"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sDeviceToken = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sdevicetoken()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sdevicetoken().data(), static_cast<int>(this->sdevicetoken().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.CMDeviceTokenSync.sDeviceToken"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nDeviceTokenType = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ndevicetokentype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.CMDeviceTokenSync)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.CMDeviceTokenSync)
  return false;
#undef DO_
}

void CMDeviceTokenSync::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.CMDeviceTokenSync)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.CMDeviceTokenSync.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // uint32 nDeviceType = 2;
  if (this->ndevicetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ndevicetype(), output);
  }

  // string sDeviceVersion = 3;
  if (this->sdeviceversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sdeviceversion().data(), static_cast<int>(this->sdeviceversion().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.CMDeviceTokenSync.sDeviceVersion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sdeviceversion(), output);
  }

  // string sDeviceToken = 4;
  if (this->sdevicetoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sdevicetoken().data(), static_cast<int>(this->sdevicetoken().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.CMDeviceTokenSync.sDeviceToken");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sdevicetoken(), output);
  }

  // uint32 nDeviceTokenType = 5;
  if (this->ndevicetokentype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->ndevicetokentype(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.CMDeviceTokenSync)
}

size_t CMDeviceTokenSync::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.CMDeviceTokenSync)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sDeviceVersion = 3;
  if (this->sdeviceversion().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sdeviceversion());
  }

  // string sDeviceToken = 4;
  if (this->sdevicetoken().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sdevicetoken());
  }

  // uint32 nDeviceType = 2;
  if (this->ndevicetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ndevicetype());
  }

  // uint32 nDeviceTokenType = 5;
  if (this->ndevicetokentype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ndevicetokentype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMDeviceTokenSync::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CMDeviceTokenSync*>(&from));
}

void CMDeviceTokenSync::MergeFrom(const CMDeviceTokenSync& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.CMDeviceTokenSync)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.sdeviceversion().size() > 0) {

    sdeviceversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdeviceversion_);
  }
  if (from.sdevicetoken().size() > 0) {

    sdevicetoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdevicetoken_);
  }
  if (from.ndevicetype() != 0) {
    set_ndevicetype(from.ndevicetype());
  }
  if (from.ndevicetokentype() != 0) {
    set_ndevicetokentype(from.ndevicetokentype());
  }
}

void CMDeviceTokenSync::CopyFrom(const CMDeviceTokenSync& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.CMDeviceTokenSync)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDeviceTokenSync::IsInitialized() const {
  return true;
}

void CMDeviceTokenSync::Swap(CMDeviceTokenSync* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDeviceTokenSync::InternalSwap(CMDeviceTokenSync* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sdeviceversion_.Swap(&other->sdeviceversion_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sdevicetoken_.Swap(&other->sdevicetoken_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(ndevicetype_, other->ndevicetype_);
  swap(ndevicetokentype_, other->ndevicetokentype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string CMDeviceTokenSync::GetTypeName() const {
  return "im.CMDeviceTokenSync";
}


// ===================================================================

void CMDeviceTokenSyncAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDeviceTokenSyncAck::kSUserIdFieldNumber;
const int CMDeviceTokenSyncAck::kNErrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDeviceTokenSyncAck::CMDeviceTokenSyncAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2ecm_2eproto::scc_info_CMDeviceTokenSyncAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.CMDeviceTokenSyncAck)
}
CMDeviceTokenSyncAck::CMDeviceTokenSyncAck(const CMDeviceTokenSyncAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  nerr_ = from.nerr_;
  // @@protoc_insertion_point(copy_constructor:im.CMDeviceTokenSyncAck)
}

void CMDeviceTokenSyncAck::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nerr_ = 0;
}

CMDeviceTokenSyncAck::~CMDeviceTokenSyncAck() {
  // @@protoc_insertion_point(destructor:im.CMDeviceTokenSyncAck)
  SharedDtor();
}

void CMDeviceTokenSyncAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMDeviceTokenSyncAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMDeviceTokenSyncAck& CMDeviceTokenSyncAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2ecm_2eproto::scc_info_CMDeviceTokenSyncAck.base);
  return *internal_default_instance();
}


void CMDeviceTokenSyncAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.CMDeviceTokenSyncAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nerr_ = 0;
  _internal_metadata_.Clear();
}

bool CMDeviceTokenSyncAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.CMDeviceTokenSyncAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.CMDeviceTokenSyncAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode nErr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_nerr(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.CMDeviceTokenSyncAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.CMDeviceTokenSyncAck)
  return false;
#undef DO_
}

void CMDeviceTokenSyncAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.CMDeviceTokenSyncAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.CMDeviceTokenSyncAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // .im.ErrCode nErr = 2;
  if (this->nerr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->nerr(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.CMDeviceTokenSyncAck)
}

size_t CMDeviceTokenSyncAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.CMDeviceTokenSyncAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // .im.ErrCode nErr = 2;
  if (this->nerr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->nerr());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMDeviceTokenSyncAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CMDeviceTokenSyncAck*>(&from));
}

void CMDeviceTokenSyncAck::MergeFrom(const CMDeviceTokenSyncAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.CMDeviceTokenSyncAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.nerr() != 0) {
    set_nerr(from.nerr());
  }
}

void CMDeviceTokenSyncAck::CopyFrom(const CMDeviceTokenSyncAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.CMDeviceTokenSyncAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDeviceTokenSyncAck::IsInitialized() const {
  return true;
}

void CMDeviceTokenSyncAck::Swap(CMDeviceTokenSyncAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDeviceTokenSyncAck::InternalSwap(CMDeviceTokenSyncAck* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(nerr_, other->nerr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string CMDeviceTokenSyncAck::GetTypeName() const {
  return "im.CMDeviceTokenSyncAck";
}


// ===================================================================

void CMKickoutNotification::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMKickoutNotification::kSUserIdFieldNumber;
const int CMKickoutNotification::kNDeviceTypeFieldNumber;
const int CMKickoutNotification::kIpFieldNumber;
const int CMKickoutNotification::kPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMKickoutNotification::CMKickoutNotification()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2ecm_2eproto::scc_info_CMKickoutNotification.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.CMKickoutNotification)
}
CMKickoutNotification::CMKickoutNotification(const CMKickoutNotification& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip().size() > 0) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  ::memcpy(&ndevicetype_, &from.ndevicetype_,
    static_cast<size_t>(reinterpret_cast<char*>(&port_) -
    reinterpret_cast<char*>(&ndevicetype_)) + sizeof(port_));
  // @@protoc_insertion_point(copy_constructor:im.CMKickoutNotification)
}

void CMKickoutNotification::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ndevicetype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&port_) -
      reinterpret_cast<char*>(&ndevicetype_)) + sizeof(port_));
}

CMKickoutNotification::~CMKickoutNotification() {
  // @@protoc_insertion_point(destructor:im.CMKickoutNotification)
  SharedDtor();
}

void CMKickoutNotification::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMKickoutNotification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMKickoutNotification& CMKickoutNotification::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2ecm_2eproto::scc_info_CMKickoutNotification.base);
  return *internal_default_instance();
}


void CMKickoutNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:im.CMKickoutNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ndevicetype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&port_) -
      reinterpret_cast<char*>(&ndevicetype_)) + sizeof(port_));
  _internal_metadata_.Clear();
}

bool CMKickoutNotification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.CMKickoutNotification)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.CMKickoutNotification.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nDeviceType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ndevicetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ip = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip().data(), static_cast<int>(this->ip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.CMKickoutNotification.ip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 port = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.CMKickoutNotification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.CMKickoutNotification)
  return false;
#undef DO_
}

void CMKickoutNotification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.CMKickoutNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.CMKickoutNotification.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // uint32 nDeviceType = 2;
  if (this->ndevicetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ndevicetype(), output);
  }

  // string ip = 3;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), static_cast<int>(this->ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.CMKickoutNotification.ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->ip(), output);
  }

  // uint32 port = 4;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->port(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.CMKickoutNotification)
}

size_t CMKickoutNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.CMKickoutNotification)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string ip = 3;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip());
  }

  // uint32 nDeviceType = 2;
  if (this->ndevicetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ndevicetype());
  }

  // uint32 port = 4;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMKickoutNotification::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CMKickoutNotification*>(&from));
}

void CMKickoutNotification::MergeFrom(const CMKickoutNotification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.CMKickoutNotification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.ip().size() > 0) {

    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  if (from.ndevicetype() != 0) {
    set_ndevicetype(from.ndevicetype());
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
}

void CMKickoutNotification::CopyFrom(const CMKickoutNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.CMKickoutNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMKickoutNotification::IsInitialized() const {
  return true;
}

void CMKickoutNotification::Swap(CMKickoutNotification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMKickoutNotification::InternalSwap(CMKickoutNotification* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ip_.Swap(&other->ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(ndevicetype_, other->ndevicetype_);
  swap(port_, other->port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string CMKickoutNotification::GetTypeName() const {
  return "im.CMKickoutNotification";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace im
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::CMLogin* Arena::CreateMaybeMessage< ::im::CMLogin >(Arena* arena) {
  return Arena::CreateInternal< ::im::CMLogin >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::CMLoginAck* Arena::CreateMaybeMessage< ::im::CMLoginAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::CMLoginAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::CMLogout* Arena::CreateMaybeMessage< ::im::CMLogout >(Arena* arena) {
  return Arena::CreateInternal< ::im::CMLogout >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::CMLogoutAck* Arena::CreateMaybeMessage< ::im::CMLogoutAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::CMLogoutAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::CMDeviceTokenSync* Arena::CreateMaybeMessage< ::im::CMDeviceTokenSync >(Arena* arena) {
  return Arena::CreateInternal< ::im::CMDeviceTokenSync >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::CMDeviceTokenSyncAck* Arena::CreateMaybeMessage< ::im::CMDeviceTokenSyncAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::CMDeviceTokenSyncAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::CMKickoutNotification* Arena::CreateMaybeMessage< ::im::CMKickoutNotification >(Arena* arena) {
  return Arena::CreateInternal< ::im::CMKickoutNotification >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
