// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: im.sig.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "im.sig.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace im {

void protobuf_ShutdownFile_im_2esig_2eproto() {
  delete SIGSponsorCall::default_instance_;
  delete SIGSponsorCallAck::default_instance_;
  delete SIGSponsorCallDeliverAck::default_instance_;
  delete SIGSponsorCallAns::default_instance_;
  delete SIGSponsorCallAnsAck::default_instance_;
  delete SIGSponsorCallAnsDeliverACK::default_instance_;
  delete SIGP2PCallExchangeNatInfo::default_instance_;
  delete SIGP2PCallExchangeNatInfoAck::default_instance_;
  delete SIGP2PCallExchangeNatInfoDeliverAck::default_instance_;
  delete SIGHangUp::default_instance_;
  delete SIGHangUpAck::default_instance_;
  delete SIGHangUpDeliverAck::default_instance_;
  delete SIGP2PCallStateNotify::default_instance_;
  delete SIGP2PCallStateNotifyACK::default_instance_;
  delete SIGP2PCallStateNotifyDeliverAck::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_im_2esig_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_im_2esig_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_im_2esig_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  ::im::protobuf_AddDesc_im_2epub_2eproto();
  SIGSponsorCall::default_instance_ = new SIGSponsorCall();
  SIGSponsorCallAck::default_instance_ = new SIGSponsorCallAck();
  SIGSponsorCallDeliverAck::default_instance_ = new SIGSponsorCallDeliverAck();
  SIGSponsorCallAns::default_instance_ = new SIGSponsorCallAns();
  SIGSponsorCallAnsAck::default_instance_ = new SIGSponsorCallAnsAck();
  SIGSponsorCallAnsDeliverACK::default_instance_ = new SIGSponsorCallAnsDeliverACK();
  SIGP2PCallExchangeNatInfo::default_instance_ = new SIGP2PCallExchangeNatInfo();
  SIGP2PCallExchangeNatInfoAck::default_instance_ = new SIGP2PCallExchangeNatInfoAck();
  SIGP2PCallExchangeNatInfoDeliverAck::default_instance_ = new SIGP2PCallExchangeNatInfoDeliverAck();
  SIGHangUp::default_instance_ = new SIGHangUp();
  SIGHangUpAck::default_instance_ = new SIGHangUpAck();
  SIGHangUpDeliverAck::default_instance_ = new SIGHangUpDeliverAck();
  SIGP2PCallStateNotify::default_instance_ = new SIGP2PCallStateNotify();
  SIGP2PCallStateNotifyACK::default_instance_ = new SIGP2PCallStateNotifyACK();
  SIGP2PCallStateNotifyDeliverAck::default_instance_ = new SIGP2PCallStateNotifyDeliverAck();
  SIGSponsorCall::default_instance_->InitAsDefaultInstance();
  SIGSponsorCallAck::default_instance_->InitAsDefaultInstance();
  SIGSponsorCallDeliverAck::default_instance_->InitAsDefaultInstance();
  SIGSponsorCallAns::default_instance_->InitAsDefaultInstance();
  SIGSponsorCallAnsAck::default_instance_->InitAsDefaultInstance();
  SIGSponsorCallAnsDeliverACK::default_instance_->InitAsDefaultInstance();
  SIGP2PCallExchangeNatInfo::default_instance_->InitAsDefaultInstance();
  SIGP2PCallExchangeNatInfoAck::default_instance_->InitAsDefaultInstance();
  SIGP2PCallExchangeNatInfoDeliverAck::default_instance_->InitAsDefaultInstance();
  SIGHangUp::default_instance_->InitAsDefaultInstance();
  SIGHangUpAck::default_instance_->InitAsDefaultInstance();
  SIGHangUpDeliverAck::default_instance_->InitAsDefaultInstance();
  SIGP2PCallStateNotify::default_instance_->InitAsDefaultInstance();
  SIGP2PCallStateNotifyACK::default_instance_->InitAsDefaultInstance();
  SIGP2PCallStateNotifyDeliverAck::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_im_2esig_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_im_2esig_2eproto_once_);
void protobuf_AddDesc_im_2esig_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_im_2esig_2eproto_once_,
                 &protobuf_AddDesc_im_2esig_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_im_2esig_2eproto {
  StaticDescriptorInitializer_im_2esig_2eproto() {
    protobuf_AddDesc_im_2esig_2eproto();
  }
} static_descriptor_initializer_im_2esig_2eproto_;
#endif

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SIGSponsorCall::kSFromIdFieldNumber;
const int SIGSponsorCall::kSInviteIdFieldNumber;
const int SIGSponsorCall::kSMsgIdFieldNumber;
const int SIGSponsorCall::kMsgTimeFieldNumber;
const int SIGSponsorCall::kEncryptFieldNumber;
const int SIGSponsorCall::kSContentFieldNumber;
const int SIGSponsorCall::kCallTypeFieldNumber;
const int SIGSponsorCall::kScallIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SIGSponsorCall::SIGSponsorCall()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.SIGSponsorCall)
}

void SIGSponsorCall::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SIGSponsorCall::SIGSponsorCall(const SIGSponsorCall& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.SIGSponsorCall)
}

void SIGSponsorCall::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sinviteid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgtime_ = GOOGLE_ULONGLONG(0);
  encrypt_ = 0u;
  scontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  calltype_ = 0u;
  scallid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SIGSponsorCall::~SIGSponsorCall() {
  // @@protoc_insertion_point(destructor:im.SIGSponsorCall)
  SharedDtor();
}

void SIGSponsorCall::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sinviteid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scallid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void SIGSponsorCall::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SIGSponsorCall& SIGSponsorCall::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2esig_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2esig_2eproto();
#endif
  return *default_instance_;
}

SIGSponsorCall* SIGSponsorCall::default_instance_ = NULL;

SIGSponsorCall* SIGSponsorCall::New(::google::protobuf::Arena* arena) const {
  SIGSponsorCall* n = new SIGSponsorCall;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SIGSponsorCall::Clear() {
// @@protoc_insertion_point(message_clear_start:im.SIGSponsorCall)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SIGSponsorCall, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SIGSponsorCall*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(encrypt_, calltype_);
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sinviteid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgtime_ = GOOGLE_ULONGLONG(0);
  scontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scallid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool SIGSponsorCall::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.SIGSponsorCall)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sFromId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), this->sfromid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGSponsorCall.sFromId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sInviteId;
        break;
      }

      // optional string sInviteId = 2;
      case 2: {
        if (tag == 18) {
         parse_sInviteId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sinviteid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sinviteid().data(), this->sinviteid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGSponsorCall.sInviteId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 3;
      case 3: {
        if (tag == 26) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGSponsorCall.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_msgTime;
        break;
      }

      // optional uint64 msgTime = 4;
      case 4: {
        if (tag == 32) {
         parse_msgTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_encrypt;
        break;
      }

      // optional uint32 encrypt = 5;
      case 5: {
        if (tag == 40) {
         parse_encrypt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &encrypt_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_sContent;
        break;
      }

      // optional string sContent = 6;
      case 6: {
        if (tag == 50) {
         parse_sContent:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scontent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scontent().data(), this->scontent().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGSponsorCall.sContent"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_callType;
        break;
      }

      // optional uint32 callType = 7;
      case 7: {
        if (tag == 56) {
         parse_callType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &calltype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_scallId;
        break;
      }

      // optional string scallId = 8;
      case 8: {
        if (tag == 66) {
         parse_scallId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scallid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scallid().data(), this->scallid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGSponsorCall.scallId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.SIGSponsorCall)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.SIGSponsorCall)
  return false;
#undef DO_
}

void SIGSponsorCall::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.SIGSponsorCall)
  // optional string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), this->sfromid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGSponsorCall.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // optional string sInviteId = 2;
  if (this->sinviteid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sinviteid().data(), this->sinviteid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGSponsorCall.sInviteId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sinviteid(), output);
  }

  // optional string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGSponsorCall.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // optional uint64 msgTime = 4;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->msgtime(), output);
  }

  // optional uint32 encrypt = 5;
  if (this->encrypt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->encrypt(), output);
  }

  // optional string sContent = 6;
  if (this->scontent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scontent().data(), this->scontent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGSponsorCall.sContent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->scontent(), output);
  }

  // optional uint32 callType = 7;
  if (this->calltype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->calltype(), output);
  }

  // optional string scallId = 8;
  if (this->scallid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scallid().data(), this->scallid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGSponsorCall.scallId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->scallid(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.SIGSponsorCall)
}

int SIGSponsorCall::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.SIGSponsorCall)
  int total_size = 0;

  // optional string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // optional string sInviteId = 2;
  if (this->sinviteid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sinviteid());
  }

  // optional string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // optional uint64 msgTime = 4;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // optional uint32 encrypt = 5;
  if (this->encrypt() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->encrypt());
  }

  // optional string sContent = 6;
  if (this->scontent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scontent());
  }

  // optional uint32 callType = 7;
  if (this->calltype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->calltype());
  }

  // optional string scallId = 8;
  if (this->scallid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scallid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SIGSponsorCall::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SIGSponsorCall*>(&from));
}

void SIGSponsorCall::MergeFrom(const SIGSponsorCall& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.SIGSponsorCall)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.sinviteid().size() > 0) {

    sinviteid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sinviteid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.encrypt() != 0) {
    set_encrypt(from.encrypt());
  }
  if (from.scontent().size() > 0) {

    scontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scontent_);
  }
  if (from.calltype() != 0) {
    set_calltype(from.calltype());
  }
  if (from.scallid().size() > 0) {

    scallid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scallid_);
  }
}

void SIGSponsorCall::CopyFrom(const SIGSponsorCall& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.SIGSponsorCall)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SIGSponsorCall::IsInitialized() const {

  return true;
}

void SIGSponsorCall::Swap(SIGSponsorCall* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SIGSponsorCall::InternalSwap(SIGSponsorCall* other) {
  sfromid_.Swap(&other->sfromid_);
  sinviteid_.Swap(&other->sinviteid_);
  smsgid_.Swap(&other->smsgid_);
  std::swap(msgtime_, other->msgtime_);
  std::swap(encrypt_, other->encrypt_);
  scontent_.Swap(&other->scontent_);
  std::swap(calltype_, other->calltype_);
  scallid_.Swap(&other->scallid_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string SIGSponsorCall::GetTypeName() const {
  return "im.SIGSponsorCall";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SIGSponsorCall

// optional string sFromId = 1;
void SIGSponsorCall::clear_sfromid() {
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SIGSponsorCall::sfromid() const {
  // @@protoc_insertion_point(field_get:im.SIGSponsorCall.sFromId)
  return sfromid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGSponsorCall::set_sfromid(const ::std::string& value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.SIGSponsorCall.sFromId)
}
 void SIGSponsorCall::set_sfromid(const char* value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.SIGSponsorCall.sFromId)
}
 void SIGSponsorCall::set_sfromid(const char* value, size_t size) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.SIGSponsorCall.sFromId)
}
 ::std::string* SIGSponsorCall::mutable_sfromid() {
  
  // @@protoc_insertion_point(field_mutable:im.SIGSponsorCall.sFromId)
  return sfromid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SIGSponsorCall::release_sfromid() {
  // @@protoc_insertion_point(field_release:im.SIGSponsorCall.sFromId)
  
  return sfromid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGSponsorCall::set_allocated_sfromid(::std::string* sfromid) {
  if (sfromid != NULL) {
    
  } else {
    
  }
  sfromid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sfromid);
  // @@protoc_insertion_point(field_set_allocated:im.SIGSponsorCall.sFromId)
}

// optional string sInviteId = 2;
void SIGSponsorCall::clear_sinviteid() {
  sinviteid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SIGSponsorCall::sinviteid() const {
  // @@protoc_insertion_point(field_get:im.SIGSponsorCall.sInviteId)
  return sinviteid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGSponsorCall::set_sinviteid(const ::std::string& value) {
  
  sinviteid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.SIGSponsorCall.sInviteId)
}
 void SIGSponsorCall::set_sinviteid(const char* value) {
  
  sinviteid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.SIGSponsorCall.sInviteId)
}
 void SIGSponsorCall::set_sinviteid(const char* value, size_t size) {
  
  sinviteid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.SIGSponsorCall.sInviteId)
}
 ::std::string* SIGSponsorCall::mutable_sinviteid() {
  
  // @@protoc_insertion_point(field_mutable:im.SIGSponsorCall.sInviteId)
  return sinviteid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SIGSponsorCall::release_sinviteid() {
  // @@protoc_insertion_point(field_release:im.SIGSponsorCall.sInviteId)
  
  return sinviteid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGSponsorCall::set_allocated_sinviteid(::std::string* sinviteid) {
  if (sinviteid != NULL) {
    
  } else {
    
  }
  sinviteid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sinviteid);
  // @@protoc_insertion_point(field_set_allocated:im.SIGSponsorCall.sInviteId)
}

// optional string sMsgId = 3;
void SIGSponsorCall::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SIGSponsorCall::smsgid() const {
  // @@protoc_insertion_point(field_get:im.SIGSponsorCall.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGSponsorCall::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.SIGSponsorCall.sMsgId)
}
 void SIGSponsorCall::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.SIGSponsorCall.sMsgId)
}
 void SIGSponsorCall::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.SIGSponsorCall.sMsgId)
}
 ::std::string* SIGSponsorCall::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.SIGSponsorCall.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SIGSponsorCall::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.SIGSponsorCall.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGSponsorCall::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.SIGSponsorCall.sMsgId)
}

// optional uint64 msgTime = 4;
void SIGSponsorCall::clear_msgtime() {
  msgtime_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 SIGSponsorCall::msgtime() const {
  // @@protoc_insertion_point(field_get:im.SIGSponsorCall.msgTime)
  return msgtime_;
}
 void SIGSponsorCall::set_msgtime(::google::protobuf::uint64 value) {
  
  msgtime_ = value;
  // @@protoc_insertion_point(field_set:im.SIGSponsorCall.msgTime)
}

// optional uint32 encrypt = 5;
void SIGSponsorCall::clear_encrypt() {
  encrypt_ = 0u;
}
 ::google::protobuf::uint32 SIGSponsorCall::encrypt() const {
  // @@protoc_insertion_point(field_get:im.SIGSponsorCall.encrypt)
  return encrypt_;
}
 void SIGSponsorCall::set_encrypt(::google::protobuf::uint32 value) {
  
  encrypt_ = value;
  // @@protoc_insertion_point(field_set:im.SIGSponsorCall.encrypt)
}

// optional string sContent = 6;
void SIGSponsorCall::clear_scontent() {
  scontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SIGSponsorCall::scontent() const {
  // @@protoc_insertion_point(field_get:im.SIGSponsorCall.sContent)
  return scontent_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGSponsorCall::set_scontent(const ::std::string& value) {
  
  scontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.SIGSponsorCall.sContent)
}
 void SIGSponsorCall::set_scontent(const char* value) {
  
  scontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.SIGSponsorCall.sContent)
}
 void SIGSponsorCall::set_scontent(const char* value, size_t size) {
  
  scontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.SIGSponsorCall.sContent)
}
 ::std::string* SIGSponsorCall::mutable_scontent() {
  
  // @@protoc_insertion_point(field_mutable:im.SIGSponsorCall.sContent)
  return scontent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SIGSponsorCall::release_scontent() {
  // @@protoc_insertion_point(field_release:im.SIGSponsorCall.sContent)
  
  return scontent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGSponsorCall::set_allocated_scontent(::std::string* scontent) {
  if (scontent != NULL) {
    
  } else {
    
  }
  scontent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scontent);
  // @@protoc_insertion_point(field_set_allocated:im.SIGSponsorCall.sContent)
}

// optional uint32 callType = 7;
void SIGSponsorCall::clear_calltype() {
  calltype_ = 0u;
}
 ::google::protobuf::uint32 SIGSponsorCall::calltype() const {
  // @@protoc_insertion_point(field_get:im.SIGSponsorCall.callType)
  return calltype_;
}
 void SIGSponsorCall::set_calltype(::google::protobuf::uint32 value) {
  
  calltype_ = value;
  // @@protoc_insertion_point(field_set:im.SIGSponsorCall.callType)
}

// optional string scallId = 8;
void SIGSponsorCall::clear_scallid() {
  scallid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SIGSponsorCall::scallid() const {
  // @@protoc_insertion_point(field_get:im.SIGSponsorCall.scallId)
  return scallid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGSponsorCall::set_scallid(const ::std::string& value) {
  
  scallid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.SIGSponsorCall.scallId)
}
 void SIGSponsorCall::set_scallid(const char* value) {
  
  scallid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.SIGSponsorCall.scallId)
}
 void SIGSponsorCall::set_scallid(const char* value, size_t size) {
  
  scallid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.SIGSponsorCall.scallId)
}
 ::std::string* SIGSponsorCall::mutable_scallid() {
  
  // @@protoc_insertion_point(field_mutable:im.SIGSponsorCall.scallId)
  return scallid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SIGSponsorCall::release_scallid() {
  // @@protoc_insertion_point(field_release:im.SIGSponsorCall.scallId)
  
  return scallid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGSponsorCall::set_allocated_scallid(::std::string* scallid) {
  if (scallid != NULL) {
    
  } else {
    
  }
  scallid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scallid);
  // @@protoc_insertion_point(field_set_allocated:im.SIGSponsorCall.scallId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SIGSponsorCallAck::kSToIdFieldNumber;
const int SIGSponsorCallAck::kSMsgIdFieldNumber;
const int SIGSponsorCallAck::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SIGSponsorCallAck::SIGSponsorCallAck()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.SIGSponsorCallAck)
}

void SIGSponsorCallAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SIGSponsorCallAck::SIGSponsorCallAck(const SIGSponsorCallAck& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.SIGSponsorCallAck)
}

void SIGSponsorCallAck::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

SIGSponsorCallAck::~SIGSponsorCallAck() {
  // @@protoc_insertion_point(destructor:im.SIGSponsorCallAck)
  SharedDtor();
}

void SIGSponsorCallAck::SharedDtor() {
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void SIGSponsorCallAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SIGSponsorCallAck& SIGSponsorCallAck::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2esig_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2esig_2eproto();
#endif
  return *default_instance_;
}

SIGSponsorCallAck* SIGSponsorCallAck::default_instance_ = NULL;

SIGSponsorCallAck* SIGSponsorCallAck::New(::google::protobuf::Arena* arena) const {
  SIGSponsorCallAck* n = new SIGSponsorCallAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SIGSponsorCallAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.SIGSponsorCallAck)
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

bool SIGSponsorCallAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.SIGSponsorCallAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sToId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), this->stoid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGSponsorCallAck.sToId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 2;
      case 2: {
        if (tag == 18) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGSponsorCallAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_errcode;
        break;
      }

      // optional .im.ErrCode errcode = 3;
      case 3: {
        if (tag == 24) {
         parse_errcode:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.SIGSponsorCallAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.SIGSponsorCallAck)
  return false;
#undef DO_
}

void SIGSponsorCallAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.SIGSponsorCallAck)
  // optional string sToId = 1;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), this->stoid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGSponsorCallAck.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->stoid(), output);
  }

  // optional string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGSponsorCallAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  // optional .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->errcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.SIGSponsorCallAck)
}

int SIGSponsorCallAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.SIGSponsorCallAck)
  int total_size = 0;

  // optional string sToId = 1;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // optional string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // optional .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SIGSponsorCallAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SIGSponsorCallAck*>(&from));
}

void SIGSponsorCallAck::MergeFrom(const SIGSponsorCallAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.SIGSponsorCallAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void SIGSponsorCallAck::CopyFrom(const SIGSponsorCallAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.SIGSponsorCallAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SIGSponsorCallAck::IsInitialized() const {

  return true;
}

void SIGSponsorCallAck::Swap(SIGSponsorCallAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SIGSponsorCallAck::InternalSwap(SIGSponsorCallAck* other) {
  stoid_.Swap(&other->stoid_);
  smsgid_.Swap(&other->smsgid_);
  std::swap(errcode_, other->errcode_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string SIGSponsorCallAck::GetTypeName() const {
  return "im.SIGSponsorCallAck";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SIGSponsorCallAck

// optional string sToId = 1;
void SIGSponsorCallAck::clear_stoid() {
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SIGSponsorCallAck::stoid() const {
  // @@protoc_insertion_point(field_get:im.SIGSponsorCallAck.sToId)
  return stoid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGSponsorCallAck::set_stoid(const ::std::string& value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.SIGSponsorCallAck.sToId)
}
 void SIGSponsorCallAck::set_stoid(const char* value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.SIGSponsorCallAck.sToId)
}
 void SIGSponsorCallAck::set_stoid(const char* value, size_t size) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.SIGSponsorCallAck.sToId)
}
 ::std::string* SIGSponsorCallAck::mutable_stoid() {
  
  // @@protoc_insertion_point(field_mutable:im.SIGSponsorCallAck.sToId)
  return stoid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SIGSponsorCallAck::release_stoid() {
  // @@protoc_insertion_point(field_release:im.SIGSponsorCallAck.sToId)
  
  return stoid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGSponsorCallAck::set_allocated_stoid(::std::string* stoid) {
  if (stoid != NULL) {
    
  } else {
    
  }
  stoid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stoid);
  // @@protoc_insertion_point(field_set_allocated:im.SIGSponsorCallAck.sToId)
}

// optional string sMsgId = 2;
void SIGSponsorCallAck::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SIGSponsorCallAck::smsgid() const {
  // @@protoc_insertion_point(field_get:im.SIGSponsorCallAck.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGSponsorCallAck::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.SIGSponsorCallAck.sMsgId)
}
 void SIGSponsorCallAck::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.SIGSponsorCallAck.sMsgId)
}
 void SIGSponsorCallAck::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.SIGSponsorCallAck.sMsgId)
}
 ::std::string* SIGSponsorCallAck::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.SIGSponsorCallAck.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SIGSponsorCallAck::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.SIGSponsorCallAck.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGSponsorCallAck::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.SIGSponsorCallAck.sMsgId)
}

// optional .im.ErrCode errcode = 3;
void SIGSponsorCallAck::clear_errcode() {
  errcode_ = 0;
}
 ::im::ErrCode SIGSponsorCallAck::errcode() const {
  // @@protoc_insertion_point(field_get:im.SIGSponsorCallAck.errcode)
  return static_cast< ::im::ErrCode >(errcode_);
}
 void SIGSponsorCallAck::set_errcode(::im::ErrCode value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:im.SIGSponsorCallAck.errcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SIGSponsorCallDeliverAck::kSUserIdFieldNumber;
const int SIGSponsorCallDeliverAck::kSMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SIGSponsorCallDeliverAck::SIGSponsorCallDeliverAck()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.SIGSponsorCallDeliverAck)
}

void SIGSponsorCallDeliverAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SIGSponsorCallDeliverAck::SIGSponsorCallDeliverAck(const SIGSponsorCallDeliverAck& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.SIGSponsorCallDeliverAck)
}

void SIGSponsorCallDeliverAck::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SIGSponsorCallDeliverAck::~SIGSponsorCallDeliverAck() {
  // @@protoc_insertion_point(destructor:im.SIGSponsorCallDeliverAck)
  SharedDtor();
}

void SIGSponsorCallDeliverAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void SIGSponsorCallDeliverAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SIGSponsorCallDeliverAck& SIGSponsorCallDeliverAck::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2esig_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2esig_2eproto();
#endif
  return *default_instance_;
}

SIGSponsorCallDeliverAck* SIGSponsorCallDeliverAck::default_instance_ = NULL;

SIGSponsorCallDeliverAck* SIGSponsorCallDeliverAck::New(::google::protobuf::Arena* arena) const {
  SIGSponsorCallDeliverAck* n = new SIGSponsorCallDeliverAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SIGSponsorCallDeliverAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.SIGSponsorCallDeliverAck)
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SIGSponsorCallDeliverAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.SIGSponsorCallDeliverAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sUserId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), this->suserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGSponsorCallDeliverAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 2;
      case 2: {
        if (tag == 18) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGSponsorCallDeliverAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.SIGSponsorCallDeliverAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.SIGSponsorCallDeliverAck)
  return false;
#undef DO_
}

void SIGSponsorCallDeliverAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.SIGSponsorCallDeliverAck)
  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), this->suserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGSponsorCallDeliverAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // optional string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGSponsorCallDeliverAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.SIGSponsorCallDeliverAck)
}

int SIGSponsorCallDeliverAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.SIGSponsorCallDeliverAck)
  int total_size = 0;

  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // optional string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SIGSponsorCallDeliverAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SIGSponsorCallDeliverAck*>(&from));
}

void SIGSponsorCallDeliverAck::MergeFrom(const SIGSponsorCallDeliverAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.SIGSponsorCallDeliverAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
}

void SIGSponsorCallDeliverAck::CopyFrom(const SIGSponsorCallDeliverAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.SIGSponsorCallDeliverAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SIGSponsorCallDeliverAck::IsInitialized() const {

  return true;
}

void SIGSponsorCallDeliverAck::Swap(SIGSponsorCallDeliverAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SIGSponsorCallDeliverAck::InternalSwap(SIGSponsorCallDeliverAck* other) {
  suserid_.Swap(&other->suserid_);
  smsgid_.Swap(&other->smsgid_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string SIGSponsorCallDeliverAck::GetTypeName() const {
  return "im.SIGSponsorCallDeliverAck";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SIGSponsorCallDeliverAck

// optional string sUserId = 1;
void SIGSponsorCallDeliverAck::clear_suserid() {
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SIGSponsorCallDeliverAck::suserid() const {
  // @@protoc_insertion_point(field_get:im.SIGSponsorCallDeliverAck.sUserId)
  return suserid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGSponsorCallDeliverAck::set_suserid(const ::std::string& value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.SIGSponsorCallDeliverAck.sUserId)
}
 void SIGSponsorCallDeliverAck::set_suserid(const char* value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.SIGSponsorCallDeliverAck.sUserId)
}
 void SIGSponsorCallDeliverAck::set_suserid(const char* value, size_t size) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.SIGSponsorCallDeliverAck.sUserId)
}
 ::std::string* SIGSponsorCallDeliverAck::mutable_suserid() {
  
  // @@protoc_insertion_point(field_mutable:im.SIGSponsorCallDeliverAck.sUserId)
  return suserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SIGSponsorCallDeliverAck::release_suserid() {
  // @@protoc_insertion_point(field_release:im.SIGSponsorCallDeliverAck.sUserId)
  
  return suserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGSponsorCallDeliverAck::set_allocated_suserid(::std::string* suserid) {
  if (suserid != NULL) {
    
  } else {
    
  }
  suserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), suserid);
  // @@protoc_insertion_point(field_set_allocated:im.SIGSponsorCallDeliverAck.sUserId)
}

// optional string sMsgId = 2;
void SIGSponsorCallDeliverAck::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SIGSponsorCallDeliverAck::smsgid() const {
  // @@protoc_insertion_point(field_get:im.SIGSponsorCallDeliverAck.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGSponsorCallDeliverAck::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.SIGSponsorCallDeliverAck.sMsgId)
}
 void SIGSponsorCallDeliverAck::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.SIGSponsorCallDeliverAck.sMsgId)
}
 void SIGSponsorCallDeliverAck::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.SIGSponsorCallDeliverAck.sMsgId)
}
 ::std::string* SIGSponsorCallDeliverAck::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.SIGSponsorCallDeliverAck.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SIGSponsorCallDeliverAck::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.SIGSponsorCallDeliverAck.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGSponsorCallDeliverAck::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.SIGSponsorCallDeliverAck.sMsgId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SIGSponsorCallAns::kSFromIdFieldNumber;
const int SIGSponsorCallAns::kSToIdFieldNumber;
const int SIGSponsorCallAns::kSMsgIdFieldNumber;
const int SIGSponsorCallAns::kMsgTimeFieldNumber;
const int SIGSponsorCallAns::kEncryptFieldNumber;
const int SIGSponsorCallAns::kSContentFieldNumber;
const int SIGSponsorCallAns::kErrcodeFieldNumber;
const int SIGSponsorCallAns::kScallIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SIGSponsorCallAns::SIGSponsorCallAns()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.SIGSponsorCallAns)
}

void SIGSponsorCallAns::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SIGSponsorCallAns::SIGSponsorCallAns(const SIGSponsorCallAns& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.SIGSponsorCallAns)
}

void SIGSponsorCallAns::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgtime_ = GOOGLE_ULONGLONG(0);
  encrypt_ = 0u;
  scontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
  scallid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SIGSponsorCallAns::~SIGSponsorCallAns() {
  // @@protoc_insertion_point(destructor:im.SIGSponsorCallAns)
  SharedDtor();
}

void SIGSponsorCallAns::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scallid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void SIGSponsorCallAns::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SIGSponsorCallAns& SIGSponsorCallAns::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2esig_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2esig_2eproto();
#endif
  return *default_instance_;
}

SIGSponsorCallAns* SIGSponsorCallAns::default_instance_ = NULL;

SIGSponsorCallAns* SIGSponsorCallAns::New(::google::protobuf::Arena* arena) const {
  SIGSponsorCallAns* n = new SIGSponsorCallAns;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SIGSponsorCallAns::Clear() {
// @@protoc_insertion_point(message_clear_start:im.SIGSponsorCallAns)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SIGSponsorCallAns, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SIGSponsorCallAns*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(encrypt_, errcode_);
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgtime_ = GOOGLE_ULONGLONG(0);
  scontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scallid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool SIGSponsorCallAns::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.SIGSponsorCallAns)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sFromId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), this->sfromid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGSponsorCallAns.sFromId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sToId;
        break;
      }

      // optional string sToId = 2;
      case 2: {
        if (tag == 18) {
         parse_sToId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), this->stoid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGSponsorCallAns.sToId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 3;
      case 3: {
        if (tag == 26) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGSponsorCallAns.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_msgTime;
        break;
      }

      // optional uint64 msgTime = 4;
      case 4: {
        if (tag == 32) {
         parse_msgTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_encrypt;
        break;
      }

      // optional uint32 encrypt = 5;
      case 5: {
        if (tag == 40) {
         parse_encrypt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &encrypt_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_sContent;
        break;
      }

      // optional string sContent = 6;
      case 6: {
        if (tag == 50) {
         parse_sContent:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scontent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scontent().data(), this->scontent().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGSponsorCallAns.sContent"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_errcode;
        break;
      }

      // optional .im.ErrCode errcode = 7;
      case 7: {
        if (tag == 56) {
         parse_errcode:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_scallId;
        break;
      }

      // optional string scallId = 8;
      case 8: {
        if (tag == 66) {
         parse_scallId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scallid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scallid().data(), this->scallid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGSponsorCallAns.scallId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.SIGSponsorCallAns)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.SIGSponsorCallAns)
  return false;
#undef DO_
}

void SIGSponsorCallAns::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.SIGSponsorCallAns)
  // optional string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), this->sfromid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGSponsorCallAns.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // optional string sToId = 2;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), this->stoid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGSponsorCallAns.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stoid(), output);
  }

  // optional string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGSponsorCallAns.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // optional uint64 msgTime = 4;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->msgtime(), output);
  }

  // optional uint32 encrypt = 5;
  if (this->encrypt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->encrypt(), output);
  }

  // optional string sContent = 6;
  if (this->scontent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scontent().data(), this->scontent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGSponsorCallAns.sContent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->scontent(), output);
  }

  // optional .im.ErrCode errcode = 7;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->errcode(), output);
  }

  // optional string scallId = 8;
  if (this->scallid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scallid().data(), this->scallid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGSponsorCallAns.scallId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->scallid(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.SIGSponsorCallAns)
}

int SIGSponsorCallAns::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.SIGSponsorCallAns)
  int total_size = 0;

  // optional string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // optional string sToId = 2;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // optional string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // optional uint64 msgTime = 4;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // optional uint32 encrypt = 5;
  if (this->encrypt() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->encrypt());
  }

  // optional string sContent = 6;
  if (this->scontent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scontent());
  }

  // optional .im.ErrCode errcode = 7;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  // optional string scallId = 8;
  if (this->scallid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scallid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SIGSponsorCallAns::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SIGSponsorCallAns*>(&from));
}

void SIGSponsorCallAns::MergeFrom(const SIGSponsorCallAns& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.SIGSponsorCallAns)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.encrypt() != 0) {
    set_encrypt(from.encrypt());
  }
  if (from.scontent().size() > 0) {

    scontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scontent_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
  if (from.scallid().size() > 0) {

    scallid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scallid_);
  }
}

void SIGSponsorCallAns::CopyFrom(const SIGSponsorCallAns& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.SIGSponsorCallAns)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SIGSponsorCallAns::IsInitialized() const {

  return true;
}

void SIGSponsorCallAns::Swap(SIGSponsorCallAns* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SIGSponsorCallAns::InternalSwap(SIGSponsorCallAns* other) {
  sfromid_.Swap(&other->sfromid_);
  stoid_.Swap(&other->stoid_);
  smsgid_.Swap(&other->smsgid_);
  std::swap(msgtime_, other->msgtime_);
  std::swap(encrypt_, other->encrypt_);
  scontent_.Swap(&other->scontent_);
  std::swap(errcode_, other->errcode_);
  scallid_.Swap(&other->scallid_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string SIGSponsorCallAns::GetTypeName() const {
  return "im.SIGSponsorCallAns";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SIGSponsorCallAns

// optional string sFromId = 1;
void SIGSponsorCallAns::clear_sfromid() {
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SIGSponsorCallAns::sfromid() const {
  // @@protoc_insertion_point(field_get:im.SIGSponsorCallAns.sFromId)
  return sfromid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGSponsorCallAns::set_sfromid(const ::std::string& value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.SIGSponsorCallAns.sFromId)
}
 void SIGSponsorCallAns::set_sfromid(const char* value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.SIGSponsorCallAns.sFromId)
}
 void SIGSponsorCallAns::set_sfromid(const char* value, size_t size) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.SIGSponsorCallAns.sFromId)
}
 ::std::string* SIGSponsorCallAns::mutable_sfromid() {
  
  // @@protoc_insertion_point(field_mutable:im.SIGSponsorCallAns.sFromId)
  return sfromid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SIGSponsorCallAns::release_sfromid() {
  // @@protoc_insertion_point(field_release:im.SIGSponsorCallAns.sFromId)
  
  return sfromid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGSponsorCallAns::set_allocated_sfromid(::std::string* sfromid) {
  if (sfromid != NULL) {
    
  } else {
    
  }
  sfromid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sfromid);
  // @@protoc_insertion_point(field_set_allocated:im.SIGSponsorCallAns.sFromId)
}

// optional string sToId = 2;
void SIGSponsorCallAns::clear_stoid() {
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SIGSponsorCallAns::stoid() const {
  // @@protoc_insertion_point(field_get:im.SIGSponsorCallAns.sToId)
  return stoid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGSponsorCallAns::set_stoid(const ::std::string& value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.SIGSponsorCallAns.sToId)
}
 void SIGSponsorCallAns::set_stoid(const char* value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.SIGSponsorCallAns.sToId)
}
 void SIGSponsorCallAns::set_stoid(const char* value, size_t size) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.SIGSponsorCallAns.sToId)
}
 ::std::string* SIGSponsorCallAns::mutable_stoid() {
  
  // @@protoc_insertion_point(field_mutable:im.SIGSponsorCallAns.sToId)
  return stoid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SIGSponsorCallAns::release_stoid() {
  // @@protoc_insertion_point(field_release:im.SIGSponsorCallAns.sToId)
  
  return stoid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGSponsorCallAns::set_allocated_stoid(::std::string* stoid) {
  if (stoid != NULL) {
    
  } else {
    
  }
  stoid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stoid);
  // @@protoc_insertion_point(field_set_allocated:im.SIGSponsorCallAns.sToId)
}

// optional string sMsgId = 3;
void SIGSponsorCallAns::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SIGSponsorCallAns::smsgid() const {
  // @@protoc_insertion_point(field_get:im.SIGSponsorCallAns.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGSponsorCallAns::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.SIGSponsorCallAns.sMsgId)
}
 void SIGSponsorCallAns::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.SIGSponsorCallAns.sMsgId)
}
 void SIGSponsorCallAns::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.SIGSponsorCallAns.sMsgId)
}
 ::std::string* SIGSponsorCallAns::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.SIGSponsorCallAns.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SIGSponsorCallAns::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.SIGSponsorCallAns.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGSponsorCallAns::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.SIGSponsorCallAns.sMsgId)
}

// optional uint64 msgTime = 4;
void SIGSponsorCallAns::clear_msgtime() {
  msgtime_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 SIGSponsorCallAns::msgtime() const {
  // @@protoc_insertion_point(field_get:im.SIGSponsorCallAns.msgTime)
  return msgtime_;
}
 void SIGSponsorCallAns::set_msgtime(::google::protobuf::uint64 value) {
  
  msgtime_ = value;
  // @@protoc_insertion_point(field_set:im.SIGSponsorCallAns.msgTime)
}

// optional uint32 encrypt = 5;
void SIGSponsorCallAns::clear_encrypt() {
  encrypt_ = 0u;
}
 ::google::protobuf::uint32 SIGSponsorCallAns::encrypt() const {
  // @@protoc_insertion_point(field_get:im.SIGSponsorCallAns.encrypt)
  return encrypt_;
}
 void SIGSponsorCallAns::set_encrypt(::google::protobuf::uint32 value) {
  
  encrypt_ = value;
  // @@protoc_insertion_point(field_set:im.SIGSponsorCallAns.encrypt)
}

// optional string sContent = 6;
void SIGSponsorCallAns::clear_scontent() {
  scontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SIGSponsorCallAns::scontent() const {
  // @@protoc_insertion_point(field_get:im.SIGSponsorCallAns.sContent)
  return scontent_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGSponsorCallAns::set_scontent(const ::std::string& value) {
  
  scontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.SIGSponsorCallAns.sContent)
}
 void SIGSponsorCallAns::set_scontent(const char* value) {
  
  scontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.SIGSponsorCallAns.sContent)
}
 void SIGSponsorCallAns::set_scontent(const char* value, size_t size) {
  
  scontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.SIGSponsorCallAns.sContent)
}
 ::std::string* SIGSponsorCallAns::mutable_scontent() {
  
  // @@protoc_insertion_point(field_mutable:im.SIGSponsorCallAns.sContent)
  return scontent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SIGSponsorCallAns::release_scontent() {
  // @@protoc_insertion_point(field_release:im.SIGSponsorCallAns.sContent)
  
  return scontent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGSponsorCallAns::set_allocated_scontent(::std::string* scontent) {
  if (scontent != NULL) {
    
  } else {
    
  }
  scontent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scontent);
  // @@protoc_insertion_point(field_set_allocated:im.SIGSponsorCallAns.sContent)
}

// optional .im.ErrCode errcode = 7;
void SIGSponsorCallAns::clear_errcode() {
  errcode_ = 0;
}
 ::im::ErrCode SIGSponsorCallAns::errcode() const {
  // @@protoc_insertion_point(field_get:im.SIGSponsorCallAns.errcode)
  return static_cast< ::im::ErrCode >(errcode_);
}
 void SIGSponsorCallAns::set_errcode(::im::ErrCode value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:im.SIGSponsorCallAns.errcode)
}

// optional string scallId = 8;
void SIGSponsorCallAns::clear_scallid() {
  scallid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SIGSponsorCallAns::scallid() const {
  // @@protoc_insertion_point(field_get:im.SIGSponsorCallAns.scallId)
  return scallid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGSponsorCallAns::set_scallid(const ::std::string& value) {
  
  scallid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.SIGSponsorCallAns.scallId)
}
 void SIGSponsorCallAns::set_scallid(const char* value) {
  
  scallid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.SIGSponsorCallAns.scallId)
}
 void SIGSponsorCallAns::set_scallid(const char* value, size_t size) {
  
  scallid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.SIGSponsorCallAns.scallId)
}
 ::std::string* SIGSponsorCallAns::mutable_scallid() {
  
  // @@protoc_insertion_point(field_mutable:im.SIGSponsorCallAns.scallId)
  return scallid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SIGSponsorCallAns::release_scallid() {
  // @@protoc_insertion_point(field_release:im.SIGSponsorCallAns.scallId)
  
  return scallid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGSponsorCallAns::set_allocated_scallid(::std::string* scallid) {
  if (scallid != NULL) {
    
  } else {
    
  }
  scallid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scallid);
  // @@protoc_insertion_point(field_set_allocated:im.SIGSponsorCallAns.scallId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SIGSponsorCallAnsAck::kSToIdFieldNumber;
const int SIGSponsorCallAnsAck::kSMsgIdFieldNumber;
const int SIGSponsorCallAnsAck::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SIGSponsorCallAnsAck::SIGSponsorCallAnsAck()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.SIGSponsorCallAnsAck)
}

void SIGSponsorCallAnsAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SIGSponsorCallAnsAck::SIGSponsorCallAnsAck(const SIGSponsorCallAnsAck& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.SIGSponsorCallAnsAck)
}

void SIGSponsorCallAnsAck::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

SIGSponsorCallAnsAck::~SIGSponsorCallAnsAck() {
  // @@protoc_insertion_point(destructor:im.SIGSponsorCallAnsAck)
  SharedDtor();
}

void SIGSponsorCallAnsAck::SharedDtor() {
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void SIGSponsorCallAnsAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SIGSponsorCallAnsAck& SIGSponsorCallAnsAck::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2esig_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2esig_2eproto();
#endif
  return *default_instance_;
}

SIGSponsorCallAnsAck* SIGSponsorCallAnsAck::default_instance_ = NULL;

SIGSponsorCallAnsAck* SIGSponsorCallAnsAck::New(::google::protobuf::Arena* arena) const {
  SIGSponsorCallAnsAck* n = new SIGSponsorCallAnsAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SIGSponsorCallAnsAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.SIGSponsorCallAnsAck)
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

bool SIGSponsorCallAnsAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.SIGSponsorCallAnsAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sToId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), this->stoid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGSponsorCallAnsAck.sToId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 2;
      case 2: {
        if (tag == 18) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGSponsorCallAnsAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_errcode;
        break;
      }

      // optional .im.ErrCode errcode = 3;
      case 3: {
        if (tag == 24) {
         parse_errcode:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.SIGSponsorCallAnsAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.SIGSponsorCallAnsAck)
  return false;
#undef DO_
}

void SIGSponsorCallAnsAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.SIGSponsorCallAnsAck)
  // optional string sToId = 1;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), this->stoid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGSponsorCallAnsAck.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->stoid(), output);
  }

  // optional string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGSponsorCallAnsAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  // optional .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->errcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.SIGSponsorCallAnsAck)
}

int SIGSponsorCallAnsAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.SIGSponsorCallAnsAck)
  int total_size = 0;

  // optional string sToId = 1;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // optional string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // optional .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SIGSponsorCallAnsAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SIGSponsorCallAnsAck*>(&from));
}

void SIGSponsorCallAnsAck::MergeFrom(const SIGSponsorCallAnsAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.SIGSponsorCallAnsAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void SIGSponsorCallAnsAck::CopyFrom(const SIGSponsorCallAnsAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.SIGSponsorCallAnsAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SIGSponsorCallAnsAck::IsInitialized() const {

  return true;
}

void SIGSponsorCallAnsAck::Swap(SIGSponsorCallAnsAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SIGSponsorCallAnsAck::InternalSwap(SIGSponsorCallAnsAck* other) {
  stoid_.Swap(&other->stoid_);
  smsgid_.Swap(&other->smsgid_);
  std::swap(errcode_, other->errcode_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string SIGSponsorCallAnsAck::GetTypeName() const {
  return "im.SIGSponsorCallAnsAck";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SIGSponsorCallAnsAck

// optional string sToId = 1;
void SIGSponsorCallAnsAck::clear_stoid() {
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SIGSponsorCallAnsAck::stoid() const {
  // @@protoc_insertion_point(field_get:im.SIGSponsorCallAnsAck.sToId)
  return stoid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGSponsorCallAnsAck::set_stoid(const ::std::string& value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.SIGSponsorCallAnsAck.sToId)
}
 void SIGSponsorCallAnsAck::set_stoid(const char* value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.SIGSponsorCallAnsAck.sToId)
}
 void SIGSponsorCallAnsAck::set_stoid(const char* value, size_t size) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.SIGSponsorCallAnsAck.sToId)
}
 ::std::string* SIGSponsorCallAnsAck::mutable_stoid() {
  
  // @@protoc_insertion_point(field_mutable:im.SIGSponsorCallAnsAck.sToId)
  return stoid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SIGSponsorCallAnsAck::release_stoid() {
  // @@protoc_insertion_point(field_release:im.SIGSponsorCallAnsAck.sToId)
  
  return stoid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGSponsorCallAnsAck::set_allocated_stoid(::std::string* stoid) {
  if (stoid != NULL) {
    
  } else {
    
  }
  stoid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stoid);
  // @@protoc_insertion_point(field_set_allocated:im.SIGSponsorCallAnsAck.sToId)
}

// optional string sMsgId = 2;
void SIGSponsorCallAnsAck::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SIGSponsorCallAnsAck::smsgid() const {
  // @@protoc_insertion_point(field_get:im.SIGSponsorCallAnsAck.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGSponsorCallAnsAck::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.SIGSponsorCallAnsAck.sMsgId)
}
 void SIGSponsorCallAnsAck::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.SIGSponsorCallAnsAck.sMsgId)
}
 void SIGSponsorCallAnsAck::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.SIGSponsorCallAnsAck.sMsgId)
}
 ::std::string* SIGSponsorCallAnsAck::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.SIGSponsorCallAnsAck.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SIGSponsorCallAnsAck::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.SIGSponsorCallAnsAck.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGSponsorCallAnsAck::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.SIGSponsorCallAnsAck.sMsgId)
}

// optional .im.ErrCode errcode = 3;
void SIGSponsorCallAnsAck::clear_errcode() {
  errcode_ = 0;
}
 ::im::ErrCode SIGSponsorCallAnsAck::errcode() const {
  // @@protoc_insertion_point(field_get:im.SIGSponsorCallAnsAck.errcode)
  return static_cast< ::im::ErrCode >(errcode_);
}
 void SIGSponsorCallAnsAck::set_errcode(::im::ErrCode value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:im.SIGSponsorCallAnsAck.errcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SIGSponsorCallAnsDeliverACK::kSUserIdFieldNumber;
const int SIGSponsorCallAnsDeliverACK::kSMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SIGSponsorCallAnsDeliverACK::SIGSponsorCallAnsDeliverACK()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.SIGSponsorCallAnsDeliverACK)
}

void SIGSponsorCallAnsDeliverACK::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SIGSponsorCallAnsDeliverACK::SIGSponsorCallAnsDeliverACK(const SIGSponsorCallAnsDeliverACK& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.SIGSponsorCallAnsDeliverACK)
}

void SIGSponsorCallAnsDeliverACK::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SIGSponsorCallAnsDeliverACK::~SIGSponsorCallAnsDeliverACK() {
  // @@protoc_insertion_point(destructor:im.SIGSponsorCallAnsDeliverACK)
  SharedDtor();
}

void SIGSponsorCallAnsDeliverACK::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void SIGSponsorCallAnsDeliverACK::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SIGSponsorCallAnsDeliverACK& SIGSponsorCallAnsDeliverACK::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2esig_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2esig_2eproto();
#endif
  return *default_instance_;
}

SIGSponsorCallAnsDeliverACK* SIGSponsorCallAnsDeliverACK::default_instance_ = NULL;

SIGSponsorCallAnsDeliverACK* SIGSponsorCallAnsDeliverACK::New(::google::protobuf::Arena* arena) const {
  SIGSponsorCallAnsDeliverACK* n = new SIGSponsorCallAnsDeliverACK;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SIGSponsorCallAnsDeliverACK::Clear() {
// @@protoc_insertion_point(message_clear_start:im.SIGSponsorCallAnsDeliverACK)
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SIGSponsorCallAnsDeliverACK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.SIGSponsorCallAnsDeliverACK)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sUserId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), this->suserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGSponsorCallAnsDeliverACK.sUserId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 2;
      case 2: {
        if (tag == 18) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGSponsorCallAnsDeliverACK.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.SIGSponsorCallAnsDeliverACK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.SIGSponsorCallAnsDeliverACK)
  return false;
#undef DO_
}

void SIGSponsorCallAnsDeliverACK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.SIGSponsorCallAnsDeliverACK)
  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), this->suserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGSponsorCallAnsDeliverACK.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // optional string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGSponsorCallAnsDeliverACK.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.SIGSponsorCallAnsDeliverACK)
}

int SIGSponsorCallAnsDeliverACK::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.SIGSponsorCallAnsDeliverACK)
  int total_size = 0;

  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // optional string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SIGSponsorCallAnsDeliverACK::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SIGSponsorCallAnsDeliverACK*>(&from));
}

void SIGSponsorCallAnsDeliverACK::MergeFrom(const SIGSponsorCallAnsDeliverACK& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.SIGSponsorCallAnsDeliverACK)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
}

void SIGSponsorCallAnsDeliverACK::CopyFrom(const SIGSponsorCallAnsDeliverACK& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.SIGSponsorCallAnsDeliverACK)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SIGSponsorCallAnsDeliverACK::IsInitialized() const {

  return true;
}

void SIGSponsorCallAnsDeliverACK::Swap(SIGSponsorCallAnsDeliverACK* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SIGSponsorCallAnsDeliverACK::InternalSwap(SIGSponsorCallAnsDeliverACK* other) {
  suserid_.Swap(&other->suserid_);
  smsgid_.Swap(&other->smsgid_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string SIGSponsorCallAnsDeliverACK::GetTypeName() const {
  return "im.SIGSponsorCallAnsDeliverACK";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SIGSponsorCallAnsDeliverACK

// optional string sUserId = 1;
void SIGSponsorCallAnsDeliverACK::clear_suserid() {
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SIGSponsorCallAnsDeliverACK::suserid() const {
  // @@protoc_insertion_point(field_get:im.SIGSponsorCallAnsDeliverACK.sUserId)
  return suserid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGSponsorCallAnsDeliverACK::set_suserid(const ::std::string& value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.SIGSponsorCallAnsDeliverACK.sUserId)
}
 void SIGSponsorCallAnsDeliverACK::set_suserid(const char* value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.SIGSponsorCallAnsDeliverACK.sUserId)
}
 void SIGSponsorCallAnsDeliverACK::set_suserid(const char* value, size_t size) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.SIGSponsorCallAnsDeliverACK.sUserId)
}
 ::std::string* SIGSponsorCallAnsDeliverACK::mutable_suserid() {
  
  // @@protoc_insertion_point(field_mutable:im.SIGSponsorCallAnsDeliverACK.sUserId)
  return suserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SIGSponsorCallAnsDeliverACK::release_suserid() {
  // @@protoc_insertion_point(field_release:im.SIGSponsorCallAnsDeliverACK.sUserId)
  
  return suserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGSponsorCallAnsDeliverACK::set_allocated_suserid(::std::string* suserid) {
  if (suserid != NULL) {
    
  } else {
    
  }
  suserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), suserid);
  // @@protoc_insertion_point(field_set_allocated:im.SIGSponsorCallAnsDeliverACK.sUserId)
}

// optional string sMsgId = 2;
void SIGSponsorCallAnsDeliverACK::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SIGSponsorCallAnsDeliverACK::smsgid() const {
  // @@protoc_insertion_point(field_get:im.SIGSponsorCallAnsDeliverACK.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGSponsorCallAnsDeliverACK::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.SIGSponsorCallAnsDeliverACK.sMsgId)
}
 void SIGSponsorCallAnsDeliverACK::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.SIGSponsorCallAnsDeliverACK.sMsgId)
}
 void SIGSponsorCallAnsDeliverACK::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.SIGSponsorCallAnsDeliverACK.sMsgId)
}
 ::std::string* SIGSponsorCallAnsDeliverACK::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.SIGSponsorCallAnsDeliverACK.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SIGSponsorCallAnsDeliverACK::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.SIGSponsorCallAnsDeliverACK.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGSponsorCallAnsDeliverACK::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.SIGSponsorCallAnsDeliverACK.sMsgId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SIGP2PCallExchangeNatInfo::kSFromIdFieldNumber;
const int SIGP2PCallExchangeNatInfo::kSToIdFieldNumber;
const int SIGP2PCallExchangeNatInfo::kSMsgIdFieldNumber;
const int SIGP2PCallExchangeNatInfo::kSContentFieldNumber;
const int SIGP2PCallExchangeNatInfo::kMsgTimeFieldNumber;
const int SIGP2PCallExchangeNatInfo::kScallIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SIGP2PCallExchangeNatInfo::SIGP2PCallExchangeNatInfo()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.SIGP2PCallExchangeNatInfo)
}

void SIGP2PCallExchangeNatInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SIGP2PCallExchangeNatInfo::SIGP2PCallExchangeNatInfo(const SIGP2PCallExchangeNatInfo& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.SIGP2PCallExchangeNatInfo)
}

void SIGP2PCallExchangeNatInfo::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgtime_ = GOOGLE_ULONGLONG(0);
  scallid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SIGP2PCallExchangeNatInfo::~SIGP2PCallExchangeNatInfo() {
  // @@protoc_insertion_point(destructor:im.SIGP2PCallExchangeNatInfo)
  SharedDtor();
}

void SIGP2PCallExchangeNatInfo::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scallid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void SIGP2PCallExchangeNatInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SIGP2PCallExchangeNatInfo& SIGP2PCallExchangeNatInfo::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2esig_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2esig_2eproto();
#endif
  return *default_instance_;
}

SIGP2PCallExchangeNatInfo* SIGP2PCallExchangeNatInfo::default_instance_ = NULL;

SIGP2PCallExchangeNatInfo* SIGP2PCallExchangeNatInfo::New(::google::protobuf::Arena* arena) const {
  SIGP2PCallExchangeNatInfo* n = new SIGP2PCallExchangeNatInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SIGP2PCallExchangeNatInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:im.SIGP2PCallExchangeNatInfo)
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgtime_ = GOOGLE_ULONGLONG(0);
  scallid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SIGP2PCallExchangeNatInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.SIGP2PCallExchangeNatInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sFromId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), this->sfromid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGP2PCallExchangeNatInfo.sFromId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sToId;
        break;
      }

      // optional string sToId = 2;
      case 2: {
        if (tag == 18) {
         parse_sToId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), this->stoid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGP2PCallExchangeNatInfo.sToId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 3;
      case 3: {
        if (tag == 26) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGP2PCallExchangeNatInfo.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_sContent;
        break;
      }

      // optional string sContent = 4;
      case 4: {
        if (tag == 34) {
         parse_sContent:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scontent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scontent().data(), this->scontent().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGP2PCallExchangeNatInfo.sContent"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_msgTime;
        break;
      }

      // optional uint64 msgTime = 5;
      case 5: {
        if (tag == 40) {
         parse_msgTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_scallId;
        break;
      }

      // optional string scallId = 6;
      case 6: {
        if (tag == 50) {
         parse_scallId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scallid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scallid().data(), this->scallid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGP2PCallExchangeNatInfo.scallId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.SIGP2PCallExchangeNatInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.SIGP2PCallExchangeNatInfo)
  return false;
#undef DO_
}

void SIGP2PCallExchangeNatInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.SIGP2PCallExchangeNatInfo)
  // optional string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), this->sfromid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGP2PCallExchangeNatInfo.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // optional string sToId = 2;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), this->stoid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGP2PCallExchangeNatInfo.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stoid(), output);
  }

  // optional string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGP2PCallExchangeNatInfo.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // optional string sContent = 4;
  if (this->scontent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scontent().data(), this->scontent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGP2PCallExchangeNatInfo.sContent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->scontent(), output);
  }

  // optional uint64 msgTime = 5;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->msgtime(), output);
  }

  // optional string scallId = 6;
  if (this->scallid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scallid().data(), this->scallid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGP2PCallExchangeNatInfo.scallId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->scallid(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.SIGP2PCallExchangeNatInfo)
}

int SIGP2PCallExchangeNatInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.SIGP2PCallExchangeNatInfo)
  int total_size = 0;

  // optional string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // optional string sToId = 2;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // optional string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // optional string sContent = 4;
  if (this->scontent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scontent());
  }

  // optional uint64 msgTime = 5;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // optional string scallId = 6;
  if (this->scallid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scallid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SIGP2PCallExchangeNatInfo::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SIGP2PCallExchangeNatInfo*>(&from));
}

void SIGP2PCallExchangeNatInfo::MergeFrom(const SIGP2PCallExchangeNatInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.SIGP2PCallExchangeNatInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.scontent().size() > 0) {

    scontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scontent_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.scallid().size() > 0) {

    scallid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scallid_);
  }
}

void SIGP2PCallExchangeNatInfo::CopyFrom(const SIGP2PCallExchangeNatInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.SIGP2PCallExchangeNatInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SIGP2PCallExchangeNatInfo::IsInitialized() const {

  return true;
}

void SIGP2PCallExchangeNatInfo::Swap(SIGP2PCallExchangeNatInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SIGP2PCallExchangeNatInfo::InternalSwap(SIGP2PCallExchangeNatInfo* other) {
  sfromid_.Swap(&other->sfromid_);
  stoid_.Swap(&other->stoid_);
  smsgid_.Swap(&other->smsgid_);
  scontent_.Swap(&other->scontent_);
  std::swap(msgtime_, other->msgtime_);
  scallid_.Swap(&other->scallid_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string SIGP2PCallExchangeNatInfo::GetTypeName() const {
  return "im.SIGP2PCallExchangeNatInfo";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SIGP2PCallExchangeNatInfo

// optional string sFromId = 1;
void SIGP2PCallExchangeNatInfo::clear_sfromid() {
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SIGP2PCallExchangeNatInfo::sfromid() const {
  // @@protoc_insertion_point(field_get:im.SIGP2PCallExchangeNatInfo.sFromId)
  return sfromid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGP2PCallExchangeNatInfo::set_sfromid(const ::std::string& value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.SIGP2PCallExchangeNatInfo.sFromId)
}
 void SIGP2PCallExchangeNatInfo::set_sfromid(const char* value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.SIGP2PCallExchangeNatInfo.sFromId)
}
 void SIGP2PCallExchangeNatInfo::set_sfromid(const char* value, size_t size) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.SIGP2PCallExchangeNatInfo.sFromId)
}
 ::std::string* SIGP2PCallExchangeNatInfo::mutable_sfromid() {
  
  // @@protoc_insertion_point(field_mutable:im.SIGP2PCallExchangeNatInfo.sFromId)
  return sfromid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SIGP2PCallExchangeNatInfo::release_sfromid() {
  // @@protoc_insertion_point(field_release:im.SIGP2PCallExchangeNatInfo.sFromId)
  
  return sfromid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGP2PCallExchangeNatInfo::set_allocated_sfromid(::std::string* sfromid) {
  if (sfromid != NULL) {
    
  } else {
    
  }
  sfromid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sfromid);
  // @@protoc_insertion_point(field_set_allocated:im.SIGP2PCallExchangeNatInfo.sFromId)
}

// optional string sToId = 2;
void SIGP2PCallExchangeNatInfo::clear_stoid() {
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SIGP2PCallExchangeNatInfo::stoid() const {
  // @@protoc_insertion_point(field_get:im.SIGP2PCallExchangeNatInfo.sToId)
  return stoid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGP2PCallExchangeNatInfo::set_stoid(const ::std::string& value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.SIGP2PCallExchangeNatInfo.sToId)
}
 void SIGP2PCallExchangeNatInfo::set_stoid(const char* value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.SIGP2PCallExchangeNatInfo.sToId)
}
 void SIGP2PCallExchangeNatInfo::set_stoid(const char* value, size_t size) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.SIGP2PCallExchangeNatInfo.sToId)
}
 ::std::string* SIGP2PCallExchangeNatInfo::mutable_stoid() {
  
  // @@protoc_insertion_point(field_mutable:im.SIGP2PCallExchangeNatInfo.sToId)
  return stoid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SIGP2PCallExchangeNatInfo::release_stoid() {
  // @@protoc_insertion_point(field_release:im.SIGP2PCallExchangeNatInfo.sToId)
  
  return stoid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGP2PCallExchangeNatInfo::set_allocated_stoid(::std::string* stoid) {
  if (stoid != NULL) {
    
  } else {
    
  }
  stoid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stoid);
  // @@protoc_insertion_point(field_set_allocated:im.SIGP2PCallExchangeNatInfo.sToId)
}

// optional string sMsgId = 3;
void SIGP2PCallExchangeNatInfo::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SIGP2PCallExchangeNatInfo::smsgid() const {
  // @@protoc_insertion_point(field_get:im.SIGP2PCallExchangeNatInfo.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGP2PCallExchangeNatInfo::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.SIGP2PCallExchangeNatInfo.sMsgId)
}
 void SIGP2PCallExchangeNatInfo::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.SIGP2PCallExchangeNatInfo.sMsgId)
}
 void SIGP2PCallExchangeNatInfo::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.SIGP2PCallExchangeNatInfo.sMsgId)
}
 ::std::string* SIGP2PCallExchangeNatInfo::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.SIGP2PCallExchangeNatInfo.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SIGP2PCallExchangeNatInfo::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.SIGP2PCallExchangeNatInfo.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGP2PCallExchangeNatInfo::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.SIGP2PCallExchangeNatInfo.sMsgId)
}

// optional string sContent = 4;
void SIGP2PCallExchangeNatInfo::clear_scontent() {
  scontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SIGP2PCallExchangeNatInfo::scontent() const {
  // @@protoc_insertion_point(field_get:im.SIGP2PCallExchangeNatInfo.sContent)
  return scontent_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGP2PCallExchangeNatInfo::set_scontent(const ::std::string& value) {
  
  scontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.SIGP2PCallExchangeNatInfo.sContent)
}
 void SIGP2PCallExchangeNatInfo::set_scontent(const char* value) {
  
  scontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.SIGP2PCallExchangeNatInfo.sContent)
}
 void SIGP2PCallExchangeNatInfo::set_scontent(const char* value, size_t size) {
  
  scontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.SIGP2PCallExchangeNatInfo.sContent)
}
 ::std::string* SIGP2PCallExchangeNatInfo::mutable_scontent() {
  
  // @@protoc_insertion_point(field_mutable:im.SIGP2PCallExchangeNatInfo.sContent)
  return scontent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SIGP2PCallExchangeNatInfo::release_scontent() {
  // @@protoc_insertion_point(field_release:im.SIGP2PCallExchangeNatInfo.sContent)
  
  return scontent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGP2PCallExchangeNatInfo::set_allocated_scontent(::std::string* scontent) {
  if (scontent != NULL) {
    
  } else {
    
  }
  scontent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scontent);
  // @@protoc_insertion_point(field_set_allocated:im.SIGP2PCallExchangeNatInfo.sContent)
}

// optional uint64 msgTime = 5;
void SIGP2PCallExchangeNatInfo::clear_msgtime() {
  msgtime_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 SIGP2PCallExchangeNatInfo::msgtime() const {
  // @@protoc_insertion_point(field_get:im.SIGP2PCallExchangeNatInfo.msgTime)
  return msgtime_;
}
 void SIGP2PCallExchangeNatInfo::set_msgtime(::google::protobuf::uint64 value) {
  
  msgtime_ = value;
  // @@protoc_insertion_point(field_set:im.SIGP2PCallExchangeNatInfo.msgTime)
}

// optional string scallId = 6;
void SIGP2PCallExchangeNatInfo::clear_scallid() {
  scallid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SIGP2PCallExchangeNatInfo::scallid() const {
  // @@protoc_insertion_point(field_get:im.SIGP2PCallExchangeNatInfo.scallId)
  return scallid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGP2PCallExchangeNatInfo::set_scallid(const ::std::string& value) {
  
  scallid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.SIGP2PCallExchangeNatInfo.scallId)
}
 void SIGP2PCallExchangeNatInfo::set_scallid(const char* value) {
  
  scallid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.SIGP2PCallExchangeNatInfo.scallId)
}
 void SIGP2PCallExchangeNatInfo::set_scallid(const char* value, size_t size) {
  
  scallid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.SIGP2PCallExchangeNatInfo.scallId)
}
 ::std::string* SIGP2PCallExchangeNatInfo::mutable_scallid() {
  
  // @@protoc_insertion_point(field_mutable:im.SIGP2PCallExchangeNatInfo.scallId)
  return scallid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SIGP2PCallExchangeNatInfo::release_scallid() {
  // @@protoc_insertion_point(field_release:im.SIGP2PCallExchangeNatInfo.scallId)
  
  return scallid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGP2PCallExchangeNatInfo::set_allocated_scallid(::std::string* scallid) {
  if (scallid != NULL) {
    
  } else {
    
  }
  scallid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scallid);
  // @@protoc_insertion_point(field_set_allocated:im.SIGP2PCallExchangeNatInfo.scallId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SIGP2PCallExchangeNatInfoAck::kSToIdFieldNumber;
const int SIGP2PCallExchangeNatInfoAck::kSMsgIdFieldNumber;
const int SIGP2PCallExchangeNatInfoAck::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SIGP2PCallExchangeNatInfoAck::SIGP2PCallExchangeNatInfoAck()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.SIGP2PCallExchangeNatInfoAck)
}

void SIGP2PCallExchangeNatInfoAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SIGP2PCallExchangeNatInfoAck::SIGP2PCallExchangeNatInfoAck(const SIGP2PCallExchangeNatInfoAck& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.SIGP2PCallExchangeNatInfoAck)
}

void SIGP2PCallExchangeNatInfoAck::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

SIGP2PCallExchangeNatInfoAck::~SIGP2PCallExchangeNatInfoAck() {
  // @@protoc_insertion_point(destructor:im.SIGP2PCallExchangeNatInfoAck)
  SharedDtor();
}

void SIGP2PCallExchangeNatInfoAck::SharedDtor() {
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void SIGP2PCallExchangeNatInfoAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SIGP2PCallExchangeNatInfoAck& SIGP2PCallExchangeNatInfoAck::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2esig_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2esig_2eproto();
#endif
  return *default_instance_;
}

SIGP2PCallExchangeNatInfoAck* SIGP2PCallExchangeNatInfoAck::default_instance_ = NULL;

SIGP2PCallExchangeNatInfoAck* SIGP2PCallExchangeNatInfoAck::New(::google::protobuf::Arena* arena) const {
  SIGP2PCallExchangeNatInfoAck* n = new SIGP2PCallExchangeNatInfoAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SIGP2PCallExchangeNatInfoAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.SIGP2PCallExchangeNatInfoAck)
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

bool SIGP2PCallExchangeNatInfoAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.SIGP2PCallExchangeNatInfoAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sToId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), this->stoid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGP2PCallExchangeNatInfoAck.sToId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 2;
      case 2: {
        if (tag == 18) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGP2PCallExchangeNatInfoAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_errcode;
        break;
      }

      // optional .im.ErrCode errcode = 3;
      case 3: {
        if (tag == 24) {
         parse_errcode:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.SIGP2PCallExchangeNatInfoAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.SIGP2PCallExchangeNatInfoAck)
  return false;
#undef DO_
}

void SIGP2PCallExchangeNatInfoAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.SIGP2PCallExchangeNatInfoAck)
  // optional string sToId = 1;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), this->stoid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGP2PCallExchangeNatInfoAck.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->stoid(), output);
  }

  // optional string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGP2PCallExchangeNatInfoAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  // optional .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->errcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.SIGP2PCallExchangeNatInfoAck)
}

int SIGP2PCallExchangeNatInfoAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.SIGP2PCallExchangeNatInfoAck)
  int total_size = 0;

  // optional string sToId = 1;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // optional string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // optional .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SIGP2PCallExchangeNatInfoAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SIGP2PCallExchangeNatInfoAck*>(&from));
}

void SIGP2PCallExchangeNatInfoAck::MergeFrom(const SIGP2PCallExchangeNatInfoAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.SIGP2PCallExchangeNatInfoAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void SIGP2PCallExchangeNatInfoAck::CopyFrom(const SIGP2PCallExchangeNatInfoAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.SIGP2PCallExchangeNatInfoAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SIGP2PCallExchangeNatInfoAck::IsInitialized() const {

  return true;
}

void SIGP2PCallExchangeNatInfoAck::Swap(SIGP2PCallExchangeNatInfoAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SIGP2PCallExchangeNatInfoAck::InternalSwap(SIGP2PCallExchangeNatInfoAck* other) {
  stoid_.Swap(&other->stoid_);
  smsgid_.Swap(&other->smsgid_);
  std::swap(errcode_, other->errcode_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string SIGP2PCallExchangeNatInfoAck::GetTypeName() const {
  return "im.SIGP2PCallExchangeNatInfoAck";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SIGP2PCallExchangeNatInfoAck

// optional string sToId = 1;
void SIGP2PCallExchangeNatInfoAck::clear_stoid() {
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SIGP2PCallExchangeNatInfoAck::stoid() const {
  // @@protoc_insertion_point(field_get:im.SIGP2PCallExchangeNatInfoAck.sToId)
  return stoid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGP2PCallExchangeNatInfoAck::set_stoid(const ::std::string& value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.SIGP2PCallExchangeNatInfoAck.sToId)
}
 void SIGP2PCallExchangeNatInfoAck::set_stoid(const char* value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.SIGP2PCallExchangeNatInfoAck.sToId)
}
 void SIGP2PCallExchangeNatInfoAck::set_stoid(const char* value, size_t size) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.SIGP2PCallExchangeNatInfoAck.sToId)
}
 ::std::string* SIGP2PCallExchangeNatInfoAck::mutable_stoid() {
  
  // @@protoc_insertion_point(field_mutable:im.SIGP2PCallExchangeNatInfoAck.sToId)
  return stoid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SIGP2PCallExchangeNatInfoAck::release_stoid() {
  // @@protoc_insertion_point(field_release:im.SIGP2PCallExchangeNatInfoAck.sToId)
  
  return stoid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGP2PCallExchangeNatInfoAck::set_allocated_stoid(::std::string* stoid) {
  if (stoid != NULL) {
    
  } else {
    
  }
  stoid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stoid);
  // @@protoc_insertion_point(field_set_allocated:im.SIGP2PCallExchangeNatInfoAck.sToId)
}

// optional string sMsgId = 2;
void SIGP2PCallExchangeNatInfoAck::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SIGP2PCallExchangeNatInfoAck::smsgid() const {
  // @@protoc_insertion_point(field_get:im.SIGP2PCallExchangeNatInfoAck.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGP2PCallExchangeNatInfoAck::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.SIGP2PCallExchangeNatInfoAck.sMsgId)
}
 void SIGP2PCallExchangeNatInfoAck::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.SIGP2PCallExchangeNatInfoAck.sMsgId)
}
 void SIGP2PCallExchangeNatInfoAck::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.SIGP2PCallExchangeNatInfoAck.sMsgId)
}
 ::std::string* SIGP2PCallExchangeNatInfoAck::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.SIGP2PCallExchangeNatInfoAck.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SIGP2PCallExchangeNatInfoAck::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.SIGP2PCallExchangeNatInfoAck.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGP2PCallExchangeNatInfoAck::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.SIGP2PCallExchangeNatInfoAck.sMsgId)
}

// optional .im.ErrCode errcode = 3;
void SIGP2PCallExchangeNatInfoAck::clear_errcode() {
  errcode_ = 0;
}
 ::im::ErrCode SIGP2PCallExchangeNatInfoAck::errcode() const {
  // @@protoc_insertion_point(field_get:im.SIGP2PCallExchangeNatInfoAck.errcode)
  return static_cast< ::im::ErrCode >(errcode_);
}
 void SIGP2PCallExchangeNatInfoAck::set_errcode(::im::ErrCode value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:im.SIGP2PCallExchangeNatInfoAck.errcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SIGP2PCallExchangeNatInfoDeliverAck::kSUserIdFieldNumber;
const int SIGP2PCallExchangeNatInfoDeliverAck::kSMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SIGP2PCallExchangeNatInfoDeliverAck::SIGP2PCallExchangeNatInfoDeliverAck()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.SIGP2PCallExchangeNatInfoDeliverAck)
}

void SIGP2PCallExchangeNatInfoDeliverAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SIGP2PCallExchangeNatInfoDeliverAck::SIGP2PCallExchangeNatInfoDeliverAck(const SIGP2PCallExchangeNatInfoDeliverAck& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.SIGP2PCallExchangeNatInfoDeliverAck)
}

void SIGP2PCallExchangeNatInfoDeliverAck::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SIGP2PCallExchangeNatInfoDeliverAck::~SIGP2PCallExchangeNatInfoDeliverAck() {
  // @@protoc_insertion_point(destructor:im.SIGP2PCallExchangeNatInfoDeliverAck)
  SharedDtor();
}

void SIGP2PCallExchangeNatInfoDeliverAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void SIGP2PCallExchangeNatInfoDeliverAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SIGP2PCallExchangeNatInfoDeliverAck& SIGP2PCallExchangeNatInfoDeliverAck::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2esig_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2esig_2eproto();
#endif
  return *default_instance_;
}

SIGP2PCallExchangeNatInfoDeliverAck* SIGP2PCallExchangeNatInfoDeliverAck::default_instance_ = NULL;

SIGP2PCallExchangeNatInfoDeliverAck* SIGP2PCallExchangeNatInfoDeliverAck::New(::google::protobuf::Arena* arena) const {
  SIGP2PCallExchangeNatInfoDeliverAck* n = new SIGP2PCallExchangeNatInfoDeliverAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SIGP2PCallExchangeNatInfoDeliverAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.SIGP2PCallExchangeNatInfoDeliverAck)
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SIGP2PCallExchangeNatInfoDeliverAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.SIGP2PCallExchangeNatInfoDeliverAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sUserId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), this->suserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGP2PCallExchangeNatInfoDeliverAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 2;
      case 2: {
        if (tag == 18) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGP2PCallExchangeNatInfoDeliverAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.SIGP2PCallExchangeNatInfoDeliverAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.SIGP2PCallExchangeNatInfoDeliverAck)
  return false;
#undef DO_
}

void SIGP2PCallExchangeNatInfoDeliverAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.SIGP2PCallExchangeNatInfoDeliverAck)
  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), this->suserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGP2PCallExchangeNatInfoDeliverAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // optional string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGP2PCallExchangeNatInfoDeliverAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.SIGP2PCallExchangeNatInfoDeliverAck)
}

int SIGP2PCallExchangeNatInfoDeliverAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.SIGP2PCallExchangeNatInfoDeliverAck)
  int total_size = 0;

  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // optional string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SIGP2PCallExchangeNatInfoDeliverAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SIGP2PCallExchangeNatInfoDeliverAck*>(&from));
}

void SIGP2PCallExchangeNatInfoDeliverAck::MergeFrom(const SIGP2PCallExchangeNatInfoDeliverAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.SIGP2PCallExchangeNatInfoDeliverAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
}

void SIGP2PCallExchangeNatInfoDeliverAck::CopyFrom(const SIGP2PCallExchangeNatInfoDeliverAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.SIGP2PCallExchangeNatInfoDeliverAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SIGP2PCallExchangeNatInfoDeliverAck::IsInitialized() const {

  return true;
}

void SIGP2PCallExchangeNatInfoDeliverAck::Swap(SIGP2PCallExchangeNatInfoDeliverAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SIGP2PCallExchangeNatInfoDeliverAck::InternalSwap(SIGP2PCallExchangeNatInfoDeliverAck* other) {
  suserid_.Swap(&other->suserid_);
  smsgid_.Swap(&other->smsgid_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string SIGP2PCallExchangeNatInfoDeliverAck::GetTypeName() const {
  return "im.SIGP2PCallExchangeNatInfoDeliverAck";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SIGP2PCallExchangeNatInfoDeliverAck

// optional string sUserId = 1;
void SIGP2PCallExchangeNatInfoDeliverAck::clear_suserid() {
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SIGP2PCallExchangeNatInfoDeliverAck::suserid() const {
  // @@protoc_insertion_point(field_get:im.SIGP2PCallExchangeNatInfoDeliverAck.sUserId)
  return suserid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGP2PCallExchangeNatInfoDeliverAck::set_suserid(const ::std::string& value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.SIGP2PCallExchangeNatInfoDeliverAck.sUserId)
}
 void SIGP2PCallExchangeNatInfoDeliverAck::set_suserid(const char* value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.SIGP2PCallExchangeNatInfoDeliverAck.sUserId)
}
 void SIGP2PCallExchangeNatInfoDeliverAck::set_suserid(const char* value, size_t size) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.SIGP2PCallExchangeNatInfoDeliverAck.sUserId)
}
 ::std::string* SIGP2PCallExchangeNatInfoDeliverAck::mutable_suserid() {
  
  // @@protoc_insertion_point(field_mutable:im.SIGP2PCallExchangeNatInfoDeliverAck.sUserId)
  return suserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SIGP2PCallExchangeNatInfoDeliverAck::release_suserid() {
  // @@protoc_insertion_point(field_release:im.SIGP2PCallExchangeNatInfoDeliverAck.sUserId)
  
  return suserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGP2PCallExchangeNatInfoDeliverAck::set_allocated_suserid(::std::string* suserid) {
  if (suserid != NULL) {
    
  } else {
    
  }
  suserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), suserid);
  // @@protoc_insertion_point(field_set_allocated:im.SIGP2PCallExchangeNatInfoDeliverAck.sUserId)
}

// optional string sMsgId = 2;
void SIGP2PCallExchangeNatInfoDeliverAck::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SIGP2PCallExchangeNatInfoDeliverAck::smsgid() const {
  // @@protoc_insertion_point(field_get:im.SIGP2PCallExchangeNatInfoDeliverAck.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGP2PCallExchangeNatInfoDeliverAck::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.SIGP2PCallExchangeNatInfoDeliverAck.sMsgId)
}
 void SIGP2PCallExchangeNatInfoDeliverAck::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.SIGP2PCallExchangeNatInfoDeliverAck.sMsgId)
}
 void SIGP2PCallExchangeNatInfoDeliverAck::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.SIGP2PCallExchangeNatInfoDeliverAck.sMsgId)
}
 ::std::string* SIGP2PCallExchangeNatInfoDeliverAck::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.SIGP2PCallExchangeNatInfoDeliverAck.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SIGP2PCallExchangeNatInfoDeliverAck::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.SIGP2PCallExchangeNatInfoDeliverAck.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGP2PCallExchangeNatInfoDeliverAck::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.SIGP2PCallExchangeNatInfoDeliverAck.sMsgId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SIGHangUp::kSFromIdFieldNumber;
const int SIGHangUp::kSToIdFieldNumber;
const int SIGHangUp::kSMsgIdFieldNumber;
const int SIGHangUp::kMsgTimeFieldNumber;
const int SIGHangUp::kScallIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SIGHangUp::SIGHangUp()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.SIGHangUp)
}

void SIGHangUp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SIGHangUp::SIGHangUp(const SIGHangUp& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.SIGHangUp)
}

void SIGHangUp::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgtime_ = GOOGLE_ULONGLONG(0);
  scallid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SIGHangUp::~SIGHangUp() {
  // @@protoc_insertion_point(destructor:im.SIGHangUp)
  SharedDtor();
}

void SIGHangUp::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scallid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void SIGHangUp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SIGHangUp& SIGHangUp::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2esig_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2esig_2eproto();
#endif
  return *default_instance_;
}

SIGHangUp* SIGHangUp::default_instance_ = NULL;

SIGHangUp* SIGHangUp::New(::google::protobuf::Arena* arena) const {
  SIGHangUp* n = new SIGHangUp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SIGHangUp::Clear() {
// @@protoc_insertion_point(message_clear_start:im.SIGHangUp)
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgtime_ = GOOGLE_ULONGLONG(0);
  scallid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SIGHangUp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.SIGHangUp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sFromId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), this->sfromid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGHangUp.sFromId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sToId;
        break;
      }

      // optional string sToId = 2;
      case 2: {
        if (tag == 18) {
         parse_sToId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), this->stoid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGHangUp.sToId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 3;
      case 3: {
        if (tag == 26) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGHangUp.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_msgTime;
        break;
      }

      // optional uint64 msgTime = 4;
      case 4: {
        if (tag == 32) {
         parse_msgTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_scallId;
        break;
      }

      // optional string scallId = 5;
      case 5: {
        if (tag == 42) {
         parse_scallId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scallid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scallid().data(), this->scallid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGHangUp.scallId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.SIGHangUp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.SIGHangUp)
  return false;
#undef DO_
}

void SIGHangUp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.SIGHangUp)
  // optional string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), this->sfromid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGHangUp.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // optional string sToId = 2;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), this->stoid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGHangUp.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stoid(), output);
  }

  // optional string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGHangUp.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // optional uint64 msgTime = 4;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->msgtime(), output);
  }

  // optional string scallId = 5;
  if (this->scallid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scallid().data(), this->scallid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGHangUp.scallId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->scallid(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.SIGHangUp)
}

int SIGHangUp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.SIGHangUp)
  int total_size = 0;

  // optional string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // optional string sToId = 2;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // optional string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // optional uint64 msgTime = 4;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // optional string scallId = 5;
  if (this->scallid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scallid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SIGHangUp::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SIGHangUp*>(&from));
}

void SIGHangUp::MergeFrom(const SIGHangUp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.SIGHangUp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.scallid().size() > 0) {

    scallid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scallid_);
  }
}

void SIGHangUp::CopyFrom(const SIGHangUp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.SIGHangUp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SIGHangUp::IsInitialized() const {

  return true;
}

void SIGHangUp::Swap(SIGHangUp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SIGHangUp::InternalSwap(SIGHangUp* other) {
  sfromid_.Swap(&other->sfromid_);
  stoid_.Swap(&other->stoid_);
  smsgid_.Swap(&other->smsgid_);
  std::swap(msgtime_, other->msgtime_);
  scallid_.Swap(&other->scallid_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string SIGHangUp::GetTypeName() const {
  return "im.SIGHangUp";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SIGHangUp

// optional string sFromId = 1;
void SIGHangUp::clear_sfromid() {
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SIGHangUp::sfromid() const {
  // @@protoc_insertion_point(field_get:im.SIGHangUp.sFromId)
  return sfromid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGHangUp::set_sfromid(const ::std::string& value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.SIGHangUp.sFromId)
}
 void SIGHangUp::set_sfromid(const char* value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.SIGHangUp.sFromId)
}
 void SIGHangUp::set_sfromid(const char* value, size_t size) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.SIGHangUp.sFromId)
}
 ::std::string* SIGHangUp::mutable_sfromid() {
  
  // @@protoc_insertion_point(field_mutable:im.SIGHangUp.sFromId)
  return sfromid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SIGHangUp::release_sfromid() {
  // @@protoc_insertion_point(field_release:im.SIGHangUp.sFromId)
  
  return sfromid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGHangUp::set_allocated_sfromid(::std::string* sfromid) {
  if (sfromid != NULL) {
    
  } else {
    
  }
  sfromid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sfromid);
  // @@protoc_insertion_point(field_set_allocated:im.SIGHangUp.sFromId)
}

// optional string sToId = 2;
void SIGHangUp::clear_stoid() {
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SIGHangUp::stoid() const {
  // @@protoc_insertion_point(field_get:im.SIGHangUp.sToId)
  return stoid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGHangUp::set_stoid(const ::std::string& value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.SIGHangUp.sToId)
}
 void SIGHangUp::set_stoid(const char* value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.SIGHangUp.sToId)
}
 void SIGHangUp::set_stoid(const char* value, size_t size) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.SIGHangUp.sToId)
}
 ::std::string* SIGHangUp::mutable_stoid() {
  
  // @@protoc_insertion_point(field_mutable:im.SIGHangUp.sToId)
  return stoid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SIGHangUp::release_stoid() {
  // @@protoc_insertion_point(field_release:im.SIGHangUp.sToId)
  
  return stoid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGHangUp::set_allocated_stoid(::std::string* stoid) {
  if (stoid != NULL) {
    
  } else {
    
  }
  stoid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stoid);
  // @@protoc_insertion_point(field_set_allocated:im.SIGHangUp.sToId)
}

// optional string sMsgId = 3;
void SIGHangUp::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SIGHangUp::smsgid() const {
  // @@protoc_insertion_point(field_get:im.SIGHangUp.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGHangUp::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.SIGHangUp.sMsgId)
}
 void SIGHangUp::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.SIGHangUp.sMsgId)
}
 void SIGHangUp::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.SIGHangUp.sMsgId)
}
 ::std::string* SIGHangUp::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.SIGHangUp.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SIGHangUp::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.SIGHangUp.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGHangUp::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.SIGHangUp.sMsgId)
}

// optional uint64 msgTime = 4;
void SIGHangUp::clear_msgtime() {
  msgtime_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 SIGHangUp::msgtime() const {
  // @@protoc_insertion_point(field_get:im.SIGHangUp.msgTime)
  return msgtime_;
}
 void SIGHangUp::set_msgtime(::google::protobuf::uint64 value) {
  
  msgtime_ = value;
  // @@protoc_insertion_point(field_set:im.SIGHangUp.msgTime)
}

// optional string scallId = 5;
void SIGHangUp::clear_scallid() {
  scallid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SIGHangUp::scallid() const {
  // @@protoc_insertion_point(field_get:im.SIGHangUp.scallId)
  return scallid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGHangUp::set_scallid(const ::std::string& value) {
  
  scallid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.SIGHangUp.scallId)
}
 void SIGHangUp::set_scallid(const char* value) {
  
  scallid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.SIGHangUp.scallId)
}
 void SIGHangUp::set_scallid(const char* value, size_t size) {
  
  scallid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.SIGHangUp.scallId)
}
 ::std::string* SIGHangUp::mutable_scallid() {
  
  // @@protoc_insertion_point(field_mutable:im.SIGHangUp.scallId)
  return scallid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SIGHangUp::release_scallid() {
  // @@protoc_insertion_point(field_release:im.SIGHangUp.scallId)
  
  return scallid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGHangUp::set_allocated_scallid(::std::string* scallid) {
  if (scallid != NULL) {
    
  } else {
    
  }
  scallid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scallid);
  // @@protoc_insertion_point(field_set_allocated:im.SIGHangUp.scallId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SIGHangUpAck::kSToIdFieldNumber;
const int SIGHangUpAck::kSMsgIdFieldNumber;
const int SIGHangUpAck::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SIGHangUpAck::SIGHangUpAck()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.SIGHangUpAck)
}

void SIGHangUpAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SIGHangUpAck::SIGHangUpAck(const SIGHangUpAck& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.SIGHangUpAck)
}

void SIGHangUpAck::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

SIGHangUpAck::~SIGHangUpAck() {
  // @@protoc_insertion_point(destructor:im.SIGHangUpAck)
  SharedDtor();
}

void SIGHangUpAck::SharedDtor() {
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void SIGHangUpAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SIGHangUpAck& SIGHangUpAck::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2esig_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2esig_2eproto();
#endif
  return *default_instance_;
}

SIGHangUpAck* SIGHangUpAck::default_instance_ = NULL;

SIGHangUpAck* SIGHangUpAck::New(::google::protobuf::Arena* arena) const {
  SIGHangUpAck* n = new SIGHangUpAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SIGHangUpAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.SIGHangUpAck)
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

bool SIGHangUpAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.SIGHangUpAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sToId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), this->stoid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGHangUpAck.sToId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 2;
      case 2: {
        if (tag == 18) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGHangUpAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_errcode;
        break;
      }

      // optional .im.ErrCode errcode = 5;
      case 5: {
        if (tag == 40) {
         parse_errcode:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.SIGHangUpAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.SIGHangUpAck)
  return false;
#undef DO_
}

void SIGHangUpAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.SIGHangUpAck)
  // optional string sToId = 1;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), this->stoid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGHangUpAck.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->stoid(), output);
  }

  // optional string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGHangUpAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  // optional .im.ErrCode errcode = 5;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->errcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.SIGHangUpAck)
}

int SIGHangUpAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.SIGHangUpAck)
  int total_size = 0;

  // optional string sToId = 1;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // optional string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // optional .im.ErrCode errcode = 5;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SIGHangUpAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SIGHangUpAck*>(&from));
}

void SIGHangUpAck::MergeFrom(const SIGHangUpAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.SIGHangUpAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void SIGHangUpAck::CopyFrom(const SIGHangUpAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.SIGHangUpAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SIGHangUpAck::IsInitialized() const {

  return true;
}

void SIGHangUpAck::Swap(SIGHangUpAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SIGHangUpAck::InternalSwap(SIGHangUpAck* other) {
  stoid_.Swap(&other->stoid_);
  smsgid_.Swap(&other->smsgid_);
  std::swap(errcode_, other->errcode_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string SIGHangUpAck::GetTypeName() const {
  return "im.SIGHangUpAck";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SIGHangUpAck

// optional string sToId = 1;
void SIGHangUpAck::clear_stoid() {
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SIGHangUpAck::stoid() const {
  // @@protoc_insertion_point(field_get:im.SIGHangUpAck.sToId)
  return stoid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGHangUpAck::set_stoid(const ::std::string& value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.SIGHangUpAck.sToId)
}
 void SIGHangUpAck::set_stoid(const char* value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.SIGHangUpAck.sToId)
}
 void SIGHangUpAck::set_stoid(const char* value, size_t size) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.SIGHangUpAck.sToId)
}
 ::std::string* SIGHangUpAck::mutable_stoid() {
  
  // @@protoc_insertion_point(field_mutable:im.SIGHangUpAck.sToId)
  return stoid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SIGHangUpAck::release_stoid() {
  // @@protoc_insertion_point(field_release:im.SIGHangUpAck.sToId)
  
  return stoid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGHangUpAck::set_allocated_stoid(::std::string* stoid) {
  if (stoid != NULL) {
    
  } else {
    
  }
  stoid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stoid);
  // @@protoc_insertion_point(field_set_allocated:im.SIGHangUpAck.sToId)
}

// optional string sMsgId = 2;
void SIGHangUpAck::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SIGHangUpAck::smsgid() const {
  // @@protoc_insertion_point(field_get:im.SIGHangUpAck.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGHangUpAck::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.SIGHangUpAck.sMsgId)
}
 void SIGHangUpAck::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.SIGHangUpAck.sMsgId)
}
 void SIGHangUpAck::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.SIGHangUpAck.sMsgId)
}
 ::std::string* SIGHangUpAck::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.SIGHangUpAck.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SIGHangUpAck::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.SIGHangUpAck.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGHangUpAck::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.SIGHangUpAck.sMsgId)
}

// optional .im.ErrCode errcode = 5;
void SIGHangUpAck::clear_errcode() {
  errcode_ = 0;
}
 ::im::ErrCode SIGHangUpAck::errcode() const {
  // @@protoc_insertion_point(field_get:im.SIGHangUpAck.errcode)
  return static_cast< ::im::ErrCode >(errcode_);
}
 void SIGHangUpAck::set_errcode(::im::ErrCode value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:im.SIGHangUpAck.errcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SIGHangUpDeliverAck::kSUserIdFieldNumber;
const int SIGHangUpDeliverAck::kSMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SIGHangUpDeliverAck::SIGHangUpDeliverAck()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.SIGHangUpDeliverAck)
}

void SIGHangUpDeliverAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SIGHangUpDeliverAck::SIGHangUpDeliverAck(const SIGHangUpDeliverAck& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.SIGHangUpDeliverAck)
}

void SIGHangUpDeliverAck::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SIGHangUpDeliverAck::~SIGHangUpDeliverAck() {
  // @@protoc_insertion_point(destructor:im.SIGHangUpDeliverAck)
  SharedDtor();
}

void SIGHangUpDeliverAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void SIGHangUpDeliverAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SIGHangUpDeliverAck& SIGHangUpDeliverAck::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2esig_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2esig_2eproto();
#endif
  return *default_instance_;
}

SIGHangUpDeliverAck* SIGHangUpDeliverAck::default_instance_ = NULL;

SIGHangUpDeliverAck* SIGHangUpDeliverAck::New(::google::protobuf::Arena* arena) const {
  SIGHangUpDeliverAck* n = new SIGHangUpDeliverAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SIGHangUpDeliverAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.SIGHangUpDeliverAck)
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SIGHangUpDeliverAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.SIGHangUpDeliverAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sUserId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), this->suserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGHangUpDeliverAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 2;
      case 2: {
        if (tag == 18) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGHangUpDeliverAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.SIGHangUpDeliverAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.SIGHangUpDeliverAck)
  return false;
#undef DO_
}

void SIGHangUpDeliverAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.SIGHangUpDeliverAck)
  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), this->suserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGHangUpDeliverAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // optional string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGHangUpDeliverAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.SIGHangUpDeliverAck)
}

int SIGHangUpDeliverAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.SIGHangUpDeliverAck)
  int total_size = 0;

  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // optional string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SIGHangUpDeliverAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SIGHangUpDeliverAck*>(&from));
}

void SIGHangUpDeliverAck::MergeFrom(const SIGHangUpDeliverAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.SIGHangUpDeliverAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
}

void SIGHangUpDeliverAck::CopyFrom(const SIGHangUpDeliverAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.SIGHangUpDeliverAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SIGHangUpDeliverAck::IsInitialized() const {

  return true;
}

void SIGHangUpDeliverAck::Swap(SIGHangUpDeliverAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SIGHangUpDeliverAck::InternalSwap(SIGHangUpDeliverAck* other) {
  suserid_.Swap(&other->suserid_);
  smsgid_.Swap(&other->smsgid_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string SIGHangUpDeliverAck::GetTypeName() const {
  return "im.SIGHangUpDeliverAck";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SIGHangUpDeliverAck

// optional string sUserId = 1;
void SIGHangUpDeliverAck::clear_suserid() {
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SIGHangUpDeliverAck::suserid() const {
  // @@protoc_insertion_point(field_get:im.SIGHangUpDeliverAck.sUserId)
  return suserid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGHangUpDeliverAck::set_suserid(const ::std::string& value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.SIGHangUpDeliverAck.sUserId)
}
 void SIGHangUpDeliverAck::set_suserid(const char* value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.SIGHangUpDeliverAck.sUserId)
}
 void SIGHangUpDeliverAck::set_suserid(const char* value, size_t size) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.SIGHangUpDeliverAck.sUserId)
}
 ::std::string* SIGHangUpDeliverAck::mutable_suserid() {
  
  // @@protoc_insertion_point(field_mutable:im.SIGHangUpDeliverAck.sUserId)
  return suserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SIGHangUpDeliverAck::release_suserid() {
  // @@protoc_insertion_point(field_release:im.SIGHangUpDeliverAck.sUserId)
  
  return suserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGHangUpDeliverAck::set_allocated_suserid(::std::string* suserid) {
  if (suserid != NULL) {
    
  } else {
    
  }
  suserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), suserid);
  // @@protoc_insertion_point(field_set_allocated:im.SIGHangUpDeliverAck.sUserId)
}

// optional string sMsgId = 2;
void SIGHangUpDeliverAck::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SIGHangUpDeliverAck::smsgid() const {
  // @@protoc_insertion_point(field_get:im.SIGHangUpDeliverAck.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGHangUpDeliverAck::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.SIGHangUpDeliverAck.sMsgId)
}
 void SIGHangUpDeliverAck::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.SIGHangUpDeliverAck.sMsgId)
}
 void SIGHangUpDeliverAck::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.SIGHangUpDeliverAck.sMsgId)
}
 ::std::string* SIGHangUpDeliverAck::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.SIGHangUpDeliverAck.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SIGHangUpDeliverAck::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.SIGHangUpDeliverAck.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGHangUpDeliverAck::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.SIGHangUpDeliverAck.sMsgId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SIGP2PCallStateNotify::kSFromIdFieldNumber;
const int SIGP2PCallStateNotify::kSToIdFieldNumber;
const int SIGP2PCallStateNotify::kSMsgIdFieldNumber;
const int SIGP2PCallStateNotify::kMsgTimeFieldNumber;
const int SIGP2PCallStateNotify::kNotifyTypeFieldNumber;
const int SIGP2PCallStateNotify::kNotifyValueFieldNumber;
const int SIGP2PCallStateNotify::kScallIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SIGP2PCallStateNotify::SIGP2PCallStateNotify()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.SIGP2PCallStateNotify)
}

void SIGP2PCallStateNotify::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SIGP2PCallStateNotify::SIGP2PCallStateNotify(const SIGP2PCallStateNotify& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.SIGP2PCallStateNotify)
}

void SIGP2PCallStateNotify::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgtime_ = GOOGLE_ULONGLONG(0);
  notifytype_ = 0u;
  notifyvalue_ = 0u;
  scallid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SIGP2PCallStateNotify::~SIGP2PCallStateNotify() {
  // @@protoc_insertion_point(destructor:im.SIGP2PCallStateNotify)
  SharedDtor();
}

void SIGP2PCallStateNotify::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scallid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void SIGP2PCallStateNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SIGP2PCallStateNotify& SIGP2PCallStateNotify::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2esig_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2esig_2eproto();
#endif
  return *default_instance_;
}

SIGP2PCallStateNotify* SIGP2PCallStateNotify::default_instance_ = NULL;

SIGP2PCallStateNotify* SIGP2PCallStateNotify::New(::google::protobuf::Arena* arena) const {
  SIGP2PCallStateNotify* n = new SIGP2PCallStateNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SIGP2PCallStateNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:im.SIGP2PCallStateNotify)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SIGP2PCallStateNotify, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SIGP2PCallStateNotify*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(msgtime_, notifyvalue_);
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scallid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool SIGP2PCallStateNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.SIGP2PCallStateNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sFromId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), this->sfromid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGP2PCallStateNotify.sFromId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sToId;
        break;
      }

      // optional string sToId = 2;
      case 2: {
        if (tag == 18) {
         parse_sToId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), this->stoid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGP2PCallStateNotify.sToId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 3;
      case 3: {
        if (tag == 26) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGP2PCallStateNotify.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_msgTime;
        break;
      }

      // optional uint64 msgTime = 4;
      case 4: {
        if (tag == 32) {
         parse_msgTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_notifyType;
        break;
      }

      // optional uint32 notifyType = 8;
      case 8: {
        if (tag == 64) {
         parse_notifyType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &notifytype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_notifyValue;
        break;
      }

      // optional uint32 notifyValue = 9;
      case 9: {
        if (tag == 72) {
         parse_notifyValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &notifyvalue_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_scallId;
        break;
      }

      // optional string scallId = 10;
      case 10: {
        if (tag == 82) {
         parse_scallId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scallid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scallid().data(), this->scallid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGP2PCallStateNotify.scallId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.SIGP2PCallStateNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.SIGP2PCallStateNotify)
  return false;
#undef DO_
}

void SIGP2PCallStateNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.SIGP2PCallStateNotify)
  // optional string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), this->sfromid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGP2PCallStateNotify.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // optional string sToId = 2;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), this->stoid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGP2PCallStateNotify.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stoid(), output);
  }

  // optional string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGP2PCallStateNotify.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // optional uint64 msgTime = 4;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->msgtime(), output);
  }

  // optional uint32 notifyType = 8;
  if (this->notifytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->notifytype(), output);
  }

  // optional uint32 notifyValue = 9;
  if (this->notifyvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->notifyvalue(), output);
  }

  // optional string scallId = 10;
  if (this->scallid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scallid().data(), this->scallid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGP2PCallStateNotify.scallId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->scallid(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.SIGP2PCallStateNotify)
}

int SIGP2PCallStateNotify::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.SIGP2PCallStateNotify)
  int total_size = 0;

  // optional string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // optional string sToId = 2;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // optional string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // optional uint64 msgTime = 4;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // optional uint32 notifyType = 8;
  if (this->notifytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->notifytype());
  }

  // optional uint32 notifyValue = 9;
  if (this->notifyvalue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->notifyvalue());
  }

  // optional string scallId = 10;
  if (this->scallid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scallid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SIGP2PCallStateNotify::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SIGP2PCallStateNotify*>(&from));
}

void SIGP2PCallStateNotify::MergeFrom(const SIGP2PCallStateNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.SIGP2PCallStateNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.notifytype() != 0) {
    set_notifytype(from.notifytype());
  }
  if (from.notifyvalue() != 0) {
    set_notifyvalue(from.notifyvalue());
  }
  if (from.scallid().size() > 0) {

    scallid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scallid_);
  }
}

void SIGP2PCallStateNotify::CopyFrom(const SIGP2PCallStateNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.SIGP2PCallStateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SIGP2PCallStateNotify::IsInitialized() const {

  return true;
}

void SIGP2PCallStateNotify::Swap(SIGP2PCallStateNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SIGP2PCallStateNotify::InternalSwap(SIGP2PCallStateNotify* other) {
  sfromid_.Swap(&other->sfromid_);
  stoid_.Swap(&other->stoid_);
  smsgid_.Swap(&other->smsgid_);
  std::swap(msgtime_, other->msgtime_);
  std::swap(notifytype_, other->notifytype_);
  std::swap(notifyvalue_, other->notifyvalue_);
  scallid_.Swap(&other->scallid_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string SIGP2PCallStateNotify::GetTypeName() const {
  return "im.SIGP2PCallStateNotify";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SIGP2PCallStateNotify

// optional string sFromId = 1;
void SIGP2PCallStateNotify::clear_sfromid() {
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SIGP2PCallStateNotify::sfromid() const {
  // @@protoc_insertion_point(field_get:im.SIGP2PCallStateNotify.sFromId)
  return sfromid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGP2PCallStateNotify::set_sfromid(const ::std::string& value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.SIGP2PCallStateNotify.sFromId)
}
 void SIGP2PCallStateNotify::set_sfromid(const char* value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.SIGP2PCallStateNotify.sFromId)
}
 void SIGP2PCallStateNotify::set_sfromid(const char* value, size_t size) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.SIGP2PCallStateNotify.sFromId)
}
 ::std::string* SIGP2PCallStateNotify::mutable_sfromid() {
  
  // @@protoc_insertion_point(field_mutable:im.SIGP2PCallStateNotify.sFromId)
  return sfromid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SIGP2PCallStateNotify::release_sfromid() {
  // @@protoc_insertion_point(field_release:im.SIGP2PCallStateNotify.sFromId)
  
  return sfromid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGP2PCallStateNotify::set_allocated_sfromid(::std::string* sfromid) {
  if (sfromid != NULL) {
    
  } else {
    
  }
  sfromid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sfromid);
  // @@protoc_insertion_point(field_set_allocated:im.SIGP2PCallStateNotify.sFromId)
}

// optional string sToId = 2;
void SIGP2PCallStateNotify::clear_stoid() {
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SIGP2PCallStateNotify::stoid() const {
  // @@protoc_insertion_point(field_get:im.SIGP2PCallStateNotify.sToId)
  return stoid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGP2PCallStateNotify::set_stoid(const ::std::string& value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.SIGP2PCallStateNotify.sToId)
}
 void SIGP2PCallStateNotify::set_stoid(const char* value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.SIGP2PCallStateNotify.sToId)
}
 void SIGP2PCallStateNotify::set_stoid(const char* value, size_t size) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.SIGP2PCallStateNotify.sToId)
}
 ::std::string* SIGP2PCallStateNotify::mutable_stoid() {
  
  // @@protoc_insertion_point(field_mutable:im.SIGP2PCallStateNotify.sToId)
  return stoid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SIGP2PCallStateNotify::release_stoid() {
  // @@protoc_insertion_point(field_release:im.SIGP2PCallStateNotify.sToId)
  
  return stoid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGP2PCallStateNotify::set_allocated_stoid(::std::string* stoid) {
  if (stoid != NULL) {
    
  } else {
    
  }
  stoid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stoid);
  // @@protoc_insertion_point(field_set_allocated:im.SIGP2PCallStateNotify.sToId)
}

// optional string sMsgId = 3;
void SIGP2PCallStateNotify::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SIGP2PCallStateNotify::smsgid() const {
  // @@protoc_insertion_point(field_get:im.SIGP2PCallStateNotify.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGP2PCallStateNotify::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.SIGP2PCallStateNotify.sMsgId)
}
 void SIGP2PCallStateNotify::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.SIGP2PCallStateNotify.sMsgId)
}
 void SIGP2PCallStateNotify::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.SIGP2PCallStateNotify.sMsgId)
}
 ::std::string* SIGP2PCallStateNotify::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.SIGP2PCallStateNotify.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SIGP2PCallStateNotify::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.SIGP2PCallStateNotify.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGP2PCallStateNotify::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.SIGP2PCallStateNotify.sMsgId)
}

// optional uint64 msgTime = 4;
void SIGP2PCallStateNotify::clear_msgtime() {
  msgtime_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 SIGP2PCallStateNotify::msgtime() const {
  // @@protoc_insertion_point(field_get:im.SIGP2PCallStateNotify.msgTime)
  return msgtime_;
}
 void SIGP2PCallStateNotify::set_msgtime(::google::protobuf::uint64 value) {
  
  msgtime_ = value;
  // @@protoc_insertion_point(field_set:im.SIGP2PCallStateNotify.msgTime)
}

// optional uint32 notifyType = 8;
void SIGP2PCallStateNotify::clear_notifytype() {
  notifytype_ = 0u;
}
 ::google::protobuf::uint32 SIGP2PCallStateNotify::notifytype() const {
  // @@protoc_insertion_point(field_get:im.SIGP2PCallStateNotify.notifyType)
  return notifytype_;
}
 void SIGP2PCallStateNotify::set_notifytype(::google::protobuf::uint32 value) {
  
  notifytype_ = value;
  // @@protoc_insertion_point(field_set:im.SIGP2PCallStateNotify.notifyType)
}

// optional uint32 notifyValue = 9;
void SIGP2PCallStateNotify::clear_notifyvalue() {
  notifyvalue_ = 0u;
}
 ::google::protobuf::uint32 SIGP2PCallStateNotify::notifyvalue() const {
  // @@protoc_insertion_point(field_get:im.SIGP2PCallStateNotify.notifyValue)
  return notifyvalue_;
}
 void SIGP2PCallStateNotify::set_notifyvalue(::google::protobuf::uint32 value) {
  
  notifyvalue_ = value;
  // @@protoc_insertion_point(field_set:im.SIGP2PCallStateNotify.notifyValue)
}

// optional string scallId = 10;
void SIGP2PCallStateNotify::clear_scallid() {
  scallid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SIGP2PCallStateNotify::scallid() const {
  // @@protoc_insertion_point(field_get:im.SIGP2PCallStateNotify.scallId)
  return scallid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGP2PCallStateNotify::set_scallid(const ::std::string& value) {
  
  scallid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.SIGP2PCallStateNotify.scallId)
}
 void SIGP2PCallStateNotify::set_scallid(const char* value) {
  
  scallid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.SIGP2PCallStateNotify.scallId)
}
 void SIGP2PCallStateNotify::set_scallid(const char* value, size_t size) {
  
  scallid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.SIGP2PCallStateNotify.scallId)
}
 ::std::string* SIGP2PCallStateNotify::mutable_scallid() {
  
  // @@protoc_insertion_point(field_mutable:im.SIGP2PCallStateNotify.scallId)
  return scallid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SIGP2PCallStateNotify::release_scallid() {
  // @@protoc_insertion_point(field_release:im.SIGP2PCallStateNotify.scallId)
  
  return scallid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGP2PCallStateNotify::set_allocated_scallid(::std::string* scallid) {
  if (scallid != NULL) {
    
  } else {
    
  }
  scallid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scallid);
  // @@protoc_insertion_point(field_set_allocated:im.SIGP2PCallStateNotify.scallId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SIGP2PCallStateNotifyACK::kSToIdFieldNumber;
const int SIGP2PCallStateNotifyACK::kSMsgIdFieldNumber;
const int SIGP2PCallStateNotifyACK::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SIGP2PCallStateNotifyACK::SIGP2PCallStateNotifyACK()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.SIGP2PCallStateNotifyACK)
}

void SIGP2PCallStateNotifyACK::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SIGP2PCallStateNotifyACK::SIGP2PCallStateNotifyACK(const SIGP2PCallStateNotifyACK& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.SIGP2PCallStateNotifyACK)
}

void SIGP2PCallStateNotifyACK::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

SIGP2PCallStateNotifyACK::~SIGP2PCallStateNotifyACK() {
  // @@protoc_insertion_point(destructor:im.SIGP2PCallStateNotifyACK)
  SharedDtor();
}

void SIGP2PCallStateNotifyACK::SharedDtor() {
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void SIGP2PCallStateNotifyACK::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SIGP2PCallStateNotifyACK& SIGP2PCallStateNotifyACK::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2esig_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2esig_2eproto();
#endif
  return *default_instance_;
}

SIGP2PCallStateNotifyACK* SIGP2PCallStateNotifyACK::default_instance_ = NULL;

SIGP2PCallStateNotifyACK* SIGP2PCallStateNotifyACK::New(::google::protobuf::Arena* arena) const {
  SIGP2PCallStateNotifyACK* n = new SIGP2PCallStateNotifyACK;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SIGP2PCallStateNotifyACK::Clear() {
// @@protoc_insertion_point(message_clear_start:im.SIGP2PCallStateNotifyACK)
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

bool SIGP2PCallStateNotifyACK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.SIGP2PCallStateNotifyACK)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sToId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), this->stoid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGP2PCallStateNotifyACK.sToId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 2;
      case 2: {
        if (tag == 18) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGP2PCallStateNotifyACK.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_errcode;
        break;
      }

      // optional .im.ErrCode errcode = 3;
      case 3: {
        if (tag == 24) {
         parse_errcode:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.SIGP2PCallStateNotifyACK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.SIGP2PCallStateNotifyACK)
  return false;
#undef DO_
}

void SIGP2PCallStateNotifyACK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.SIGP2PCallStateNotifyACK)
  // optional string sToId = 1;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), this->stoid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGP2PCallStateNotifyACK.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->stoid(), output);
  }

  // optional string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGP2PCallStateNotifyACK.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  // optional .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->errcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.SIGP2PCallStateNotifyACK)
}

int SIGP2PCallStateNotifyACK::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.SIGP2PCallStateNotifyACK)
  int total_size = 0;

  // optional string sToId = 1;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // optional string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // optional .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SIGP2PCallStateNotifyACK::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SIGP2PCallStateNotifyACK*>(&from));
}

void SIGP2PCallStateNotifyACK::MergeFrom(const SIGP2PCallStateNotifyACK& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.SIGP2PCallStateNotifyACK)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void SIGP2PCallStateNotifyACK::CopyFrom(const SIGP2PCallStateNotifyACK& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.SIGP2PCallStateNotifyACK)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SIGP2PCallStateNotifyACK::IsInitialized() const {

  return true;
}

void SIGP2PCallStateNotifyACK::Swap(SIGP2PCallStateNotifyACK* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SIGP2PCallStateNotifyACK::InternalSwap(SIGP2PCallStateNotifyACK* other) {
  stoid_.Swap(&other->stoid_);
  smsgid_.Swap(&other->smsgid_);
  std::swap(errcode_, other->errcode_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string SIGP2PCallStateNotifyACK::GetTypeName() const {
  return "im.SIGP2PCallStateNotifyACK";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SIGP2PCallStateNotifyACK

// optional string sToId = 1;
void SIGP2PCallStateNotifyACK::clear_stoid() {
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SIGP2PCallStateNotifyACK::stoid() const {
  // @@protoc_insertion_point(field_get:im.SIGP2PCallStateNotifyACK.sToId)
  return stoid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGP2PCallStateNotifyACK::set_stoid(const ::std::string& value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.SIGP2PCallStateNotifyACK.sToId)
}
 void SIGP2PCallStateNotifyACK::set_stoid(const char* value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.SIGP2PCallStateNotifyACK.sToId)
}
 void SIGP2PCallStateNotifyACK::set_stoid(const char* value, size_t size) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.SIGP2PCallStateNotifyACK.sToId)
}
 ::std::string* SIGP2PCallStateNotifyACK::mutable_stoid() {
  
  // @@protoc_insertion_point(field_mutable:im.SIGP2PCallStateNotifyACK.sToId)
  return stoid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SIGP2PCallStateNotifyACK::release_stoid() {
  // @@protoc_insertion_point(field_release:im.SIGP2PCallStateNotifyACK.sToId)
  
  return stoid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGP2PCallStateNotifyACK::set_allocated_stoid(::std::string* stoid) {
  if (stoid != NULL) {
    
  } else {
    
  }
  stoid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stoid);
  // @@protoc_insertion_point(field_set_allocated:im.SIGP2PCallStateNotifyACK.sToId)
}

// optional string sMsgId = 2;
void SIGP2PCallStateNotifyACK::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SIGP2PCallStateNotifyACK::smsgid() const {
  // @@protoc_insertion_point(field_get:im.SIGP2PCallStateNotifyACK.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGP2PCallStateNotifyACK::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.SIGP2PCallStateNotifyACK.sMsgId)
}
 void SIGP2PCallStateNotifyACK::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.SIGP2PCallStateNotifyACK.sMsgId)
}
 void SIGP2PCallStateNotifyACK::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.SIGP2PCallStateNotifyACK.sMsgId)
}
 ::std::string* SIGP2PCallStateNotifyACK::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.SIGP2PCallStateNotifyACK.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SIGP2PCallStateNotifyACK::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.SIGP2PCallStateNotifyACK.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGP2PCallStateNotifyACK::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.SIGP2PCallStateNotifyACK.sMsgId)
}

// optional .im.ErrCode errcode = 3;
void SIGP2PCallStateNotifyACK::clear_errcode() {
  errcode_ = 0;
}
 ::im::ErrCode SIGP2PCallStateNotifyACK::errcode() const {
  // @@protoc_insertion_point(field_get:im.SIGP2PCallStateNotifyACK.errcode)
  return static_cast< ::im::ErrCode >(errcode_);
}
 void SIGP2PCallStateNotifyACK::set_errcode(::im::ErrCode value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:im.SIGP2PCallStateNotifyACK.errcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SIGP2PCallStateNotifyDeliverAck::kSUserIdFieldNumber;
const int SIGP2PCallStateNotifyDeliverAck::kSMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SIGP2PCallStateNotifyDeliverAck::SIGP2PCallStateNotifyDeliverAck()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.SIGP2PCallStateNotifyDeliverAck)
}

void SIGP2PCallStateNotifyDeliverAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SIGP2PCallStateNotifyDeliverAck::SIGP2PCallStateNotifyDeliverAck(const SIGP2PCallStateNotifyDeliverAck& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.SIGP2PCallStateNotifyDeliverAck)
}

void SIGP2PCallStateNotifyDeliverAck::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SIGP2PCallStateNotifyDeliverAck::~SIGP2PCallStateNotifyDeliverAck() {
  // @@protoc_insertion_point(destructor:im.SIGP2PCallStateNotifyDeliverAck)
  SharedDtor();
}

void SIGP2PCallStateNotifyDeliverAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void SIGP2PCallStateNotifyDeliverAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SIGP2PCallStateNotifyDeliverAck& SIGP2PCallStateNotifyDeliverAck::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2esig_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2esig_2eproto();
#endif
  return *default_instance_;
}

SIGP2PCallStateNotifyDeliverAck* SIGP2PCallStateNotifyDeliverAck::default_instance_ = NULL;

SIGP2PCallStateNotifyDeliverAck* SIGP2PCallStateNotifyDeliverAck::New(::google::protobuf::Arena* arena) const {
  SIGP2PCallStateNotifyDeliverAck* n = new SIGP2PCallStateNotifyDeliverAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SIGP2PCallStateNotifyDeliverAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.SIGP2PCallStateNotifyDeliverAck)
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SIGP2PCallStateNotifyDeliverAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.SIGP2PCallStateNotifyDeliverAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sUserId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), this->suserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGP2PCallStateNotifyDeliverAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 2;
      case 2: {
        if (tag == 18) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SIGP2PCallStateNotifyDeliverAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.SIGP2PCallStateNotifyDeliverAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.SIGP2PCallStateNotifyDeliverAck)
  return false;
#undef DO_
}

void SIGP2PCallStateNotifyDeliverAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.SIGP2PCallStateNotifyDeliverAck)
  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), this->suserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGP2PCallStateNotifyDeliverAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // optional string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SIGP2PCallStateNotifyDeliverAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.SIGP2PCallStateNotifyDeliverAck)
}

int SIGP2PCallStateNotifyDeliverAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.SIGP2PCallStateNotifyDeliverAck)
  int total_size = 0;

  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // optional string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SIGP2PCallStateNotifyDeliverAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SIGP2PCallStateNotifyDeliverAck*>(&from));
}

void SIGP2PCallStateNotifyDeliverAck::MergeFrom(const SIGP2PCallStateNotifyDeliverAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.SIGP2PCallStateNotifyDeliverAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
}

void SIGP2PCallStateNotifyDeliverAck::CopyFrom(const SIGP2PCallStateNotifyDeliverAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.SIGP2PCallStateNotifyDeliverAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SIGP2PCallStateNotifyDeliverAck::IsInitialized() const {

  return true;
}

void SIGP2PCallStateNotifyDeliverAck::Swap(SIGP2PCallStateNotifyDeliverAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SIGP2PCallStateNotifyDeliverAck::InternalSwap(SIGP2PCallStateNotifyDeliverAck* other) {
  suserid_.Swap(&other->suserid_);
  smsgid_.Swap(&other->smsgid_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string SIGP2PCallStateNotifyDeliverAck::GetTypeName() const {
  return "im.SIGP2PCallStateNotifyDeliverAck";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SIGP2PCallStateNotifyDeliverAck

// optional string sUserId = 1;
void SIGP2PCallStateNotifyDeliverAck::clear_suserid() {
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SIGP2PCallStateNotifyDeliverAck::suserid() const {
  // @@protoc_insertion_point(field_get:im.SIGP2PCallStateNotifyDeliverAck.sUserId)
  return suserid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGP2PCallStateNotifyDeliverAck::set_suserid(const ::std::string& value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.SIGP2PCallStateNotifyDeliverAck.sUserId)
}
 void SIGP2PCallStateNotifyDeliverAck::set_suserid(const char* value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.SIGP2PCallStateNotifyDeliverAck.sUserId)
}
 void SIGP2PCallStateNotifyDeliverAck::set_suserid(const char* value, size_t size) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.SIGP2PCallStateNotifyDeliverAck.sUserId)
}
 ::std::string* SIGP2PCallStateNotifyDeliverAck::mutable_suserid() {
  
  // @@protoc_insertion_point(field_mutable:im.SIGP2PCallStateNotifyDeliverAck.sUserId)
  return suserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SIGP2PCallStateNotifyDeliverAck::release_suserid() {
  // @@protoc_insertion_point(field_release:im.SIGP2PCallStateNotifyDeliverAck.sUserId)
  
  return suserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGP2PCallStateNotifyDeliverAck::set_allocated_suserid(::std::string* suserid) {
  if (suserid != NULL) {
    
  } else {
    
  }
  suserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), suserid);
  // @@protoc_insertion_point(field_set_allocated:im.SIGP2PCallStateNotifyDeliverAck.sUserId)
}

// optional string sMsgId = 2;
void SIGP2PCallStateNotifyDeliverAck::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SIGP2PCallStateNotifyDeliverAck::smsgid() const {
  // @@protoc_insertion_point(field_get:im.SIGP2PCallStateNotifyDeliverAck.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGP2PCallStateNotifyDeliverAck::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.SIGP2PCallStateNotifyDeliverAck.sMsgId)
}
 void SIGP2PCallStateNotifyDeliverAck::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.SIGP2PCallStateNotifyDeliverAck.sMsgId)
}
 void SIGP2PCallStateNotifyDeliverAck::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.SIGP2PCallStateNotifyDeliverAck.sMsgId)
}
 ::std::string* SIGP2PCallStateNotifyDeliverAck::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.SIGP2PCallStateNotifyDeliverAck.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SIGP2PCallStateNotifyDeliverAck::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.SIGP2PCallStateNotifyDeliverAck.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SIGP2PCallStateNotifyDeliverAck::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.SIGP2PCallStateNotifyDeliverAck.sMsgId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace im

// @@protoc_insertion_point(global_scope)
