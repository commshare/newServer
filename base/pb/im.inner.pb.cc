// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: im.inner.proto

#include "im.inner.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace im {
class CMLoginNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMLoginNotify>
      _instance;
} _CMLoginNotify_default_instance_;
class CMLoginNotifyAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMLoginNotifyAck>
      _instance;
} _CMLoginNotifyAck_default_instance_;
class LoginCMNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoginCMNotify>
      _instance;
} _LoginCMNotify_default_instance_;
class LoginCMNotifyAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoginCMNotifyAck>
      _instance;
} _LoginCMNotifyAck_default_instance_;
class CMLoginTransDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMLoginTrans>
      _instance;
} _CMLoginTrans_default_instance_;
class CMPHPLoginNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMPHPLoginNotify>
      _instance;
} _CMPHPLoginNotify_default_instance_;
class CMPHPLoginNotifyACKDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMPHPLoginNotifyACK>
      _instance;
} _CMPHPLoginNotifyACK_default_instance_;
class SVRMSGGroupRelationNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SVRMSGGroupRelationNotify>
      _instance;
} _SVRMSGGroupRelationNotify_default_instance_;
class SVRMSGFriendRelationNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SVRMSGFriendRelationNotify>
      _instance;
} _SVRMSGFriendRelationNotify_default_instance_;
class SVRMSGCommonMsgNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SVRMSGCommonMsgNotify>
      _instance;
} _SVRMSGCommonMsgNotify_default_instance_;
class SVRRadioMsgNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SVRRadioMsgNotify>
      _instance;
} _SVRRadioMsgNotify_default_instance_;
class SVRRadioPushSetNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SVRRadioPushSetNotify>
      _instance;
} _SVRRadioPushSetNotify_default_instance_;
class SVRMSGNotifyACKDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SVRMSGNotifyACK>
      _instance;
} _SVRMSGNotifyACK_default_instance_;
class OnLoginResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OnLoginResult>
      _instance;
} _OnLoginResult_default_instance_;
}  // namespace im
namespace protobuf_im_2einner_2eproto {
static void InitDefaultsCMLoginNotify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_CMLoginNotify_default_instance_;
    new (ptr) ::im::CMLoginNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::CMLoginNotify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMLoginNotify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMLoginNotify}, {}};

static void InitDefaultsCMLoginNotifyAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_CMLoginNotifyAck_default_instance_;
    new (ptr) ::im::CMLoginNotifyAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::CMLoginNotifyAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMLoginNotifyAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMLoginNotifyAck}, {}};

static void InitDefaultsLoginCMNotify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_LoginCMNotify_default_instance_;
    new (ptr) ::im::LoginCMNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::LoginCMNotify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LoginCMNotify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLoginCMNotify}, {}};

static void InitDefaultsLoginCMNotifyAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_LoginCMNotifyAck_default_instance_;
    new (ptr) ::im::LoginCMNotifyAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::LoginCMNotifyAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LoginCMNotifyAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLoginCMNotifyAck}, {}};

static void InitDefaultsCMLoginTrans() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_CMLoginTrans_default_instance_;
    new (ptr) ::im::CMLoginTrans();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::CMLoginTrans::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMLoginTrans =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMLoginTrans}, {}};

static void InitDefaultsCMPHPLoginNotify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_CMPHPLoginNotify_default_instance_;
    new (ptr) ::im::CMPHPLoginNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::CMPHPLoginNotify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMPHPLoginNotify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMPHPLoginNotify}, {}};

static void InitDefaultsCMPHPLoginNotifyACK() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_CMPHPLoginNotifyACK_default_instance_;
    new (ptr) ::im::CMPHPLoginNotifyACK();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::CMPHPLoginNotifyACK::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMPHPLoginNotifyACK =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMPHPLoginNotifyACK}, {}};

static void InitDefaultsSVRMSGGroupRelationNotify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_SVRMSGGroupRelationNotify_default_instance_;
    new (ptr) ::im::SVRMSGGroupRelationNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::SVRMSGGroupRelationNotify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SVRMSGGroupRelationNotify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSVRMSGGroupRelationNotify}, {}};

static void InitDefaultsSVRMSGFriendRelationNotify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_SVRMSGFriendRelationNotify_default_instance_;
    new (ptr) ::im::SVRMSGFriendRelationNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::SVRMSGFriendRelationNotify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SVRMSGFriendRelationNotify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSVRMSGFriendRelationNotify}, {}};

static void InitDefaultsSVRMSGCommonMsgNotify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_SVRMSGCommonMsgNotify_default_instance_;
    new (ptr) ::im::SVRMSGCommonMsgNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::SVRMSGCommonMsgNotify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SVRMSGCommonMsgNotify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSVRMSGCommonMsgNotify}, {}};

static void InitDefaultsSVRRadioMsgNotify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_SVRRadioMsgNotify_default_instance_;
    new (ptr) ::im::SVRRadioMsgNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::SVRRadioMsgNotify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SVRRadioMsgNotify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSVRRadioMsgNotify}, {}};

static void InitDefaultsSVRRadioPushSetNotify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_SVRRadioPushSetNotify_default_instance_;
    new (ptr) ::im::SVRRadioPushSetNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::SVRRadioPushSetNotify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SVRRadioPushSetNotify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSVRRadioPushSetNotify}, {}};

static void InitDefaultsSVRMSGNotifyACK() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_SVRMSGNotifyACK_default_instance_;
    new (ptr) ::im::SVRMSGNotifyACK();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::SVRMSGNotifyACK::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SVRMSGNotifyACK =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSVRMSGNotifyACK}, {}};

static void InitDefaultsOnLoginResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_OnLoginResult_default_instance_;
    new (ptr) ::im::OnLoginResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::OnLoginResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OnLoginResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOnLoginResult}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CMLoginNotify.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMLoginNotifyAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LoginCMNotify.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LoginCMNotifyAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMLoginTrans.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMPHPLoginNotify.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMPHPLoginNotifyACK.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SVRMSGGroupRelationNotify.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SVRMSGFriendRelationNotify.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SVRMSGCommonMsgNotify.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SVRRadioMsgNotify.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SVRRadioPushSetNotify.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SVRMSGNotifyACK.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OnLoginResult.base);
}

}  // namespace protobuf_im_2einner_2eproto
namespace im {
bool CMLoginNotifyType_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

bool LoginCMNotifyType_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

bool PHPLoginNotifyType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

bool PHPLoginNotifySubType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

bool SVRGroupRelationNotifyType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

bool SVRFriendRelationNotifyType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

bool SVRCommonNotifyType_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

bool SVRRadioNotifyType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
      return true;
    default:
      return false;
  }
}

bool SVRRadioPushSetNotifyType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

bool LoginResultType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void CMLoginNotify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMLoginNotify::kSUserIdFieldNumber;
const int CMLoginNotify::kSIpFieldNumber;
const int CMLoginNotify::kNPortFieldNumber;
const int CMLoginNotify::kNotifyTypeFieldNumber;
const int CMLoginNotify::kSHostFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMLoginNotify::CMLoginNotify()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2einner_2eproto::scc_info_CMLoginNotify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.CMLoginNotify)
}
CMLoginNotify::CMLoginNotify(const CMLoginNotify& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  sip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sip().size() > 0) {
    sip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sip_);
  }
  shost_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.shost().size() > 0) {
    shost_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shost_);
  }
  ::memcpy(&nport_, &from.nport_,
    static_cast<size_t>(reinterpret_cast<char*>(&notifytype_) -
    reinterpret_cast<char*>(&nport_)) + sizeof(notifytype_));
  // @@protoc_insertion_point(copy_constructor:im.CMLoginNotify)
}

void CMLoginNotify::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shost_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nport_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&notifytype_) -
      reinterpret_cast<char*>(&nport_)) + sizeof(notifytype_));
}

CMLoginNotify::~CMLoginNotify() {
  // @@protoc_insertion_point(destructor:im.CMLoginNotify)
  SharedDtor();
}

void CMLoginNotify::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shost_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMLoginNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMLoginNotify& CMLoginNotify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2einner_2eproto::scc_info_CMLoginNotify.base);
  return *internal_default_instance();
}


void CMLoginNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:im.CMLoginNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shost_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nport_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&notifytype_) -
      reinterpret_cast<char*>(&nport_)) + sizeof(notifytype_));
  _internal_metadata_.Clear();
}

bool CMLoginNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.CMLoginNotify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.CMLoginNotify.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sIp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sip().data(), static_cast<int>(this->sip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.CMLoginNotify.sIp"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nPort = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.CMLoginNotifyType notifyType = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_notifytype(static_cast< ::im::CMLoginNotifyType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sHost = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_shost()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->shost().data(), static_cast<int>(this->shost().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.CMLoginNotify.sHost"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.CMLoginNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.CMLoginNotify)
  return false;
#undef DO_
}

void CMLoginNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.CMLoginNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.CMLoginNotify.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string sIp = 2;
  if (this->sip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sip().data(), static_cast<int>(this->sip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.CMLoginNotify.sIp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sip(), output);
  }

  // uint32 nPort = 3;
  if (this->nport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->nport(), output);
  }

  // .im.CMLoginNotifyType notifyType = 4;
  if (this->notifytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->notifytype(), output);
  }

  // string sHost = 5;
  if (this->shost().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shost().data(), static_cast<int>(this->shost().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.CMLoginNotify.sHost");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->shost(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.CMLoginNotify)
}

size_t CMLoginNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.CMLoginNotify)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sIp = 2;
  if (this->sip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sip());
  }

  // string sHost = 5;
  if (this->shost().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->shost());
  }

  // uint32 nPort = 3;
  if (this->nport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nport());
  }

  // .im.CMLoginNotifyType notifyType = 4;
  if (this->notifytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->notifytype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMLoginNotify::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CMLoginNotify*>(&from));
}

void CMLoginNotify::MergeFrom(const CMLoginNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.CMLoginNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.sip().size() > 0) {

    sip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sip_);
  }
  if (from.shost().size() > 0) {

    shost_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shost_);
  }
  if (from.nport() != 0) {
    set_nport(from.nport());
  }
  if (from.notifytype() != 0) {
    set_notifytype(from.notifytype());
  }
}

void CMLoginNotify::CopyFrom(const CMLoginNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.CMLoginNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMLoginNotify::IsInitialized() const {
  return true;
}

void CMLoginNotify::Swap(CMLoginNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMLoginNotify::InternalSwap(CMLoginNotify* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sip_.Swap(&other->sip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  shost_.Swap(&other->shost_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(nport_, other->nport_);
  swap(notifytype_, other->notifytype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string CMLoginNotify::GetTypeName() const {
  return "im.CMLoginNotify";
}


// ===================================================================

void CMLoginNotifyAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMLoginNotifyAck::kSUserIdFieldNumber;
const int CMLoginNotifyAck::kNErrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMLoginNotifyAck::CMLoginNotifyAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2einner_2eproto::scc_info_CMLoginNotifyAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.CMLoginNotifyAck)
}
CMLoginNotifyAck::CMLoginNotifyAck(const CMLoginNotifyAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  nerr_ = from.nerr_;
  // @@protoc_insertion_point(copy_constructor:im.CMLoginNotifyAck)
}

void CMLoginNotifyAck::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nerr_ = 0;
}

CMLoginNotifyAck::~CMLoginNotifyAck() {
  // @@protoc_insertion_point(destructor:im.CMLoginNotifyAck)
  SharedDtor();
}

void CMLoginNotifyAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMLoginNotifyAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMLoginNotifyAck& CMLoginNotifyAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2einner_2eproto::scc_info_CMLoginNotifyAck.base);
  return *internal_default_instance();
}


void CMLoginNotifyAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.CMLoginNotifyAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nerr_ = 0;
  _internal_metadata_.Clear();
}

bool CMLoginNotifyAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.CMLoginNotifyAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.CMLoginNotifyAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode nErr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_nerr(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.CMLoginNotifyAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.CMLoginNotifyAck)
  return false;
#undef DO_
}

void CMLoginNotifyAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.CMLoginNotifyAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.CMLoginNotifyAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // .im.ErrCode nErr = 2;
  if (this->nerr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->nerr(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.CMLoginNotifyAck)
}

size_t CMLoginNotifyAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.CMLoginNotifyAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // .im.ErrCode nErr = 2;
  if (this->nerr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->nerr());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMLoginNotifyAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CMLoginNotifyAck*>(&from));
}

void CMLoginNotifyAck::MergeFrom(const CMLoginNotifyAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.CMLoginNotifyAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.nerr() != 0) {
    set_nerr(from.nerr());
  }
}

void CMLoginNotifyAck::CopyFrom(const CMLoginNotifyAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.CMLoginNotifyAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMLoginNotifyAck::IsInitialized() const {
  return true;
}

void CMLoginNotifyAck::Swap(CMLoginNotifyAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMLoginNotifyAck::InternalSwap(CMLoginNotifyAck* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(nerr_, other->nerr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string CMLoginNotifyAck::GetTypeName() const {
  return "im.CMLoginNotifyAck";
}


// ===================================================================

void LoginCMNotify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginCMNotify::kSUserIdFieldNumber;
const int LoginCMNotify::kNotifyTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginCMNotify::LoginCMNotify()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2einner_2eproto::scc_info_LoginCMNotify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.LoginCMNotify)
}
LoginCMNotify::LoginCMNotify(const LoginCMNotify& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  notifytype_ = from.notifytype_;
  // @@protoc_insertion_point(copy_constructor:im.LoginCMNotify)
}

void LoginCMNotify::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  notifytype_ = 0;
}

LoginCMNotify::~LoginCMNotify() {
  // @@protoc_insertion_point(destructor:im.LoginCMNotify)
  SharedDtor();
}

void LoginCMNotify::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginCMNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LoginCMNotify& LoginCMNotify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2einner_2eproto::scc_info_LoginCMNotify.base);
  return *internal_default_instance();
}


void LoginCMNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:im.LoginCMNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  notifytype_ = 0;
  _internal_metadata_.Clear();
}

bool LoginCMNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.LoginCMNotify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.LoginCMNotify.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.LoginCMNotifyType notifyType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_notifytype(static_cast< ::im::LoginCMNotifyType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.LoginCMNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.LoginCMNotify)
  return false;
#undef DO_
}

void LoginCMNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.LoginCMNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.LoginCMNotify.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // .im.LoginCMNotifyType notifyType = 2;
  if (this->notifytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->notifytype(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.LoginCMNotify)
}

size_t LoginCMNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.LoginCMNotify)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // .im.LoginCMNotifyType notifyType = 2;
  if (this->notifytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->notifytype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoginCMNotify::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const LoginCMNotify*>(&from));
}

void LoginCMNotify::MergeFrom(const LoginCMNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.LoginCMNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.notifytype() != 0) {
    set_notifytype(from.notifytype());
  }
}

void LoginCMNotify::CopyFrom(const LoginCMNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.LoginCMNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginCMNotify::IsInitialized() const {
  return true;
}

void LoginCMNotify::Swap(LoginCMNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginCMNotify::InternalSwap(LoginCMNotify* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(notifytype_, other->notifytype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string LoginCMNotify::GetTypeName() const {
  return "im.LoginCMNotify";
}


// ===================================================================

void LoginCMNotifyAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginCMNotifyAck::kSUserIdFieldNumber;
const int LoginCMNotifyAck::kNErrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginCMNotifyAck::LoginCMNotifyAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2einner_2eproto::scc_info_LoginCMNotifyAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.LoginCMNotifyAck)
}
LoginCMNotifyAck::LoginCMNotifyAck(const LoginCMNotifyAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  nerr_ = from.nerr_;
  // @@protoc_insertion_point(copy_constructor:im.LoginCMNotifyAck)
}

void LoginCMNotifyAck::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nerr_ = 0;
}

LoginCMNotifyAck::~LoginCMNotifyAck() {
  // @@protoc_insertion_point(destructor:im.LoginCMNotifyAck)
  SharedDtor();
}

void LoginCMNotifyAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginCMNotifyAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LoginCMNotifyAck& LoginCMNotifyAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2einner_2eproto::scc_info_LoginCMNotifyAck.base);
  return *internal_default_instance();
}


void LoginCMNotifyAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.LoginCMNotifyAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nerr_ = 0;
  _internal_metadata_.Clear();
}

bool LoginCMNotifyAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.LoginCMNotifyAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.LoginCMNotifyAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode nErr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_nerr(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.LoginCMNotifyAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.LoginCMNotifyAck)
  return false;
#undef DO_
}

void LoginCMNotifyAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.LoginCMNotifyAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.LoginCMNotifyAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // .im.ErrCode nErr = 2;
  if (this->nerr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->nerr(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.LoginCMNotifyAck)
}

size_t LoginCMNotifyAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.LoginCMNotifyAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // .im.ErrCode nErr = 2;
  if (this->nerr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->nerr());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoginCMNotifyAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const LoginCMNotifyAck*>(&from));
}

void LoginCMNotifyAck::MergeFrom(const LoginCMNotifyAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.LoginCMNotifyAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.nerr() != 0) {
    set_nerr(from.nerr());
  }
}

void LoginCMNotifyAck::CopyFrom(const LoginCMNotifyAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.LoginCMNotifyAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginCMNotifyAck::IsInitialized() const {
  return true;
}

void LoginCMNotifyAck::Swap(LoginCMNotifyAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginCMNotifyAck::InternalSwap(LoginCMNotifyAck* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(nerr_, other->nerr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string LoginCMNotifyAck::GetTypeName() const {
  return "im.LoginCMNotifyAck";
}


// ===================================================================

void CMLoginTrans::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMLoginTrans::kSUserIdFieldNumber;
const int CMLoginTrans::kSLoginTokenFieldNumber;
const int CMLoginTrans::kSDeviceTokenFieldNumber;
const int CMLoginTrans::kNPushTypeFieldNumber;
const int CMLoginTrans::kSPushTokenFieldNumber;
const int CMLoginTrans::kSLoginIpFieldNumber;
const int CMLoginTrans::kNLoginPortFieldNumber;
const int CMLoginTrans::kSHostFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMLoginTrans::CMLoginTrans()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2einner_2eproto::scc_info_CMLoginTrans.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.CMLoginTrans)
}
CMLoginTrans::CMLoginTrans(const CMLoginTrans& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  slogintoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.slogintoken().size() > 0) {
    slogintoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.slogintoken_);
  }
  sdevicetoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sdevicetoken().size() > 0) {
    sdevicetoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdevicetoken_);
  }
  spushtoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.spushtoken().size() > 0) {
    spushtoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.spushtoken_);
  }
  sloginip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sloginip().size() > 0) {
    sloginip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sloginip_);
  }
  shost_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.shost().size() > 0) {
    shost_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shost_);
  }
  ::memcpy(&npushtype_, &from.npushtype_,
    static_cast<size_t>(reinterpret_cast<char*>(&nloginport_) -
    reinterpret_cast<char*>(&npushtype_)) + sizeof(nloginport_));
  // @@protoc_insertion_point(copy_constructor:im.CMLoginTrans)
}

void CMLoginTrans::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  slogintoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdevicetoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  spushtoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sloginip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shost_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&npushtype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nloginport_) -
      reinterpret_cast<char*>(&npushtype_)) + sizeof(nloginport_));
}

CMLoginTrans::~CMLoginTrans() {
  // @@protoc_insertion_point(destructor:im.CMLoginTrans)
  SharedDtor();
}

void CMLoginTrans::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  slogintoken_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdevicetoken_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  spushtoken_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sloginip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shost_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMLoginTrans::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMLoginTrans& CMLoginTrans::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2einner_2eproto::scc_info_CMLoginTrans.base);
  return *internal_default_instance();
}


void CMLoginTrans::Clear() {
// @@protoc_insertion_point(message_clear_start:im.CMLoginTrans)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  slogintoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdevicetoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  spushtoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sloginip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shost_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&npushtype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nloginport_) -
      reinterpret_cast<char*>(&npushtype_)) + sizeof(nloginport_));
  _internal_metadata_.Clear();
}

bool CMLoginTrans::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.CMLoginTrans)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.CMLoginTrans.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sLoginToken = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_slogintoken()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->slogintoken().data(), static_cast<int>(this->slogintoken().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.CMLoginTrans.sLoginToken"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sDeviceToken = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sdevicetoken()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sdevicetoken().data(), static_cast<int>(this->sdevicetoken().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.CMLoginTrans.sDeviceToken"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nPushType = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &npushtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sPushToken = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_spushtoken()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->spushtoken().data(), static_cast<int>(this->spushtoken().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.CMLoginTrans.sPushToken"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sLoginIp = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sloginip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sloginip().data(), static_cast<int>(this->sloginip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.CMLoginTrans.sLoginIp"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nLoginPort = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nloginport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sHost = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_shost()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->shost().data(), static_cast<int>(this->shost().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.CMLoginTrans.sHost"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.CMLoginTrans)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.CMLoginTrans)
  return false;
#undef DO_
}

void CMLoginTrans::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.CMLoginTrans)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.CMLoginTrans.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string sLoginToken = 2;
  if (this->slogintoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->slogintoken().data(), static_cast<int>(this->slogintoken().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.CMLoginTrans.sLoginToken");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->slogintoken(), output);
  }

  // string sDeviceToken = 3;
  if (this->sdevicetoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sdevicetoken().data(), static_cast<int>(this->sdevicetoken().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.CMLoginTrans.sDeviceToken");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sdevicetoken(), output);
  }

  // uint32 nPushType = 4;
  if (this->npushtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->npushtype(), output);
  }

  // string sPushToken = 5;
  if (this->spushtoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->spushtoken().data(), static_cast<int>(this->spushtoken().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.CMLoginTrans.sPushToken");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->spushtoken(), output);
  }

  // string sLoginIp = 6;
  if (this->sloginip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sloginip().data(), static_cast<int>(this->sloginip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.CMLoginTrans.sLoginIp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->sloginip(), output);
  }

  // uint32 nLoginPort = 7;
  if (this->nloginport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->nloginport(), output);
  }

  // string sHost = 8;
  if (this->shost().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shost().data(), static_cast<int>(this->shost().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.CMLoginTrans.sHost");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->shost(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.CMLoginTrans)
}

size_t CMLoginTrans::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.CMLoginTrans)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sLoginToken = 2;
  if (this->slogintoken().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->slogintoken());
  }

  // string sDeviceToken = 3;
  if (this->sdevicetoken().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sdevicetoken());
  }

  // string sPushToken = 5;
  if (this->spushtoken().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->spushtoken());
  }

  // string sLoginIp = 6;
  if (this->sloginip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sloginip());
  }

  // string sHost = 8;
  if (this->shost().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->shost());
  }

  // uint32 nPushType = 4;
  if (this->npushtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->npushtype());
  }

  // uint32 nLoginPort = 7;
  if (this->nloginport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nloginport());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMLoginTrans::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CMLoginTrans*>(&from));
}

void CMLoginTrans::MergeFrom(const CMLoginTrans& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.CMLoginTrans)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.slogintoken().size() > 0) {

    slogintoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.slogintoken_);
  }
  if (from.sdevicetoken().size() > 0) {

    sdevicetoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdevicetoken_);
  }
  if (from.spushtoken().size() > 0) {

    spushtoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.spushtoken_);
  }
  if (from.sloginip().size() > 0) {

    sloginip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sloginip_);
  }
  if (from.shost().size() > 0) {

    shost_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shost_);
  }
  if (from.npushtype() != 0) {
    set_npushtype(from.npushtype());
  }
  if (from.nloginport() != 0) {
    set_nloginport(from.nloginport());
  }
}

void CMLoginTrans::CopyFrom(const CMLoginTrans& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.CMLoginTrans)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMLoginTrans::IsInitialized() const {
  return true;
}

void CMLoginTrans::Swap(CMLoginTrans* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMLoginTrans::InternalSwap(CMLoginTrans* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  slogintoken_.Swap(&other->slogintoken_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sdevicetoken_.Swap(&other->sdevicetoken_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  spushtoken_.Swap(&other->spushtoken_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sloginip_.Swap(&other->sloginip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  shost_.Swap(&other->shost_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(npushtype_, other->npushtype_);
  swap(nloginport_, other->nloginport_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string CMLoginTrans::GetTypeName() const {
  return "im.CMLoginTrans";
}


// ===================================================================

void CMPHPLoginNotify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMPHPLoginNotify::kSUserIdFieldNumber;
const int CMPHPLoginNotify::kSDeviceTokenFieldNumber;
const int CMPHPLoginNotify::kMsgTimeFieldNumber;
const int CMPHPLoginNotify::kLoginTypeFieldNumber;
const int CMPHPLoginNotify::kExtendFieldNumber;
const int CMPHPLoginNotify::kLoginSubTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMPHPLoginNotify::CMPHPLoginNotify()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2einner_2eproto::scc_info_CMPHPLoginNotify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.CMPHPLoginNotify)
}
CMPHPLoginNotify::CMPHPLoginNotify(const CMPHPLoginNotify& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  sdevicetoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sdevicetoken().size() > 0) {
    sdevicetoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdevicetoken_);
  }
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extend().size() > 0) {
    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  ::memcpy(&msgtime_, &from.msgtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&loginsubtype_) -
    reinterpret_cast<char*>(&msgtime_)) + sizeof(loginsubtype_));
  // @@protoc_insertion_point(copy_constructor:im.CMPHPLoginNotify)
}

void CMPHPLoginNotify::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdevicetoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&loginsubtype_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(loginsubtype_));
}

CMPHPLoginNotify::~CMPHPLoginNotify() {
  // @@protoc_insertion_point(destructor:im.CMPHPLoginNotify)
  SharedDtor();
}

void CMPHPLoginNotify::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdevicetoken_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMPHPLoginNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMPHPLoginNotify& CMPHPLoginNotify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2einner_2eproto::scc_info_CMPHPLoginNotify.base);
  return *internal_default_instance();
}


void CMPHPLoginNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:im.CMPHPLoginNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdevicetoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&loginsubtype_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(loginsubtype_));
  _internal_metadata_.Clear();
}

bool CMPHPLoginNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.CMPHPLoginNotify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.CMPHPLoginNotify.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sDeviceToken = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sdevicetoken()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sdevicetoken().data(), static_cast<int>(this->sdevicetoken().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.CMPHPLoginNotify.sDeviceToken"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgTime = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.PHPLoginNotifyType loginType = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_logintype(static_cast< ::im::PHPLoginNotifyType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string extend = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extend()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extend().data(), static_cast<int>(this->extend().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.CMPHPLoginNotify.extend"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.PHPLoginNotifySubType loginSubType = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_loginsubtype(static_cast< ::im::PHPLoginNotifySubType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.CMPHPLoginNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.CMPHPLoginNotify)
  return false;
#undef DO_
}

void CMPHPLoginNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.CMPHPLoginNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.CMPHPLoginNotify.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string sDeviceToken = 2;
  if (this->sdevicetoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sdevicetoken().data(), static_cast<int>(this->sdevicetoken().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.CMPHPLoginNotify.sDeviceToken");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sdevicetoken(), output);
  }

  // uint64 msgTime = 3;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->msgtime(), output);
  }

  // .im.PHPLoginNotifyType loginType = 4;
  if (this->logintype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->logintype(), output);
  }

  // string extend = 5;
  if (this->extend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extend().data(), static_cast<int>(this->extend().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.CMPHPLoginNotify.extend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->extend(), output);
  }

  // .im.PHPLoginNotifySubType loginSubType = 6;
  if (this->loginsubtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->loginsubtype(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.CMPHPLoginNotify)
}

size_t CMPHPLoginNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.CMPHPLoginNotify)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sDeviceToken = 2;
  if (this->sdevicetoken().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sdevicetoken());
  }

  // string extend = 5;
  if (this->extend().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extend());
  }

  // uint64 msgTime = 3;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // .im.PHPLoginNotifyType loginType = 4;
  if (this->logintype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->logintype());
  }

  // .im.PHPLoginNotifySubType loginSubType = 6;
  if (this->loginsubtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->loginsubtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMPHPLoginNotify::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CMPHPLoginNotify*>(&from));
}

void CMPHPLoginNotify::MergeFrom(const CMPHPLoginNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.CMPHPLoginNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.sdevicetoken().size() > 0) {

    sdevicetoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdevicetoken_);
  }
  if (from.extend().size() > 0) {

    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.logintype() != 0) {
    set_logintype(from.logintype());
  }
  if (from.loginsubtype() != 0) {
    set_loginsubtype(from.loginsubtype());
  }
}

void CMPHPLoginNotify::CopyFrom(const CMPHPLoginNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.CMPHPLoginNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMPHPLoginNotify::IsInitialized() const {
  return true;
}

void CMPHPLoginNotify::Swap(CMPHPLoginNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMPHPLoginNotify::InternalSwap(CMPHPLoginNotify* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sdevicetoken_.Swap(&other->sdevicetoken_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  extend_.Swap(&other->extend_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgtime_, other->msgtime_);
  swap(logintype_, other->logintype_);
  swap(loginsubtype_, other->loginsubtype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string CMPHPLoginNotify::GetTypeName() const {
  return "im.CMPHPLoginNotify";
}


// ===================================================================

void CMPHPLoginNotifyACK::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMPHPLoginNotifyACK::kSUserIdFieldNumber;
const int CMPHPLoginNotifyACK::kMsgTimeFieldNumber;
const int CMPHPLoginNotifyACK::kNErrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMPHPLoginNotifyACK::CMPHPLoginNotifyACK()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2einner_2eproto::scc_info_CMPHPLoginNotifyACK.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.CMPHPLoginNotifyACK)
}
CMPHPLoginNotifyACK::CMPHPLoginNotifyACK(const CMPHPLoginNotifyACK& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  ::memcpy(&msgtime_, &from.msgtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&nerr_) -
    reinterpret_cast<char*>(&msgtime_)) + sizeof(nerr_));
  // @@protoc_insertion_point(copy_constructor:im.CMPHPLoginNotifyACK)
}

void CMPHPLoginNotifyACK::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nerr_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(nerr_));
}

CMPHPLoginNotifyACK::~CMPHPLoginNotifyACK() {
  // @@protoc_insertion_point(destructor:im.CMPHPLoginNotifyACK)
  SharedDtor();
}

void CMPHPLoginNotifyACK::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMPHPLoginNotifyACK::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMPHPLoginNotifyACK& CMPHPLoginNotifyACK::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2einner_2eproto::scc_info_CMPHPLoginNotifyACK.base);
  return *internal_default_instance();
}


void CMPHPLoginNotifyACK::Clear() {
// @@protoc_insertion_point(message_clear_start:im.CMPHPLoginNotifyACK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nerr_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(nerr_));
  _internal_metadata_.Clear();
}

bool CMPHPLoginNotifyACK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.CMPHPLoginNotifyACK)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.CMPHPLoginNotifyACK.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgTime = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode nErr = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_nerr(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.CMPHPLoginNotifyACK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.CMPHPLoginNotifyACK)
  return false;
#undef DO_
}

void CMPHPLoginNotifyACK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.CMPHPLoginNotifyACK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.CMPHPLoginNotifyACK.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // uint64 msgTime = 2;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->msgtime(), output);
  }

  // .im.ErrCode nErr = 3;
  if (this->nerr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->nerr(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.CMPHPLoginNotifyACK)
}

size_t CMPHPLoginNotifyACK::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.CMPHPLoginNotifyACK)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // uint64 msgTime = 2;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // .im.ErrCode nErr = 3;
  if (this->nerr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->nerr());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMPHPLoginNotifyACK::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CMPHPLoginNotifyACK*>(&from));
}

void CMPHPLoginNotifyACK::MergeFrom(const CMPHPLoginNotifyACK& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.CMPHPLoginNotifyACK)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.nerr() != 0) {
    set_nerr(from.nerr());
  }
}

void CMPHPLoginNotifyACK::CopyFrom(const CMPHPLoginNotifyACK& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.CMPHPLoginNotifyACK)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMPHPLoginNotifyACK::IsInitialized() const {
  return true;
}

void CMPHPLoginNotifyACK::Swap(CMPHPLoginNotifyACK* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMPHPLoginNotifyACK::InternalSwap(CMPHPLoginNotifyACK* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgtime_, other->msgtime_);
  swap(nerr_, other->nerr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string CMPHPLoginNotifyACK::GetTypeName() const {
  return "im.CMPHPLoginNotifyACK";
}


// ===================================================================

void SVRMSGGroupRelationNotify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SVRMSGGroupRelationNotify::kSGrpIdFieldNumber;
const int SVRMSGGroupRelationNotify::kSMsgIdFieldNumber;
const int SVRMSGGroupRelationNotify::kSToIdsFieldNumber;
const int SVRMSGGroupRelationNotify::kMsgTimeFieldNumber;
const int SVRMSGGroupRelationNotify::kSOprUserIdFieldNumber;
const int SVRMSGGroupRelationNotify::kSMnpledUserIdFieldNumber;
const int SVRMSGGroupRelationNotify::kSContentFieldNumber;
const int SVRMSGGroupRelationNotify::kNotifyTypeFieldNumber;
const int SVRMSGGroupRelationNotify::kSOperIdFieldNumber;
const int SVRMSGGroupRelationNotify::kExtendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SVRMSGGroupRelationNotify::SVRMSGGroupRelationNotify()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2einner_2eproto::scc_info_SVRMSGGroupRelationNotify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.SVRMSGGroupRelationNotify)
}
SVRMSGGroupRelationNotify::SVRMSGGroupRelationNotify(const SVRMSGGroupRelationNotify& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      stoids_(from.stoids_),
      smnpleduserid_(from.smnpleduserid_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sgrpid().size() > 0) {
    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  sopruserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sopruserid().size() > 0) {
    sopruserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sopruserid_);
  }
  scontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.scontent().size() > 0) {
    scontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scontent_);
  }
  soperid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.soperid().size() > 0) {
    soperid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.soperid_);
  }
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extend().size() > 0) {
    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  ::memcpy(&msgtime_, &from.msgtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&notifytype_) -
    reinterpret_cast<char*>(&msgtime_)) + sizeof(notifytype_));
  // @@protoc_insertion_point(copy_constructor:im.SVRMSGGroupRelationNotify)
}

void SVRMSGGroupRelationNotify::SharedCtor() {
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sopruserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  soperid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&notifytype_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(notifytype_));
}

SVRMSGGroupRelationNotify::~SVRMSGGroupRelationNotify() {
  // @@protoc_insertion_point(destructor:im.SVRMSGGroupRelationNotify)
  SharedDtor();
}

void SVRMSGGroupRelationNotify::SharedDtor() {
  sgrpid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sopruserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  soperid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SVRMSGGroupRelationNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SVRMSGGroupRelationNotify& SVRMSGGroupRelationNotify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2einner_2eproto::scc_info_SVRMSGGroupRelationNotify.base);
  return *internal_default_instance();
}


void SVRMSGGroupRelationNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:im.SVRMSGGroupRelationNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stoids_.Clear();
  smnpleduserid_.Clear();
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sopruserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  soperid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&notifytype_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(notifytype_));
  _internal_metadata_.Clear();
}

bool SVRMSGGroupRelationNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.SVRMSGGroupRelationNotify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sGrpId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgrpid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgrpid().data(), static_cast<int>(this->sgrpid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SVRMSGGroupRelationNotify.sGrpId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SVRMSGGroupRelationNotify.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string sToIds = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_stoids()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoids(this->stoids_size() - 1).data(),
            static_cast<int>(this->stoids(this->stoids_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SVRMSGGroupRelationNotify.sToIds"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgTime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sOprUserId = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sopruserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sopruserid().data(), static_cast<int>(this->sopruserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SVRMSGGroupRelationNotify.sOprUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string sMnpledUserId = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_smnpleduserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smnpleduserid(this->smnpleduserid_size() - 1).data(),
            static_cast<int>(this->smnpleduserid(this->smnpleduserid_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SVRMSGGroupRelationNotify.sMnpledUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sContent = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scontent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scontent().data(), static_cast<int>(this->scontent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SVRMSGGroupRelationNotify.sContent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.SVRGroupRelationNotifyType notifyType = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_notifytype(static_cast< ::im::SVRGroupRelationNotifyType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sOperId = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_soperid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->soperid().data(), static_cast<int>(this->soperid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SVRMSGGroupRelationNotify.sOperId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string extend = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extend()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extend().data(), static_cast<int>(this->extend().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SVRMSGGroupRelationNotify.extend"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.SVRMSGGroupRelationNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.SVRMSGGroupRelationNotify)
  return false;
#undef DO_
}

void SVRMSGGroupRelationNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.SVRMSGGroupRelationNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sGrpId = 1;
  if (this->sgrpid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgrpid().data(), static_cast<int>(this->sgrpid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SVRMSGGroupRelationNotify.sGrpId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sgrpid(), output);
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SVRMSGGroupRelationNotify.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  // repeated string sToIds = 3;
  for (int i = 0, n = this->stoids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoids(i).data(), static_cast<int>(this->stoids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SVRMSGGroupRelationNotify.sToIds");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->stoids(i), output);
  }

  // uint64 msgTime = 4;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->msgtime(), output);
  }

  // string sOprUserId = 5;
  if (this->sopruserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sopruserid().data(), static_cast<int>(this->sopruserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SVRMSGGroupRelationNotify.sOprUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->sopruserid(), output);
  }

  // repeated string sMnpledUserId = 6;
  for (int i = 0, n = this->smnpleduserid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smnpleduserid(i).data(), static_cast<int>(this->smnpleduserid(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SVRMSGGroupRelationNotify.sMnpledUserId");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->smnpleduserid(i), output);
  }

  // string sContent = 7;
  if (this->scontent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scontent().data(), static_cast<int>(this->scontent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SVRMSGGroupRelationNotify.sContent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->scontent(), output);
  }

  // .im.SVRGroupRelationNotifyType notifyType = 8;
  if (this->notifytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->notifytype(), output);
  }

  // string sOperId = 9;
  if (this->soperid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->soperid().data(), static_cast<int>(this->soperid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SVRMSGGroupRelationNotify.sOperId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->soperid(), output);
  }

  // string extend = 10;
  if (this->extend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extend().data(), static_cast<int>(this->extend().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SVRMSGGroupRelationNotify.extend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->extend(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.SVRMSGGroupRelationNotify)
}

size_t SVRMSGGroupRelationNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.SVRMSGGroupRelationNotify)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated string sToIds = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->stoids_size());
  for (int i = 0, n = this->stoids_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->stoids(i));
  }

  // repeated string sMnpledUserId = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->smnpleduserid_size());
  for (int i = 0, n = this->smnpleduserid_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->smnpleduserid(i));
  }

  // string sGrpId = 1;
  if (this->sgrpid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgrpid());
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // string sOprUserId = 5;
  if (this->sopruserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sopruserid());
  }

  // string sContent = 7;
  if (this->scontent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scontent());
  }

  // string sOperId = 9;
  if (this->soperid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->soperid());
  }

  // string extend = 10;
  if (this->extend().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extend());
  }

  // uint64 msgTime = 4;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // .im.SVRGroupRelationNotifyType notifyType = 8;
  if (this->notifytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->notifytype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SVRMSGGroupRelationNotify::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SVRMSGGroupRelationNotify*>(&from));
}

void SVRMSGGroupRelationNotify::MergeFrom(const SVRMSGGroupRelationNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.SVRMSGGroupRelationNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stoids_.MergeFrom(from.stoids_);
  smnpleduserid_.MergeFrom(from.smnpleduserid_);
  if (from.sgrpid().size() > 0) {

    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.sopruserid().size() > 0) {

    sopruserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sopruserid_);
  }
  if (from.scontent().size() > 0) {

    scontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scontent_);
  }
  if (from.soperid().size() > 0) {

    soperid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.soperid_);
  }
  if (from.extend().size() > 0) {

    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.notifytype() != 0) {
    set_notifytype(from.notifytype());
  }
}

void SVRMSGGroupRelationNotify::CopyFrom(const SVRMSGGroupRelationNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.SVRMSGGroupRelationNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SVRMSGGroupRelationNotify::IsInitialized() const {
  return true;
}

void SVRMSGGroupRelationNotify::Swap(SVRMSGGroupRelationNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SVRMSGGroupRelationNotify::InternalSwap(SVRMSGGroupRelationNotify* other) {
  using std::swap;
  stoids_.InternalSwap(CastToBase(&other->stoids_));
  smnpleduserid_.InternalSwap(CastToBase(&other->smnpleduserid_));
  sgrpid_.Swap(&other->sgrpid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sopruserid_.Swap(&other->sopruserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  scontent_.Swap(&other->scontent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  soperid_.Swap(&other->soperid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  extend_.Swap(&other->extend_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgtime_, other->msgtime_);
  swap(notifytype_, other->notifytype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string SVRMSGGroupRelationNotify::GetTypeName() const {
  return "im.SVRMSGGroupRelationNotify";
}


// ===================================================================

void SVRMSGFriendRelationNotify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SVRMSGFriendRelationNotify::kSFromIdFieldNumber;
const int SVRMSGFriendRelationNotify::kSToIdFieldNumber;
const int SVRMSGFriendRelationNotify::kSMsgIdFieldNumber;
const int SVRMSGFriendRelationNotify::kSMemoNameFieldNumber;
const int SVRMSGFriendRelationNotify::kNotifyTypeFieldNumber;
const int SVRMSGFriendRelationNotify::kSSelfIntroduceFieldNumber;
const int SVRMSGFriendRelationNotify::kMsgTimeFieldNumber;
const int SVRMSGFriendRelationNotify::kSOperIdFieldNumber;
const int SVRMSGFriendRelationNotify::kExtendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SVRMSGFriendRelationNotify::SVRMSGFriendRelationNotify()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2einner_2eproto::scc_info_SVRMSGFriendRelationNotify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.SVRMSGFriendRelationNotify)
}
SVRMSGFriendRelationNotify::SVRMSGFriendRelationNotify(const SVRMSGFriendRelationNotify& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sfromid().size() > 0) {
    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stoid().size() > 0) {
    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  smemoname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smemoname().size() > 0) {
    smemoname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smemoname_);
  }
  sselfintroduce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sselfintroduce().size() > 0) {
    sselfintroduce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sselfintroduce_);
  }
  soperid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.soperid().size() > 0) {
    soperid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.soperid_);
  }
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extend().size() > 0) {
    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  ::memcpy(&msgtime_, &from.msgtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&notifytype_) -
    reinterpret_cast<char*>(&msgtime_)) + sizeof(notifytype_));
  // @@protoc_insertion_point(copy_constructor:im.SVRMSGFriendRelationNotify)
}

void SVRMSGFriendRelationNotify::SharedCtor() {
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smemoname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sselfintroduce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  soperid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&notifytype_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(notifytype_));
}

SVRMSGFriendRelationNotify::~SVRMSGFriendRelationNotify() {
  // @@protoc_insertion_point(destructor:im.SVRMSGFriendRelationNotify)
  SharedDtor();
}

void SVRMSGFriendRelationNotify::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smemoname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sselfintroduce_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  soperid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SVRMSGFriendRelationNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SVRMSGFriendRelationNotify& SVRMSGFriendRelationNotify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2einner_2eproto::scc_info_SVRMSGFriendRelationNotify.base);
  return *internal_default_instance();
}


void SVRMSGFriendRelationNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:im.SVRMSGFriendRelationNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smemoname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sselfintroduce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  soperid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&notifytype_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(notifytype_));
  _internal_metadata_.Clear();
}

bool SVRMSGFriendRelationNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.SVRMSGFriendRelationNotify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sFromId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), static_cast<int>(this->sfromid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SVRMSGFriendRelationNotify.sFromId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sToId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), static_cast<int>(this->stoid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SVRMSGFriendRelationNotify.sToId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SVRMSGFriendRelationNotify.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMemoName = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smemoname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smemoname().data(), static_cast<int>(this->smemoname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SVRMSGFriendRelationNotify.sMemoName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.SVRFriendRelationNotifyType notifyType = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_notifytype(static_cast< ::im::SVRFriendRelationNotifyType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sSelfIntroduce = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sselfintroduce()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sselfintroduce().data(), static_cast<int>(this->sselfintroduce().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SVRMSGFriendRelationNotify.sSelfIntroduce"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgTime = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sOperId = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_soperid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->soperid().data(), static_cast<int>(this->soperid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SVRMSGFriendRelationNotify.sOperId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string extend = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extend()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extend().data(), static_cast<int>(this->extend().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SVRMSGFriendRelationNotify.extend"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.SVRMSGFriendRelationNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.SVRMSGFriendRelationNotify)
  return false;
#undef DO_
}

void SVRMSGFriendRelationNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.SVRMSGFriendRelationNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), static_cast<int>(this->sfromid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SVRMSGFriendRelationNotify.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // string sToId = 2;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), static_cast<int>(this->stoid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SVRMSGFriendRelationNotify.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stoid(), output);
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SVRMSGFriendRelationNotify.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // string sMemoName = 4;
  if (this->smemoname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smemoname().data(), static_cast<int>(this->smemoname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SVRMSGFriendRelationNotify.sMemoName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->smemoname(), output);
  }

  // .im.SVRFriendRelationNotifyType notifyType = 5;
  if (this->notifytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->notifytype(), output);
  }

  // string sSelfIntroduce = 6;
  if (this->sselfintroduce().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sselfintroduce().data(), static_cast<int>(this->sselfintroduce().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SVRMSGFriendRelationNotify.sSelfIntroduce");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->sselfintroduce(), output);
  }

  // uint64 msgTime = 7;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->msgtime(), output);
  }

  // string sOperId = 8;
  if (this->soperid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->soperid().data(), static_cast<int>(this->soperid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SVRMSGFriendRelationNotify.sOperId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->soperid(), output);
  }

  // string extend = 9;
  if (this->extend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extend().data(), static_cast<int>(this->extend().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SVRMSGFriendRelationNotify.extend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->extend(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.SVRMSGFriendRelationNotify)
}

size_t SVRMSGFriendRelationNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.SVRMSGFriendRelationNotify)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // string sToId = 2;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // string sMemoName = 4;
  if (this->smemoname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smemoname());
  }

  // string sSelfIntroduce = 6;
  if (this->sselfintroduce().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sselfintroduce());
  }

  // string sOperId = 8;
  if (this->soperid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->soperid());
  }

  // string extend = 9;
  if (this->extend().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extend());
  }

  // uint64 msgTime = 7;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // .im.SVRFriendRelationNotifyType notifyType = 5;
  if (this->notifytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->notifytype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SVRMSGFriendRelationNotify::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SVRMSGFriendRelationNotify*>(&from));
}

void SVRMSGFriendRelationNotify::MergeFrom(const SVRMSGFriendRelationNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.SVRMSGFriendRelationNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.smemoname().size() > 0) {

    smemoname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smemoname_);
  }
  if (from.sselfintroduce().size() > 0) {

    sselfintroduce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sselfintroduce_);
  }
  if (from.soperid().size() > 0) {

    soperid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.soperid_);
  }
  if (from.extend().size() > 0) {

    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.notifytype() != 0) {
    set_notifytype(from.notifytype());
  }
}

void SVRMSGFriendRelationNotify::CopyFrom(const SVRMSGFriendRelationNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.SVRMSGFriendRelationNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SVRMSGFriendRelationNotify::IsInitialized() const {
  return true;
}

void SVRMSGFriendRelationNotify::Swap(SVRMSGFriendRelationNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SVRMSGFriendRelationNotify::InternalSwap(SVRMSGFriendRelationNotify* other) {
  using std::swap;
  sfromid_.Swap(&other->sfromid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  stoid_.Swap(&other->stoid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smemoname_.Swap(&other->smemoname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sselfintroduce_.Swap(&other->sselfintroduce_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  soperid_.Swap(&other->soperid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  extend_.Swap(&other->extend_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgtime_, other->msgtime_);
  swap(notifytype_, other->notifytype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string SVRMSGFriendRelationNotify::GetTypeName() const {
  return "im.SVRMSGFriendRelationNotify";
}


// ===================================================================

void SVRMSGCommonMsgNotify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SVRMSGCommonMsgNotify::kSFromIdFieldNumber;
const int SVRMSGCommonMsgNotify::kSToIdsFieldNumber;
const int SVRMSGCommonMsgNotify::kSMsgIdFieldNumber;
const int SVRMSGCommonMsgNotify::kNotifyTypeFieldNumber;
const int SVRMSGCommonMsgNotify::kSContentFieldNumber;
const int SVRMSGCommonMsgNotify::kMsgTimeFieldNumber;
const int SVRMSGCommonMsgNotify::kExtendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SVRMSGCommonMsgNotify::SVRMSGCommonMsgNotify()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2einner_2eproto::scc_info_SVRMSGCommonMsgNotify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.SVRMSGCommonMsgNotify)
}
SVRMSGCommonMsgNotify::SVRMSGCommonMsgNotify(const SVRMSGCommonMsgNotify& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      stoids_(from.stoids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sfromid().size() > 0) {
    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  scontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.scontent().size() > 0) {
    scontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scontent_);
  }
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extend().size() > 0) {
    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  ::memcpy(&msgtime_, &from.msgtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&notifytype_) -
    reinterpret_cast<char*>(&msgtime_)) + sizeof(notifytype_));
  // @@protoc_insertion_point(copy_constructor:im.SVRMSGCommonMsgNotify)
}

void SVRMSGCommonMsgNotify::SharedCtor() {
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&notifytype_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(notifytype_));
}

SVRMSGCommonMsgNotify::~SVRMSGCommonMsgNotify() {
  // @@protoc_insertion_point(destructor:im.SVRMSGCommonMsgNotify)
  SharedDtor();
}

void SVRMSGCommonMsgNotify::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SVRMSGCommonMsgNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SVRMSGCommonMsgNotify& SVRMSGCommonMsgNotify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2einner_2eproto::scc_info_SVRMSGCommonMsgNotify.base);
  return *internal_default_instance();
}


void SVRMSGCommonMsgNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:im.SVRMSGCommonMsgNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stoids_.Clear();
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&notifytype_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(notifytype_));
  _internal_metadata_.Clear();
}

bool SVRMSGCommonMsgNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.SVRMSGCommonMsgNotify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sFromId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), static_cast<int>(this->sfromid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SVRMSGCommonMsgNotify.sFromId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string sToIds = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_stoids()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoids(this->stoids_size() - 1).data(),
            static_cast<int>(this->stoids(this->stoids_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SVRMSGCommonMsgNotify.sToIds"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SVRMSGCommonMsgNotify.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.SVRCommonNotifyType notifyType = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_notifytype(static_cast< ::im::SVRCommonNotifyType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sContent = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scontent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scontent().data(), static_cast<int>(this->scontent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SVRMSGCommonMsgNotify.sContent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgTime = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string extend = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extend()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extend().data(), static_cast<int>(this->extend().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SVRMSGCommonMsgNotify.extend"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.SVRMSGCommonMsgNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.SVRMSGCommonMsgNotify)
  return false;
#undef DO_
}

void SVRMSGCommonMsgNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.SVRMSGCommonMsgNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), static_cast<int>(this->sfromid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SVRMSGCommonMsgNotify.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // repeated string sToIds = 2;
  for (int i = 0, n = this->stoids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoids(i).data(), static_cast<int>(this->stoids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SVRMSGCommonMsgNotify.sToIds");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->stoids(i), output);
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SVRMSGCommonMsgNotify.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // .im.SVRCommonNotifyType notifyType = 4;
  if (this->notifytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->notifytype(), output);
  }

  // string sContent = 5;
  if (this->scontent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scontent().data(), static_cast<int>(this->scontent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SVRMSGCommonMsgNotify.sContent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->scontent(), output);
  }

  // uint64 msgTime = 6;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->msgtime(), output);
  }

  // string extend = 7;
  if (this->extend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extend().data(), static_cast<int>(this->extend().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SVRMSGCommonMsgNotify.extend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->extend(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.SVRMSGCommonMsgNotify)
}

size_t SVRMSGCommonMsgNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.SVRMSGCommonMsgNotify)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated string sToIds = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->stoids_size());
  for (int i = 0, n = this->stoids_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->stoids(i));
  }

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // string sContent = 5;
  if (this->scontent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scontent());
  }

  // string extend = 7;
  if (this->extend().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extend());
  }

  // uint64 msgTime = 6;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // .im.SVRCommonNotifyType notifyType = 4;
  if (this->notifytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->notifytype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SVRMSGCommonMsgNotify::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SVRMSGCommonMsgNotify*>(&from));
}

void SVRMSGCommonMsgNotify::MergeFrom(const SVRMSGCommonMsgNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.SVRMSGCommonMsgNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stoids_.MergeFrom(from.stoids_);
  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.scontent().size() > 0) {

    scontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scontent_);
  }
  if (from.extend().size() > 0) {

    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.notifytype() != 0) {
    set_notifytype(from.notifytype());
  }
}

void SVRMSGCommonMsgNotify::CopyFrom(const SVRMSGCommonMsgNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.SVRMSGCommonMsgNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SVRMSGCommonMsgNotify::IsInitialized() const {
  return true;
}

void SVRMSGCommonMsgNotify::Swap(SVRMSGCommonMsgNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SVRMSGCommonMsgNotify::InternalSwap(SVRMSGCommonMsgNotify* other) {
  using std::swap;
  stoids_.InternalSwap(CastToBase(&other->stoids_));
  sfromid_.Swap(&other->sfromid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  scontent_.Swap(&other->scontent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  extend_.Swap(&other->extend_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgtime_, other->msgtime_);
  swap(notifytype_, other->notifytype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string SVRMSGCommonMsgNotify::GetTypeName() const {
  return "im.SVRMSGCommonMsgNotify";
}


// ===================================================================

void SVRRadioMsgNotify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SVRRadioMsgNotify::kSRadioIdFieldNumber;
const int SVRRadioMsgNotify::kSMsgIdFieldNumber;
const int SVRRadioMsgNotify::kMsgTimeFieldNumber;
const int SVRRadioMsgNotify::kSOprUserIdFieldNumber;
const int SVRRadioMsgNotify::kSMnpledUserIdFieldNumber;
const int SVRRadioMsgNotify::kSContentFieldNumber;
const int SVRRadioMsgNotify::kNotifyTypeFieldNumber;
const int SVRRadioMsgNotify::kExtendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SVRRadioMsgNotify::SVRRadioMsgNotify()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2einner_2eproto::scc_info_SVRRadioMsgNotify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.SVRRadioMsgNotify)
}
SVRRadioMsgNotify::SVRRadioMsgNotify(const SVRRadioMsgNotify& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      smnpleduserid_(from.smnpleduserid_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sradioid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sradioid().size() > 0) {
    sradioid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sradioid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  sopruserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sopruserid().size() > 0) {
    sopruserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sopruserid_);
  }
  scontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.scontent().size() > 0) {
    scontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scontent_);
  }
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extend().size() > 0) {
    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  ::memcpy(&msgtime_, &from.msgtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&notifytype_) -
    reinterpret_cast<char*>(&msgtime_)) + sizeof(notifytype_));
  // @@protoc_insertion_point(copy_constructor:im.SVRRadioMsgNotify)
}

void SVRRadioMsgNotify::SharedCtor() {
  sradioid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sopruserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&notifytype_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(notifytype_));
}

SVRRadioMsgNotify::~SVRRadioMsgNotify() {
  // @@protoc_insertion_point(destructor:im.SVRRadioMsgNotify)
  SharedDtor();
}

void SVRRadioMsgNotify::SharedDtor() {
  sradioid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sopruserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SVRRadioMsgNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SVRRadioMsgNotify& SVRRadioMsgNotify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2einner_2eproto::scc_info_SVRRadioMsgNotify.base);
  return *internal_default_instance();
}


void SVRRadioMsgNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:im.SVRRadioMsgNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  smnpleduserid_.Clear();
  sradioid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sopruserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&notifytype_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(notifytype_));
  _internal_metadata_.Clear();
}

bool SVRRadioMsgNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.SVRRadioMsgNotify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sRadioId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sradioid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sradioid().data(), static_cast<int>(this->sradioid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SVRRadioMsgNotify.sRadioId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SVRRadioMsgNotify.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgTime = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sOprUserId = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sopruserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sopruserid().data(), static_cast<int>(this->sopruserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SVRRadioMsgNotify.sOprUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string sMnpledUserId = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_smnpleduserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smnpleduserid(this->smnpleduserid_size() - 1).data(),
            static_cast<int>(this->smnpleduserid(this->smnpleduserid_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SVRRadioMsgNotify.sMnpledUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sContent = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scontent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scontent().data(), static_cast<int>(this->scontent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SVRRadioMsgNotify.sContent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.SVRRadioNotifyType notifyType = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_notifytype(static_cast< ::im::SVRRadioNotifyType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string extend = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extend()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extend().data(), static_cast<int>(this->extend().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SVRRadioMsgNotify.extend"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.SVRRadioMsgNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.SVRRadioMsgNotify)
  return false;
#undef DO_
}

void SVRRadioMsgNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.SVRRadioMsgNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sRadioId = 1;
  if (this->sradioid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sradioid().data(), static_cast<int>(this->sradioid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SVRRadioMsgNotify.sRadioId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sradioid(), output);
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SVRRadioMsgNotify.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  // uint64 msgTime = 3;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->msgtime(), output);
  }

  // string sOprUserId = 4;
  if (this->sopruserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sopruserid().data(), static_cast<int>(this->sopruserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SVRRadioMsgNotify.sOprUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sopruserid(), output);
  }

  // repeated string sMnpledUserId = 5;
  for (int i = 0, n = this->smnpleduserid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smnpleduserid(i).data(), static_cast<int>(this->smnpleduserid(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SVRRadioMsgNotify.sMnpledUserId");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->smnpleduserid(i), output);
  }

  // string sContent = 6;
  if (this->scontent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scontent().data(), static_cast<int>(this->scontent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SVRRadioMsgNotify.sContent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->scontent(), output);
  }

  // .im.SVRRadioNotifyType notifyType = 7;
  if (this->notifytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->notifytype(), output);
  }

  // string extend = 8;
  if (this->extend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extend().data(), static_cast<int>(this->extend().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SVRRadioMsgNotify.extend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->extend(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.SVRRadioMsgNotify)
}

size_t SVRRadioMsgNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.SVRRadioMsgNotify)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated string sMnpledUserId = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->smnpleduserid_size());
  for (int i = 0, n = this->smnpleduserid_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->smnpleduserid(i));
  }

  // string sRadioId = 1;
  if (this->sradioid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sradioid());
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // string sOprUserId = 4;
  if (this->sopruserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sopruserid());
  }

  // string sContent = 6;
  if (this->scontent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scontent());
  }

  // string extend = 8;
  if (this->extend().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extend());
  }

  // uint64 msgTime = 3;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // .im.SVRRadioNotifyType notifyType = 7;
  if (this->notifytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->notifytype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SVRRadioMsgNotify::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SVRRadioMsgNotify*>(&from));
}

void SVRRadioMsgNotify::MergeFrom(const SVRRadioMsgNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.SVRRadioMsgNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  smnpleduserid_.MergeFrom(from.smnpleduserid_);
  if (from.sradioid().size() > 0) {

    sradioid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sradioid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.sopruserid().size() > 0) {

    sopruserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sopruserid_);
  }
  if (from.scontent().size() > 0) {

    scontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scontent_);
  }
  if (from.extend().size() > 0) {

    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.notifytype() != 0) {
    set_notifytype(from.notifytype());
  }
}

void SVRRadioMsgNotify::CopyFrom(const SVRRadioMsgNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.SVRRadioMsgNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SVRRadioMsgNotify::IsInitialized() const {
  return true;
}

void SVRRadioMsgNotify::Swap(SVRRadioMsgNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SVRRadioMsgNotify::InternalSwap(SVRRadioMsgNotify* other) {
  using std::swap;
  smnpleduserid_.InternalSwap(CastToBase(&other->smnpleduserid_));
  sradioid_.Swap(&other->sradioid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sopruserid_.Swap(&other->sopruserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  scontent_.Swap(&other->scontent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  extend_.Swap(&other->extend_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgtime_, other->msgtime_);
  swap(notifytype_, other->notifytype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string SVRRadioMsgNotify::GetTypeName() const {
  return "im.SVRRadioMsgNotify";
}


// ===================================================================

void SVRRadioPushSetNotify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SVRRadioPushSetNotify::kSMsgIdFieldNumber;
const int SVRRadioPushSetNotify::kSUserIdFieldNumber;
const int SVRRadioPushSetNotify::kSRadioIdFieldNumber;
const int SVRRadioPushSetNotify::kNotifyTypeFieldNumber;
const int SVRRadioPushSetNotify::kStatusFieldNumber;
const int SVRRadioPushSetNotify::kMsgTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SVRRadioPushSetNotify::SVRRadioPushSetNotify()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2einner_2eproto::scc_info_SVRRadioPushSetNotify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.SVRRadioPushSetNotify)
}
SVRRadioPushSetNotify::SVRRadioPushSetNotify(const SVRRadioPushSetNotify& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  sradioid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sradioid().size() > 0) {
    sradioid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sradioid_);
  }
  ::memcpy(&notifytype_, &from.notifytype_,
    static_cast<size_t>(reinterpret_cast<char*>(&msgtime_) -
    reinterpret_cast<char*>(&notifytype_)) + sizeof(msgtime_));
  // @@protoc_insertion_point(copy_constructor:im.SVRRadioPushSetNotify)
}

void SVRRadioPushSetNotify::SharedCtor() {
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sradioid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&notifytype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msgtime_) -
      reinterpret_cast<char*>(&notifytype_)) + sizeof(msgtime_));
}

SVRRadioPushSetNotify::~SVRRadioPushSetNotify() {
  // @@protoc_insertion_point(destructor:im.SVRRadioPushSetNotify)
  SharedDtor();
}

void SVRRadioPushSetNotify::SharedDtor() {
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sradioid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SVRRadioPushSetNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SVRRadioPushSetNotify& SVRRadioPushSetNotify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2einner_2eproto::scc_info_SVRRadioPushSetNotify.base);
  return *internal_default_instance();
}


void SVRRadioPushSetNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:im.SVRRadioPushSetNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sradioid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&notifytype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msgtime_) -
      reinterpret_cast<char*>(&notifytype_)) + sizeof(msgtime_));
  _internal_metadata_.Clear();
}

bool SVRRadioPushSetNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.SVRRadioPushSetNotify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sMsgId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SVRRadioPushSetNotify.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sUserId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SVRRadioPushSetNotify.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sRadioId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sradioid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sradioid().data(), static_cast<int>(this->sradioid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SVRRadioPushSetNotify.sRadioId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.SVRRadioPushSetNotifyType notifyType = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_notifytype(static_cast< ::im::SVRRadioPushSetNotifyType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 status = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgTime = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.SVRRadioPushSetNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.SVRRadioPushSetNotify)
  return false;
#undef DO_
}

void SVRRadioPushSetNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.SVRRadioPushSetNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sMsgId = 1;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SVRRadioPushSetNotify.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->smsgid(), output);
  }

  // string sUserId = 2;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SVRRadioPushSetNotify.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->suserid(), output);
  }

  // string sRadioId = 3;
  if (this->sradioid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sradioid().data(), static_cast<int>(this->sradioid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SVRRadioPushSetNotify.sRadioId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sradioid(), output);
  }

  // .im.SVRRadioPushSetNotifyType notifyType = 4;
  if (this->notifytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->notifytype(), output);
  }

  // uint32 status = 5;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->status(), output);
  }

  // uint64 msgTime = 6;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->msgtime(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.SVRRadioPushSetNotify)
}

size_t SVRRadioPushSetNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.SVRRadioPushSetNotify)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sMsgId = 1;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // string sUserId = 2;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sRadioId = 3;
  if (this->sradioid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sradioid());
  }

  // .im.SVRRadioPushSetNotifyType notifyType = 4;
  if (this->notifytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->notifytype());
  }

  // uint32 status = 5;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->status());
  }

  // uint64 msgTime = 6;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SVRRadioPushSetNotify::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SVRRadioPushSetNotify*>(&from));
}

void SVRRadioPushSetNotify::MergeFrom(const SVRRadioPushSetNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.SVRRadioPushSetNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.sradioid().size() > 0) {

    sradioid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sradioid_);
  }
  if (from.notifytype() != 0) {
    set_notifytype(from.notifytype());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
}

void SVRRadioPushSetNotify::CopyFrom(const SVRRadioPushSetNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.SVRRadioPushSetNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SVRRadioPushSetNotify::IsInitialized() const {
  return true;
}

void SVRRadioPushSetNotify::Swap(SVRRadioPushSetNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SVRRadioPushSetNotify::InternalSwap(SVRRadioPushSetNotify* other) {
  using std::swap;
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sradioid_.Swap(&other->sradioid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(notifytype_, other->notifytype_);
  swap(status_, other->status_);
  swap(msgtime_, other->msgtime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string SVRRadioPushSetNotify::GetTypeName() const {
  return "im.SVRRadioPushSetNotify";
}


// ===================================================================

void SVRMSGNotifyACK::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SVRMSGNotifyACK::kSMsgIdFieldNumber;
const int SVRMSGNotifyACK::kMsgTimeFieldNumber;
const int SVRMSGNotifyACK::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SVRMSGNotifyACK::SVRMSGNotifyACK()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2einner_2eproto::scc_info_SVRMSGNotifyACK.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.SVRMSGNotifyACK)
}
SVRMSGNotifyACK::SVRMSGNotifyACK(const SVRMSGNotifyACK& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  ::memcpy(&msgtime_, &from.msgtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&errcode_) -
    reinterpret_cast<char*>(&msgtime_)) + sizeof(errcode_));
  // @@protoc_insertion_point(copy_constructor:im.SVRMSGNotifyACK)
}

void SVRMSGNotifyACK::SharedCtor() {
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&errcode_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(errcode_));
}

SVRMSGNotifyACK::~SVRMSGNotifyACK() {
  // @@protoc_insertion_point(destructor:im.SVRMSGNotifyACK)
  SharedDtor();
}

void SVRMSGNotifyACK::SharedDtor() {
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SVRMSGNotifyACK::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SVRMSGNotifyACK& SVRMSGNotifyACK::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2einner_2eproto::scc_info_SVRMSGNotifyACK.base);
  return *internal_default_instance();
}


void SVRMSGNotifyACK::Clear() {
// @@protoc_insertion_point(message_clear_start:im.SVRMSGNotifyACK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&errcode_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(errcode_));
  _internal_metadata_.Clear();
}

bool SVRMSGNotifyACK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.SVRMSGNotifyACK)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sMsgId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.SVRMSGNotifyACK.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgTime = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode errcode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.SVRMSGNotifyACK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.SVRMSGNotifyACK)
  return false;
#undef DO_
}

void SVRMSGNotifyACK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.SVRMSGNotifyACK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sMsgId = 1;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.SVRMSGNotifyACK.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->smsgid(), output);
  }

  // uint64 msgTime = 2;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->msgtime(), output);
  }

  // .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->errcode(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.SVRMSGNotifyACK)
}

size_t SVRMSGNotifyACK::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.SVRMSGNotifyACK)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sMsgId = 1;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // uint64 msgTime = 2;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SVRMSGNotifyACK::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SVRMSGNotifyACK*>(&from));
}

void SVRMSGNotifyACK::MergeFrom(const SVRMSGNotifyACK& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.SVRMSGNotifyACK)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void SVRMSGNotifyACK::CopyFrom(const SVRMSGNotifyACK& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.SVRMSGNotifyACK)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SVRMSGNotifyACK::IsInitialized() const {
  return true;
}

void SVRMSGNotifyACK::Swap(SVRMSGNotifyACK* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SVRMSGNotifyACK::InternalSwap(SVRMSGNotifyACK* other) {
  using std::swap;
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgtime_, other->msgtime_);
  swap(errcode_, other->errcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string SVRMSGNotifyACK::GetTypeName() const {
  return "im.SVRMSGNotifyACK";
}


// ===================================================================

void OnLoginResult::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OnLoginResult::kSUserIdFieldNumber;
const int OnLoginResult::kSHostFieldNumber;
const int OnLoginResult::kTypeFieldNumber;
const int OnLoginResult::kNErrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OnLoginResult::OnLoginResult()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2einner_2eproto::scc_info_OnLoginResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.OnLoginResult)
}
OnLoginResult::OnLoginResult(const OnLoginResult& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  shost_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.shost().size() > 0) {
    shost_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shost_);
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&nerr_) -
    reinterpret_cast<char*>(&type_)) + sizeof(nerr_));
  // @@protoc_insertion_point(copy_constructor:im.OnLoginResult)
}

void OnLoginResult::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shost_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nerr_) -
      reinterpret_cast<char*>(&type_)) + sizeof(nerr_));
}

OnLoginResult::~OnLoginResult() {
  // @@protoc_insertion_point(destructor:im.OnLoginResult)
  SharedDtor();
}

void OnLoginResult::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shost_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OnLoginResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OnLoginResult& OnLoginResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2einner_2eproto::scc_info_OnLoginResult.base);
  return *internal_default_instance();
}


void OnLoginResult::Clear() {
// @@protoc_insertion_point(message_clear_start:im.OnLoginResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shost_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nerr_) -
      reinterpret_cast<char*>(&type_)) + sizeof(nerr_));
  _internal_metadata_.Clear();
}

bool OnLoginResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.OnLoginResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.OnLoginResult.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sHost = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_shost()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->shost().data(), static_cast<int>(this->shost().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.OnLoginResult.sHost"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.LoginResultType type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::im::LoginResultType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode nErr = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_nerr(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.OnLoginResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.OnLoginResult)
  return false;
#undef DO_
}

void OnLoginResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.OnLoginResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.OnLoginResult.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string sHost = 2;
  if (this->shost().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shost().data(), static_cast<int>(this->shost().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.OnLoginResult.sHost");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->shost(), output);
  }

  // .im.LoginResultType type = 3;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->type(), output);
  }

  // .im.ErrCode nErr = 4;
  if (this->nerr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->nerr(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.OnLoginResult)
}

size_t OnLoginResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.OnLoginResult)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sHost = 2;
  if (this->shost().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->shost());
  }

  // .im.LoginResultType type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // .im.ErrCode nErr = 4;
  if (this->nerr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->nerr());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OnLoginResult::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const OnLoginResult*>(&from));
}

void OnLoginResult::MergeFrom(const OnLoginResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.OnLoginResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.shost().size() > 0) {

    shost_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shost_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.nerr() != 0) {
    set_nerr(from.nerr());
  }
}

void OnLoginResult::CopyFrom(const OnLoginResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.OnLoginResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnLoginResult::IsInitialized() const {
  return true;
}

void OnLoginResult::Swap(OnLoginResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OnLoginResult::InternalSwap(OnLoginResult* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  shost_.Swap(&other->shost_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(nerr_, other->nerr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string OnLoginResult::GetTypeName() const {
  return "im.OnLoginResult";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace im
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::CMLoginNotify* Arena::CreateMaybeMessage< ::im::CMLoginNotify >(Arena* arena) {
  return Arena::CreateInternal< ::im::CMLoginNotify >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::CMLoginNotifyAck* Arena::CreateMaybeMessage< ::im::CMLoginNotifyAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::CMLoginNotifyAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::LoginCMNotify* Arena::CreateMaybeMessage< ::im::LoginCMNotify >(Arena* arena) {
  return Arena::CreateInternal< ::im::LoginCMNotify >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::LoginCMNotifyAck* Arena::CreateMaybeMessage< ::im::LoginCMNotifyAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::LoginCMNotifyAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::CMLoginTrans* Arena::CreateMaybeMessage< ::im::CMLoginTrans >(Arena* arena) {
  return Arena::CreateInternal< ::im::CMLoginTrans >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::CMPHPLoginNotify* Arena::CreateMaybeMessage< ::im::CMPHPLoginNotify >(Arena* arena) {
  return Arena::CreateInternal< ::im::CMPHPLoginNotify >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::CMPHPLoginNotifyACK* Arena::CreateMaybeMessage< ::im::CMPHPLoginNotifyACK >(Arena* arena) {
  return Arena::CreateInternal< ::im::CMPHPLoginNotifyACK >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::SVRMSGGroupRelationNotify* Arena::CreateMaybeMessage< ::im::SVRMSGGroupRelationNotify >(Arena* arena) {
  return Arena::CreateInternal< ::im::SVRMSGGroupRelationNotify >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::SVRMSGFriendRelationNotify* Arena::CreateMaybeMessage< ::im::SVRMSGFriendRelationNotify >(Arena* arena) {
  return Arena::CreateInternal< ::im::SVRMSGFriendRelationNotify >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::SVRMSGCommonMsgNotify* Arena::CreateMaybeMessage< ::im::SVRMSGCommonMsgNotify >(Arena* arena) {
  return Arena::CreateInternal< ::im::SVRMSGCommonMsgNotify >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::SVRRadioMsgNotify* Arena::CreateMaybeMessage< ::im::SVRRadioMsgNotify >(Arena* arena) {
  return Arena::CreateInternal< ::im::SVRRadioMsgNotify >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::SVRRadioPushSetNotify* Arena::CreateMaybeMessage< ::im::SVRRadioPushSetNotify >(Arena* arena) {
  return Arena::CreateInternal< ::im::SVRRadioPushSetNotify >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::SVRMSGNotifyACK* Arena::CreateMaybeMessage< ::im::SVRMSGNotifyACK >(Arena* arena) {
  return Arena::CreateInternal< ::im::SVRMSGNotifyACK >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::OnLoginResult* Arena::CreateMaybeMessage< ::im::OnLoginResult >(Arena* arena) {
  return Arena::CreateInternal< ::im::OnLoginResult >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
