// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: im.mes.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "im.mes.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace im {

void protobuf_ShutdownFile_im_2emes_2eproto() {
  delete MESChat::default_instance_;
  delete MESChatAck::default_instance_;
  delete MESChatDeliveredAck::default_instance_;
  delete MESChatDeliveredNotificationAck::default_instance_;
  delete MsgReadResult::default_instance_;
  delete MESChatRead::default_instance_;
  delete MESChatReadAck::default_instance_;
  delete MESChatReadDelivereAck::default_instance_;
  delete OfflineTotal::default_instance_;
  delete MESOfflineSummary::default_instance_;
  delete MESOfflineSummaryAck::default_instance_;
  delete MESOfflineTotal::default_instance_;
  delete MESOfflineMsg::default_instance_;
  delete OfflineMsgData::default_instance_;
  delete MESOfflineMsgAck::default_instance_;
  delete OfflineDeliveredMsg::default_instance_;
  delete MESOfflineMsgDelivered::default_instance_;
  delete MESOfflineMsgDelivereddAck::default_instance_;
  delete MESOfflineMsgDeliveredNotifyAck::default_instance_;
  delete MESAddFriend::default_instance_;
  delete MESAddFriendAck::default_instance_;
  delete MESAddFriendDeliverAck::default_instance_;
  delete MESAddFriendAns::default_instance_;
  delete MESAddFriendAnsAck::default_instance_;
  delete MESAddFriendAnsDeliverACK::default_instance_;
  delete MESDelFriend::default_instance_;
  delete MESDelFriendAck::default_instance_;
  delete MESIncBlacklist::default_instance_;
  delete MESIncBlacklistAck::default_instance_;
  delete MESDecBlacklist::default_instance_;
  delete MESDecBlacklistAck::default_instance_;
  delete MESJoinGrp::default_instance_;
  delete MESJoinGrpAck::default_instance_;
  delete MESJoinGrpDeliverAck::default_instance_;
  delete UserKey::default_instance_;
  delete MESExchangeKey::default_instance_;
  delete MESExchangeKeyAck::default_instance_;
  delete MESExchangeKeyDeliver::default_instance_;
  delete MESExchangeKeyDeliverAck::default_instance_;
  delete MESExchangeKeyDeliverNotifyAck::default_instance_;
  delete _InnerGrpNotify::default_instance_;
  delete _MESGrpInterNotify::default_instance_;
  delete _MESGrpInterNotifyAck::default_instance_;
  delete MESGrpNotify::default_instance_;
  delete MESGrpNotifyDeliverAck::default_instance_;
  delete _MESGrpInterChat::default_instance_;
  delete _MESGrpInterChatAck::default_instance_;
  delete MESGrpChatDeliveredAck::default_instance_;
  delete MESGrpChat::default_instance_;
  delete _MESGrpInterChatCancel::default_instance_;
  delete _MESGrpInterChatCancelAck::default_instance_;
  delete MESChatCancel::default_instance_;
  delete MESChatCancelAck::default_instance_;
  delete MSGCommonNotify::default_instance_;
  delete MSGCommonNotifyACK::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_im_2emes_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_im_2emes_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_im_2emes_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  ::im::protobuf_AddDesc_im_2epub_2eproto();
  MESChat::default_instance_ = new MESChat();
  MESChatAck::default_instance_ = new MESChatAck();
  MESChatDeliveredAck::default_instance_ = new MESChatDeliveredAck();
  MESChatDeliveredNotificationAck::default_instance_ = new MESChatDeliveredNotificationAck();
  MsgReadResult::default_instance_ = new MsgReadResult();
  MESChatRead::default_instance_ = new MESChatRead();
  MESChatReadAck::default_instance_ = new MESChatReadAck();
  MESChatReadDelivereAck::default_instance_ = new MESChatReadDelivereAck();
  OfflineTotal::default_instance_ = new OfflineTotal();
  MESOfflineSummary::default_instance_ = new MESOfflineSummary();
  MESOfflineSummaryAck::default_instance_ = new MESOfflineSummaryAck();
  MESOfflineTotal::default_instance_ = new MESOfflineTotal();
  MESOfflineMsg::default_instance_ = new MESOfflineMsg();
  OfflineMsgData::default_instance_ = new OfflineMsgData();
  MESOfflineMsgAck::default_instance_ = new MESOfflineMsgAck();
  OfflineDeliveredMsg::default_instance_ = new OfflineDeliveredMsg();
  MESOfflineMsgDelivered::default_instance_ = new MESOfflineMsgDelivered();
  MESOfflineMsgDelivereddAck::default_instance_ = new MESOfflineMsgDelivereddAck();
  MESOfflineMsgDeliveredNotifyAck::default_instance_ = new MESOfflineMsgDeliveredNotifyAck();
  MESAddFriend::default_instance_ = new MESAddFriend();
  MESAddFriendAck::default_instance_ = new MESAddFriendAck();
  MESAddFriendDeliverAck::default_instance_ = new MESAddFriendDeliverAck();
  MESAddFriendAns::default_instance_ = new MESAddFriendAns();
  MESAddFriendAnsAck::default_instance_ = new MESAddFriendAnsAck();
  MESAddFriendAnsDeliverACK::default_instance_ = new MESAddFriendAnsDeliverACK();
  MESDelFriend::default_instance_ = new MESDelFriend();
  MESDelFriendAck::default_instance_ = new MESDelFriendAck();
  MESIncBlacklist::default_instance_ = new MESIncBlacklist();
  MESIncBlacklistAck::default_instance_ = new MESIncBlacklistAck();
  MESDecBlacklist::default_instance_ = new MESDecBlacklist();
  MESDecBlacklistAck::default_instance_ = new MESDecBlacklistAck();
  MESJoinGrp::default_instance_ = new MESJoinGrp();
  MESJoinGrpAck::default_instance_ = new MESJoinGrpAck();
  MESJoinGrpDeliverAck::default_instance_ = new MESJoinGrpDeliverAck();
  UserKey::default_instance_ = new UserKey();
  MESExchangeKey::default_instance_ = new MESExchangeKey();
  MESExchangeKeyAck::default_instance_ = new MESExchangeKeyAck();
  MESExchangeKeyDeliver::default_instance_ = new MESExchangeKeyDeliver();
  MESExchangeKeyDeliverAck::default_instance_ = new MESExchangeKeyDeliverAck();
  MESExchangeKeyDeliverNotifyAck::default_instance_ = new MESExchangeKeyDeliverNotifyAck();
  _InnerGrpNotify::default_instance_ = new _InnerGrpNotify();
  _MESGrpInterNotify::default_instance_ = new _MESGrpInterNotify();
  _MESGrpInterNotifyAck::default_instance_ = new _MESGrpInterNotifyAck();
  MESGrpNotify::default_instance_ = new MESGrpNotify();
  MESGrpNotifyDeliverAck::default_instance_ = new MESGrpNotifyDeliverAck();
  _MESGrpInterChat::default_instance_ = new _MESGrpInterChat();
  _MESGrpInterChatAck::default_instance_ = new _MESGrpInterChatAck();
  MESGrpChatDeliveredAck::default_instance_ = new MESGrpChatDeliveredAck();
  MESGrpChat::default_instance_ = new MESGrpChat();
  _MESGrpInterChatCancel::default_instance_ = new _MESGrpInterChatCancel();
  _MESGrpInterChatCancelAck::default_instance_ = new _MESGrpInterChatCancelAck();
  MESChatCancel::default_instance_ = new MESChatCancel();
  MESChatCancelAck::default_instance_ = new MESChatCancelAck();
  MSGCommonNotify::default_instance_ = new MSGCommonNotify();
  MSGCommonNotifyACK::default_instance_ = new MSGCommonNotifyACK();
  MESChat::default_instance_->InitAsDefaultInstance();
  MESChatAck::default_instance_->InitAsDefaultInstance();
  MESChatDeliveredAck::default_instance_->InitAsDefaultInstance();
  MESChatDeliveredNotificationAck::default_instance_->InitAsDefaultInstance();
  MsgReadResult::default_instance_->InitAsDefaultInstance();
  MESChatRead::default_instance_->InitAsDefaultInstance();
  MESChatReadAck::default_instance_->InitAsDefaultInstance();
  MESChatReadDelivereAck::default_instance_->InitAsDefaultInstance();
  OfflineTotal::default_instance_->InitAsDefaultInstance();
  MESOfflineSummary::default_instance_->InitAsDefaultInstance();
  MESOfflineSummaryAck::default_instance_->InitAsDefaultInstance();
  MESOfflineTotal::default_instance_->InitAsDefaultInstance();
  MESOfflineMsg::default_instance_->InitAsDefaultInstance();
  OfflineMsgData::default_instance_->InitAsDefaultInstance();
  MESOfflineMsgAck::default_instance_->InitAsDefaultInstance();
  OfflineDeliveredMsg::default_instance_->InitAsDefaultInstance();
  MESOfflineMsgDelivered::default_instance_->InitAsDefaultInstance();
  MESOfflineMsgDelivereddAck::default_instance_->InitAsDefaultInstance();
  MESOfflineMsgDeliveredNotifyAck::default_instance_->InitAsDefaultInstance();
  MESAddFriend::default_instance_->InitAsDefaultInstance();
  MESAddFriendAck::default_instance_->InitAsDefaultInstance();
  MESAddFriendDeliverAck::default_instance_->InitAsDefaultInstance();
  MESAddFriendAns::default_instance_->InitAsDefaultInstance();
  MESAddFriendAnsAck::default_instance_->InitAsDefaultInstance();
  MESAddFriendAnsDeliverACK::default_instance_->InitAsDefaultInstance();
  MESDelFriend::default_instance_->InitAsDefaultInstance();
  MESDelFriendAck::default_instance_->InitAsDefaultInstance();
  MESIncBlacklist::default_instance_->InitAsDefaultInstance();
  MESIncBlacklistAck::default_instance_->InitAsDefaultInstance();
  MESDecBlacklist::default_instance_->InitAsDefaultInstance();
  MESDecBlacklistAck::default_instance_->InitAsDefaultInstance();
  MESJoinGrp::default_instance_->InitAsDefaultInstance();
  MESJoinGrpAck::default_instance_->InitAsDefaultInstance();
  MESJoinGrpDeliverAck::default_instance_->InitAsDefaultInstance();
  UserKey::default_instance_->InitAsDefaultInstance();
  MESExchangeKey::default_instance_->InitAsDefaultInstance();
  MESExchangeKeyAck::default_instance_->InitAsDefaultInstance();
  MESExchangeKeyDeliver::default_instance_->InitAsDefaultInstance();
  MESExchangeKeyDeliverAck::default_instance_->InitAsDefaultInstance();
  MESExchangeKeyDeliverNotifyAck::default_instance_->InitAsDefaultInstance();
  _InnerGrpNotify::default_instance_->InitAsDefaultInstance();
  _MESGrpInterNotify::default_instance_->InitAsDefaultInstance();
  _MESGrpInterNotifyAck::default_instance_->InitAsDefaultInstance();
  MESGrpNotify::default_instance_->InitAsDefaultInstance();
  MESGrpNotifyDeliverAck::default_instance_->InitAsDefaultInstance();
  _MESGrpInterChat::default_instance_->InitAsDefaultInstance();
  _MESGrpInterChatAck::default_instance_->InitAsDefaultInstance();
  MESGrpChatDeliveredAck::default_instance_->InitAsDefaultInstance();
  MESGrpChat::default_instance_->InitAsDefaultInstance();
  _MESGrpInterChatCancel::default_instance_->InitAsDefaultInstance();
  _MESGrpInterChatCancelAck::default_instance_->InitAsDefaultInstance();
  MESChatCancel::default_instance_->InitAsDefaultInstance();
  MESChatCancelAck::default_instance_->InitAsDefaultInstance();
  MSGCommonNotify::default_instance_->InitAsDefaultInstance();
  MSGCommonNotifyACK::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_im_2emes_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_im_2emes_2eproto_once_);
void protobuf_AddDesc_im_2emes_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_im_2emes_2eproto_once_,
                 &protobuf_AddDesc_im_2emes_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_im_2emes_2eproto {
  StaticDescriptorInitializer_im_2emes_2eproto() {
    protobuf_AddDesc_im_2emes_2eproto();
  }
} static_descriptor_initializer_im_2emes_2eproto_;
#endif

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESChat::kSFromIdFieldNumber;
const int MESChat::kSToIdFieldNumber;
const int MESChat::kSMsgIdFieldNumber;
const int MESChat::kMsgTypeFieldNumber;
const int MESChat::kMsgTimeFieldNumber;
const int MESChat::kEncryptFieldNumber;
const int MESChat::kSContentFieldNumber;
const int MESChat::kSServiceIdFieldNumber;
const int MESChat::kSQuestionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESChat::MESChat()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESChat)
}

void MESChat::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MESChat::MESChat(const MESChat& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.MESChat)
}

void MESChat::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgtype_ = 0u;
  msgtime_ = GOOGLE_ULONGLONG(0);
  encrypt_ = 0u;
  scontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sserviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  squestionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MESChat::~MESChat() {
  // @@protoc_insertion_point(destructor:im.MESChat)
  SharedDtor();
}

void MESChat::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sserviceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  squestionid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MESChat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MESChat& MESChat::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

MESChat* MESChat::default_instance_ = NULL;

MESChat* MESChat::New(::google::protobuf::Arena* arena) const {
  MESChat* n = new MESChat;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MESChat::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESChat)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MESChat, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MESChat*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(msgtime_, encrypt_);
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sserviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  squestionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool MESChat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.MESChat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sFromId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), this->sfromid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESChat.sFromId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sToId;
        break;
      }

      // optional string sToId = 2;
      case 2: {
        if (tag == 18) {
         parse_sToId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), this->stoid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESChat.sToId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 3;
      case 3: {
        if (tag == 26) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESChat.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_msgType;
        break;
      }

      // optional uint32 msgType = 4;
      case 4: {
        if (tag == 32) {
         parse_msgType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgtype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_msgTime;
        break;
      }

      // optional uint64 msgTime = 5;
      case 5: {
        if (tag == 40) {
         parse_msgTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_encrypt;
        break;
      }

      // optional uint32 encrypt = 6;
      case 6: {
        if (tag == 48) {
         parse_encrypt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &encrypt_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_sContent;
        break;
      }

      // optional string sContent = 7;
      case 7: {
        if (tag == 58) {
         parse_sContent:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scontent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scontent().data(), this->scontent().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESChat.sContent"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_sServiceId;
        break;
      }

      // optional string sServiceId = 8;
      case 8: {
        if (tag == 66) {
         parse_sServiceId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sserviceid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sserviceid().data(), this->sserviceid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESChat.sServiceId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_sQuestionId;
        break;
      }

      // optional string sQuestionId = 9;
      case 9: {
        if (tag == 74) {
         parse_sQuestionId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_squestionid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->squestionid().data(), this->squestionid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESChat.sQuestionId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESChat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESChat)
  return false;
#undef DO_
}

void MESChat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESChat)
  // optional string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), this->sfromid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESChat.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // optional string sToId = 2;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), this->stoid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESChat.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stoid(), output);
  }

  // optional string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESChat.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // optional uint32 msgType = 4;
  if (this->msgtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->msgtype(), output);
  }

  // optional uint64 msgTime = 5;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->msgtime(), output);
  }

  // optional uint32 encrypt = 6;
  if (this->encrypt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->encrypt(), output);
  }

  // optional string sContent = 7;
  if (this->scontent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scontent().data(), this->scontent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESChat.sContent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->scontent(), output);
  }

  // optional string sServiceId = 8;
  if (this->sserviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sserviceid().data(), this->sserviceid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESChat.sServiceId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->sserviceid(), output);
  }

  // optional string sQuestionId = 9;
  if (this->squestionid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->squestionid().data(), this->squestionid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESChat.sQuestionId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->squestionid(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.MESChat)
}

int MESChat::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESChat)
  int total_size = 0;

  // optional string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // optional string sToId = 2;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // optional string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // optional uint32 msgType = 4;
  if (this->msgtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgtype());
  }

  // optional uint64 msgTime = 5;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // optional uint32 encrypt = 6;
  if (this->encrypt() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->encrypt());
  }

  // optional string sContent = 7;
  if (this->scontent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scontent());
  }

  // optional string sServiceId = 8;
  if (this->sserviceid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sserviceid());
  }

  // optional string sQuestionId = 9;
  if (this->squestionid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->squestionid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MESChat::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESChat*>(&from));
}

void MESChat::MergeFrom(const MESChat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESChat)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.msgtype() != 0) {
    set_msgtype(from.msgtype());
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.encrypt() != 0) {
    set_encrypt(from.encrypt());
  }
  if (from.scontent().size() > 0) {

    scontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scontent_);
  }
  if (from.sserviceid().size() > 0) {

    sserviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sserviceid_);
  }
  if (from.squestionid().size() > 0) {

    squestionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.squestionid_);
  }
}

void MESChat::CopyFrom(const MESChat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESChat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESChat::IsInitialized() const {

  return true;
}

void MESChat::Swap(MESChat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESChat::InternalSwap(MESChat* other) {
  sfromid_.Swap(&other->sfromid_);
  stoid_.Swap(&other->stoid_);
  smsgid_.Swap(&other->smsgid_);
  std::swap(msgtype_, other->msgtype_);
  std::swap(msgtime_, other->msgtime_);
  std::swap(encrypt_, other->encrypt_);
  scontent_.Swap(&other->scontent_);
  sserviceid_.Swap(&other->sserviceid_);
  squestionid_.Swap(&other->squestionid_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string MESChat::GetTypeName() const {
  return "im.MESChat";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MESChat

// optional string sFromId = 1;
void MESChat::clear_sfromid() {
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESChat::sfromid() const {
  // @@protoc_insertion_point(field_get:im.MESChat.sFromId)
  return sfromid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESChat::set_sfromid(const ::std::string& value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESChat.sFromId)
}
 void MESChat::set_sfromid(const char* value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESChat.sFromId)
}
 void MESChat::set_sfromid(const char* value, size_t size) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESChat.sFromId)
}
 ::std::string* MESChat::mutable_sfromid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESChat.sFromId)
  return sfromid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESChat::release_sfromid() {
  // @@protoc_insertion_point(field_release:im.MESChat.sFromId)
  
  return sfromid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESChat::set_allocated_sfromid(::std::string* sfromid) {
  if (sfromid != NULL) {
    
  } else {
    
  }
  sfromid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sfromid);
  // @@protoc_insertion_point(field_set_allocated:im.MESChat.sFromId)
}

// optional string sToId = 2;
void MESChat::clear_stoid() {
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESChat::stoid() const {
  // @@protoc_insertion_point(field_get:im.MESChat.sToId)
  return stoid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESChat::set_stoid(const ::std::string& value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESChat.sToId)
}
 void MESChat::set_stoid(const char* value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESChat.sToId)
}
 void MESChat::set_stoid(const char* value, size_t size) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESChat.sToId)
}
 ::std::string* MESChat::mutable_stoid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESChat.sToId)
  return stoid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESChat::release_stoid() {
  // @@protoc_insertion_point(field_release:im.MESChat.sToId)
  
  return stoid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESChat::set_allocated_stoid(::std::string* stoid) {
  if (stoid != NULL) {
    
  } else {
    
  }
  stoid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stoid);
  // @@protoc_insertion_point(field_set_allocated:im.MESChat.sToId)
}

// optional string sMsgId = 3;
void MESChat::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESChat::smsgid() const {
  // @@protoc_insertion_point(field_get:im.MESChat.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESChat::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESChat.sMsgId)
}
 void MESChat::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESChat.sMsgId)
}
 void MESChat::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESChat.sMsgId)
}
 ::std::string* MESChat::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESChat.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESChat::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.MESChat.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESChat::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.MESChat.sMsgId)
}

// optional uint32 msgType = 4;
void MESChat::clear_msgtype() {
  msgtype_ = 0u;
}
 ::google::protobuf::uint32 MESChat::msgtype() const {
  // @@protoc_insertion_point(field_get:im.MESChat.msgType)
  return msgtype_;
}
 void MESChat::set_msgtype(::google::protobuf::uint32 value) {
  
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:im.MESChat.msgType)
}

// optional uint64 msgTime = 5;
void MESChat::clear_msgtime() {
  msgtime_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 MESChat::msgtime() const {
  // @@protoc_insertion_point(field_get:im.MESChat.msgTime)
  return msgtime_;
}
 void MESChat::set_msgtime(::google::protobuf::uint64 value) {
  
  msgtime_ = value;
  // @@protoc_insertion_point(field_set:im.MESChat.msgTime)
}

// optional uint32 encrypt = 6;
void MESChat::clear_encrypt() {
  encrypt_ = 0u;
}
 ::google::protobuf::uint32 MESChat::encrypt() const {
  // @@protoc_insertion_point(field_get:im.MESChat.encrypt)
  return encrypt_;
}
 void MESChat::set_encrypt(::google::protobuf::uint32 value) {
  
  encrypt_ = value;
  // @@protoc_insertion_point(field_set:im.MESChat.encrypt)
}

// optional string sContent = 7;
void MESChat::clear_scontent() {
  scontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESChat::scontent() const {
  // @@protoc_insertion_point(field_get:im.MESChat.sContent)
  return scontent_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESChat::set_scontent(const ::std::string& value) {
  
  scontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESChat.sContent)
}
 void MESChat::set_scontent(const char* value) {
  
  scontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESChat.sContent)
}
 void MESChat::set_scontent(const char* value, size_t size) {
  
  scontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESChat.sContent)
}
 ::std::string* MESChat::mutable_scontent() {
  
  // @@protoc_insertion_point(field_mutable:im.MESChat.sContent)
  return scontent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESChat::release_scontent() {
  // @@protoc_insertion_point(field_release:im.MESChat.sContent)
  
  return scontent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESChat::set_allocated_scontent(::std::string* scontent) {
  if (scontent != NULL) {
    
  } else {
    
  }
  scontent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scontent);
  // @@protoc_insertion_point(field_set_allocated:im.MESChat.sContent)
}

// optional string sServiceId = 8;
void MESChat::clear_sserviceid() {
  sserviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESChat::sserviceid() const {
  // @@protoc_insertion_point(field_get:im.MESChat.sServiceId)
  return sserviceid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESChat::set_sserviceid(const ::std::string& value) {
  
  sserviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESChat.sServiceId)
}
 void MESChat::set_sserviceid(const char* value) {
  
  sserviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESChat.sServiceId)
}
 void MESChat::set_sserviceid(const char* value, size_t size) {
  
  sserviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESChat.sServiceId)
}
 ::std::string* MESChat::mutable_sserviceid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESChat.sServiceId)
  return sserviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESChat::release_sserviceid() {
  // @@protoc_insertion_point(field_release:im.MESChat.sServiceId)
  
  return sserviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESChat::set_allocated_sserviceid(::std::string* sserviceid) {
  if (sserviceid != NULL) {
    
  } else {
    
  }
  sserviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sserviceid);
  // @@protoc_insertion_point(field_set_allocated:im.MESChat.sServiceId)
}

// optional string sQuestionId = 9;
void MESChat::clear_squestionid() {
  squestionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESChat::squestionid() const {
  // @@protoc_insertion_point(field_get:im.MESChat.sQuestionId)
  return squestionid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESChat::set_squestionid(const ::std::string& value) {
  
  squestionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESChat.sQuestionId)
}
 void MESChat::set_squestionid(const char* value) {
  
  squestionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESChat.sQuestionId)
}
 void MESChat::set_squestionid(const char* value, size_t size) {
  
  squestionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESChat.sQuestionId)
}
 ::std::string* MESChat::mutable_squestionid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESChat.sQuestionId)
  return squestionid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESChat::release_squestionid() {
  // @@protoc_insertion_point(field_release:im.MESChat.sQuestionId)
  
  return squestionid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESChat::set_allocated_squestionid(::std::string* squestionid) {
  if (squestionid != NULL) {
    
  } else {
    
  }
  squestionid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), squestionid);
  // @@protoc_insertion_point(field_set_allocated:im.MESChat.sQuestionId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESChatAck::kSUserIdFieldNumber;
const int MESChatAck::kSMsgIdFieldNumber;
const int MESChatAck::kSendtimeFieldNumber;
const int MESChatAck::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESChatAck::MESChatAck()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESChatAck)
}

void MESChatAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MESChatAck::MESChatAck(const MESChatAck& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.MESChatAck)
}

void MESChatAck::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sendtime_ = GOOGLE_ULONGLONG(0);
  errcode_ = 0;
}

MESChatAck::~MESChatAck() {
  // @@protoc_insertion_point(destructor:im.MESChatAck)
  SharedDtor();
}

void MESChatAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MESChatAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MESChatAck& MESChatAck::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

MESChatAck* MESChatAck::default_instance_ = NULL;

MESChatAck* MESChatAck::New(::google::protobuf::Arena* arena) const {
  MESChatAck* n = new MESChatAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MESChatAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESChatAck)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MESChatAck, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MESChatAck*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(sendtime_, errcode_);
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool MESChatAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.MESChatAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sUserId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), this->suserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESChatAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 2;
      case 2: {
        if (tag == 18) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESChatAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_sendtime;
        break;
      }

      // optional uint64 sendtime = 3;
      case 3: {
        if (tag == 24) {
         parse_sendtime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sendtime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_errcode;
        break;
      }

      // optional .im.ErrCode errcode = 4;
      case 4: {
        if (tag == 32) {
         parse_errcode:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESChatAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESChatAck)
  return false;
#undef DO_
}

void MESChatAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESChatAck)
  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), this->suserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESChatAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // optional string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESChatAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  // optional uint64 sendtime = 3;
  if (this->sendtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->sendtime(), output);
  }

  // optional .im.ErrCode errcode = 4;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->errcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.MESChatAck)
}

int MESChatAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESChatAck)
  int total_size = 0;

  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // optional string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // optional uint64 sendtime = 3;
  if (this->sendtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sendtime());
  }

  // optional .im.ErrCode errcode = 4;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MESChatAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESChatAck*>(&from));
}

void MESChatAck::MergeFrom(const MESChatAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESChatAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.sendtime() != 0) {
    set_sendtime(from.sendtime());
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void MESChatAck::CopyFrom(const MESChatAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESChatAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESChatAck::IsInitialized() const {

  return true;
}

void MESChatAck::Swap(MESChatAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESChatAck::InternalSwap(MESChatAck* other) {
  suserid_.Swap(&other->suserid_);
  smsgid_.Swap(&other->smsgid_);
  std::swap(sendtime_, other->sendtime_);
  std::swap(errcode_, other->errcode_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string MESChatAck::GetTypeName() const {
  return "im.MESChatAck";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MESChatAck

// optional string sUserId = 1;
void MESChatAck::clear_suserid() {
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESChatAck::suserid() const {
  // @@protoc_insertion_point(field_get:im.MESChatAck.sUserId)
  return suserid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESChatAck::set_suserid(const ::std::string& value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESChatAck.sUserId)
}
 void MESChatAck::set_suserid(const char* value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESChatAck.sUserId)
}
 void MESChatAck::set_suserid(const char* value, size_t size) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESChatAck.sUserId)
}
 ::std::string* MESChatAck::mutable_suserid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESChatAck.sUserId)
  return suserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESChatAck::release_suserid() {
  // @@protoc_insertion_point(field_release:im.MESChatAck.sUserId)
  
  return suserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESChatAck::set_allocated_suserid(::std::string* suserid) {
  if (suserid != NULL) {
    
  } else {
    
  }
  suserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), suserid);
  // @@protoc_insertion_point(field_set_allocated:im.MESChatAck.sUserId)
}

// optional string sMsgId = 2;
void MESChatAck::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESChatAck::smsgid() const {
  // @@protoc_insertion_point(field_get:im.MESChatAck.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESChatAck::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESChatAck.sMsgId)
}
 void MESChatAck::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESChatAck.sMsgId)
}
 void MESChatAck::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESChatAck.sMsgId)
}
 ::std::string* MESChatAck::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESChatAck.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESChatAck::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.MESChatAck.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESChatAck::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.MESChatAck.sMsgId)
}

// optional uint64 sendtime = 3;
void MESChatAck::clear_sendtime() {
  sendtime_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 MESChatAck::sendtime() const {
  // @@protoc_insertion_point(field_get:im.MESChatAck.sendtime)
  return sendtime_;
}
 void MESChatAck::set_sendtime(::google::protobuf::uint64 value) {
  
  sendtime_ = value;
  // @@protoc_insertion_point(field_set:im.MESChatAck.sendtime)
}

// optional .im.ErrCode errcode = 4;
void MESChatAck::clear_errcode() {
  errcode_ = 0;
}
 ::im::ErrCode MESChatAck::errcode() const {
  // @@protoc_insertion_point(field_get:im.MESChatAck.errcode)
  return static_cast< ::im::ErrCode >(errcode_);
}
 void MESChatAck::set_errcode(::im::ErrCode value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:im.MESChatAck.errcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESChatDeliveredAck::kSFromIdFieldNumber;
const int MESChatDeliveredAck::kSToIdFieldNumber;
const int MESChatDeliveredAck::kSMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESChatDeliveredAck::MESChatDeliveredAck()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESChatDeliveredAck)
}

void MESChatDeliveredAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MESChatDeliveredAck::MESChatDeliveredAck(const MESChatDeliveredAck& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.MESChatDeliveredAck)
}

void MESChatDeliveredAck::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MESChatDeliveredAck::~MESChatDeliveredAck() {
  // @@protoc_insertion_point(destructor:im.MESChatDeliveredAck)
  SharedDtor();
}

void MESChatDeliveredAck::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MESChatDeliveredAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MESChatDeliveredAck& MESChatDeliveredAck::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

MESChatDeliveredAck* MESChatDeliveredAck::default_instance_ = NULL;

MESChatDeliveredAck* MESChatDeliveredAck::New(::google::protobuf::Arena* arena) const {
  MESChatDeliveredAck* n = new MESChatDeliveredAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MESChatDeliveredAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESChatDeliveredAck)
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MESChatDeliveredAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.MESChatDeliveredAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sFromId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), this->sfromid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESChatDeliveredAck.sFromId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sToId;
        break;
      }

      // optional string sToId = 2;
      case 2: {
        if (tag == 18) {
         parse_sToId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), this->stoid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESChatDeliveredAck.sToId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 3;
      case 3: {
        if (tag == 26) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESChatDeliveredAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESChatDeliveredAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESChatDeliveredAck)
  return false;
#undef DO_
}

void MESChatDeliveredAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESChatDeliveredAck)
  // optional string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), this->sfromid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESChatDeliveredAck.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // optional string sToId = 2;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), this->stoid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESChatDeliveredAck.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stoid(), output);
  }

  // optional string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESChatDeliveredAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.MESChatDeliveredAck)
}

int MESChatDeliveredAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESChatDeliveredAck)
  int total_size = 0;

  // optional string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // optional string sToId = 2;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // optional string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MESChatDeliveredAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESChatDeliveredAck*>(&from));
}

void MESChatDeliveredAck::MergeFrom(const MESChatDeliveredAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESChatDeliveredAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
}

void MESChatDeliveredAck::CopyFrom(const MESChatDeliveredAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESChatDeliveredAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESChatDeliveredAck::IsInitialized() const {

  return true;
}

void MESChatDeliveredAck::Swap(MESChatDeliveredAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESChatDeliveredAck::InternalSwap(MESChatDeliveredAck* other) {
  sfromid_.Swap(&other->sfromid_);
  stoid_.Swap(&other->stoid_);
  smsgid_.Swap(&other->smsgid_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string MESChatDeliveredAck::GetTypeName() const {
  return "im.MESChatDeliveredAck";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MESChatDeliveredAck

// optional string sFromId = 1;
void MESChatDeliveredAck::clear_sfromid() {
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESChatDeliveredAck::sfromid() const {
  // @@protoc_insertion_point(field_get:im.MESChatDeliveredAck.sFromId)
  return sfromid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESChatDeliveredAck::set_sfromid(const ::std::string& value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESChatDeliveredAck.sFromId)
}
 void MESChatDeliveredAck::set_sfromid(const char* value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESChatDeliveredAck.sFromId)
}
 void MESChatDeliveredAck::set_sfromid(const char* value, size_t size) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESChatDeliveredAck.sFromId)
}
 ::std::string* MESChatDeliveredAck::mutable_sfromid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESChatDeliveredAck.sFromId)
  return sfromid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESChatDeliveredAck::release_sfromid() {
  // @@protoc_insertion_point(field_release:im.MESChatDeliveredAck.sFromId)
  
  return sfromid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESChatDeliveredAck::set_allocated_sfromid(::std::string* sfromid) {
  if (sfromid != NULL) {
    
  } else {
    
  }
  sfromid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sfromid);
  // @@protoc_insertion_point(field_set_allocated:im.MESChatDeliveredAck.sFromId)
}

// optional string sToId = 2;
void MESChatDeliveredAck::clear_stoid() {
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESChatDeliveredAck::stoid() const {
  // @@protoc_insertion_point(field_get:im.MESChatDeliveredAck.sToId)
  return stoid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESChatDeliveredAck::set_stoid(const ::std::string& value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESChatDeliveredAck.sToId)
}
 void MESChatDeliveredAck::set_stoid(const char* value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESChatDeliveredAck.sToId)
}
 void MESChatDeliveredAck::set_stoid(const char* value, size_t size) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESChatDeliveredAck.sToId)
}
 ::std::string* MESChatDeliveredAck::mutable_stoid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESChatDeliveredAck.sToId)
  return stoid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESChatDeliveredAck::release_stoid() {
  // @@protoc_insertion_point(field_release:im.MESChatDeliveredAck.sToId)
  
  return stoid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESChatDeliveredAck::set_allocated_stoid(::std::string* stoid) {
  if (stoid != NULL) {
    
  } else {
    
  }
  stoid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stoid);
  // @@protoc_insertion_point(field_set_allocated:im.MESChatDeliveredAck.sToId)
}

// optional string sMsgId = 3;
void MESChatDeliveredAck::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESChatDeliveredAck::smsgid() const {
  // @@protoc_insertion_point(field_get:im.MESChatDeliveredAck.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESChatDeliveredAck::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESChatDeliveredAck.sMsgId)
}
 void MESChatDeliveredAck::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESChatDeliveredAck.sMsgId)
}
 void MESChatDeliveredAck::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESChatDeliveredAck.sMsgId)
}
 ::std::string* MESChatDeliveredAck::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESChatDeliveredAck.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESChatDeliveredAck::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.MESChatDeliveredAck.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESChatDeliveredAck::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.MESChatDeliveredAck.sMsgId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESChatDeliveredNotificationAck::kSUserIdFieldNumber;
const int MESChatDeliveredNotificationAck::kSMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESChatDeliveredNotificationAck::MESChatDeliveredNotificationAck()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESChatDeliveredNotificationAck)
}

void MESChatDeliveredNotificationAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MESChatDeliveredNotificationAck::MESChatDeliveredNotificationAck(const MESChatDeliveredNotificationAck& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.MESChatDeliveredNotificationAck)
}

void MESChatDeliveredNotificationAck::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MESChatDeliveredNotificationAck::~MESChatDeliveredNotificationAck() {
  // @@protoc_insertion_point(destructor:im.MESChatDeliveredNotificationAck)
  SharedDtor();
}

void MESChatDeliveredNotificationAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MESChatDeliveredNotificationAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MESChatDeliveredNotificationAck& MESChatDeliveredNotificationAck::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

MESChatDeliveredNotificationAck* MESChatDeliveredNotificationAck::default_instance_ = NULL;

MESChatDeliveredNotificationAck* MESChatDeliveredNotificationAck::New(::google::protobuf::Arena* arena) const {
  MESChatDeliveredNotificationAck* n = new MESChatDeliveredNotificationAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MESChatDeliveredNotificationAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESChatDeliveredNotificationAck)
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MESChatDeliveredNotificationAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.MESChatDeliveredNotificationAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sUserId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), this->suserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESChatDeliveredNotificationAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 2;
      case 2: {
        if (tag == 18) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESChatDeliveredNotificationAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESChatDeliveredNotificationAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESChatDeliveredNotificationAck)
  return false;
#undef DO_
}

void MESChatDeliveredNotificationAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESChatDeliveredNotificationAck)
  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), this->suserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESChatDeliveredNotificationAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // optional string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESChatDeliveredNotificationAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.MESChatDeliveredNotificationAck)
}

int MESChatDeliveredNotificationAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESChatDeliveredNotificationAck)
  int total_size = 0;

  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // optional string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MESChatDeliveredNotificationAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESChatDeliveredNotificationAck*>(&from));
}

void MESChatDeliveredNotificationAck::MergeFrom(const MESChatDeliveredNotificationAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESChatDeliveredNotificationAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
}

void MESChatDeliveredNotificationAck::CopyFrom(const MESChatDeliveredNotificationAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESChatDeliveredNotificationAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESChatDeliveredNotificationAck::IsInitialized() const {

  return true;
}

void MESChatDeliveredNotificationAck::Swap(MESChatDeliveredNotificationAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESChatDeliveredNotificationAck::InternalSwap(MESChatDeliveredNotificationAck* other) {
  suserid_.Swap(&other->suserid_);
  smsgid_.Swap(&other->smsgid_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string MESChatDeliveredNotificationAck::GetTypeName() const {
  return "im.MESChatDeliveredNotificationAck";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MESChatDeliveredNotificationAck

// optional string sUserId = 1;
void MESChatDeliveredNotificationAck::clear_suserid() {
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESChatDeliveredNotificationAck::suserid() const {
  // @@protoc_insertion_point(field_get:im.MESChatDeliveredNotificationAck.sUserId)
  return suserid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESChatDeliveredNotificationAck::set_suserid(const ::std::string& value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESChatDeliveredNotificationAck.sUserId)
}
 void MESChatDeliveredNotificationAck::set_suserid(const char* value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESChatDeliveredNotificationAck.sUserId)
}
 void MESChatDeliveredNotificationAck::set_suserid(const char* value, size_t size) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESChatDeliveredNotificationAck.sUserId)
}
 ::std::string* MESChatDeliveredNotificationAck::mutable_suserid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESChatDeliveredNotificationAck.sUserId)
  return suserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESChatDeliveredNotificationAck::release_suserid() {
  // @@protoc_insertion_point(field_release:im.MESChatDeliveredNotificationAck.sUserId)
  
  return suserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESChatDeliveredNotificationAck::set_allocated_suserid(::std::string* suserid) {
  if (suserid != NULL) {
    
  } else {
    
  }
  suserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), suserid);
  // @@protoc_insertion_point(field_set_allocated:im.MESChatDeliveredNotificationAck.sUserId)
}

// optional string sMsgId = 2;
void MESChatDeliveredNotificationAck::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESChatDeliveredNotificationAck::smsgid() const {
  // @@protoc_insertion_point(field_get:im.MESChatDeliveredNotificationAck.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESChatDeliveredNotificationAck::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESChatDeliveredNotificationAck.sMsgId)
}
 void MESChatDeliveredNotificationAck::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESChatDeliveredNotificationAck.sMsgId)
}
 void MESChatDeliveredNotificationAck::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESChatDeliveredNotificationAck.sMsgId)
}
 ::std::string* MESChatDeliveredNotificationAck::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESChatDeliveredNotificationAck.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESChatDeliveredNotificationAck::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.MESChatDeliveredNotificationAck.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESChatDeliveredNotificationAck::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.MESChatDeliveredNotificationAck.sMsgId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgReadResult::kSMsgIdFieldNumber;
const int MsgReadResult::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgReadResult::MsgReadResult()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MsgReadResult)
}

void MsgReadResult::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MsgReadResult::MsgReadResult(const MsgReadResult& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.MsgReadResult)
}

void MsgReadResult::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

MsgReadResult::~MsgReadResult() {
  // @@protoc_insertion_point(destructor:im.MsgReadResult)
  SharedDtor();
}

void MsgReadResult::SharedDtor() {
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MsgReadResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MsgReadResult& MsgReadResult::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

MsgReadResult* MsgReadResult::default_instance_ = NULL;

MsgReadResult* MsgReadResult::New(::google::protobuf::Arena* arena) const {
  MsgReadResult* n = new MsgReadResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgReadResult::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MsgReadResult)
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

bool MsgReadResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.MsgReadResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sMsgId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MsgReadResult.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_errcode;
        break;
      }

      // optional .im.ErrCode errcode = 2;
      case 2: {
        if (tag == 16) {
         parse_errcode:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MsgReadResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MsgReadResult)
  return false;
#undef DO_
}

void MsgReadResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MsgReadResult)
  // optional string sMsgId = 1;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MsgReadResult.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->smsgid(), output);
  }

  // optional .im.ErrCode errcode = 2;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->errcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.MsgReadResult)
}

int MsgReadResult::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.MsgReadResult)
  int total_size = 0;

  // optional string sMsgId = 1;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // optional .im.ErrCode errcode = 2;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgReadResult::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MsgReadResult*>(&from));
}

void MsgReadResult::MergeFrom(const MsgReadResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MsgReadResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void MsgReadResult::CopyFrom(const MsgReadResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MsgReadResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgReadResult::IsInitialized() const {

  return true;
}

void MsgReadResult::Swap(MsgReadResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgReadResult::InternalSwap(MsgReadResult* other) {
  smsgid_.Swap(&other->smsgid_);
  std::swap(errcode_, other->errcode_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string MsgReadResult::GetTypeName() const {
  return "im.MsgReadResult";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgReadResult

// optional string sMsgId = 1;
void MsgReadResult::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MsgReadResult::smsgid() const {
  // @@protoc_insertion_point(field_get:im.MsgReadResult.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgReadResult::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MsgReadResult.sMsgId)
}
 void MsgReadResult::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MsgReadResult.sMsgId)
}
 void MsgReadResult::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MsgReadResult.sMsgId)
}
 ::std::string* MsgReadResult::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.MsgReadResult.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MsgReadResult::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.MsgReadResult.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgReadResult::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.MsgReadResult.sMsgId)
}

// optional .im.ErrCode errcode = 2;
void MsgReadResult::clear_errcode() {
  errcode_ = 0;
}
 ::im::ErrCode MsgReadResult::errcode() const {
  // @@protoc_insertion_point(field_get:im.MsgReadResult.errcode)
  return static_cast< ::im::ErrCode >(errcode_);
}
 void MsgReadResult::set_errcode(::im::ErrCode value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:im.MsgReadResult.errcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESChatRead::kSFromIdFieldNumber;
const int MESChatRead::kSToIdFieldNumber;
const int MESChatRead::kSMsgIdFieldNumber;
const int MESChatRead::kReadResultsFieldNumber;
const int MESChatRead::kReadReceiptOffFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESChatRead::MESChatRead()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESChatRead)
}

void MESChatRead::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MESChatRead::MESChatRead(const MESChatRead& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.MESChatRead)
}

void MESChatRead::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  readreceiptoff_ = 0u;
}

MESChatRead::~MESChatRead() {
  // @@protoc_insertion_point(destructor:im.MESChatRead)
  SharedDtor();
}

void MESChatRead::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MESChatRead::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MESChatRead& MESChatRead::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

MESChatRead* MESChatRead::default_instance_ = NULL;

MESChatRead* MESChatRead::New(::google::protobuf::Arena* arena) const {
  MESChatRead* n = new MESChatRead;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MESChatRead::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESChatRead)
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  readreceiptoff_ = 0u;
  readresults_.Clear();
}

bool MESChatRead::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.MESChatRead)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sFromId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), this->sfromid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESChatRead.sFromId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sToId;
        break;
      }

      // optional string sToId = 2;
      case 2: {
        if (tag == 18) {
         parse_sToId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), this->stoid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESChatRead.sToId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 3;
      case 3: {
        if (tag == 26) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESChatRead.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_readResults;
        break;
      }

      // repeated .im.MsgReadResult readResults = 4;
      case 4: {
        if (tag == 34) {
         parse_readResults:
          DO_(input->IncrementRecursionDepth());
         parse_loop_readResults:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_readresults()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_readResults;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(40)) goto parse_readReceiptOff;
        break;
      }

      // optional uint32 readReceiptOff = 5;
      case 5: {
        if (tag == 40) {
         parse_readReceiptOff:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &readreceiptoff_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESChatRead)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESChatRead)
  return false;
#undef DO_
}

void MESChatRead::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESChatRead)
  // optional string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), this->sfromid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESChatRead.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // optional string sToId = 2;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), this->stoid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESChatRead.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stoid(), output);
  }

  // optional string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESChatRead.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // repeated .im.MsgReadResult readResults = 4;
  for (unsigned int i = 0, n = this->readresults_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4, this->readresults(i), output);
  }

  // optional uint32 readReceiptOff = 5;
  if (this->readreceiptoff() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->readreceiptoff(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.MESChatRead)
}

int MESChatRead::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESChatRead)
  int total_size = 0;

  // optional string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // optional string sToId = 2;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // optional string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // optional uint32 readReceiptOff = 5;
  if (this->readreceiptoff() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->readreceiptoff());
  }

  // repeated .im.MsgReadResult readResults = 4;
  total_size += 1 * this->readresults_size();
  for (int i = 0; i < this->readresults_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->readresults(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MESChatRead::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESChatRead*>(&from));
}

void MESChatRead::MergeFrom(const MESChatRead& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESChatRead)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  readresults_.MergeFrom(from.readresults_);
  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.readreceiptoff() != 0) {
    set_readreceiptoff(from.readreceiptoff());
  }
}

void MESChatRead::CopyFrom(const MESChatRead& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESChatRead)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESChatRead::IsInitialized() const {

  return true;
}

void MESChatRead::Swap(MESChatRead* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESChatRead::InternalSwap(MESChatRead* other) {
  sfromid_.Swap(&other->sfromid_);
  stoid_.Swap(&other->stoid_);
  smsgid_.Swap(&other->smsgid_);
  readresults_.UnsafeArenaSwap(&other->readresults_);
  std::swap(readreceiptoff_, other->readreceiptoff_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string MESChatRead::GetTypeName() const {
  return "im.MESChatRead";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MESChatRead

// optional string sFromId = 1;
void MESChatRead::clear_sfromid() {
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESChatRead::sfromid() const {
  // @@protoc_insertion_point(field_get:im.MESChatRead.sFromId)
  return sfromid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESChatRead::set_sfromid(const ::std::string& value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESChatRead.sFromId)
}
 void MESChatRead::set_sfromid(const char* value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESChatRead.sFromId)
}
 void MESChatRead::set_sfromid(const char* value, size_t size) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESChatRead.sFromId)
}
 ::std::string* MESChatRead::mutable_sfromid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESChatRead.sFromId)
  return sfromid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESChatRead::release_sfromid() {
  // @@protoc_insertion_point(field_release:im.MESChatRead.sFromId)
  
  return sfromid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESChatRead::set_allocated_sfromid(::std::string* sfromid) {
  if (sfromid != NULL) {
    
  } else {
    
  }
  sfromid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sfromid);
  // @@protoc_insertion_point(field_set_allocated:im.MESChatRead.sFromId)
}

// optional string sToId = 2;
void MESChatRead::clear_stoid() {
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESChatRead::stoid() const {
  // @@protoc_insertion_point(field_get:im.MESChatRead.sToId)
  return stoid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESChatRead::set_stoid(const ::std::string& value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESChatRead.sToId)
}
 void MESChatRead::set_stoid(const char* value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESChatRead.sToId)
}
 void MESChatRead::set_stoid(const char* value, size_t size) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESChatRead.sToId)
}
 ::std::string* MESChatRead::mutable_stoid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESChatRead.sToId)
  return stoid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESChatRead::release_stoid() {
  // @@protoc_insertion_point(field_release:im.MESChatRead.sToId)
  
  return stoid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESChatRead::set_allocated_stoid(::std::string* stoid) {
  if (stoid != NULL) {
    
  } else {
    
  }
  stoid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stoid);
  // @@protoc_insertion_point(field_set_allocated:im.MESChatRead.sToId)
}

// optional string sMsgId = 3;
void MESChatRead::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESChatRead::smsgid() const {
  // @@protoc_insertion_point(field_get:im.MESChatRead.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESChatRead::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESChatRead.sMsgId)
}
 void MESChatRead::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESChatRead.sMsgId)
}
 void MESChatRead::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESChatRead.sMsgId)
}
 ::std::string* MESChatRead::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESChatRead.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESChatRead::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.MESChatRead.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESChatRead::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.MESChatRead.sMsgId)
}

// repeated .im.MsgReadResult readResults = 4;
int MESChatRead::readresults_size() const {
  return readresults_.size();
}
void MESChatRead::clear_readresults() {
  readresults_.Clear();
}
const ::im::MsgReadResult& MESChatRead::readresults(int index) const {
  // @@protoc_insertion_point(field_get:im.MESChatRead.readResults)
  return readresults_.Get(index);
}
::im::MsgReadResult* MESChatRead::mutable_readresults(int index) {
  // @@protoc_insertion_point(field_mutable:im.MESChatRead.readResults)
  return readresults_.Mutable(index);
}
::im::MsgReadResult* MESChatRead::add_readresults() {
  // @@protoc_insertion_point(field_add:im.MESChatRead.readResults)
  return readresults_.Add();
}
::google::protobuf::RepeatedPtrField< ::im::MsgReadResult >*
MESChatRead::mutable_readresults() {
  // @@protoc_insertion_point(field_mutable_list:im.MESChatRead.readResults)
  return &readresults_;
}
const ::google::protobuf::RepeatedPtrField< ::im::MsgReadResult >&
MESChatRead::readresults() const {
  // @@protoc_insertion_point(field_list:im.MESChatRead.readResults)
  return readresults_;
}

// optional uint32 readReceiptOff = 5;
void MESChatRead::clear_readreceiptoff() {
  readreceiptoff_ = 0u;
}
 ::google::protobuf::uint32 MESChatRead::readreceiptoff() const {
  // @@protoc_insertion_point(field_get:im.MESChatRead.readReceiptOff)
  return readreceiptoff_;
}
 void MESChatRead::set_readreceiptoff(::google::protobuf::uint32 value) {
  
  readreceiptoff_ = value;
  // @@protoc_insertion_point(field_set:im.MESChatRead.readReceiptOff)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESChatReadAck::kSUserIdFieldNumber;
const int MESChatReadAck::kSMsgIdFieldNumber;
const int MESChatReadAck::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESChatReadAck::MESChatReadAck()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESChatReadAck)
}

void MESChatReadAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MESChatReadAck::MESChatReadAck(const MESChatReadAck& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.MESChatReadAck)
}

void MESChatReadAck::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

MESChatReadAck::~MESChatReadAck() {
  // @@protoc_insertion_point(destructor:im.MESChatReadAck)
  SharedDtor();
}

void MESChatReadAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MESChatReadAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MESChatReadAck& MESChatReadAck::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

MESChatReadAck* MESChatReadAck::default_instance_ = NULL;

MESChatReadAck* MESChatReadAck::New(::google::protobuf::Arena* arena) const {
  MESChatReadAck* n = new MESChatReadAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MESChatReadAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESChatReadAck)
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

bool MESChatReadAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.MESChatReadAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sUserId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), this->suserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESChatReadAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 2;
      case 2: {
        if (tag == 18) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESChatReadAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_errcode;
        break;
      }

      // optional .im.ErrCode errcode = 3;
      case 3: {
        if (tag == 24) {
         parse_errcode:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESChatReadAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESChatReadAck)
  return false;
#undef DO_
}

void MESChatReadAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESChatReadAck)
  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), this->suserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESChatReadAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // optional string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESChatReadAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  // optional .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->errcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.MESChatReadAck)
}

int MESChatReadAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESChatReadAck)
  int total_size = 0;

  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // optional string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // optional .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MESChatReadAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESChatReadAck*>(&from));
}

void MESChatReadAck::MergeFrom(const MESChatReadAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESChatReadAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void MESChatReadAck::CopyFrom(const MESChatReadAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESChatReadAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESChatReadAck::IsInitialized() const {

  return true;
}

void MESChatReadAck::Swap(MESChatReadAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESChatReadAck::InternalSwap(MESChatReadAck* other) {
  suserid_.Swap(&other->suserid_);
  smsgid_.Swap(&other->smsgid_);
  std::swap(errcode_, other->errcode_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string MESChatReadAck::GetTypeName() const {
  return "im.MESChatReadAck";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MESChatReadAck

// optional string sUserId = 1;
void MESChatReadAck::clear_suserid() {
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESChatReadAck::suserid() const {
  // @@protoc_insertion_point(field_get:im.MESChatReadAck.sUserId)
  return suserid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESChatReadAck::set_suserid(const ::std::string& value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESChatReadAck.sUserId)
}
 void MESChatReadAck::set_suserid(const char* value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESChatReadAck.sUserId)
}
 void MESChatReadAck::set_suserid(const char* value, size_t size) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESChatReadAck.sUserId)
}
 ::std::string* MESChatReadAck::mutable_suserid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESChatReadAck.sUserId)
  return suserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESChatReadAck::release_suserid() {
  // @@protoc_insertion_point(field_release:im.MESChatReadAck.sUserId)
  
  return suserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESChatReadAck::set_allocated_suserid(::std::string* suserid) {
  if (suserid != NULL) {
    
  } else {
    
  }
  suserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), suserid);
  // @@protoc_insertion_point(field_set_allocated:im.MESChatReadAck.sUserId)
}

// optional string sMsgId = 2;
void MESChatReadAck::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESChatReadAck::smsgid() const {
  // @@protoc_insertion_point(field_get:im.MESChatReadAck.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESChatReadAck::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESChatReadAck.sMsgId)
}
 void MESChatReadAck::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESChatReadAck.sMsgId)
}
 void MESChatReadAck::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESChatReadAck.sMsgId)
}
 ::std::string* MESChatReadAck::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESChatReadAck.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESChatReadAck::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.MESChatReadAck.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESChatReadAck::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.MESChatReadAck.sMsgId)
}

// optional .im.ErrCode errcode = 3;
void MESChatReadAck::clear_errcode() {
  errcode_ = 0;
}
 ::im::ErrCode MESChatReadAck::errcode() const {
  // @@protoc_insertion_point(field_get:im.MESChatReadAck.errcode)
  return static_cast< ::im::ErrCode >(errcode_);
}
 void MESChatReadAck::set_errcode(::im::ErrCode value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:im.MESChatReadAck.errcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESChatReadDelivereAck::kSUserIdFieldNumber;
const int MESChatReadDelivereAck::kSMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESChatReadDelivereAck::MESChatReadDelivereAck()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESChatReadDelivereAck)
}

void MESChatReadDelivereAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MESChatReadDelivereAck::MESChatReadDelivereAck(const MESChatReadDelivereAck& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.MESChatReadDelivereAck)
}

void MESChatReadDelivereAck::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MESChatReadDelivereAck::~MESChatReadDelivereAck() {
  // @@protoc_insertion_point(destructor:im.MESChatReadDelivereAck)
  SharedDtor();
}

void MESChatReadDelivereAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MESChatReadDelivereAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MESChatReadDelivereAck& MESChatReadDelivereAck::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

MESChatReadDelivereAck* MESChatReadDelivereAck::default_instance_ = NULL;

MESChatReadDelivereAck* MESChatReadDelivereAck::New(::google::protobuf::Arena* arena) const {
  MESChatReadDelivereAck* n = new MESChatReadDelivereAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MESChatReadDelivereAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESChatReadDelivereAck)
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MESChatReadDelivereAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.MESChatReadDelivereAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sUserId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), this->suserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESChatReadDelivereAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 2;
      case 2: {
        if (tag == 18) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESChatReadDelivereAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESChatReadDelivereAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESChatReadDelivereAck)
  return false;
#undef DO_
}

void MESChatReadDelivereAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESChatReadDelivereAck)
  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), this->suserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESChatReadDelivereAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // optional string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESChatReadDelivereAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.MESChatReadDelivereAck)
}

int MESChatReadDelivereAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESChatReadDelivereAck)
  int total_size = 0;

  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // optional string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MESChatReadDelivereAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESChatReadDelivereAck*>(&from));
}

void MESChatReadDelivereAck::MergeFrom(const MESChatReadDelivereAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESChatReadDelivereAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
}

void MESChatReadDelivereAck::CopyFrom(const MESChatReadDelivereAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESChatReadDelivereAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESChatReadDelivereAck::IsInitialized() const {

  return true;
}

void MESChatReadDelivereAck::Swap(MESChatReadDelivereAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESChatReadDelivereAck::InternalSwap(MESChatReadDelivereAck* other) {
  suserid_.Swap(&other->suserid_);
  smsgid_.Swap(&other->smsgid_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string MESChatReadDelivereAck::GetTypeName() const {
  return "im.MESChatReadDelivereAck";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MESChatReadDelivereAck

// optional string sUserId = 1;
void MESChatReadDelivereAck::clear_suserid() {
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESChatReadDelivereAck::suserid() const {
  // @@protoc_insertion_point(field_get:im.MESChatReadDelivereAck.sUserId)
  return suserid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESChatReadDelivereAck::set_suserid(const ::std::string& value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESChatReadDelivereAck.sUserId)
}
 void MESChatReadDelivereAck::set_suserid(const char* value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESChatReadDelivereAck.sUserId)
}
 void MESChatReadDelivereAck::set_suserid(const char* value, size_t size) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESChatReadDelivereAck.sUserId)
}
 ::std::string* MESChatReadDelivereAck::mutable_suserid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESChatReadDelivereAck.sUserId)
  return suserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESChatReadDelivereAck::release_suserid() {
  // @@protoc_insertion_point(field_release:im.MESChatReadDelivereAck.sUserId)
  
  return suserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESChatReadDelivereAck::set_allocated_suserid(::std::string* suserid) {
  if (suserid != NULL) {
    
  } else {
    
  }
  suserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), suserid);
  // @@protoc_insertion_point(field_set_allocated:im.MESChatReadDelivereAck.sUserId)
}

// optional string sMsgId = 2;
void MESChatReadDelivereAck::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESChatReadDelivereAck::smsgid() const {
  // @@protoc_insertion_point(field_get:im.MESChatReadDelivereAck.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESChatReadDelivereAck::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESChatReadDelivereAck.sMsgId)
}
 void MESChatReadDelivereAck::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESChatReadDelivereAck.sMsgId)
}
 void MESChatReadDelivereAck::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESChatReadDelivereAck.sMsgId)
}
 ::std::string* MESChatReadDelivereAck::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESChatReadDelivereAck.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESChatReadDelivereAck::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.MESChatReadDelivereAck.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESChatReadDelivereAck::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.MESChatReadDelivereAck.sMsgId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OfflineTotal::kCmdIdFieldNumber;
const int OfflineTotal::kSFromIdFieldNumber;
const int OfflineTotal::kSToIdFieldNumber;
const int OfflineTotal::kUnreadTotalFieldNumber;
const int OfflineTotal::kUnreadChatCountFieldNumber;
const int OfflineTotal::kSRecentcontentFieldNumber;
const int OfflineTotal::kRecenttimestampFieldNumber;
const int OfflineTotal::kSRecentMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OfflineTotal::OfflineTotal()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.OfflineTotal)
}

void OfflineTotal::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

OfflineTotal::OfflineTotal(const OfflineTotal& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.OfflineTotal)
}

void OfflineTotal::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  cmdid_ = 0u;
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unreadtotal_ = 0;
  unreadchatcount_ = 0;
  srecentcontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recenttimestamp_ = GOOGLE_ULONGLONG(0);
  srecentmsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

OfflineTotal::~OfflineTotal() {
  // @@protoc_insertion_point(destructor:im.OfflineTotal)
  SharedDtor();
}

void OfflineTotal::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  srecentcontent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  srecentmsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void OfflineTotal::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const OfflineTotal& OfflineTotal::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

OfflineTotal* OfflineTotal::default_instance_ = NULL;

OfflineTotal* OfflineTotal::New(::google::protobuf::Arena* arena) const {
  OfflineTotal* n = new OfflineTotal;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OfflineTotal::Clear() {
// @@protoc_insertion_point(message_clear_start:im.OfflineTotal)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(OfflineTotal, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<OfflineTotal*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(cmdid_, unreadtotal_);
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unreadchatcount_ = 0;
  srecentcontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recenttimestamp_ = GOOGLE_ULONGLONG(0);
  srecentmsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool OfflineTotal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.OfflineTotal)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 cmdId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cmdid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sFromId;
        break;
      }

      // optional string sFromId = 2;
      case 2: {
        if (tag == 18) {
         parse_sFromId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), this->sfromid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.OfflineTotal.sFromId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sToId;
        break;
      }

      // optional string sToId = 3;
      case 3: {
        if (tag == 26) {
         parse_sToId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), this->stoid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.OfflineTotal.sToId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_unreadTotal;
        break;
      }

      // optional int32 unreadTotal = 4;
      case 4: {
        if (tag == 32) {
         parse_unreadTotal:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unreadtotal_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_unreadChatCount;
        break;
      }

      // optional int32 unreadChatCount = 5;
      case 5: {
        if (tag == 40) {
         parse_unreadChatCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unreadchatcount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_sRecentcontent;
        break;
      }

      // optional bytes sRecentcontent = 6;
      case 6: {
        if (tag == 50) {
         parse_sRecentcontent:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_srecentcontent()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_recenttimestamp;
        break;
      }

      // optional uint64 recenttimestamp = 7;
      case 7: {
        if (tag == 56) {
         parse_recenttimestamp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &recenttimestamp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_sRecentMsgId;
        break;
      }

      // optional string sRecentMsgId = 8;
      case 8: {
        if (tag == 66) {
         parse_sRecentMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_srecentmsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->srecentmsgid().data(), this->srecentmsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.OfflineTotal.sRecentMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.OfflineTotal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.OfflineTotal)
  return false;
#undef DO_
}

void OfflineTotal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.OfflineTotal)
  // optional uint32 cmdId = 1;
  if (this->cmdid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->cmdid(), output);
  }

  // optional string sFromId = 2;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), this->sfromid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.OfflineTotal.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sfromid(), output);
  }

  // optional string sToId = 3;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), this->stoid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.OfflineTotal.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->stoid(), output);
  }

  // optional int32 unreadTotal = 4;
  if (this->unreadtotal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->unreadtotal(), output);
  }

  // optional int32 unreadChatCount = 5;
  if (this->unreadchatcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->unreadchatcount(), output);
  }

  // optional bytes sRecentcontent = 6;
  if (this->srecentcontent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->srecentcontent(), output);
  }

  // optional uint64 recenttimestamp = 7;
  if (this->recenttimestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->recenttimestamp(), output);
  }

  // optional string sRecentMsgId = 8;
  if (this->srecentmsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->srecentmsgid().data(), this->srecentmsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.OfflineTotal.sRecentMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->srecentmsgid(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.OfflineTotal)
}

int OfflineTotal::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.OfflineTotal)
  int total_size = 0;

  // optional uint32 cmdId = 1;
  if (this->cmdid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cmdid());
  }

  // optional string sFromId = 2;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // optional string sToId = 3;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // optional int32 unreadTotal = 4;
  if (this->unreadtotal() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->unreadtotal());
  }

  // optional int32 unreadChatCount = 5;
  if (this->unreadchatcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->unreadchatcount());
  }

  // optional bytes sRecentcontent = 6;
  if (this->srecentcontent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->srecentcontent());
  }

  // optional uint64 recenttimestamp = 7;
  if (this->recenttimestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->recenttimestamp());
  }

  // optional string sRecentMsgId = 8;
  if (this->srecentmsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->srecentmsgid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OfflineTotal::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const OfflineTotal*>(&from));
}

void OfflineTotal::MergeFrom(const OfflineTotal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.OfflineTotal)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.cmdid() != 0) {
    set_cmdid(from.cmdid());
  }
  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.unreadtotal() != 0) {
    set_unreadtotal(from.unreadtotal());
  }
  if (from.unreadchatcount() != 0) {
    set_unreadchatcount(from.unreadchatcount());
  }
  if (from.srecentcontent().size() > 0) {

    srecentcontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.srecentcontent_);
  }
  if (from.recenttimestamp() != 0) {
    set_recenttimestamp(from.recenttimestamp());
  }
  if (from.srecentmsgid().size() > 0) {

    srecentmsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.srecentmsgid_);
  }
}

void OfflineTotal::CopyFrom(const OfflineTotal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.OfflineTotal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OfflineTotal::IsInitialized() const {

  return true;
}

void OfflineTotal::Swap(OfflineTotal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OfflineTotal::InternalSwap(OfflineTotal* other) {
  std::swap(cmdid_, other->cmdid_);
  sfromid_.Swap(&other->sfromid_);
  stoid_.Swap(&other->stoid_);
  std::swap(unreadtotal_, other->unreadtotal_);
  std::swap(unreadchatcount_, other->unreadchatcount_);
  srecentcontent_.Swap(&other->srecentcontent_);
  std::swap(recenttimestamp_, other->recenttimestamp_);
  srecentmsgid_.Swap(&other->srecentmsgid_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string OfflineTotal::GetTypeName() const {
  return "im.OfflineTotal";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OfflineTotal

// optional uint32 cmdId = 1;
void OfflineTotal::clear_cmdid() {
  cmdid_ = 0u;
}
 ::google::protobuf::uint32 OfflineTotal::cmdid() const {
  // @@protoc_insertion_point(field_get:im.OfflineTotal.cmdId)
  return cmdid_;
}
 void OfflineTotal::set_cmdid(::google::protobuf::uint32 value) {
  
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:im.OfflineTotal.cmdId)
}

// optional string sFromId = 2;
void OfflineTotal::clear_sfromid() {
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& OfflineTotal::sfromid() const {
  // @@protoc_insertion_point(field_get:im.OfflineTotal.sFromId)
  return sfromid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OfflineTotal::set_sfromid(const ::std::string& value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.OfflineTotal.sFromId)
}
 void OfflineTotal::set_sfromid(const char* value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.OfflineTotal.sFromId)
}
 void OfflineTotal::set_sfromid(const char* value, size_t size) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.OfflineTotal.sFromId)
}
 ::std::string* OfflineTotal::mutable_sfromid() {
  
  // @@protoc_insertion_point(field_mutable:im.OfflineTotal.sFromId)
  return sfromid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* OfflineTotal::release_sfromid() {
  // @@protoc_insertion_point(field_release:im.OfflineTotal.sFromId)
  
  return sfromid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OfflineTotal::set_allocated_sfromid(::std::string* sfromid) {
  if (sfromid != NULL) {
    
  } else {
    
  }
  sfromid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sfromid);
  // @@protoc_insertion_point(field_set_allocated:im.OfflineTotal.sFromId)
}

// optional string sToId = 3;
void OfflineTotal::clear_stoid() {
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& OfflineTotal::stoid() const {
  // @@protoc_insertion_point(field_get:im.OfflineTotal.sToId)
  return stoid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OfflineTotal::set_stoid(const ::std::string& value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.OfflineTotal.sToId)
}
 void OfflineTotal::set_stoid(const char* value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.OfflineTotal.sToId)
}
 void OfflineTotal::set_stoid(const char* value, size_t size) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.OfflineTotal.sToId)
}
 ::std::string* OfflineTotal::mutable_stoid() {
  
  // @@protoc_insertion_point(field_mutable:im.OfflineTotal.sToId)
  return stoid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* OfflineTotal::release_stoid() {
  // @@protoc_insertion_point(field_release:im.OfflineTotal.sToId)
  
  return stoid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OfflineTotal::set_allocated_stoid(::std::string* stoid) {
  if (stoid != NULL) {
    
  } else {
    
  }
  stoid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stoid);
  // @@protoc_insertion_point(field_set_allocated:im.OfflineTotal.sToId)
}

// optional int32 unreadTotal = 4;
void OfflineTotal::clear_unreadtotal() {
  unreadtotal_ = 0;
}
 ::google::protobuf::int32 OfflineTotal::unreadtotal() const {
  // @@protoc_insertion_point(field_get:im.OfflineTotal.unreadTotal)
  return unreadtotal_;
}
 void OfflineTotal::set_unreadtotal(::google::protobuf::int32 value) {
  
  unreadtotal_ = value;
  // @@protoc_insertion_point(field_set:im.OfflineTotal.unreadTotal)
}

// optional int32 unreadChatCount = 5;
void OfflineTotal::clear_unreadchatcount() {
  unreadchatcount_ = 0;
}
 ::google::protobuf::int32 OfflineTotal::unreadchatcount() const {
  // @@protoc_insertion_point(field_get:im.OfflineTotal.unreadChatCount)
  return unreadchatcount_;
}
 void OfflineTotal::set_unreadchatcount(::google::protobuf::int32 value) {
  
  unreadchatcount_ = value;
  // @@protoc_insertion_point(field_set:im.OfflineTotal.unreadChatCount)
}

// optional bytes sRecentcontent = 6;
void OfflineTotal::clear_srecentcontent() {
  srecentcontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& OfflineTotal::srecentcontent() const {
  // @@protoc_insertion_point(field_get:im.OfflineTotal.sRecentcontent)
  return srecentcontent_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OfflineTotal::set_srecentcontent(const ::std::string& value) {
  
  srecentcontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.OfflineTotal.sRecentcontent)
}
 void OfflineTotal::set_srecentcontent(const char* value) {
  
  srecentcontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.OfflineTotal.sRecentcontent)
}
 void OfflineTotal::set_srecentcontent(const void* value, size_t size) {
  
  srecentcontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.OfflineTotal.sRecentcontent)
}
 ::std::string* OfflineTotal::mutable_srecentcontent() {
  
  // @@protoc_insertion_point(field_mutable:im.OfflineTotal.sRecentcontent)
  return srecentcontent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* OfflineTotal::release_srecentcontent() {
  // @@protoc_insertion_point(field_release:im.OfflineTotal.sRecentcontent)
  
  return srecentcontent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OfflineTotal::set_allocated_srecentcontent(::std::string* srecentcontent) {
  if (srecentcontent != NULL) {
    
  } else {
    
  }
  srecentcontent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), srecentcontent);
  // @@protoc_insertion_point(field_set_allocated:im.OfflineTotal.sRecentcontent)
}

// optional uint64 recenttimestamp = 7;
void OfflineTotal::clear_recenttimestamp() {
  recenttimestamp_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 OfflineTotal::recenttimestamp() const {
  // @@protoc_insertion_point(field_get:im.OfflineTotal.recenttimestamp)
  return recenttimestamp_;
}
 void OfflineTotal::set_recenttimestamp(::google::protobuf::uint64 value) {
  
  recenttimestamp_ = value;
  // @@protoc_insertion_point(field_set:im.OfflineTotal.recenttimestamp)
}

// optional string sRecentMsgId = 8;
void OfflineTotal::clear_srecentmsgid() {
  srecentmsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& OfflineTotal::srecentmsgid() const {
  // @@protoc_insertion_point(field_get:im.OfflineTotal.sRecentMsgId)
  return srecentmsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OfflineTotal::set_srecentmsgid(const ::std::string& value) {
  
  srecentmsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.OfflineTotal.sRecentMsgId)
}
 void OfflineTotal::set_srecentmsgid(const char* value) {
  
  srecentmsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.OfflineTotal.sRecentMsgId)
}
 void OfflineTotal::set_srecentmsgid(const char* value, size_t size) {
  
  srecentmsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.OfflineTotal.sRecentMsgId)
}
 ::std::string* OfflineTotal::mutable_srecentmsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.OfflineTotal.sRecentMsgId)
  return srecentmsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* OfflineTotal::release_srecentmsgid() {
  // @@protoc_insertion_point(field_release:im.OfflineTotal.sRecentMsgId)
  
  return srecentmsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OfflineTotal::set_allocated_srecentmsgid(::std::string* srecentmsgid) {
  if (srecentmsgid != NULL) {
    
  } else {
    
  }
  srecentmsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), srecentmsgid);
  // @@protoc_insertion_point(field_set_allocated:im.OfflineTotal.sRecentMsgId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESOfflineSummary::kSUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESOfflineSummary::MESOfflineSummary()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESOfflineSummary)
}

void MESOfflineSummary::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MESOfflineSummary::MESOfflineSummary(const MESOfflineSummary& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.MESOfflineSummary)
}

void MESOfflineSummary::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MESOfflineSummary::~MESOfflineSummary() {
  // @@protoc_insertion_point(destructor:im.MESOfflineSummary)
  SharedDtor();
}

void MESOfflineSummary::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MESOfflineSummary::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MESOfflineSummary& MESOfflineSummary::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

MESOfflineSummary* MESOfflineSummary::default_instance_ = NULL;

MESOfflineSummary* MESOfflineSummary::New(::google::protobuf::Arena* arena) const {
  MESOfflineSummary* n = new MESOfflineSummary;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MESOfflineSummary::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESOfflineSummary)
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MESOfflineSummary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.MESOfflineSummary)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sUserId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), this->suserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESOfflineSummary.sUserId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESOfflineSummary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESOfflineSummary)
  return false;
#undef DO_
}

void MESOfflineSummary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESOfflineSummary)
  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), this->suserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESOfflineSummary.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.MESOfflineSummary)
}

int MESOfflineSummary::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESOfflineSummary)
  int total_size = 0;

  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MESOfflineSummary::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESOfflineSummary*>(&from));
}

void MESOfflineSummary::MergeFrom(const MESOfflineSummary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESOfflineSummary)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
}

void MESOfflineSummary::CopyFrom(const MESOfflineSummary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESOfflineSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESOfflineSummary::IsInitialized() const {

  return true;
}

void MESOfflineSummary::Swap(MESOfflineSummary* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESOfflineSummary::InternalSwap(MESOfflineSummary* other) {
  suserid_.Swap(&other->suserid_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string MESOfflineSummary::GetTypeName() const {
  return "im.MESOfflineSummary";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MESOfflineSummary

// optional string sUserId = 1;
void MESOfflineSummary::clear_suserid() {
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESOfflineSummary::suserid() const {
  // @@protoc_insertion_point(field_get:im.MESOfflineSummary.sUserId)
  return suserid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESOfflineSummary::set_suserid(const ::std::string& value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESOfflineSummary.sUserId)
}
 void MESOfflineSummary::set_suserid(const char* value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESOfflineSummary.sUserId)
}
 void MESOfflineSummary::set_suserid(const char* value, size_t size) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESOfflineSummary.sUserId)
}
 ::std::string* MESOfflineSummary::mutable_suserid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESOfflineSummary.sUserId)
  return suserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESOfflineSummary::release_suserid() {
  // @@protoc_insertion_point(field_release:im.MESOfflineSummary.sUserId)
  
  return suserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESOfflineSummary::set_allocated_suserid(::std::string* suserid) {
  if (suserid != NULL) {
    
  } else {
    
  }
  suserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), suserid);
  // @@protoc_insertion_point(field_set_allocated:im.MESOfflineSummary.sUserId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESOfflineSummaryAck::kSUserIdFieldNumber;
const int MESOfflineSummaryAck::kOfflineTotalsFieldNumber;
const int MESOfflineSummaryAck::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESOfflineSummaryAck::MESOfflineSummaryAck()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESOfflineSummaryAck)
}

void MESOfflineSummaryAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MESOfflineSummaryAck::MESOfflineSummaryAck(const MESOfflineSummaryAck& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.MESOfflineSummaryAck)
}

void MESOfflineSummaryAck::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

MESOfflineSummaryAck::~MESOfflineSummaryAck() {
  // @@protoc_insertion_point(destructor:im.MESOfflineSummaryAck)
  SharedDtor();
}

void MESOfflineSummaryAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MESOfflineSummaryAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MESOfflineSummaryAck& MESOfflineSummaryAck::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

MESOfflineSummaryAck* MESOfflineSummaryAck::default_instance_ = NULL;

MESOfflineSummaryAck* MESOfflineSummaryAck::New(::google::protobuf::Arena* arena) const {
  MESOfflineSummaryAck* n = new MESOfflineSummaryAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MESOfflineSummaryAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESOfflineSummaryAck)
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
  offlinetotals_.Clear();
}

bool MESOfflineSummaryAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.MESOfflineSummaryAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sUserId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), this->suserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESOfflineSummaryAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_offlineTotals;
        break;
      }

      // repeated .im.OfflineTotal offlineTotals = 2;
      case 2: {
        if (tag == 18) {
         parse_offlineTotals:
          DO_(input->IncrementRecursionDepth());
         parse_loop_offlineTotals:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_offlinetotals()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_offlineTotals;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(24)) goto parse_errcode;
        break;
      }

      // optional .im.ErrCode errcode = 3;
      case 3: {
        if (tag == 24) {
         parse_errcode:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESOfflineSummaryAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESOfflineSummaryAck)
  return false;
#undef DO_
}

void MESOfflineSummaryAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESOfflineSummaryAck)
  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), this->suserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESOfflineSummaryAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // repeated .im.OfflineTotal offlineTotals = 2;
  for (unsigned int i = 0, n = this->offlinetotals_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, this->offlinetotals(i), output);
  }

  // optional .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->errcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.MESOfflineSummaryAck)
}

int MESOfflineSummaryAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESOfflineSummaryAck)
  int total_size = 0;

  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // optional .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  // repeated .im.OfflineTotal offlineTotals = 2;
  total_size += 1 * this->offlinetotals_size();
  for (int i = 0; i < this->offlinetotals_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->offlinetotals(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MESOfflineSummaryAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESOfflineSummaryAck*>(&from));
}

void MESOfflineSummaryAck::MergeFrom(const MESOfflineSummaryAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESOfflineSummaryAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  offlinetotals_.MergeFrom(from.offlinetotals_);
  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void MESOfflineSummaryAck::CopyFrom(const MESOfflineSummaryAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESOfflineSummaryAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESOfflineSummaryAck::IsInitialized() const {

  return true;
}

void MESOfflineSummaryAck::Swap(MESOfflineSummaryAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESOfflineSummaryAck::InternalSwap(MESOfflineSummaryAck* other) {
  suserid_.Swap(&other->suserid_);
  offlinetotals_.UnsafeArenaSwap(&other->offlinetotals_);
  std::swap(errcode_, other->errcode_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string MESOfflineSummaryAck::GetTypeName() const {
  return "im.MESOfflineSummaryAck";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MESOfflineSummaryAck

// optional string sUserId = 1;
void MESOfflineSummaryAck::clear_suserid() {
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESOfflineSummaryAck::suserid() const {
  // @@protoc_insertion_point(field_get:im.MESOfflineSummaryAck.sUserId)
  return suserid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESOfflineSummaryAck::set_suserid(const ::std::string& value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESOfflineSummaryAck.sUserId)
}
 void MESOfflineSummaryAck::set_suserid(const char* value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESOfflineSummaryAck.sUserId)
}
 void MESOfflineSummaryAck::set_suserid(const char* value, size_t size) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESOfflineSummaryAck.sUserId)
}
 ::std::string* MESOfflineSummaryAck::mutable_suserid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESOfflineSummaryAck.sUserId)
  return suserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESOfflineSummaryAck::release_suserid() {
  // @@protoc_insertion_point(field_release:im.MESOfflineSummaryAck.sUserId)
  
  return suserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESOfflineSummaryAck::set_allocated_suserid(::std::string* suserid) {
  if (suserid != NULL) {
    
  } else {
    
  }
  suserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), suserid);
  // @@protoc_insertion_point(field_set_allocated:im.MESOfflineSummaryAck.sUserId)
}

// repeated .im.OfflineTotal offlineTotals = 2;
int MESOfflineSummaryAck::offlinetotals_size() const {
  return offlinetotals_.size();
}
void MESOfflineSummaryAck::clear_offlinetotals() {
  offlinetotals_.Clear();
}
const ::im::OfflineTotal& MESOfflineSummaryAck::offlinetotals(int index) const {
  // @@protoc_insertion_point(field_get:im.MESOfflineSummaryAck.offlineTotals)
  return offlinetotals_.Get(index);
}
::im::OfflineTotal* MESOfflineSummaryAck::mutable_offlinetotals(int index) {
  // @@protoc_insertion_point(field_mutable:im.MESOfflineSummaryAck.offlineTotals)
  return offlinetotals_.Mutable(index);
}
::im::OfflineTotal* MESOfflineSummaryAck::add_offlinetotals() {
  // @@protoc_insertion_point(field_add:im.MESOfflineSummaryAck.offlineTotals)
  return offlinetotals_.Add();
}
::google::protobuf::RepeatedPtrField< ::im::OfflineTotal >*
MESOfflineSummaryAck::mutable_offlinetotals() {
  // @@protoc_insertion_point(field_mutable_list:im.MESOfflineSummaryAck.offlineTotals)
  return &offlinetotals_;
}
const ::google::protobuf::RepeatedPtrField< ::im::OfflineTotal >&
MESOfflineSummaryAck::offlinetotals() const {
  // @@protoc_insertion_point(field_list:im.MESOfflineSummaryAck.offlineTotals)
  return offlinetotals_;
}

// optional .im.ErrCode errcode = 3;
void MESOfflineSummaryAck::clear_errcode() {
  errcode_ = 0;
}
 ::im::ErrCode MESOfflineSummaryAck::errcode() const {
  // @@protoc_insertion_point(field_get:im.MESOfflineSummaryAck.errcode)
  return static_cast< ::im::ErrCode >(errcode_);
}
 void MESOfflineSummaryAck::set_errcode(::im::ErrCode value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:im.MESOfflineSummaryAck.errcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESOfflineTotal::kCmdIdFieldNumber;
const int MESOfflineTotal::kSFromIdFieldNumber;
const int MESOfflineTotal::kSToIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESOfflineTotal::MESOfflineTotal()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESOfflineTotal)
}

void MESOfflineTotal::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MESOfflineTotal::MESOfflineTotal(const MESOfflineTotal& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.MESOfflineTotal)
}

void MESOfflineTotal::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  cmdid_ = 0u;
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MESOfflineTotal::~MESOfflineTotal() {
  // @@protoc_insertion_point(destructor:im.MESOfflineTotal)
  SharedDtor();
}

void MESOfflineTotal::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MESOfflineTotal::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MESOfflineTotal& MESOfflineTotal::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

MESOfflineTotal* MESOfflineTotal::default_instance_ = NULL;

MESOfflineTotal* MESOfflineTotal::New(::google::protobuf::Arena* arena) const {
  MESOfflineTotal* n = new MESOfflineTotal;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MESOfflineTotal::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESOfflineTotal)
  cmdid_ = 0u;
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MESOfflineTotal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.MESOfflineTotal)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 cmdId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cmdid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sFromId;
        break;
      }

      // optional string sFromId = 2;
      case 2: {
        if (tag == 18) {
         parse_sFromId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), this->sfromid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESOfflineTotal.sFromId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sToId;
        break;
      }

      // optional string sToId = 3;
      case 3: {
        if (tag == 26) {
         parse_sToId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), this->stoid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESOfflineTotal.sToId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESOfflineTotal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESOfflineTotal)
  return false;
#undef DO_
}

void MESOfflineTotal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESOfflineTotal)
  // optional uint32 cmdId = 1;
  if (this->cmdid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->cmdid(), output);
  }

  // optional string sFromId = 2;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), this->sfromid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESOfflineTotal.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sfromid(), output);
  }

  // optional string sToId = 3;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), this->stoid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESOfflineTotal.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->stoid(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.MESOfflineTotal)
}

int MESOfflineTotal::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESOfflineTotal)
  int total_size = 0;

  // optional uint32 cmdId = 1;
  if (this->cmdid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cmdid());
  }

  // optional string sFromId = 2;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // optional string sToId = 3;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MESOfflineTotal::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESOfflineTotal*>(&from));
}

void MESOfflineTotal::MergeFrom(const MESOfflineTotal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESOfflineTotal)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.cmdid() != 0) {
    set_cmdid(from.cmdid());
  }
  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
}

void MESOfflineTotal::CopyFrom(const MESOfflineTotal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESOfflineTotal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESOfflineTotal::IsInitialized() const {

  return true;
}

void MESOfflineTotal::Swap(MESOfflineTotal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESOfflineTotal::InternalSwap(MESOfflineTotal* other) {
  std::swap(cmdid_, other->cmdid_);
  sfromid_.Swap(&other->sfromid_);
  stoid_.Swap(&other->stoid_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string MESOfflineTotal::GetTypeName() const {
  return "im.MESOfflineTotal";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MESOfflineTotal

// optional uint32 cmdId = 1;
void MESOfflineTotal::clear_cmdid() {
  cmdid_ = 0u;
}
 ::google::protobuf::uint32 MESOfflineTotal::cmdid() const {
  // @@protoc_insertion_point(field_get:im.MESOfflineTotal.cmdId)
  return cmdid_;
}
 void MESOfflineTotal::set_cmdid(::google::protobuf::uint32 value) {
  
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:im.MESOfflineTotal.cmdId)
}

// optional string sFromId = 2;
void MESOfflineTotal::clear_sfromid() {
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESOfflineTotal::sfromid() const {
  // @@protoc_insertion_point(field_get:im.MESOfflineTotal.sFromId)
  return sfromid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESOfflineTotal::set_sfromid(const ::std::string& value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESOfflineTotal.sFromId)
}
 void MESOfflineTotal::set_sfromid(const char* value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESOfflineTotal.sFromId)
}
 void MESOfflineTotal::set_sfromid(const char* value, size_t size) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESOfflineTotal.sFromId)
}
 ::std::string* MESOfflineTotal::mutable_sfromid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESOfflineTotal.sFromId)
  return sfromid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESOfflineTotal::release_sfromid() {
  // @@protoc_insertion_point(field_release:im.MESOfflineTotal.sFromId)
  
  return sfromid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESOfflineTotal::set_allocated_sfromid(::std::string* sfromid) {
  if (sfromid != NULL) {
    
  } else {
    
  }
  sfromid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sfromid);
  // @@protoc_insertion_point(field_set_allocated:im.MESOfflineTotal.sFromId)
}

// optional string sToId = 3;
void MESOfflineTotal::clear_stoid() {
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESOfflineTotal::stoid() const {
  // @@protoc_insertion_point(field_get:im.MESOfflineTotal.sToId)
  return stoid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESOfflineTotal::set_stoid(const ::std::string& value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESOfflineTotal.sToId)
}
 void MESOfflineTotal::set_stoid(const char* value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESOfflineTotal.sToId)
}
 void MESOfflineTotal::set_stoid(const char* value, size_t size) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESOfflineTotal.sToId)
}
 ::std::string* MESOfflineTotal::mutable_stoid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESOfflineTotal.sToId)
  return stoid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESOfflineTotal::release_stoid() {
  // @@protoc_insertion_point(field_release:im.MESOfflineTotal.sToId)
  
  return stoid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESOfflineTotal::set_allocated_stoid(::std::string* stoid) {
  if (stoid != NULL) {
    
  } else {
    
  }
  stoid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stoid);
  // @@protoc_insertion_point(field_set_allocated:im.MESOfflineTotal.sToId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESOfflineMsg::kCmdIdFieldNumber;
const int MESOfflineMsg::kSFromIdFieldNumber;
const int MESOfflineMsg::kSToIdFieldNumber;
const int MESOfflineMsg::kCountFieldNumber;
const int MESOfflineMsg::kSMsgIdFieldNumber;
const int MESOfflineMsg::kLsMsgsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESOfflineMsg::MESOfflineMsg()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESOfflineMsg)
}

void MESOfflineMsg::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MESOfflineMsg::MESOfflineMsg(const MESOfflineMsg& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.MESOfflineMsg)
}

void MESOfflineMsg::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  cmdid_ = 0u;
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  count_ = 0;
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MESOfflineMsg::~MESOfflineMsg() {
  // @@protoc_insertion_point(destructor:im.MESOfflineMsg)
  SharedDtor();
}

void MESOfflineMsg::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MESOfflineMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MESOfflineMsg& MESOfflineMsg::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

MESOfflineMsg* MESOfflineMsg::default_instance_ = NULL;

MESOfflineMsg* MESOfflineMsg::New(::google::protobuf::Arena* arena) const {
  MESOfflineMsg* n = new MESOfflineMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MESOfflineMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESOfflineMsg)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MESOfflineMsg, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MESOfflineMsg*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(cmdid_, count_);
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

  lsmsgs_.Clear();
}

bool MESOfflineMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.MESOfflineMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 cmdId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cmdid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sFromId;
        break;
      }

      // optional string sFromId = 2;
      case 2: {
        if (tag == 18) {
         parse_sFromId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), this->sfromid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESOfflineMsg.sFromId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sToId;
        break;
      }

      // optional string sToId = 3;
      case 3: {
        if (tag == 26) {
         parse_sToId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), this->stoid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESOfflineMsg.sToId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_count;
        break;
      }

      // optional int32 count = 4;
      case 4: {
        if (tag == 32) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 5;
      case 5: {
        if (tag == 42) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESOfflineMsg.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_lsMsgs;
        break;
      }

      // repeated .im.OfflineDeliveredMsg lsMsgs = 6;
      case 6: {
        if (tag == 50) {
         parse_lsMsgs:
          DO_(input->IncrementRecursionDepth());
         parse_loop_lsMsgs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_lsmsgs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_loop_lsMsgs;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESOfflineMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESOfflineMsg)
  return false;
#undef DO_
}

void MESOfflineMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESOfflineMsg)
  // optional uint32 cmdId = 1;
  if (this->cmdid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->cmdid(), output);
  }

  // optional string sFromId = 2;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), this->sfromid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESOfflineMsg.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sfromid(), output);
  }

  // optional string sToId = 3;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), this->stoid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESOfflineMsg.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->stoid(), output);
  }

  // optional int32 count = 4;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->count(), output);
  }

  // optional string sMsgId = 5;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESOfflineMsg.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->smsgid(), output);
  }

  // repeated .im.OfflineDeliveredMsg lsMsgs = 6;
  for (unsigned int i = 0, n = this->lsmsgs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      6, this->lsmsgs(i), output);
  }

  // @@protoc_insertion_point(serialize_end:im.MESOfflineMsg)
}

int MESOfflineMsg::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESOfflineMsg)
  int total_size = 0;

  // optional uint32 cmdId = 1;
  if (this->cmdid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cmdid());
  }

  // optional string sFromId = 2;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // optional string sToId = 3;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // optional int32 count = 4;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }

  // optional string sMsgId = 5;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // repeated .im.OfflineDeliveredMsg lsMsgs = 6;
  total_size += 1 * this->lsmsgs_size();
  for (int i = 0; i < this->lsmsgs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->lsmsgs(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MESOfflineMsg::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESOfflineMsg*>(&from));
}

void MESOfflineMsg::MergeFrom(const MESOfflineMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESOfflineMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  lsmsgs_.MergeFrom(from.lsmsgs_);
  if (from.cmdid() != 0) {
    set_cmdid(from.cmdid());
  }
  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
}

void MESOfflineMsg::CopyFrom(const MESOfflineMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESOfflineMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESOfflineMsg::IsInitialized() const {

  return true;
}

void MESOfflineMsg::Swap(MESOfflineMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESOfflineMsg::InternalSwap(MESOfflineMsg* other) {
  std::swap(cmdid_, other->cmdid_);
  sfromid_.Swap(&other->sfromid_);
  stoid_.Swap(&other->stoid_);
  std::swap(count_, other->count_);
  smsgid_.Swap(&other->smsgid_);
  lsmsgs_.UnsafeArenaSwap(&other->lsmsgs_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string MESOfflineMsg::GetTypeName() const {
  return "im.MESOfflineMsg";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MESOfflineMsg

// optional uint32 cmdId = 1;
void MESOfflineMsg::clear_cmdid() {
  cmdid_ = 0u;
}
 ::google::protobuf::uint32 MESOfflineMsg::cmdid() const {
  // @@protoc_insertion_point(field_get:im.MESOfflineMsg.cmdId)
  return cmdid_;
}
 void MESOfflineMsg::set_cmdid(::google::protobuf::uint32 value) {
  
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:im.MESOfflineMsg.cmdId)
}

// optional string sFromId = 2;
void MESOfflineMsg::clear_sfromid() {
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESOfflineMsg::sfromid() const {
  // @@protoc_insertion_point(field_get:im.MESOfflineMsg.sFromId)
  return sfromid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESOfflineMsg::set_sfromid(const ::std::string& value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESOfflineMsg.sFromId)
}
 void MESOfflineMsg::set_sfromid(const char* value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESOfflineMsg.sFromId)
}
 void MESOfflineMsg::set_sfromid(const char* value, size_t size) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESOfflineMsg.sFromId)
}
 ::std::string* MESOfflineMsg::mutable_sfromid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESOfflineMsg.sFromId)
  return sfromid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESOfflineMsg::release_sfromid() {
  // @@protoc_insertion_point(field_release:im.MESOfflineMsg.sFromId)
  
  return sfromid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESOfflineMsg::set_allocated_sfromid(::std::string* sfromid) {
  if (sfromid != NULL) {
    
  } else {
    
  }
  sfromid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sfromid);
  // @@protoc_insertion_point(field_set_allocated:im.MESOfflineMsg.sFromId)
}

// optional string sToId = 3;
void MESOfflineMsg::clear_stoid() {
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESOfflineMsg::stoid() const {
  // @@protoc_insertion_point(field_get:im.MESOfflineMsg.sToId)
  return stoid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESOfflineMsg::set_stoid(const ::std::string& value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESOfflineMsg.sToId)
}
 void MESOfflineMsg::set_stoid(const char* value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESOfflineMsg.sToId)
}
 void MESOfflineMsg::set_stoid(const char* value, size_t size) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESOfflineMsg.sToId)
}
 ::std::string* MESOfflineMsg::mutable_stoid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESOfflineMsg.sToId)
  return stoid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESOfflineMsg::release_stoid() {
  // @@protoc_insertion_point(field_release:im.MESOfflineMsg.sToId)
  
  return stoid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESOfflineMsg::set_allocated_stoid(::std::string* stoid) {
  if (stoid != NULL) {
    
  } else {
    
  }
  stoid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stoid);
  // @@protoc_insertion_point(field_set_allocated:im.MESOfflineMsg.sToId)
}

// optional int32 count = 4;
void MESOfflineMsg::clear_count() {
  count_ = 0;
}
 ::google::protobuf::int32 MESOfflineMsg::count() const {
  // @@protoc_insertion_point(field_get:im.MESOfflineMsg.count)
  return count_;
}
 void MESOfflineMsg::set_count(::google::protobuf::int32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:im.MESOfflineMsg.count)
}

// optional string sMsgId = 5;
void MESOfflineMsg::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESOfflineMsg::smsgid() const {
  // @@protoc_insertion_point(field_get:im.MESOfflineMsg.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESOfflineMsg::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESOfflineMsg.sMsgId)
}
 void MESOfflineMsg::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESOfflineMsg.sMsgId)
}
 void MESOfflineMsg::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESOfflineMsg.sMsgId)
}
 ::std::string* MESOfflineMsg::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESOfflineMsg.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESOfflineMsg::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.MESOfflineMsg.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESOfflineMsg::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.MESOfflineMsg.sMsgId)
}

// repeated .im.OfflineDeliveredMsg lsMsgs = 6;
int MESOfflineMsg::lsmsgs_size() const {
  return lsmsgs_.size();
}
void MESOfflineMsg::clear_lsmsgs() {
  lsmsgs_.Clear();
}
const ::im::OfflineDeliveredMsg& MESOfflineMsg::lsmsgs(int index) const {
  // @@protoc_insertion_point(field_get:im.MESOfflineMsg.lsMsgs)
  return lsmsgs_.Get(index);
}
::im::OfflineDeliveredMsg* MESOfflineMsg::mutable_lsmsgs(int index) {
  // @@protoc_insertion_point(field_mutable:im.MESOfflineMsg.lsMsgs)
  return lsmsgs_.Mutable(index);
}
::im::OfflineDeliveredMsg* MESOfflineMsg::add_lsmsgs() {
  // @@protoc_insertion_point(field_add:im.MESOfflineMsg.lsMsgs)
  return lsmsgs_.Add();
}
::google::protobuf::RepeatedPtrField< ::im::OfflineDeliveredMsg >*
MESOfflineMsg::mutable_lsmsgs() {
  // @@protoc_insertion_point(field_mutable_list:im.MESOfflineMsg.lsMsgs)
  return &lsmsgs_;
}
const ::google::protobuf::RepeatedPtrField< ::im::OfflineDeliveredMsg >&
MESOfflineMsg::lsmsgs() const {
  // @@protoc_insertion_point(field_list:im.MESOfflineMsg.lsMsgs)
  return lsmsgs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OfflineMsgData::kCmdIdFieldNumber;
const int OfflineMsgData::kSMsgDataFieldNumber;
const int OfflineMsgData::kSMsgIdFieldNumber;
const int OfflineMsgData::kSFromIdFieldNumber;
const int OfflineMsgData::kStatusFieldNumber;
const int OfflineMsgData::kUCreateTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OfflineMsgData::OfflineMsgData()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.OfflineMsgData)
}

void OfflineMsgData::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

OfflineMsgData::OfflineMsgData(const OfflineMsgData& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.OfflineMsgData)
}

void OfflineMsgData::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  cmdid_ = 0u;
  smsgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0u;
  ucreatetime_ = GOOGLE_ULONGLONG(0);
}

OfflineMsgData::~OfflineMsgData() {
  // @@protoc_insertion_point(destructor:im.OfflineMsgData)
  SharedDtor();
}

void OfflineMsgData::SharedDtor() {
  smsgdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void OfflineMsgData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const OfflineMsgData& OfflineMsgData::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

OfflineMsgData* OfflineMsgData::default_instance_ = NULL;

OfflineMsgData* OfflineMsgData::New(::google::protobuf::Arena* arena) const {
  OfflineMsgData* n = new OfflineMsgData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OfflineMsgData::Clear() {
// @@protoc_insertion_point(message_clear_start:im.OfflineMsgData)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(OfflineMsgData, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<OfflineMsgData*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(cmdid_, status_);
  smsgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ucreatetime_ = GOOGLE_ULONGLONG(0);

#undef ZR_HELPER_
#undef ZR_

}

bool OfflineMsgData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.OfflineMsgData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 cmdId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cmdid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sMsgData;
        break;
      }

      // optional bytes sMsgData = 2;
      case 2: {
        if (tag == 18) {
         parse_sMsgData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_smsgdata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 3;
      case 3: {
        if (tag == 26) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.OfflineMsgData.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_sFromId;
        break;
      }

      // optional string sFromId = 4;
      case 4: {
        if (tag == 34) {
         parse_sFromId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), this->sfromid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.OfflineMsgData.sFromId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_status;
        break;
      }

      // optional uint32 status = 5;
      case 5: {
        if (tag == 40) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_uCreateTime;
        break;
      }

      // optional uint64 uCreateTime = 6;
      case 6: {
        if (tag == 48) {
         parse_uCreateTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ucreatetime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.OfflineMsgData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.OfflineMsgData)
  return false;
#undef DO_
}

void OfflineMsgData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.OfflineMsgData)
  // optional uint32 cmdId = 1;
  if (this->cmdid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->cmdid(), output);
  }

  // optional bytes sMsgData = 2;
  if (this->smsgdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->smsgdata(), output);
  }

  // optional string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.OfflineMsgData.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // optional string sFromId = 4;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), this->sfromid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.OfflineMsgData.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sfromid(), output);
  }

  // optional uint32 status = 5;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->status(), output);
  }

  // optional uint64 uCreateTime = 6;
  if (this->ucreatetime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->ucreatetime(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.OfflineMsgData)
}

int OfflineMsgData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.OfflineMsgData)
  int total_size = 0;

  // optional uint32 cmdId = 1;
  if (this->cmdid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cmdid());
  }

  // optional bytes sMsgData = 2;
  if (this->smsgdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->smsgdata());
  }

  // optional string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // optional string sFromId = 4;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // optional uint32 status = 5;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->status());
  }

  // optional uint64 uCreateTime = 6;
  if (this->ucreatetime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ucreatetime());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OfflineMsgData::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const OfflineMsgData*>(&from));
}

void OfflineMsgData::MergeFrom(const OfflineMsgData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.OfflineMsgData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.cmdid() != 0) {
    set_cmdid(from.cmdid());
  }
  if (from.smsgdata().size() > 0) {

    smsgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgdata_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.ucreatetime() != 0) {
    set_ucreatetime(from.ucreatetime());
  }
}

void OfflineMsgData::CopyFrom(const OfflineMsgData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.OfflineMsgData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OfflineMsgData::IsInitialized() const {

  return true;
}

void OfflineMsgData::Swap(OfflineMsgData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OfflineMsgData::InternalSwap(OfflineMsgData* other) {
  std::swap(cmdid_, other->cmdid_);
  smsgdata_.Swap(&other->smsgdata_);
  smsgid_.Swap(&other->smsgid_);
  sfromid_.Swap(&other->sfromid_);
  std::swap(status_, other->status_);
  std::swap(ucreatetime_, other->ucreatetime_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string OfflineMsgData::GetTypeName() const {
  return "im.OfflineMsgData";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OfflineMsgData

// optional uint32 cmdId = 1;
void OfflineMsgData::clear_cmdid() {
  cmdid_ = 0u;
}
 ::google::protobuf::uint32 OfflineMsgData::cmdid() const {
  // @@protoc_insertion_point(field_get:im.OfflineMsgData.cmdId)
  return cmdid_;
}
 void OfflineMsgData::set_cmdid(::google::protobuf::uint32 value) {
  
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:im.OfflineMsgData.cmdId)
}

// optional bytes sMsgData = 2;
void OfflineMsgData::clear_smsgdata() {
  smsgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& OfflineMsgData::smsgdata() const {
  // @@protoc_insertion_point(field_get:im.OfflineMsgData.sMsgData)
  return smsgdata_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OfflineMsgData::set_smsgdata(const ::std::string& value) {
  
  smsgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.OfflineMsgData.sMsgData)
}
 void OfflineMsgData::set_smsgdata(const char* value) {
  
  smsgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.OfflineMsgData.sMsgData)
}
 void OfflineMsgData::set_smsgdata(const void* value, size_t size) {
  
  smsgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.OfflineMsgData.sMsgData)
}
 ::std::string* OfflineMsgData::mutable_smsgdata() {
  
  // @@protoc_insertion_point(field_mutable:im.OfflineMsgData.sMsgData)
  return smsgdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* OfflineMsgData::release_smsgdata() {
  // @@protoc_insertion_point(field_release:im.OfflineMsgData.sMsgData)
  
  return smsgdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OfflineMsgData::set_allocated_smsgdata(::std::string* smsgdata) {
  if (smsgdata != NULL) {
    
  } else {
    
  }
  smsgdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgdata);
  // @@protoc_insertion_point(field_set_allocated:im.OfflineMsgData.sMsgData)
}

// optional string sMsgId = 3;
void OfflineMsgData::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& OfflineMsgData::smsgid() const {
  // @@protoc_insertion_point(field_get:im.OfflineMsgData.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OfflineMsgData::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.OfflineMsgData.sMsgId)
}
 void OfflineMsgData::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.OfflineMsgData.sMsgId)
}
 void OfflineMsgData::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.OfflineMsgData.sMsgId)
}
 ::std::string* OfflineMsgData::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.OfflineMsgData.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* OfflineMsgData::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.OfflineMsgData.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OfflineMsgData::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.OfflineMsgData.sMsgId)
}

// optional string sFromId = 4;
void OfflineMsgData::clear_sfromid() {
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& OfflineMsgData::sfromid() const {
  // @@protoc_insertion_point(field_get:im.OfflineMsgData.sFromId)
  return sfromid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OfflineMsgData::set_sfromid(const ::std::string& value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.OfflineMsgData.sFromId)
}
 void OfflineMsgData::set_sfromid(const char* value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.OfflineMsgData.sFromId)
}
 void OfflineMsgData::set_sfromid(const char* value, size_t size) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.OfflineMsgData.sFromId)
}
 ::std::string* OfflineMsgData::mutable_sfromid() {
  
  // @@protoc_insertion_point(field_mutable:im.OfflineMsgData.sFromId)
  return sfromid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* OfflineMsgData::release_sfromid() {
  // @@protoc_insertion_point(field_release:im.OfflineMsgData.sFromId)
  
  return sfromid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OfflineMsgData::set_allocated_sfromid(::std::string* sfromid) {
  if (sfromid != NULL) {
    
  } else {
    
  }
  sfromid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sfromid);
  // @@protoc_insertion_point(field_set_allocated:im.OfflineMsgData.sFromId)
}

// optional uint32 status = 5;
void OfflineMsgData::clear_status() {
  status_ = 0u;
}
 ::google::protobuf::uint32 OfflineMsgData::status() const {
  // @@protoc_insertion_point(field_get:im.OfflineMsgData.status)
  return status_;
}
 void OfflineMsgData::set_status(::google::protobuf::uint32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:im.OfflineMsgData.status)
}

// optional uint64 uCreateTime = 6;
void OfflineMsgData::clear_ucreatetime() {
  ucreatetime_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 OfflineMsgData::ucreatetime() const {
  // @@protoc_insertion_point(field_get:im.OfflineMsgData.uCreateTime)
  return ucreatetime_;
}
 void OfflineMsgData::set_ucreatetime(::google::protobuf::uint64 value) {
  
  ucreatetime_ = value;
  // @@protoc_insertion_point(field_set:im.OfflineMsgData.uCreateTime)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESOfflineMsgAck::kSFromIdFieldNumber;
const int MESOfflineMsgAck::kSToIdFieldNumber;
const int MESOfflineMsgAck::kErrcodeFieldNumber;
const int MESOfflineMsgAck::kSMsgIdFieldNumber;
const int MESOfflineMsgAck::kMsgTimeFieldNumber;
const int MESOfflineMsgAck::kMsglistFieldNumber;
const int MESOfflineMsgAck::kMsgTotalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESOfflineMsgAck::MESOfflineMsgAck()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESOfflineMsgAck)
}

void MESOfflineMsgAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MESOfflineMsgAck::MESOfflineMsgAck(const MESOfflineMsgAck& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.MESOfflineMsgAck)
}

void MESOfflineMsgAck::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgtime_ = GOOGLE_ULONGLONG(0);
  msgtotal_ = 0u;
}

MESOfflineMsgAck::~MESOfflineMsgAck() {
  // @@protoc_insertion_point(destructor:im.MESOfflineMsgAck)
  SharedDtor();
}

void MESOfflineMsgAck::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MESOfflineMsgAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MESOfflineMsgAck& MESOfflineMsgAck::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

MESOfflineMsgAck* MESOfflineMsgAck::default_instance_ = NULL;

MESOfflineMsgAck* MESOfflineMsgAck::New(::google::protobuf::Arena* arena) const {
  MESOfflineMsgAck* n = new MESOfflineMsgAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MESOfflineMsgAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESOfflineMsgAck)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MESOfflineMsgAck, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MESOfflineMsgAck*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(msgtime_, msgtotal_);
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

  msglist_.Clear();
}

bool MESOfflineMsgAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.MESOfflineMsgAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sFromId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), this->sfromid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESOfflineMsgAck.sFromId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sToId;
        break;
      }

      // optional string sToId = 2;
      case 2: {
        if (tag == 18) {
         parse_sToId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), this->stoid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESOfflineMsgAck.sToId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_errcode;
        break;
      }

      // optional .im.ErrCode errcode = 4;
      case 4: {
        if (tag == 32) {
         parse_errcode:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 5;
      case 5: {
        if (tag == 42) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESOfflineMsgAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_msgTime;
        break;
      }

      // optional uint64 msgTime = 6;
      case 6: {
        if (tag == 48) {
         parse_msgTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_msglist;
        break;
      }

      // repeated .im.OfflineMsgData msglist = 13;
      case 13: {
        if (tag == 106) {
         parse_msglist:
          DO_(input->IncrementRecursionDepth());
         parse_loop_msglist:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_msglist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_loop_msglist;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(112)) goto parse_msgTotal;
        break;
      }

      // optional uint32 msgTotal = 14;
      case 14: {
        if (tag == 112) {
         parse_msgTotal:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgtotal_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESOfflineMsgAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESOfflineMsgAck)
  return false;
#undef DO_
}

void MESOfflineMsgAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESOfflineMsgAck)
  // optional string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), this->sfromid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESOfflineMsgAck.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // optional string sToId = 2;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), this->stoid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESOfflineMsgAck.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stoid(), output);
  }

  // optional .im.ErrCode errcode = 4;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->errcode(), output);
  }

  // optional string sMsgId = 5;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESOfflineMsgAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->smsgid(), output);
  }

  // optional uint64 msgTime = 6;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->msgtime(), output);
  }

  // repeated .im.OfflineMsgData msglist = 13;
  for (unsigned int i = 0, n = this->msglist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      13, this->msglist(i), output);
  }

  // optional uint32 msgTotal = 14;
  if (this->msgtotal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->msgtotal(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.MESOfflineMsgAck)
}

int MESOfflineMsgAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESOfflineMsgAck)
  int total_size = 0;

  // optional string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // optional string sToId = 2;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // optional .im.ErrCode errcode = 4;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  // optional string sMsgId = 5;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // optional uint64 msgTime = 6;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // optional uint32 msgTotal = 14;
  if (this->msgtotal() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgtotal());
  }

  // repeated .im.OfflineMsgData msglist = 13;
  total_size += 1 * this->msglist_size();
  for (int i = 0; i < this->msglist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->msglist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MESOfflineMsgAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESOfflineMsgAck*>(&from));
}

void MESOfflineMsgAck::MergeFrom(const MESOfflineMsgAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESOfflineMsgAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  msglist_.MergeFrom(from.msglist_);
  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.msgtotal() != 0) {
    set_msgtotal(from.msgtotal());
  }
}

void MESOfflineMsgAck::CopyFrom(const MESOfflineMsgAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESOfflineMsgAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESOfflineMsgAck::IsInitialized() const {

  return true;
}

void MESOfflineMsgAck::Swap(MESOfflineMsgAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESOfflineMsgAck::InternalSwap(MESOfflineMsgAck* other) {
  sfromid_.Swap(&other->sfromid_);
  stoid_.Swap(&other->stoid_);
  std::swap(errcode_, other->errcode_);
  smsgid_.Swap(&other->smsgid_);
  std::swap(msgtime_, other->msgtime_);
  msglist_.UnsafeArenaSwap(&other->msglist_);
  std::swap(msgtotal_, other->msgtotal_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string MESOfflineMsgAck::GetTypeName() const {
  return "im.MESOfflineMsgAck";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MESOfflineMsgAck

// optional string sFromId = 1;
void MESOfflineMsgAck::clear_sfromid() {
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESOfflineMsgAck::sfromid() const {
  // @@protoc_insertion_point(field_get:im.MESOfflineMsgAck.sFromId)
  return sfromid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESOfflineMsgAck::set_sfromid(const ::std::string& value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESOfflineMsgAck.sFromId)
}
 void MESOfflineMsgAck::set_sfromid(const char* value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESOfflineMsgAck.sFromId)
}
 void MESOfflineMsgAck::set_sfromid(const char* value, size_t size) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESOfflineMsgAck.sFromId)
}
 ::std::string* MESOfflineMsgAck::mutable_sfromid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESOfflineMsgAck.sFromId)
  return sfromid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESOfflineMsgAck::release_sfromid() {
  // @@protoc_insertion_point(field_release:im.MESOfflineMsgAck.sFromId)
  
  return sfromid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESOfflineMsgAck::set_allocated_sfromid(::std::string* sfromid) {
  if (sfromid != NULL) {
    
  } else {
    
  }
  sfromid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sfromid);
  // @@protoc_insertion_point(field_set_allocated:im.MESOfflineMsgAck.sFromId)
}

// optional string sToId = 2;
void MESOfflineMsgAck::clear_stoid() {
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESOfflineMsgAck::stoid() const {
  // @@protoc_insertion_point(field_get:im.MESOfflineMsgAck.sToId)
  return stoid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESOfflineMsgAck::set_stoid(const ::std::string& value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESOfflineMsgAck.sToId)
}
 void MESOfflineMsgAck::set_stoid(const char* value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESOfflineMsgAck.sToId)
}
 void MESOfflineMsgAck::set_stoid(const char* value, size_t size) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESOfflineMsgAck.sToId)
}
 ::std::string* MESOfflineMsgAck::mutable_stoid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESOfflineMsgAck.sToId)
  return stoid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESOfflineMsgAck::release_stoid() {
  // @@protoc_insertion_point(field_release:im.MESOfflineMsgAck.sToId)
  
  return stoid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESOfflineMsgAck::set_allocated_stoid(::std::string* stoid) {
  if (stoid != NULL) {
    
  } else {
    
  }
  stoid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stoid);
  // @@protoc_insertion_point(field_set_allocated:im.MESOfflineMsgAck.sToId)
}

// optional .im.ErrCode errcode = 4;
void MESOfflineMsgAck::clear_errcode() {
  errcode_ = 0;
}
 ::im::ErrCode MESOfflineMsgAck::errcode() const {
  // @@protoc_insertion_point(field_get:im.MESOfflineMsgAck.errcode)
  return static_cast< ::im::ErrCode >(errcode_);
}
 void MESOfflineMsgAck::set_errcode(::im::ErrCode value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:im.MESOfflineMsgAck.errcode)
}

// optional string sMsgId = 5;
void MESOfflineMsgAck::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESOfflineMsgAck::smsgid() const {
  // @@protoc_insertion_point(field_get:im.MESOfflineMsgAck.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESOfflineMsgAck::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESOfflineMsgAck.sMsgId)
}
 void MESOfflineMsgAck::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESOfflineMsgAck.sMsgId)
}
 void MESOfflineMsgAck::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESOfflineMsgAck.sMsgId)
}
 ::std::string* MESOfflineMsgAck::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESOfflineMsgAck.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESOfflineMsgAck::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.MESOfflineMsgAck.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESOfflineMsgAck::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.MESOfflineMsgAck.sMsgId)
}

// optional uint64 msgTime = 6;
void MESOfflineMsgAck::clear_msgtime() {
  msgtime_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 MESOfflineMsgAck::msgtime() const {
  // @@protoc_insertion_point(field_get:im.MESOfflineMsgAck.msgTime)
  return msgtime_;
}
 void MESOfflineMsgAck::set_msgtime(::google::protobuf::uint64 value) {
  
  msgtime_ = value;
  // @@protoc_insertion_point(field_set:im.MESOfflineMsgAck.msgTime)
}

// repeated .im.OfflineMsgData msglist = 13;
int MESOfflineMsgAck::msglist_size() const {
  return msglist_.size();
}
void MESOfflineMsgAck::clear_msglist() {
  msglist_.Clear();
}
const ::im::OfflineMsgData& MESOfflineMsgAck::msglist(int index) const {
  // @@protoc_insertion_point(field_get:im.MESOfflineMsgAck.msglist)
  return msglist_.Get(index);
}
::im::OfflineMsgData* MESOfflineMsgAck::mutable_msglist(int index) {
  // @@protoc_insertion_point(field_mutable:im.MESOfflineMsgAck.msglist)
  return msglist_.Mutable(index);
}
::im::OfflineMsgData* MESOfflineMsgAck::add_msglist() {
  // @@protoc_insertion_point(field_add:im.MESOfflineMsgAck.msglist)
  return msglist_.Add();
}
::google::protobuf::RepeatedPtrField< ::im::OfflineMsgData >*
MESOfflineMsgAck::mutable_msglist() {
  // @@protoc_insertion_point(field_mutable_list:im.MESOfflineMsgAck.msglist)
  return &msglist_;
}
const ::google::protobuf::RepeatedPtrField< ::im::OfflineMsgData >&
MESOfflineMsgAck::msglist() const {
  // @@protoc_insertion_point(field_list:im.MESOfflineMsgAck.msglist)
  return msglist_;
}

// optional uint32 msgTotal = 14;
void MESOfflineMsgAck::clear_msgtotal() {
  msgtotal_ = 0u;
}
 ::google::protobuf::uint32 MESOfflineMsgAck::msgtotal() const {
  // @@protoc_insertion_point(field_get:im.MESOfflineMsgAck.msgTotal)
  return msgtotal_;
}
 void MESOfflineMsgAck::set_msgtotal(::google::protobuf::uint32 value) {
  
  msgtotal_ = value;
  // @@protoc_insertion_point(field_set:im.MESOfflineMsgAck.msgTotal)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OfflineDeliveredMsg::kCmdIdFieldNumber;
const int OfflineDeliveredMsg::kSFromIdFieldNumber;
const int OfflineDeliveredMsg::kSToIdFieldNumber;
const int OfflineDeliveredMsg::kSMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OfflineDeliveredMsg::OfflineDeliveredMsg()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.OfflineDeliveredMsg)
}

void OfflineDeliveredMsg::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

OfflineDeliveredMsg::OfflineDeliveredMsg(const OfflineDeliveredMsg& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.OfflineDeliveredMsg)
}

void OfflineDeliveredMsg::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  cmdid_ = 0u;
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

OfflineDeliveredMsg::~OfflineDeliveredMsg() {
  // @@protoc_insertion_point(destructor:im.OfflineDeliveredMsg)
  SharedDtor();
}

void OfflineDeliveredMsg::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void OfflineDeliveredMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const OfflineDeliveredMsg& OfflineDeliveredMsg::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

OfflineDeliveredMsg* OfflineDeliveredMsg::default_instance_ = NULL;

OfflineDeliveredMsg* OfflineDeliveredMsg::New(::google::protobuf::Arena* arena) const {
  OfflineDeliveredMsg* n = new OfflineDeliveredMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OfflineDeliveredMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:im.OfflineDeliveredMsg)
  cmdid_ = 0u;
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool OfflineDeliveredMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.OfflineDeliveredMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 cmdId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cmdid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sFromId;
        break;
      }

      // optional string sFromId = 2;
      case 2: {
        if (tag == 18) {
         parse_sFromId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), this->sfromid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.OfflineDeliveredMsg.sFromId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sToId;
        break;
      }

      // optional string sToId = 3;
      case 3: {
        if (tag == 26) {
         parse_sToId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), this->stoid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.OfflineDeliveredMsg.sToId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 4;
      case 4: {
        if (tag == 34) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.OfflineDeliveredMsg.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.OfflineDeliveredMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.OfflineDeliveredMsg)
  return false;
#undef DO_
}

void OfflineDeliveredMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.OfflineDeliveredMsg)
  // optional uint32 cmdId = 1;
  if (this->cmdid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->cmdid(), output);
  }

  // optional string sFromId = 2;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), this->sfromid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.OfflineDeliveredMsg.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sfromid(), output);
  }

  // optional string sToId = 3;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), this->stoid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.OfflineDeliveredMsg.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->stoid(), output);
  }

  // optional string sMsgId = 4;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.OfflineDeliveredMsg.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->smsgid(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.OfflineDeliveredMsg)
}

int OfflineDeliveredMsg::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.OfflineDeliveredMsg)
  int total_size = 0;

  // optional uint32 cmdId = 1;
  if (this->cmdid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cmdid());
  }

  // optional string sFromId = 2;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // optional string sToId = 3;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // optional string sMsgId = 4;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OfflineDeliveredMsg::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const OfflineDeliveredMsg*>(&from));
}

void OfflineDeliveredMsg::MergeFrom(const OfflineDeliveredMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.OfflineDeliveredMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.cmdid() != 0) {
    set_cmdid(from.cmdid());
  }
  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
}

void OfflineDeliveredMsg::CopyFrom(const OfflineDeliveredMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.OfflineDeliveredMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OfflineDeliveredMsg::IsInitialized() const {

  return true;
}

void OfflineDeliveredMsg::Swap(OfflineDeliveredMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OfflineDeliveredMsg::InternalSwap(OfflineDeliveredMsg* other) {
  std::swap(cmdid_, other->cmdid_);
  sfromid_.Swap(&other->sfromid_);
  stoid_.Swap(&other->stoid_);
  smsgid_.Swap(&other->smsgid_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string OfflineDeliveredMsg::GetTypeName() const {
  return "im.OfflineDeliveredMsg";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OfflineDeliveredMsg

// optional uint32 cmdId = 1;
void OfflineDeliveredMsg::clear_cmdid() {
  cmdid_ = 0u;
}
 ::google::protobuf::uint32 OfflineDeliveredMsg::cmdid() const {
  // @@protoc_insertion_point(field_get:im.OfflineDeliveredMsg.cmdId)
  return cmdid_;
}
 void OfflineDeliveredMsg::set_cmdid(::google::protobuf::uint32 value) {
  
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:im.OfflineDeliveredMsg.cmdId)
}

// optional string sFromId = 2;
void OfflineDeliveredMsg::clear_sfromid() {
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& OfflineDeliveredMsg::sfromid() const {
  // @@protoc_insertion_point(field_get:im.OfflineDeliveredMsg.sFromId)
  return sfromid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OfflineDeliveredMsg::set_sfromid(const ::std::string& value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.OfflineDeliveredMsg.sFromId)
}
 void OfflineDeliveredMsg::set_sfromid(const char* value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.OfflineDeliveredMsg.sFromId)
}
 void OfflineDeliveredMsg::set_sfromid(const char* value, size_t size) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.OfflineDeliveredMsg.sFromId)
}
 ::std::string* OfflineDeliveredMsg::mutable_sfromid() {
  
  // @@protoc_insertion_point(field_mutable:im.OfflineDeliveredMsg.sFromId)
  return sfromid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* OfflineDeliveredMsg::release_sfromid() {
  // @@protoc_insertion_point(field_release:im.OfflineDeliveredMsg.sFromId)
  
  return sfromid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OfflineDeliveredMsg::set_allocated_sfromid(::std::string* sfromid) {
  if (sfromid != NULL) {
    
  } else {
    
  }
  sfromid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sfromid);
  // @@protoc_insertion_point(field_set_allocated:im.OfflineDeliveredMsg.sFromId)
}

// optional string sToId = 3;
void OfflineDeliveredMsg::clear_stoid() {
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& OfflineDeliveredMsg::stoid() const {
  // @@protoc_insertion_point(field_get:im.OfflineDeliveredMsg.sToId)
  return stoid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OfflineDeliveredMsg::set_stoid(const ::std::string& value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.OfflineDeliveredMsg.sToId)
}
 void OfflineDeliveredMsg::set_stoid(const char* value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.OfflineDeliveredMsg.sToId)
}
 void OfflineDeliveredMsg::set_stoid(const char* value, size_t size) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.OfflineDeliveredMsg.sToId)
}
 ::std::string* OfflineDeliveredMsg::mutable_stoid() {
  
  // @@protoc_insertion_point(field_mutable:im.OfflineDeliveredMsg.sToId)
  return stoid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* OfflineDeliveredMsg::release_stoid() {
  // @@protoc_insertion_point(field_release:im.OfflineDeliveredMsg.sToId)
  
  return stoid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OfflineDeliveredMsg::set_allocated_stoid(::std::string* stoid) {
  if (stoid != NULL) {
    
  } else {
    
  }
  stoid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stoid);
  // @@protoc_insertion_point(field_set_allocated:im.OfflineDeliveredMsg.sToId)
}

// optional string sMsgId = 4;
void OfflineDeliveredMsg::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& OfflineDeliveredMsg::smsgid() const {
  // @@protoc_insertion_point(field_get:im.OfflineDeliveredMsg.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OfflineDeliveredMsg::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.OfflineDeliveredMsg.sMsgId)
}
 void OfflineDeliveredMsg::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.OfflineDeliveredMsg.sMsgId)
}
 void OfflineDeliveredMsg::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.OfflineDeliveredMsg.sMsgId)
}
 ::std::string* OfflineDeliveredMsg::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.OfflineDeliveredMsg.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* OfflineDeliveredMsg::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.OfflineDeliveredMsg.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OfflineDeliveredMsg::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.OfflineDeliveredMsg.sMsgId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESOfflineMsgDelivered::kSFromIdFieldNumber;
const int MESOfflineMsgDelivered::kSToIdFieldNumber;
const int MESOfflineMsgDelivered::kSMsgIdFieldNumber;
const int MESOfflineMsgDelivered::kLsMsgsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESOfflineMsgDelivered::MESOfflineMsgDelivered()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESOfflineMsgDelivered)
}

void MESOfflineMsgDelivered::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MESOfflineMsgDelivered::MESOfflineMsgDelivered(const MESOfflineMsgDelivered& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.MESOfflineMsgDelivered)
}

void MESOfflineMsgDelivered::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MESOfflineMsgDelivered::~MESOfflineMsgDelivered() {
  // @@protoc_insertion_point(destructor:im.MESOfflineMsgDelivered)
  SharedDtor();
}

void MESOfflineMsgDelivered::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MESOfflineMsgDelivered::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MESOfflineMsgDelivered& MESOfflineMsgDelivered::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

MESOfflineMsgDelivered* MESOfflineMsgDelivered::default_instance_ = NULL;

MESOfflineMsgDelivered* MESOfflineMsgDelivered::New(::google::protobuf::Arena* arena) const {
  MESOfflineMsgDelivered* n = new MESOfflineMsgDelivered;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MESOfflineMsgDelivered::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESOfflineMsgDelivered)
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lsmsgs_.Clear();
}

bool MESOfflineMsgDelivered::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.MESOfflineMsgDelivered)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sFromId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), this->sfromid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESOfflineMsgDelivered.sFromId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sToId;
        break;
      }

      // optional string sToId = 2;
      case 2: {
        if (tag == 18) {
         parse_sToId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), this->stoid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESOfflineMsgDelivered.sToId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 3;
      case 3: {
        if (tag == 26) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESOfflineMsgDelivered.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_lsMsgs;
        break;
      }

      // repeated .im.OfflineDeliveredMsg lsMsgs = 4;
      case 4: {
        if (tag == 34) {
         parse_lsMsgs:
          DO_(input->IncrementRecursionDepth());
         parse_loop_lsMsgs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_lsmsgs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_lsMsgs;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESOfflineMsgDelivered)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESOfflineMsgDelivered)
  return false;
#undef DO_
}

void MESOfflineMsgDelivered::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESOfflineMsgDelivered)
  // optional string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), this->sfromid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESOfflineMsgDelivered.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // optional string sToId = 2;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), this->stoid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESOfflineMsgDelivered.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stoid(), output);
  }

  // optional string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESOfflineMsgDelivered.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // repeated .im.OfflineDeliveredMsg lsMsgs = 4;
  for (unsigned int i = 0, n = this->lsmsgs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4, this->lsmsgs(i), output);
  }

  // @@protoc_insertion_point(serialize_end:im.MESOfflineMsgDelivered)
}

int MESOfflineMsgDelivered::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESOfflineMsgDelivered)
  int total_size = 0;

  // optional string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // optional string sToId = 2;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // optional string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // repeated .im.OfflineDeliveredMsg lsMsgs = 4;
  total_size += 1 * this->lsmsgs_size();
  for (int i = 0; i < this->lsmsgs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->lsmsgs(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MESOfflineMsgDelivered::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESOfflineMsgDelivered*>(&from));
}

void MESOfflineMsgDelivered::MergeFrom(const MESOfflineMsgDelivered& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESOfflineMsgDelivered)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  lsmsgs_.MergeFrom(from.lsmsgs_);
  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
}

void MESOfflineMsgDelivered::CopyFrom(const MESOfflineMsgDelivered& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESOfflineMsgDelivered)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESOfflineMsgDelivered::IsInitialized() const {

  return true;
}

void MESOfflineMsgDelivered::Swap(MESOfflineMsgDelivered* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESOfflineMsgDelivered::InternalSwap(MESOfflineMsgDelivered* other) {
  sfromid_.Swap(&other->sfromid_);
  stoid_.Swap(&other->stoid_);
  smsgid_.Swap(&other->smsgid_);
  lsmsgs_.UnsafeArenaSwap(&other->lsmsgs_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string MESOfflineMsgDelivered::GetTypeName() const {
  return "im.MESOfflineMsgDelivered";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MESOfflineMsgDelivered

// optional string sFromId = 1;
void MESOfflineMsgDelivered::clear_sfromid() {
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESOfflineMsgDelivered::sfromid() const {
  // @@protoc_insertion_point(field_get:im.MESOfflineMsgDelivered.sFromId)
  return sfromid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESOfflineMsgDelivered::set_sfromid(const ::std::string& value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESOfflineMsgDelivered.sFromId)
}
 void MESOfflineMsgDelivered::set_sfromid(const char* value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESOfflineMsgDelivered.sFromId)
}
 void MESOfflineMsgDelivered::set_sfromid(const char* value, size_t size) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESOfflineMsgDelivered.sFromId)
}
 ::std::string* MESOfflineMsgDelivered::mutable_sfromid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESOfflineMsgDelivered.sFromId)
  return sfromid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESOfflineMsgDelivered::release_sfromid() {
  // @@protoc_insertion_point(field_release:im.MESOfflineMsgDelivered.sFromId)
  
  return sfromid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESOfflineMsgDelivered::set_allocated_sfromid(::std::string* sfromid) {
  if (sfromid != NULL) {
    
  } else {
    
  }
  sfromid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sfromid);
  // @@protoc_insertion_point(field_set_allocated:im.MESOfflineMsgDelivered.sFromId)
}

// optional string sToId = 2;
void MESOfflineMsgDelivered::clear_stoid() {
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESOfflineMsgDelivered::stoid() const {
  // @@protoc_insertion_point(field_get:im.MESOfflineMsgDelivered.sToId)
  return stoid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESOfflineMsgDelivered::set_stoid(const ::std::string& value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESOfflineMsgDelivered.sToId)
}
 void MESOfflineMsgDelivered::set_stoid(const char* value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESOfflineMsgDelivered.sToId)
}
 void MESOfflineMsgDelivered::set_stoid(const char* value, size_t size) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESOfflineMsgDelivered.sToId)
}
 ::std::string* MESOfflineMsgDelivered::mutable_stoid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESOfflineMsgDelivered.sToId)
  return stoid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESOfflineMsgDelivered::release_stoid() {
  // @@protoc_insertion_point(field_release:im.MESOfflineMsgDelivered.sToId)
  
  return stoid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESOfflineMsgDelivered::set_allocated_stoid(::std::string* stoid) {
  if (stoid != NULL) {
    
  } else {
    
  }
  stoid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stoid);
  // @@protoc_insertion_point(field_set_allocated:im.MESOfflineMsgDelivered.sToId)
}

// optional string sMsgId = 3;
void MESOfflineMsgDelivered::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESOfflineMsgDelivered::smsgid() const {
  // @@protoc_insertion_point(field_get:im.MESOfflineMsgDelivered.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESOfflineMsgDelivered::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESOfflineMsgDelivered.sMsgId)
}
 void MESOfflineMsgDelivered::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESOfflineMsgDelivered.sMsgId)
}
 void MESOfflineMsgDelivered::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESOfflineMsgDelivered.sMsgId)
}
 ::std::string* MESOfflineMsgDelivered::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESOfflineMsgDelivered.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESOfflineMsgDelivered::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.MESOfflineMsgDelivered.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESOfflineMsgDelivered::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.MESOfflineMsgDelivered.sMsgId)
}

// repeated .im.OfflineDeliveredMsg lsMsgs = 4;
int MESOfflineMsgDelivered::lsmsgs_size() const {
  return lsmsgs_.size();
}
void MESOfflineMsgDelivered::clear_lsmsgs() {
  lsmsgs_.Clear();
}
const ::im::OfflineDeliveredMsg& MESOfflineMsgDelivered::lsmsgs(int index) const {
  // @@protoc_insertion_point(field_get:im.MESOfflineMsgDelivered.lsMsgs)
  return lsmsgs_.Get(index);
}
::im::OfflineDeliveredMsg* MESOfflineMsgDelivered::mutable_lsmsgs(int index) {
  // @@protoc_insertion_point(field_mutable:im.MESOfflineMsgDelivered.lsMsgs)
  return lsmsgs_.Mutable(index);
}
::im::OfflineDeliveredMsg* MESOfflineMsgDelivered::add_lsmsgs() {
  // @@protoc_insertion_point(field_add:im.MESOfflineMsgDelivered.lsMsgs)
  return lsmsgs_.Add();
}
::google::protobuf::RepeatedPtrField< ::im::OfflineDeliveredMsg >*
MESOfflineMsgDelivered::mutable_lsmsgs() {
  // @@protoc_insertion_point(field_mutable_list:im.MESOfflineMsgDelivered.lsMsgs)
  return &lsmsgs_;
}
const ::google::protobuf::RepeatedPtrField< ::im::OfflineDeliveredMsg >&
MESOfflineMsgDelivered::lsmsgs() const {
  // @@protoc_insertion_point(field_list:im.MESOfflineMsgDelivered.lsMsgs)
  return lsmsgs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESOfflineMsgDelivereddAck::kSUserIdFieldNumber;
const int MESOfflineMsgDelivereddAck::kSMsgIdFieldNumber;
const int MESOfflineMsgDelivereddAck::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESOfflineMsgDelivereddAck::MESOfflineMsgDelivereddAck()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESOfflineMsgDelivereddAck)
}

void MESOfflineMsgDelivereddAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MESOfflineMsgDelivereddAck::MESOfflineMsgDelivereddAck(const MESOfflineMsgDelivereddAck& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.MESOfflineMsgDelivereddAck)
}

void MESOfflineMsgDelivereddAck::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

MESOfflineMsgDelivereddAck::~MESOfflineMsgDelivereddAck() {
  // @@protoc_insertion_point(destructor:im.MESOfflineMsgDelivereddAck)
  SharedDtor();
}

void MESOfflineMsgDelivereddAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MESOfflineMsgDelivereddAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MESOfflineMsgDelivereddAck& MESOfflineMsgDelivereddAck::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

MESOfflineMsgDelivereddAck* MESOfflineMsgDelivereddAck::default_instance_ = NULL;

MESOfflineMsgDelivereddAck* MESOfflineMsgDelivereddAck::New(::google::protobuf::Arena* arena) const {
  MESOfflineMsgDelivereddAck* n = new MESOfflineMsgDelivereddAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MESOfflineMsgDelivereddAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESOfflineMsgDelivereddAck)
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

bool MESOfflineMsgDelivereddAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.MESOfflineMsgDelivereddAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sUserId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), this->suserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESOfflineMsgDelivereddAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 2;
      case 2: {
        if (tag == 18) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESOfflineMsgDelivereddAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_errcode;
        break;
      }

      // optional .im.ErrCode errcode = 3;
      case 3: {
        if (tag == 24) {
         parse_errcode:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESOfflineMsgDelivereddAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESOfflineMsgDelivereddAck)
  return false;
#undef DO_
}

void MESOfflineMsgDelivereddAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESOfflineMsgDelivereddAck)
  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), this->suserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESOfflineMsgDelivereddAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // optional string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESOfflineMsgDelivereddAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  // optional .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->errcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.MESOfflineMsgDelivereddAck)
}

int MESOfflineMsgDelivereddAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESOfflineMsgDelivereddAck)
  int total_size = 0;

  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // optional string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // optional .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MESOfflineMsgDelivereddAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESOfflineMsgDelivereddAck*>(&from));
}

void MESOfflineMsgDelivereddAck::MergeFrom(const MESOfflineMsgDelivereddAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESOfflineMsgDelivereddAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void MESOfflineMsgDelivereddAck::CopyFrom(const MESOfflineMsgDelivereddAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESOfflineMsgDelivereddAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESOfflineMsgDelivereddAck::IsInitialized() const {

  return true;
}

void MESOfflineMsgDelivereddAck::Swap(MESOfflineMsgDelivereddAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESOfflineMsgDelivereddAck::InternalSwap(MESOfflineMsgDelivereddAck* other) {
  suserid_.Swap(&other->suserid_);
  smsgid_.Swap(&other->smsgid_);
  std::swap(errcode_, other->errcode_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string MESOfflineMsgDelivereddAck::GetTypeName() const {
  return "im.MESOfflineMsgDelivereddAck";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MESOfflineMsgDelivereddAck

// optional string sUserId = 1;
void MESOfflineMsgDelivereddAck::clear_suserid() {
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESOfflineMsgDelivereddAck::suserid() const {
  // @@protoc_insertion_point(field_get:im.MESOfflineMsgDelivereddAck.sUserId)
  return suserid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESOfflineMsgDelivereddAck::set_suserid(const ::std::string& value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESOfflineMsgDelivereddAck.sUserId)
}
 void MESOfflineMsgDelivereddAck::set_suserid(const char* value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESOfflineMsgDelivereddAck.sUserId)
}
 void MESOfflineMsgDelivereddAck::set_suserid(const char* value, size_t size) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESOfflineMsgDelivereddAck.sUserId)
}
 ::std::string* MESOfflineMsgDelivereddAck::mutable_suserid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESOfflineMsgDelivereddAck.sUserId)
  return suserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESOfflineMsgDelivereddAck::release_suserid() {
  // @@protoc_insertion_point(field_release:im.MESOfflineMsgDelivereddAck.sUserId)
  
  return suserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESOfflineMsgDelivereddAck::set_allocated_suserid(::std::string* suserid) {
  if (suserid != NULL) {
    
  } else {
    
  }
  suserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), suserid);
  // @@protoc_insertion_point(field_set_allocated:im.MESOfflineMsgDelivereddAck.sUserId)
}

// optional string sMsgId = 2;
void MESOfflineMsgDelivereddAck::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESOfflineMsgDelivereddAck::smsgid() const {
  // @@protoc_insertion_point(field_get:im.MESOfflineMsgDelivereddAck.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESOfflineMsgDelivereddAck::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESOfflineMsgDelivereddAck.sMsgId)
}
 void MESOfflineMsgDelivereddAck::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESOfflineMsgDelivereddAck.sMsgId)
}
 void MESOfflineMsgDelivereddAck::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESOfflineMsgDelivereddAck.sMsgId)
}
 ::std::string* MESOfflineMsgDelivereddAck::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESOfflineMsgDelivereddAck.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESOfflineMsgDelivereddAck::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.MESOfflineMsgDelivereddAck.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESOfflineMsgDelivereddAck::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.MESOfflineMsgDelivereddAck.sMsgId)
}

// optional .im.ErrCode errcode = 3;
void MESOfflineMsgDelivereddAck::clear_errcode() {
  errcode_ = 0;
}
 ::im::ErrCode MESOfflineMsgDelivereddAck::errcode() const {
  // @@protoc_insertion_point(field_get:im.MESOfflineMsgDelivereddAck.errcode)
  return static_cast< ::im::ErrCode >(errcode_);
}
 void MESOfflineMsgDelivereddAck::set_errcode(::im::ErrCode value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:im.MESOfflineMsgDelivereddAck.errcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESOfflineMsgDeliveredNotifyAck::kSMsgIdFieldNumber;
const int MESOfflineMsgDeliveredNotifyAck::kSFromIdFieldNumber;
const int MESOfflineMsgDeliveredNotifyAck::kLsMsgsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESOfflineMsgDeliveredNotifyAck::MESOfflineMsgDeliveredNotifyAck()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESOfflineMsgDeliveredNotifyAck)
}

void MESOfflineMsgDeliveredNotifyAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MESOfflineMsgDeliveredNotifyAck::MESOfflineMsgDeliveredNotifyAck(const MESOfflineMsgDeliveredNotifyAck& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.MESOfflineMsgDeliveredNotifyAck)
}

void MESOfflineMsgDeliveredNotifyAck::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MESOfflineMsgDeliveredNotifyAck::~MESOfflineMsgDeliveredNotifyAck() {
  // @@protoc_insertion_point(destructor:im.MESOfflineMsgDeliveredNotifyAck)
  SharedDtor();
}

void MESOfflineMsgDeliveredNotifyAck::SharedDtor() {
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MESOfflineMsgDeliveredNotifyAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MESOfflineMsgDeliveredNotifyAck& MESOfflineMsgDeliveredNotifyAck::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

MESOfflineMsgDeliveredNotifyAck* MESOfflineMsgDeliveredNotifyAck::default_instance_ = NULL;

MESOfflineMsgDeliveredNotifyAck* MESOfflineMsgDeliveredNotifyAck::New(::google::protobuf::Arena* arena) const {
  MESOfflineMsgDeliveredNotifyAck* n = new MESOfflineMsgDeliveredNotifyAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MESOfflineMsgDeliveredNotifyAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESOfflineMsgDeliveredNotifyAck)
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lsmsgs_.Clear();
}

bool MESOfflineMsgDeliveredNotifyAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.MESOfflineMsgDeliveredNotifyAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sMsgId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESOfflineMsgDeliveredNotifyAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sFromId;
        break;
      }

      // optional string sFromId = 2;
      case 2: {
        if (tag == 18) {
         parse_sFromId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), this->sfromid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESOfflineMsgDeliveredNotifyAck.sFromId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_lsMsgs;
        break;
      }

      // repeated .im.OfflineDeliveredMsg lsMsgs = 3;
      case 3: {
        if (tag == 26) {
         parse_lsMsgs:
          DO_(input->IncrementRecursionDepth());
         parse_loop_lsMsgs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_lsmsgs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_lsMsgs;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESOfflineMsgDeliveredNotifyAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESOfflineMsgDeliveredNotifyAck)
  return false;
#undef DO_
}

void MESOfflineMsgDeliveredNotifyAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESOfflineMsgDeliveredNotifyAck)
  // optional string sMsgId = 1;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESOfflineMsgDeliveredNotifyAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->smsgid(), output);
  }

  // optional string sFromId = 2;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), this->sfromid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESOfflineMsgDeliveredNotifyAck.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sfromid(), output);
  }

  // repeated .im.OfflineDeliveredMsg lsMsgs = 3;
  for (unsigned int i = 0, n = this->lsmsgs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, this->lsmsgs(i), output);
  }

  // @@protoc_insertion_point(serialize_end:im.MESOfflineMsgDeliveredNotifyAck)
}

int MESOfflineMsgDeliveredNotifyAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESOfflineMsgDeliveredNotifyAck)
  int total_size = 0;

  // optional string sMsgId = 1;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // optional string sFromId = 2;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // repeated .im.OfflineDeliveredMsg lsMsgs = 3;
  total_size += 1 * this->lsmsgs_size();
  for (int i = 0; i < this->lsmsgs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->lsmsgs(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MESOfflineMsgDeliveredNotifyAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESOfflineMsgDeliveredNotifyAck*>(&from));
}

void MESOfflineMsgDeliveredNotifyAck::MergeFrom(const MESOfflineMsgDeliveredNotifyAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESOfflineMsgDeliveredNotifyAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  lsmsgs_.MergeFrom(from.lsmsgs_);
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
}

void MESOfflineMsgDeliveredNotifyAck::CopyFrom(const MESOfflineMsgDeliveredNotifyAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESOfflineMsgDeliveredNotifyAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESOfflineMsgDeliveredNotifyAck::IsInitialized() const {

  return true;
}

void MESOfflineMsgDeliveredNotifyAck::Swap(MESOfflineMsgDeliveredNotifyAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESOfflineMsgDeliveredNotifyAck::InternalSwap(MESOfflineMsgDeliveredNotifyAck* other) {
  smsgid_.Swap(&other->smsgid_);
  sfromid_.Swap(&other->sfromid_);
  lsmsgs_.UnsafeArenaSwap(&other->lsmsgs_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string MESOfflineMsgDeliveredNotifyAck::GetTypeName() const {
  return "im.MESOfflineMsgDeliveredNotifyAck";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MESOfflineMsgDeliveredNotifyAck

// optional string sMsgId = 1;
void MESOfflineMsgDeliveredNotifyAck::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESOfflineMsgDeliveredNotifyAck::smsgid() const {
  // @@protoc_insertion_point(field_get:im.MESOfflineMsgDeliveredNotifyAck.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESOfflineMsgDeliveredNotifyAck::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESOfflineMsgDeliveredNotifyAck.sMsgId)
}
 void MESOfflineMsgDeliveredNotifyAck::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESOfflineMsgDeliveredNotifyAck.sMsgId)
}
 void MESOfflineMsgDeliveredNotifyAck::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESOfflineMsgDeliveredNotifyAck.sMsgId)
}
 ::std::string* MESOfflineMsgDeliveredNotifyAck::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESOfflineMsgDeliveredNotifyAck.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESOfflineMsgDeliveredNotifyAck::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.MESOfflineMsgDeliveredNotifyAck.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESOfflineMsgDeliveredNotifyAck::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.MESOfflineMsgDeliveredNotifyAck.sMsgId)
}

// optional string sFromId = 2;
void MESOfflineMsgDeliveredNotifyAck::clear_sfromid() {
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESOfflineMsgDeliveredNotifyAck::sfromid() const {
  // @@protoc_insertion_point(field_get:im.MESOfflineMsgDeliveredNotifyAck.sFromId)
  return sfromid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESOfflineMsgDeliveredNotifyAck::set_sfromid(const ::std::string& value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESOfflineMsgDeliveredNotifyAck.sFromId)
}
 void MESOfflineMsgDeliveredNotifyAck::set_sfromid(const char* value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESOfflineMsgDeliveredNotifyAck.sFromId)
}
 void MESOfflineMsgDeliveredNotifyAck::set_sfromid(const char* value, size_t size) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESOfflineMsgDeliveredNotifyAck.sFromId)
}
 ::std::string* MESOfflineMsgDeliveredNotifyAck::mutable_sfromid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESOfflineMsgDeliveredNotifyAck.sFromId)
  return sfromid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESOfflineMsgDeliveredNotifyAck::release_sfromid() {
  // @@protoc_insertion_point(field_release:im.MESOfflineMsgDeliveredNotifyAck.sFromId)
  
  return sfromid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESOfflineMsgDeliveredNotifyAck::set_allocated_sfromid(::std::string* sfromid) {
  if (sfromid != NULL) {
    
  } else {
    
  }
  sfromid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sfromid);
  // @@protoc_insertion_point(field_set_allocated:im.MESOfflineMsgDeliveredNotifyAck.sFromId)
}

// repeated .im.OfflineDeliveredMsg lsMsgs = 3;
int MESOfflineMsgDeliveredNotifyAck::lsmsgs_size() const {
  return lsmsgs_.size();
}
void MESOfflineMsgDeliveredNotifyAck::clear_lsmsgs() {
  lsmsgs_.Clear();
}
const ::im::OfflineDeliveredMsg& MESOfflineMsgDeliveredNotifyAck::lsmsgs(int index) const {
  // @@protoc_insertion_point(field_get:im.MESOfflineMsgDeliveredNotifyAck.lsMsgs)
  return lsmsgs_.Get(index);
}
::im::OfflineDeliveredMsg* MESOfflineMsgDeliveredNotifyAck::mutable_lsmsgs(int index) {
  // @@protoc_insertion_point(field_mutable:im.MESOfflineMsgDeliveredNotifyAck.lsMsgs)
  return lsmsgs_.Mutable(index);
}
::im::OfflineDeliveredMsg* MESOfflineMsgDeliveredNotifyAck::add_lsmsgs() {
  // @@protoc_insertion_point(field_add:im.MESOfflineMsgDeliveredNotifyAck.lsMsgs)
  return lsmsgs_.Add();
}
::google::protobuf::RepeatedPtrField< ::im::OfflineDeliveredMsg >*
MESOfflineMsgDeliveredNotifyAck::mutable_lsmsgs() {
  // @@protoc_insertion_point(field_mutable_list:im.MESOfflineMsgDeliveredNotifyAck.lsMsgs)
  return &lsmsgs_;
}
const ::google::protobuf::RepeatedPtrField< ::im::OfflineDeliveredMsg >&
MESOfflineMsgDeliveredNotifyAck::lsmsgs() const {
  // @@protoc_insertion_point(field_list:im.MESOfflineMsgDeliveredNotifyAck.lsMsgs)
  return lsmsgs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESAddFriend::kSFromIdFieldNumber;
const int MESAddFriend::kSToIdFieldNumber;
const int MESAddFriend::kSMsgIdFieldNumber;
const int MESAddFriend::kSDescFieldNumber;
const int MESAddFriend::kSMemoNameFieldNumber;
const int MESAddFriend::kPacketIdFieldNumber;
const int MESAddFriend::kSSelfIntroduceFieldNumber;
const int MESAddFriend::kMsgTimeFieldNumber;
const int MESAddFriend::kExtendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESAddFriend::MESAddFriend()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESAddFriend)
}

void MESAddFriend::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MESAddFriend::MESAddFriend(const MESAddFriend& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.MESAddFriend)
}

void MESAddFriend::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdesc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smemoname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  packetid_ = 0u;
  sselfintroduce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgtime_ = GOOGLE_ULONGLONG(0);
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MESAddFriend::~MESAddFriend() {
  // @@protoc_insertion_point(destructor:im.MESAddFriend)
  SharedDtor();
}

void MESAddFriend::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdesc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smemoname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sselfintroduce_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MESAddFriend::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MESAddFriend& MESAddFriend::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

MESAddFriend* MESAddFriend::default_instance_ = NULL;

MESAddFriend* MESAddFriend::New(::google::protobuf::Arena* arena) const {
  MESAddFriend* n = new MESAddFriend;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MESAddFriend::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESAddFriend)
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smemoname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  packetid_ = 0u;
  sselfintroduce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgtime_ = GOOGLE_ULONGLONG(0);
  extend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MESAddFriend::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.MESAddFriend)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sFromId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), this->sfromid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESAddFriend.sFromId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sToId;
        break;
      }

      // optional string sToId = 2;
      case 2: {
        if (tag == 18) {
         parse_sToId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), this->stoid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESAddFriend.sToId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 3;
      case 3: {
        if (tag == 26) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESAddFriend.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_sDesc;
        break;
      }

      // optional string sDesc = 4;
      case 4: {
        if (tag == 34) {
         parse_sDesc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sdesc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sdesc().data(), this->sdesc().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESAddFriend.sDesc"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_sMemoName;
        break;
      }

      // optional string sMemoName = 5;
      case 5: {
        if (tag == 42) {
         parse_sMemoName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smemoname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smemoname().data(), this->smemoname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESAddFriend.sMemoName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_packetId;
        break;
      }

      // optional uint32 packetId = 6;
      case 6: {
        if (tag == 48) {
         parse_packetId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &packetid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_sSelfIntroduce;
        break;
      }

      // optional string sSelfIntroduce = 7;
      case 7: {
        if (tag == 58) {
         parse_sSelfIntroduce:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sselfintroduce()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sselfintroduce().data(), this->sselfintroduce().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESAddFriend.sSelfIntroduce"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_msgTime;
        break;
      }

      // optional uint64 msgTime = 8;
      case 8: {
        if (tag == 64) {
         parse_msgTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_extend;
        break;
      }

      // optional string extend = 9;
      case 9: {
        if (tag == 74) {
         parse_extend:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extend()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extend().data(), this->extend().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESAddFriend.extend"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESAddFriend)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESAddFriend)
  return false;
#undef DO_
}

void MESAddFriend::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESAddFriend)
  // optional string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), this->sfromid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESAddFriend.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // optional string sToId = 2;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), this->stoid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESAddFriend.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stoid(), output);
  }

  // optional string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESAddFriend.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // optional string sDesc = 4;
  if (this->sdesc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sdesc().data(), this->sdesc().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESAddFriend.sDesc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sdesc(), output);
  }

  // optional string sMemoName = 5;
  if (this->smemoname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smemoname().data(), this->smemoname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESAddFriend.sMemoName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->smemoname(), output);
  }

  // optional uint32 packetId = 6;
  if (this->packetid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->packetid(), output);
  }

  // optional string sSelfIntroduce = 7;
  if (this->sselfintroduce().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sselfintroduce().data(), this->sselfintroduce().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESAddFriend.sSelfIntroduce");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->sselfintroduce(), output);
  }

  // optional uint64 msgTime = 8;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->msgtime(), output);
  }

  // optional string extend = 9;
  if (this->extend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extend().data(), this->extend().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESAddFriend.extend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->extend(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.MESAddFriend)
}

int MESAddFriend::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESAddFriend)
  int total_size = 0;

  // optional string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // optional string sToId = 2;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // optional string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // optional string sDesc = 4;
  if (this->sdesc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sdesc());
  }

  // optional string sMemoName = 5;
  if (this->smemoname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smemoname());
  }

  // optional uint32 packetId = 6;
  if (this->packetid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->packetid());
  }

  // optional string sSelfIntroduce = 7;
  if (this->sselfintroduce().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sselfintroduce());
  }

  // optional uint64 msgTime = 8;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // optional string extend = 9;
  if (this->extend().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extend());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MESAddFriend::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESAddFriend*>(&from));
}

void MESAddFriend::MergeFrom(const MESAddFriend& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESAddFriend)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.sdesc().size() > 0) {

    sdesc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdesc_);
  }
  if (from.smemoname().size() > 0) {

    smemoname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smemoname_);
  }
  if (from.packetid() != 0) {
    set_packetid(from.packetid());
  }
  if (from.sselfintroduce().size() > 0) {

    sselfintroduce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sselfintroduce_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.extend().size() > 0) {

    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
}

void MESAddFriend::CopyFrom(const MESAddFriend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESAddFriend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESAddFriend::IsInitialized() const {

  return true;
}

void MESAddFriend::Swap(MESAddFriend* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESAddFriend::InternalSwap(MESAddFriend* other) {
  sfromid_.Swap(&other->sfromid_);
  stoid_.Swap(&other->stoid_);
  smsgid_.Swap(&other->smsgid_);
  sdesc_.Swap(&other->sdesc_);
  smemoname_.Swap(&other->smemoname_);
  std::swap(packetid_, other->packetid_);
  sselfintroduce_.Swap(&other->sselfintroduce_);
  std::swap(msgtime_, other->msgtime_);
  extend_.Swap(&other->extend_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string MESAddFriend::GetTypeName() const {
  return "im.MESAddFriend";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MESAddFriend

// optional string sFromId = 1;
void MESAddFriend::clear_sfromid() {
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESAddFriend::sfromid() const {
  // @@protoc_insertion_point(field_get:im.MESAddFriend.sFromId)
  return sfromid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESAddFriend::set_sfromid(const ::std::string& value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESAddFriend.sFromId)
}
 void MESAddFriend::set_sfromid(const char* value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESAddFriend.sFromId)
}
 void MESAddFriend::set_sfromid(const char* value, size_t size) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESAddFriend.sFromId)
}
 ::std::string* MESAddFriend::mutable_sfromid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESAddFriend.sFromId)
  return sfromid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESAddFriend::release_sfromid() {
  // @@protoc_insertion_point(field_release:im.MESAddFriend.sFromId)
  
  return sfromid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESAddFriend::set_allocated_sfromid(::std::string* sfromid) {
  if (sfromid != NULL) {
    
  } else {
    
  }
  sfromid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sfromid);
  // @@protoc_insertion_point(field_set_allocated:im.MESAddFriend.sFromId)
}

// optional string sToId = 2;
void MESAddFriend::clear_stoid() {
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESAddFriend::stoid() const {
  // @@protoc_insertion_point(field_get:im.MESAddFriend.sToId)
  return stoid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESAddFriend::set_stoid(const ::std::string& value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESAddFriend.sToId)
}
 void MESAddFriend::set_stoid(const char* value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESAddFriend.sToId)
}
 void MESAddFriend::set_stoid(const char* value, size_t size) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESAddFriend.sToId)
}
 ::std::string* MESAddFriend::mutable_stoid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESAddFriend.sToId)
  return stoid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESAddFriend::release_stoid() {
  // @@protoc_insertion_point(field_release:im.MESAddFriend.sToId)
  
  return stoid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESAddFriend::set_allocated_stoid(::std::string* stoid) {
  if (stoid != NULL) {
    
  } else {
    
  }
  stoid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stoid);
  // @@protoc_insertion_point(field_set_allocated:im.MESAddFriend.sToId)
}

// optional string sMsgId = 3;
void MESAddFriend::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESAddFriend::smsgid() const {
  // @@protoc_insertion_point(field_get:im.MESAddFriend.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESAddFriend::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESAddFriend.sMsgId)
}
 void MESAddFriend::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESAddFriend.sMsgId)
}
 void MESAddFriend::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESAddFriend.sMsgId)
}
 ::std::string* MESAddFriend::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESAddFriend.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESAddFriend::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.MESAddFriend.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESAddFriend::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.MESAddFriend.sMsgId)
}

// optional string sDesc = 4;
void MESAddFriend::clear_sdesc() {
  sdesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESAddFriend::sdesc() const {
  // @@protoc_insertion_point(field_get:im.MESAddFriend.sDesc)
  return sdesc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESAddFriend::set_sdesc(const ::std::string& value) {
  
  sdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESAddFriend.sDesc)
}
 void MESAddFriend::set_sdesc(const char* value) {
  
  sdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESAddFriend.sDesc)
}
 void MESAddFriend::set_sdesc(const char* value, size_t size) {
  
  sdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESAddFriend.sDesc)
}
 ::std::string* MESAddFriend::mutable_sdesc() {
  
  // @@protoc_insertion_point(field_mutable:im.MESAddFriend.sDesc)
  return sdesc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESAddFriend::release_sdesc() {
  // @@protoc_insertion_point(field_release:im.MESAddFriend.sDesc)
  
  return sdesc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESAddFriend::set_allocated_sdesc(::std::string* sdesc) {
  if (sdesc != NULL) {
    
  } else {
    
  }
  sdesc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sdesc);
  // @@protoc_insertion_point(field_set_allocated:im.MESAddFriend.sDesc)
}

// optional string sMemoName = 5;
void MESAddFriend::clear_smemoname() {
  smemoname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESAddFriend::smemoname() const {
  // @@protoc_insertion_point(field_get:im.MESAddFriend.sMemoName)
  return smemoname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESAddFriend::set_smemoname(const ::std::string& value) {
  
  smemoname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESAddFriend.sMemoName)
}
 void MESAddFriend::set_smemoname(const char* value) {
  
  smemoname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESAddFriend.sMemoName)
}
 void MESAddFriend::set_smemoname(const char* value, size_t size) {
  
  smemoname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESAddFriend.sMemoName)
}
 ::std::string* MESAddFriend::mutable_smemoname() {
  
  // @@protoc_insertion_point(field_mutable:im.MESAddFriend.sMemoName)
  return smemoname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESAddFriend::release_smemoname() {
  // @@protoc_insertion_point(field_release:im.MESAddFriend.sMemoName)
  
  return smemoname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESAddFriend::set_allocated_smemoname(::std::string* smemoname) {
  if (smemoname != NULL) {
    
  } else {
    
  }
  smemoname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smemoname);
  // @@protoc_insertion_point(field_set_allocated:im.MESAddFriend.sMemoName)
}

// optional uint32 packetId = 6;
void MESAddFriend::clear_packetid() {
  packetid_ = 0u;
}
 ::google::protobuf::uint32 MESAddFriend::packetid() const {
  // @@protoc_insertion_point(field_get:im.MESAddFriend.packetId)
  return packetid_;
}
 void MESAddFriend::set_packetid(::google::protobuf::uint32 value) {
  
  packetid_ = value;
  // @@protoc_insertion_point(field_set:im.MESAddFriend.packetId)
}

// optional string sSelfIntroduce = 7;
void MESAddFriend::clear_sselfintroduce() {
  sselfintroduce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESAddFriend::sselfintroduce() const {
  // @@protoc_insertion_point(field_get:im.MESAddFriend.sSelfIntroduce)
  return sselfintroduce_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESAddFriend::set_sselfintroduce(const ::std::string& value) {
  
  sselfintroduce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESAddFriend.sSelfIntroduce)
}
 void MESAddFriend::set_sselfintroduce(const char* value) {
  
  sselfintroduce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESAddFriend.sSelfIntroduce)
}
 void MESAddFriend::set_sselfintroduce(const char* value, size_t size) {
  
  sselfintroduce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESAddFriend.sSelfIntroduce)
}
 ::std::string* MESAddFriend::mutable_sselfintroduce() {
  
  // @@protoc_insertion_point(field_mutable:im.MESAddFriend.sSelfIntroduce)
  return sselfintroduce_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESAddFriend::release_sselfintroduce() {
  // @@protoc_insertion_point(field_release:im.MESAddFriend.sSelfIntroduce)
  
  return sselfintroduce_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESAddFriend::set_allocated_sselfintroduce(::std::string* sselfintroduce) {
  if (sselfintroduce != NULL) {
    
  } else {
    
  }
  sselfintroduce_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sselfintroduce);
  // @@protoc_insertion_point(field_set_allocated:im.MESAddFriend.sSelfIntroduce)
}

// optional uint64 msgTime = 8;
void MESAddFriend::clear_msgtime() {
  msgtime_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 MESAddFriend::msgtime() const {
  // @@protoc_insertion_point(field_get:im.MESAddFriend.msgTime)
  return msgtime_;
}
 void MESAddFriend::set_msgtime(::google::protobuf::uint64 value) {
  
  msgtime_ = value;
  // @@protoc_insertion_point(field_set:im.MESAddFriend.msgTime)
}

// optional string extend = 9;
void MESAddFriend::clear_extend() {
  extend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESAddFriend::extend() const {
  // @@protoc_insertion_point(field_get:im.MESAddFriend.extend)
  return extend_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESAddFriend::set_extend(const ::std::string& value) {
  
  extend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESAddFriend.extend)
}
 void MESAddFriend::set_extend(const char* value) {
  
  extend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESAddFriend.extend)
}
 void MESAddFriend::set_extend(const char* value, size_t size) {
  
  extend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESAddFriend.extend)
}
 ::std::string* MESAddFriend::mutable_extend() {
  
  // @@protoc_insertion_point(field_mutable:im.MESAddFriend.extend)
  return extend_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESAddFriend::release_extend() {
  // @@protoc_insertion_point(field_release:im.MESAddFriend.extend)
  
  return extend_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESAddFriend::set_allocated_extend(::std::string* extend) {
  if (extend != NULL) {
    
  } else {
    
  }
  extend_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extend);
  // @@protoc_insertion_point(field_set_allocated:im.MESAddFriend.extend)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESAddFriendAck::kSUserIdFieldNumber;
const int MESAddFriendAck::kSMsgIdFieldNumber;
const int MESAddFriendAck::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESAddFriendAck::MESAddFriendAck()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESAddFriendAck)
}

void MESAddFriendAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MESAddFriendAck::MESAddFriendAck(const MESAddFriendAck& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.MESAddFriendAck)
}

void MESAddFriendAck::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

MESAddFriendAck::~MESAddFriendAck() {
  // @@protoc_insertion_point(destructor:im.MESAddFriendAck)
  SharedDtor();
}

void MESAddFriendAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MESAddFriendAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MESAddFriendAck& MESAddFriendAck::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

MESAddFriendAck* MESAddFriendAck::default_instance_ = NULL;

MESAddFriendAck* MESAddFriendAck::New(::google::protobuf::Arena* arena) const {
  MESAddFriendAck* n = new MESAddFriendAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MESAddFriendAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESAddFriendAck)
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

bool MESAddFriendAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.MESAddFriendAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sUserId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), this->suserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESAddFriendAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 2;
      case 2: {
        if (tag == 18) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESAddFriendAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_errcode;
        break;
      }

      // optional .im.ErrCode errcode = 3;
      case 3: {
        if (tag == 24) {
         parse_errcode:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESAddFriendAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESAddFriendAck)
  return false;
#undef DO_
}

void MESAddFriendAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESAddFriendAck)
  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), this->suserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESAddFriendAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // optional string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESAddFriendAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  // optional .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->errcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.MESAddFriendAck)
}

int MESAddFriendAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESAddFriendAck)
  int total_size = 0;

  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // optional string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // optional .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MESAddFriendAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESAddFriendAck*>(&from));
}

void MESAddFriendAck::MergeFrom(const MESAddFriendAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESAddFriendAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void MESAddFriendAck::CopyFrom(const MESAddFriendAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESAddFriendAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESAddFriendAck::IsInitialized() const {

  return true;
}

void MESAddFriendAck::Swap(MESAddFriendAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESAddFriendAck::InternalSwap(MESAddFriendAck* other) {
  suserid_.Swap(&other->suserid_);
  smsgid_.Swap(&other->smsgid_);
  std::swap(errcode_, other->errcode_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string MESAddFriendAck::GetTypeName() const {
  return "im.MESAddFriendAck";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MESAddFriendAck

// optional string sUserId = 1;
void MESAddFriendAck::clear_suserid() {
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESAddFriendAck::suserid() const {
  // @@protoc_insertion_point(field_get:im.MESAddFriendAck.sUserId)
  return suserid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESAddFriendAck::set_suserid(const ::std::string& value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESAddFriendAck.sUserId)
}
 void MESAddFriendAck::set_suserid(const char* value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESAddFriendAck.sUserId)
}
 void MESAddFriendAck::set_suserid(const char* value, size_t size) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESAddFriendAck.sUserId)
}
 ::std::string* MESAddFriendAck::mutable_suserid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESAddFriendAck.sUserId)
  return suserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESAddFriendAck::release_suserid() {
  // @@protoc_insertion_point(field_release:im.MESAddFriendAck.sUserId)
  
  return suserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESAddFriendAck::set_allocated_suserid(::std::string* suserid) {
  if (suserid != NULL) {
    
  } else {
    
  }
  suserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), suserid);
  // @@protoc_insertion_point(field_set_allocated:im.MESAddFriendAck.sUserId)
}

// optional string sMsgId = 2;
void MESAddFriendAck::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESAddFriendAck::smsgid() const {
  // @@protoc_insertion_point(field_get:im.MESAddFriendAck.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESAddFriendAck::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESAddFriendAck.sMsgId)
}
 void MESAddFriendAck::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESAddFriendAck.sMsgId)
}
 void MESAddFriendAck::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESAddFriendAck.sMsgId)
}
 ::std::string* MESAddFriendAck::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESAddFriendAck.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESAddFriendAck::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.MESAddFriendAck.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESAddFriendAck::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.MESAddFriendAck.sMsgId)
}

// optional .im.ErrCode errcode = 3;
void MESAddFriendAck::clear_errcode() {
  errcode_ = 0;
}
 ::im::ErrCode MESAddFriendAck::errcode() const {
  // @@protoc_insertion_point(field_get:im.MESAddFriendAck.errcode)
  return static_cast< ::im::ErrCode >(errcode_);
}
 void MESAddFriendAck::set_errcode(::im::ErrCode value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:im.MESAddFriendAck.errcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESAddFriendDeliverAck::kSUserIdFieldNumber;
const int MESAddFriendDeliverAck::kSMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESAddFriendDeliverAck::MESAddFriendDeliverAck()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESAddFriendDeliverAck)
}

void MESAddFriendDeliverAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MESAddFriendDeliverAck::MESAddFriendDeliverAck(const MESAddFriendDeliverAck& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.MESAddFriendDeliverAck)
}

void MESAddFriendDeliverAck::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MESAddFriendDeliverAck::~MESAddFriendDeliverAck() {
  // @@protoc_insertion_point(destructor:im.MESAddFriendDeliverAck)
  SharedDtor();
}

void MESAddFriendDeliverAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MESAddFriendDeliverAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MESAddFriendDeliverAck& MESAddFriendDeliverAck::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

MESAddFriendDeliverAck* MESAddFriendDeliverAck::default_instance_ = NULL;

MESAddFriendDeliverAck* MESAddFriendDeliverAck::New(::google::protobuf::Arena* arena) const {
  MESAddFriendDeliverAck* n = new MESAddFriendDeliverAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MESAddFriendDeliverAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESAddFriendDeliverAck)
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MESAddFriendDeliverAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.MESAddFriendDeliverAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sUserId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), this->suserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESAddFriendDeliverAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 2;
      case 2: {
        if (tag == 18) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESAddFriendDeliverAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESAddFriendDeliverAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESAddFriendDeliverAck)
  return false;
#undef DO_
}

void MESAddFriendDeliverAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESAddFriendDeliverAck)
  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), this->suserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESAddFriendDeliverAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // optional string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESAddFriendDeliverAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.MESAddFriendDeliverAck)
}

int MESAddFriendDeliverAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESAddFriendDeliverAck)
  int total_size = 0;

  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // optional string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MESAddFriendDeliverAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESAddFriendDeliverAck*>(&from));
}

void MESAddFriendDeliverAck::MergeFrom(const MESAddFriendDeliverAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESAddFriendDeliverAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
}

void MESAddFriendDeliverAck::CopyFrom(const MESAddFriendDeliverAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESAddFriendDeliverAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESAddFriendDeliverAck::IsInitialized() const {

  return true;
}

void MESAddFriendDeliverAck::Swap(MESAddFriendDeliverAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESAddFriendDeliverAck::InternalSwap(MESAddFriendDeliverAck* other) {
  suserid_.Swap(&other->suserid_);
  smsgid_.Swap(&other->smsgid_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string MESAddFriendDeliverAck::GetTypeName() const {
  return "im.MESAddFriendDeliverAck";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MESAddFriendDeliverAck

// optional string sUserId = 1;
void MESAddFriendDeliverAck::clear_suserid() {
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESAddFriendDeliverAck::suserid() const {
  // @@protoc_insertion_point(field_get:im.MESAddFriendDeliverAck.sUserId)
  return suserid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESAddFriendDeliverAck::set_suserid(const ::std::string& value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESAddFriendDeliverAck.sUserId)
}
 void MESAddFriendDeliverAck::set_suserid(const char* value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESAddFriendDeliverAck.sUserId)
}
 void MESAddFriendDeliverAck::set_suserid(const char* value, size_t size) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESAddFriendDeliverAck.sUserId)
}
 ::std::string* MESAddFriendDeliverAck::mutable_suserid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESAddFriendDeliverAck.sUserId)
  return suserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESAddFriendDeliverAck::release_suserid() {
  // @@protoc_insertion_point(field_release:im.MESAddFriendDeliverAck.sUserId)
  
  return suserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESAddFriendDeliverAck::set_allocated_suserid(::std::string* suserid) {
  if (suserid != NULL) {
    
  } else {
    
  }
  suserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), suserid);
  // @@protoc_insertion_point(field_set_allocated:im.MESAddFriendDeliverAck.sUserId)
}

// optional string sMsgId = 2;
void MESAddFriendDeliverAck::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESAddFriendDeliverAck::smsgid() const {
  // @@protoc_insertion_point(field_get:im.MESAddFriendDeliverAck.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESAddFriendDeliverAck::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESAddFriendDeliverAck.sMsgId)
}
 void MESAddFriendDeliverAck::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESAddFriendDeliverAck.sMsgId)
}
 void MESAddFriendDeliverAck::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESAddFriendDeliverAck.sMsgId)
}
 ::std::string* MESAddFriendDeliverAck::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESAddFriendDeliverAck.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESAddFriendDeliverAck::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.MESAddFriendDeliverAck.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESAddFriendDeliverAck::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.MESAddFriendDeliverAck.sMsgId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESAddFriendAns::kSFromIdFieldNumber;
const int MESAddFriendAns::kSToIdFieldNumber;
const int MESAddFriendAns::kSMsgIdFieldNumber;
const int MESAddFriendAns::kSAnsFieldNumber;
const int MESAddFriendAns::kErrcodeFieldNumber;
const int MESAddFriendAns::kSMemoNameFieldNumber;
const int MESAddFriendAns::kPacketIdFieldNumber;
const int MESAddFriendAns::kMsgTimeFieldNumber;
const int MESAddFriendAns::kExtendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESAddFriendAns::MESAddFriendAns()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESAddFriendAns)
}

void MESAddFriendAns::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MESAddFriendAns::MESAddFriendAns(const MESAddFriendAns& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.MESAddFriendAns)
}

void MESAddFriendAns::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sans_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
  smemoname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  packetid_ = 0u;
  msgtime_ = GOOGLE_ULONGLONG(0);
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MESAddFriendAns::~MESAddFriendAns() {
  // @@protoc_insertion_point(destructor:im.MESAddFriendAns)
  SharedDtor();
}

void MESAddFriendAns::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sans_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smemoname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MESAddFriendAns::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MESAddFriendAns& MESAddFriendAns::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

MESAddFriendAns* MESAddFriendAns::default_instance_ = NULL;

MESAddFriendAns* MESAddFriendAns::New(::google::protobuf::Arena* arena) const {
  MESAddFriendAns* n = new MESAddFriendAns;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MESAddFriendAns::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESAddFriendAns)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MESAddFriendAns, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MESAddFriendAns*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(errcode_, msgtime_);
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sans_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smemoname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool MESAddFriendAns::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.MESAddFriendAns)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sFromId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), this->sfromid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESAddFriendAns.sFromId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sToId;
        break;
      }

      // optional string sToId = 2;
      case 2: {
        if (tag == 18) {
         parse_sToId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), this->stoid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESAddFriendAns.sToId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 3;
      case 3: {
        if (tag == 26) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESAddFriendAns.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_sAns;
        break;
      }

      // optional string sAns = 4;
      case 4: {
        if (tag == 34) {
         parse_sAns:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sans()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sans().data(), this->sans().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESAddFriendAns.sAns"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_errcode;
        break;
      }

      // optional .im.ErrCode errcode = 5;
      case 5: {
        if (tag == 40) {
         parse_errcode:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_sMemoName;
        break;
      }

      // optional string sMemoName = 6;
      case 6: {
        if (tag == 50) {
         parse_sMemoName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smemoname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smemoname().data(), this->smemoname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESAddFriendAns.sMemoName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_packetId;
        break;
      }

      // optional uint32 packetId = 7;
      case 7: {
        if (tag == 56) {
         parse_packetId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &packetid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_msgTime;
        break;
      }

      // optional uint64 msgTime = 8;
      case 8: {
        if (tag == 64) {
         parse_msgTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_extend;
        break;
      }

      // optional string extend = 9;
      case 9: {
        if (tag == 74) {
         parse_extend:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extend()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extend().data(), this->extend().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESAddFriendAns.extend"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESAddFriendAns)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESAddFriendAns)
  return false;
#undef DO_
}

void MESAddFriendAns::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESAddFriendAns)
  // optional string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), this->sfromid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESAddFriendAns.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // optional string sToId = 2;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), this->stoid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESAddFriendAns.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stoid(), output);
  }

  // optional string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESAddFriendAns.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // optional string sAns = 4;
  if (this->sans().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sans().data(), this->sans().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESAddFriendAns.sAns");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sans(), output);
  }

  // optional .im.ErrCode errcode = 5;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->errcode(), output);
  }

  // optional string sMemoName = 6;
  if (this->smemoname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smemoname().data(), this->smemoname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESAddFriendAns.sMemoName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->smemoname(), output);
  }

  // optional uint32 packetId = 7;
  if (this->packetid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->packetid(), output);
  }

  // optional uint64 msgTime = 8;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->msgtime(), output);
  }

  // optional string extend = 9;
  if (this->extend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extend().data(), this->extend().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESAddFriendAns.extend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->extend(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.MESAddFriendAns)
}

int MESAddFriendAns::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESAddFriendAns)
  int total_size = 0;

  // optional string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // optional string sToId = 2;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // optional string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // optional string sAns = 4;
  if (this->sans().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sans());
  }

  // optional .im.ErrCode errcode = 5;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  // optional string sMemoName = 6;
  if (this->smemoname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smemoname());
  }

  // optional uint32 packetId = 7;
  if (this->packetid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->packetid());
  }

  // optional uint64 msgTime = 8;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // optional string extend = 9;
  if (this->extend().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extend());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MESAddFriendAns::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESAddFriendAns*>(&from));
}

void MESAddFriendAns::MergeFrom(const MESAddFriendAns& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESAddFriendAns)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.sans().size() > 0) {

    sans_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sans_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
  if (from.smemoname().size() > 0) {

    smemoname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smemoname_);
  }
  if (from.packetid() != 0) {
    set_packetid(from.packetid());
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.extend().size() > 0) {

    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
}

void MESAddFriendAns::CopyFrom(const MESAddFriendAns& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESAddFriendAns)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESAddFriendAns::IsInitialized() const {

  return true;
}

void MESAddFriendAns::Swap(MESAddFriendAns* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESAddFriendAns::InternalSwap(MESAddFriendAns* other) {
  sfromid_.Swap(&other->sfromid_);
  stoid_.Swap(&other->stoid_);
  smsgid_.Swap(&other->smsgid_);
  sans_.Swap(&other->sans_);
  std::swap(errcode_, other->errcode_);
  smemoname_.Swap(&other->smemoname_);
  std::swap(packetid_, other->packetid_);
  std::swap(msgtime_, other->msgtime_);
  extend_.Swap(&other->extend_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string MESAddFriendAns::GetTypeName() const {
  return "im.MESAddFriendAns";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MESAddFriendAns

// optional string sFromId = 1;
void MESAddFriendAns::clear_sfromid() {
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESAddFriendAns::sfromid() const {
  // @@protoc_insertion_point(field_get:im.MESAddFriendAns.sFromId)
  return sfromid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESAddFriendAns::set_sfromid(const ::std::string& value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESAddFriendAns.sFromId)
}
 void MESAddFriendAns::set_sfromid(const char* value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESAddFriendAns.sFromId)
}
 void MESAddFriendAns::set_sfromid(const char* value, size_t size) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESAddFriendAns.sFromId)
}
 ::std::string* MESAddFriendAns::mutable_sfromid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESAddFriendAns.sFromId)
  return sfromid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESAddFriendAns::release_sfromid() {
  // @@protoc_insertion_point(field_release:im.MESAddFriendAns.sFromId)
  
  return sfromid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESAddFriendAns::set_allocated_sfromid(::std::string* sfromid) {
  if (sfromid != NULL) {
    
  } else {
    
  }
  sfromid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sfromid);
  // @@protoc_insertion_point(field_set_allocated:im.MESAddFriendAns.sFromId)
}

// optional string sToId = 2;
void MESAddFriendAns::clear_stoid() {
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESAddFriendAns::stoid() const {
  // @@protoc_insertion_point(field_get:im.MESAddFriendAns.sToId)
  return stoid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESAddFriendAns::set_stoid(const ::std::string& value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESAddFriendAns.sToId)
}
 void MESAddFriendAns::set_stoid(const char* value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESAddFriendAns.sToId)
}
 void MESAddFriendAns::set_stoid(const char* value, size_t size) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESAddFriendAns.sToId)
}
 ::std::string* MESAddFriendAns::mutable_stoid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESAddFriendAns.sToId)
  return stoid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESAddFriendAns::release_stoid() {
  // @@protoc_insertion_point(field_release:im.MESAddFriendAns.sToId)
  
  return stoid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESAddFriendAns::set_allocated_stoid(::std::string* stoid) {
  if (stoid != NULL) {
    
  } else {
    
  }
  stoid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stoid);
  // @@protoc_insertion_point(field_set_allocated:im.MESAddFriendAns.sToId)
}

// optional string sMsgId = 3;
void MESAddFriendAns::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESAddFriendAns::smsgid() const {
  // @@protoc_insertion_point(field_get:im.MESAddFriendAns.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESAddFriendAns::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESAddFriendAns.sMsgId)
}
 void MESAddFriendAns::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESAddFriendAns.sMsgId)
}
 void MESAddFriendAns::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESAddFriendAns.sMsgId)
}
 ::std::string* MESAddFriendAns::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESAddFriendAns.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESAddFriendAns::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.MESAddFriendAns.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESAddFriendAns::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.MESAddFriendAns.sMsgId)
}

// optional string sAns = 4;
void MESAddFriendAns::clear_sans() {
  sans_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESAddFriendAns::sans() const {
  // @@protoc_insertion_point(field_get:im.MESAddFriendAns.sAns)
  return sans_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESAddFriendAns::set_sans(const ::std::string& value) {
  
  sans_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESAddFriendAns.sAns)
}
 void MESAddFriendAns::set_sans(const char* value) {
  
  sans_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESAddFriendAns.sAns)
}
 void MESAddFriendAns::set_sans(const char* value, size_t size) {
  
  sans_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESAddFriendAns.sAns)
}
 ::std::string* MESAddFriendAns::mutable_sans() {
  
  // @@protoc_insertion_point(field_mutable:im.MESAddFriendAns.sAns)
  return sans_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESAddFriendAns::release_sans() {
  // @@protoc_insertion_point(field_release:im.MESAddFriendAns.sAns)
  
  return sans_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESAddFriendAns::set_allocated_sans(::std::string* sans) {
  if (sans != NULL) {
    
  } else {
    
  }
  sans_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sans);
  // @@protoc_insertion_point(field_set_allocated:im.MESAddFriendAns.sAns)
}

// optional .im.ErrCode errcode = 5;
void MESAddFriendAns::clear_errcode() {
  errcode_ = 0;
}
 ::im::ErrCode MESAddFriendAns::errcode() const {
  // @@protoc_insertion_point(field_get:im.MESAddFriendAns.errcode)
  return static_cast< ::im::ErrCode >(errcode_);
}
 void MESAddFriendAns::set_errcode(::im::ErrCode value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:im.MESAddFriendAns.errcode)
}

// optional string sMemoName = 6;
void MESAddFriendAns::clear_smemoname() {
  smemoname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESAddFriendAns::smemoname() const {
  // @@protoc_insertion_point(field_get:im.MESAddFriendAns.sMemoName)
  return smemoname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESAddFriendAns::set_smemoname(const ::std::string& value) {
  
  smemoname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESAddFriendAns.sMemoName)
}
 void MESAddFriendAns::set_smemoname(const char* value) {
  
  smemoname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESAddFriendAns.sMemoName)
}
 void MESAddFriendAns::set_smemoname(const char* value, size_t size) {
  
  smemoname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESAddFriendAns.sMemoName)
}
 ::std::string* MESAddFriendAns::mutable_smemoname() {
  
  // @@protoc_insertion_point(field_mutable:im.MESAddFriendAns.sMemoName)
  return smemoname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESAddFriendAns::release_smemoname() {
  // @@protoc_insertion_point(field_release:im.MESAddFriendAns.sMemoName)
  
  return smemoname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESAddFriendAns::set_allocated_smemoname(::std::string* smemoname) {
  if (smemoname != NULL) {
    
  } else {
    
  }
  smemoname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smemoname);
  // @@protoc_insertion_point(field_set_allocated:im.MESAddFriendAns.sMemoName)
}

// optional uint32 packetId = 7;
void MESAddFriendAns::clear_packetid() {
  packetid_ = 0u;
}
 ::google::protobuf::uint32 MESAddFriendAns::packetid() const {
  // @@protoc_insertion_point(field_get:im.MESAddFriendAns.packetId)
  return packetid_;
}
 void MESAddFriendAns::set_packetid(::google::protobuf::uint32 value) {
  
  packetid_ = value;
  // @@protoc_insertion_point(field_set:im.MESAddFriendAns.packetId)
}

// optional uint64 msgTime = 8;
void MESAddFriendAns::clear_msgtime() {
  msgtime_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 MESAddFriendAns::msgtime() const {
  // @@protoc_insertion_point(field_get:im.MESAddFriendAns.msgTime)
  return msgtime_;
}
 void MESAddFriendAns::set_msgtime(::google::protobuf::uint64 value) {
  
  msgtime_ = value;
  // @@protoc_insertion_point(field_set:im.MESAddFriendAns.msgTime)
}

// optional string extend = 9;
void MESAddFriendAns::clear_extend() {
  extend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESAddFriendAns::extend() const {
  // @@protoc_insertion_point(field_get:im.MESAddFriendAns.extend)
  return extend_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESAddFriendAns::set_extend(const ::std::string& value) {
  
  extend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESAddFriendAns.extend)
}
 void MESAddFriendAns::set_extend(const char* value) {
  
  extend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESAddFriendAns.extend)
}
 void MESAddFriendAns::set_extend(const char* value, size_t size) {
  
  extend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESAddFriendAns.extend)
}
 ::std::string* MESAddFriendAns::mutable_extend() {
  
  // @@protoc_insertion_point(field_mutable:im.MESAddFriendAns.extend)
  return extend_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESAddFriendAns::release_extend() {
  // @@protoc_insertion_point(field_release:im.MESAddFriendAns.extend)
  
  return extend_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESAddFriendAns::set_allocated_extend(::std::string* extend) {
  if (extend != NULL) {
    
  } else {
    
  }
  extend_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extend);
  // @@protoc_insertion_point(field_set_allocated:im.MESAddFriendAns.extend)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESAddFriendAnsAck::kSUserIdFieldNumber;
const int MESAddFriendAnsAck::kSMsgIdFieldNumber;
const int MESAddFriendAnsAck::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESAddFriendAnsAck::MESAddFriendAnsAck()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESAddFriendAnsAck)
}

void MESAddFriendAnsAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MESAddFriendAnsAck::MESAddFriendAnsAck(const MESAddFriendAnsAck& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.MESAddFriendAnsAck)
}

void MESAddFriendAnsAck::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

MESAddFriendAnsAck::~MESAddFriendAnsAck() {
  // @@protoc_insertion_point(destructor:im.MESAddFriendAnsAck)
  SharedDtor();
}

void MESAddFriendAnsAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MESAddFriendAnsAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MESAddFriendAnsAck& MESAddFriendAnsAck::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

MESAddFriendAnsAck* MESAddFriendAnsAck::default_instance_ = NULL;

MESAddFriendAnsAck* MESAddFriendAnsAck::New(::google::protobuf::Arena* arena) const {
  MESAddFriendAnsAck* n = new MESAddFriendAnsAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MESAddFriendAnsAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESAddFriendAnsAck)
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

bool MESAddFriendAnsAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.MESAddFriendAnsAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sUserId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), this->suserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESAddFriendAnsAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 2;
      case 2: {
        if (tag == 18) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESAddFriendAnsAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_errcode;
        break;
      }

      // optional .im.ErrCode errcode = 3;
      case 3: {
        if (tag == 24) {
         parse_errcode:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESAddFriendAnsAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESAddFriendAnsAck)
  return false;
#undef DO_
}

void MESAddFriendAnsAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESAddFriendAnsAck)
  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), this->suserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESAddFriendAnsAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // optional string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESAddFriendAnsAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  // optional .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->errcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.MESAddFriendAnsAck)
}

int MESAddFriendAnsAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESAddFriendAnsAck)
  int total_size = 0;

  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // optional string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // optional .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MESAddFriendAnsAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESAddFriendAnsAck*>(&from));
}

void MESAddFriendAnsAck::MergeFrom(const MESAddFriendAnsAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESAddFriendAnsAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void MESAddFriendAnsAck::CopyFrom(const MESAddFriendAnsAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESAddFriendAnsAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESAddFriendAnsAck::IsInitialized() const {

  return true;
}

void MESAddFriendAnsAck::Swap(MESAddFriendAnsAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESAddFriendAnsAck::InternalSwap(MESAddFriendAnsAck* other) {
  suserid_.Swap(&other->suserid_);
  smsgid_.Swap(&other->smsgid_);
  std::swap(errcode_, other->errcode_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string MESAddFriendAnsAck::GetTypeName() const {
  return "im.MESAddFriendAnsAck";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MESAddFriendAnsAck

// optional string sUserId = 1;
void MESAddFriendAnsAck::clear_suserid() {
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESAddFriendAnsAck::suserid() const {
  // @@protoc_insertion_point(field_get:im.MESAddFriendAnsAck.sUserId)
  return suserid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESAddFriendAnsAck::set_suserid(const ::std::string& value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESAddFriendAnsAck.sUserId)
}
 void MESAddFriendAnsAck::set_suserid(const char* value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESAddFriendAnsAck.sUserId)
}
 void MESAddFriendAnsAck::set_suserid(const char* value, size_t size) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESAddFriendAnsAck.sUserId)
}
 ::std::string* MESAddFriendAnsAck::mutable_suserid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESAddFriendAnsAck.sUserId)
  return suserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESAddFriendAnsAck::release_suserid() {
  // @@protoc_insertion_point(field_release:im.MESAddFriendAnsAck.sUserId)
  
  return suserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESAddFriendAnsAck::set_allocated_suserid(::std::string* suserid) {
  if (suserid != NULL) {
    
  } else {
    
  }
  suserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), suserid);
  // @@protoc_insertion_point(field_set_allocated:im.MESAddFriendAnsAck.sUserId)
}

// optional string sMsgId = 2;
void MESAddFriendAnsAck::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESAddFriendAnsAck::smsgid() const {
  // @@protoc_insertion_point(field_get:im.MESAddFriendAnsAck.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESAddFriendAnsAck::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESAddFriendAnsAck.sMsgId)
}
 void MESAddFriendAnsAck::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESAddFriendAnsAck.sMsgId)
}
 void MESAddFriendAnsAck::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESAddFriendAnsAck.sMsgId)
}
 ::std::string* MESAddFriendAnsAck::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESAddFriendAnsAck.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESAddFriendAnsAck::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.MESAddFriendAnsAck.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESAddFriendAnsAck::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.MESAddFriendAnsAck.sMsgId)
}

// optional .im.ErrCode errcode = 3;
void MESAddFriendAnsAck::clear_errcode() {
  errcode_ = 0;
}
 ::im::ErrCode MESAddFriendAnsAck::errcode() const {
  // @@protoc_insertion_point(field_get:im.MESAddFriendAnsAck.errcode)
  return static_cast< ::im::ErrCode >(errcode_);
}
 void MESAddFriendAnsAck::set_errcode(::im::ErrCode value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:im.MESAddFriendAnsAck.errcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESAddFriendAnsDeliverACK::kSUserIdFieldNumber;
const int MESAddFriendAnsDeliverACK::kSMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESAddFriendAnsDeliverACK::MESAddFriendAnsDeliverACK()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESAddFriendAnsDeliverACK)
}

void MESAddFriendAnsDeliverACK::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MESAddFriendAnsDeliverACK::MESAddFriendAnsDeliverACK(const MESAddFriendAnsDeliverACK& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.MESAddFriendAnsDeliverACK)
}

void MESAddFriendAnsDeliverACK::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MESAddFriendAnsDeliverACK::~MESAddFriendAnsDeliverACK() {
  // @@protoc_insertion_point(destructor:im.MESAddFriendAnsDeliverACK)
  SharedDtor();
}

void MESAddFriendAnsDeliverACK::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MESAddFriendAnsDeliverACK::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MESAddFriendAnsDeliverACK& MESAddFriendAnsDeliverACK::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

MESAddFriendAnsDeliverACK* MESAddFriendAnsDeliverACK::default_instance_ = NULL;

MESAddFriendAnsDeliverACK* MESAddFriendAnsDeliverACK::New(::google::protobuf::Arena* arena) const {
  MESAddFriendAnsDeliverACK* n = new MESAddFriendAnsDeliverACK;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MESAddFriendAnsDeliverACK::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESAddFriendAnsDeliverACK)
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MESAddFriendAnsDeliverACK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.MESAddFriendAnsDeliverACK)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sUserId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), this->suserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESAddFriendAnsDeliverACK.sUserId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 2;
      case 2: {
        if (tag == 18) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESAddFriendAnsDeliverACK.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESAddFriendAnsDeliverACK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESAddFriendAnsDeliverACK)
  return false;
#undef DO_
}

void MESAddFriendAnsDeliverACK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESAddFriendAnsDeliverACK)
  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), this->suserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESAddFriendAnsDeliverACK.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // optional string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESAddFriendAnsDeliverACK.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.MESAddFriendAnsDeliverACK)
}

int MESAddFriendAnsDeliverACK::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESAddFriendAnsDeliverACK)
  int total_size = 0;

  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // optional string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MESAddFriendAnsDeliverACK::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESAddFriendAnsDeliverACK*>(&from));
}

void MESAddFriendAnsDeliverACK::MergeFrom(const MESAddFriendAnsDeliverACK& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESAddFriendAnsDeliverACK)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
}

void MESAddFriendAnsDeliverACK::CopyFrom(const MESAddFriendAnsDeliverACK& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESAddFriendAnsDeliverACK)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESAddFriendAnsDeliverACK::IsInitialized() const {

  return true;
}

void MESAddFriendAnsDeliverACK::Swap(MESAddFriendAnsDeliverACK* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESAddFriendAnsDeliverACK::InternalSwap(MESAddFriendAnsDeliverACK* other) {
  suserid_.Swap(&other->suserid_);
  smsgid_.Swap(&other->smsgid_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string MESAddFriendAnsDeliverACK::GetTypeName() const {
  return "im.MESAddFriendAnsDeliverACK";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MESAddFriendAnsDeliverACK

// optional string sUserId = 1;
void MESAddFriendAnsDeliverACK::clear_suserid() {
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESAddFriendAnsDeliverACK::suserid() const {
  // @@protoc_insertion_point(field_get:im.MESAddFriendAnsDeliverACK.sUserId)
  return suserid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESAddFriendAnsDeliverACK::set_suserid(const ::std::string& value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESAddFriendAnsDeliverACK.sUserId)
}
 void MESAddFriendAnsDeliverACK::set_suserid(const char* value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESAddFriendAnsDeliverACK.sUserId)
}
 void MESAddFriendAnsDeliverACK::set_suserid(const char* value, size_t size) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESAddFriendAnsDeliverACK.sUserId)
}
 ::std::string* MESAddFriendAnsDeliverACK::mutable_suserid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESAddFriendAnsDeliverACK.sUserId)
  return suserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESAddFriendAnsDeliverACK::release_suserid() {
  // @@protoc_insertion_point(field_release:im.MESAddFriendAnsDeliverACK.sUserId)
  
  return suserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESAddFriendAnsDeliverACK::set_allocated_suserid(::std::string* suserid) {
  if (suserid != NULL) {
    
  } else {
    
  }
  suserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), suserid);
  // @@protoc_insertion_point(field_set_allocated:im.MESAddFriendAnsDeliverACK.sUserId)
}

// optional string sMsgId = 2;
void MESAddFriendAnsDeliverACK::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESAddFriendAnsDeliverACK::smsgid() const {
  // @@protoc_insertion_point(field_get:im.MESAddFriendAnsDeliverACK.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESAddFriendAnsDeliverACK::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESAddFriendAnsDeliverACK.sMsgId)
}
 void MESAddFriendAnsDeliverACK::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESAddFriendAnsDeliverACK.sMsgId)
}
 void MESAddFriendAnsDeliverACK::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESAddFriendAnsDeliverACK.sMsgId)
}
 ::std::string* MESAddFriendAnsDeliverACK::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESAddFriendAnsDeliverACK.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESAddFriendAnsDeliverACK::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.MESAddFriendAnsDeliverACK.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESAddFriendAnsDeliverACK::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.MESAddFriendAnsDeliverACK.sMsgId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESDelFriend::kSFromIdFieldNumber;
const int MESDelFriend::kSToIdFieldNumber;
const int MESDelFriend::kSMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESDelFriend::MESDelFriend()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESDelFriend)
}

void MESDelFriend::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MESDelFriend::MESDelFriend(const MESDelFriend& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.MESDelFriend)
}

void MESDelFriend::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MESDelFriend::~MESDelFriend() {
  // @@protoc_insertion_point(destructor:im.MESDelFriend)
  SharedDtor();
}

void MESDelFriend::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MESDelFriend::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MESDelFriend& MESDelFriend::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

MESDelFriend* MESDelFriend::default_instance_ = NULL;

MESDelFriend* MESDelFriend::New(::google::protobuf::Arena* arena) const {
  MESDelFriend* n = new MESDelFriend;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MESDelFriend::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESDelFriend)
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MESDelFriend::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.MESDelFriend)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sFromId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), this->sfromid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESDelFriend.sFromId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sToId;
        break;
      }

      // optional string sToId = 2;
      case 2: {
        if (tag == 18) {
         parse_sToId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), this->stoid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESDelFriend.sToId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 3;
      case 3: {
        if (tag == 26) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESDelFriend.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESDelFriend)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESDelFriend)
  return false;
#undef DO_
}

void MESDelFriend::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESDelFriend)
  // optional string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), this->sfromid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESDelFriend.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // optional string sToId = 2;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), this->stoid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESDelFriend.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stoid(), output);
  }

  // optional string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESDelFriend.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.MESDelFriend)
}

int MESDelFriend::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESDelFriend)
  int total_size = 0;

  // optional string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // optional string sToId = 2;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // optional string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MESDelFriend::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESDelFriend*>(&from));
}

void MESDelFriend::MergeFrom(const MESDelFriend& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESDelFriend)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
}

void MESDelFriend::CopyFrom(const MESDelFriend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESDelFriend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESDelFriend::IsInitialized() const {

  return true;
}

void MESDelFriend::Swap(MESDelFriend* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESDelFriend::InternalSwap(MESDelFriend* other) {
  sfromid_.Swap(&other->sfromid_);
  stoid_.Swap(&other->stoid_);
  smsgid_.Swap(&other->smsgid_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string MESDelFriend::GetTypeName() const {
  return "im.MESDelFriend";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MESDelFriend

// optional string sFromId = 1;
void MESDelFriend::clear_sfromid() {
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESDelFriend::sfromid() const {
  // @@protoc_insertion_point(field_get:im.MESDelFriend.sFromId)
  return sfromid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESDelFriend::set_sfromid(const ::std::string& value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESDelFriend.sFromId)
}
 void MESDelFriend::set_sfromid(const char* value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESDelFriend.sFromId)
}
 void MESDelFriend::set_sfromid(const char* value, size_t size) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESDelFriend.sFromId)
}
 ::std::string* MESDelFriend::mutable_sfromid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESDelFriend.sFromId)
  return sfromid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESDelFriend::release_sfromid() {
  // @@protoc_insertion_point(field_release:im.MESDelFriend.sFromId)
  
  return sfromid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESDelFriend::set_allocated_sfromid(::std::string* sfromid) {
  if (sfromid != NULL) {
    
  } else {
    
  }
  sfromid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sfromid);
  // @@protoc_insertion_point(field_set_allocated:im.MESDelFriend.sFromId)
}

// optional string sToId = 2;
void MESDelFriend::clear_stoid() {
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESDelFriend::stoid() const {
  // @@protoc_insertion_point(field_get:im.MESDelFriend.sToId)
  return stoid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESDelFriend::set_stoid(const ::std::string& value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESDelFriend.sToId)
}
 void MESDelFriend::set_stoid(const char* value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESDelFriend.sToId)
}
 void MESDelFriend::set_stoid(const char* value, size_t size) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESDelFriend.sToId)
}
 ::std::string* MESDelFriend::mutable_stoid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESDelFriend.sToId)
  return stoid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESDelFriend::release_stoid() {
  // @@protoc_insertion_point(field_release:im.MESDelFriend.sToId)
  
  return stoid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESDelFriend::set_allocated_stoid(::std::string* stoid) {
  if (stoid != NULL) {
    
  } else {
    
  }
  stoid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stoid);
  // @@protoc_insertion_point(field_set_allocated:im.MESDelFriend.sToId)
}

// optional string sMsgId = 3;
void MESDelFriend::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESDelFriend::smsgid() const {
  // @@protoc_insertion_point(field_get:im.MESDelFriend.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESDelFriend::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESDelFriend.sMsgId)
}
 void MESDelFriend::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESDelFriend.sMsgId)
}
 void MESDelFriend::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESDelFriend.sMsgId)
}
 ::std::string* MESDelFriend::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESDelFriend.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESDelFriend::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.MESDelFriend.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESDelFriend::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.MESDelFriend.sMsgId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESDelFriendAck::kSUserIdFieldNumber;
const int MESDelFriendAck::kSMsgIdFieldNumber;
const int MESDelFriendAck::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESDelFriendAck::MESDelFriendAck()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESDelFriendAck)
}

void MESDelFriendAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MESDelFriendAck::MESDelFriendAck(const MESDelFriendAck& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.MESDelFriendAck)
}

void MESDelFriendAck::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

MESDelFriendAck::~MESDelFriendAck() {
  // @@protoc_insertion_point(destructor:im.MESDelFriendAck)
  SharedDtor();
}

void MESDelFriendAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MESDelFriendAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MESDelFriendAck& MESDelFriendAck::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

MESDelFriendAck* MESDelFriendAck::default_instance_ = NULL;

MESDelFriendAck* MESDelFriendAck::New(::google::protobuf::Arena* arena) const {
  MESDelFriendAck* n = new MESDelFriendAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MESDelFriendAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESDelFriendAck)
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

bool MESDelFriendAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.MESDelFriendAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sUserId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), this->suserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESDelFriendAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 2;
      case 2: {
        if (tag == 18) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESDelFriendAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_errcode;
        break;
      }

      // optional .im.ErrCode errcode = 3;
      case 3: {
        if (tag == 24) {
         parse_errcode:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESDelFriendAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESDelFriendAck)
  return false;
#undef DO_
}

void MESDelFriendAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESDelFriendAck)
  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), this->suserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESDelFriendAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // optional string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESDelFriendAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  // optional .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->errcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.MESDelFriendAck)
}

int MESDelFriendAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESDelFriendAck)
  int total_size = 0;

  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // optional string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // optional .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MESDelFriendAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESDelFriendAck*>(&from));
}

void MESDelFriendAck::MergeFrom(const MESDelFriendAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESDelFriendAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void MESDelFriendAck::CopyFrom(const MESDelFriendAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESDelFriendAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESDelFriendAck::IsInitialized() const {

  return true;
}

void MESDelFriendAck::Swap(MESDelFriendAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESDelFriendAck::InternalSwap(MESDelFriendAck* other) {
  suserid_.Swap(&other->suserid_);
  smsgid_.Swap(&other->smsgid_);
  std::swap(errcode_, other->errcode_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string MESDelFriendAck::GetTypeName() const {
  return "im.MESDelFriendAck";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MESDelFriendAck

// optional string sUserId = 1;
void MESDelFriendAck::clear_suserid() {
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESDelFriendAck::suserid() const {
  // @@protoc_insertion_point(field_get:im.MESDelFriendAck.sUserId)
  return suserid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESDelFriendAck::set_suserid(const ::std::string& value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESDelFriendAck.sUserId)
}
 void MESDelFriendAck::set_suserid(const char* value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESDelFriendAck.sUserId)
}
 void MESDelFriendAck::set_suserid(const char* value, size_t size) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESDelFriendAck.sUserId)
}
 ::std::string* MESDelFriendAck::mutable_suserid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESDelFriendAck.sUserId)
  return suserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESDelFriendAck::release_suserid() {
  // @@protoc_insertion_point(field_release:im.MESDelFriendAck.sUserId)
  
  return suserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESDelFriendAck::set_allocated_suserid(::std::string* suserid) {
  if (suserid != NULL) {
    
  } else {
    
  }
  suserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), suserid);
  // @@protoc_insertion_point(field_set_allocated:im.MESDelFriendAck.sUserId)
}

// optional string sMsgId = 2;
void MESDelFriendAck::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESDelFriendAck::smsgid() const {
  // @@protoc_insertion_point(field_get:im.MESDelFriendAck.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESDelFriendAck::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESDelFriendAck.sMsgId)
}
 void MESDelFriendAck::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESDelFriendAck.sMsgId)
}
 void MESDelFriendAck::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESDelFriendAck.sMsgId)
}
 ::std::string* MESDelFriendAck::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESDelFriendAck.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESDelFriendAck::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.MESDelFriendAck.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESDelFriendAck::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.MESDelFriendAck.sMsgId)
}

// optional .im.ErrCode errcode = 3;
void MESDelFriendAck::clear_errcode() {
  errcode_ = 0;
}
 ::im::ErrCode MESDelFriendAck::errcode() const {
  // @@protoc_insertion_point(field_get:im.MESDelFriendAck.errcode)
  return static_cast< ::im::ErrCode >(errcode_);
}
 void MESDelFriendAck::set_errcode(::im::ErrCode value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:im.MESDelFriendAck.errcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESIncBlacklist::kSFromIdFieldNumber;
const int MESIncBlacklist::kSToIdFieldNumber;
const int MESIncBlacklist::kSMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESIncBlacklist::MESIncBlacklist()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESIncBlacklist)
}

void MESIncBlacklist::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MESIncBlacklist::MESIncBlacklist(const MESIncBlacklist& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.MESIncBlacklist)
}

void MESIncBlacklist::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MESIncBlacklist::~MESIncBlacklist() {
  // @@protoc_insertion_point(destructor:im.MESIncBlacklist)
  SharedDtor();
}

void MESIncBlacklist::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MESIncBlacklist::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MESIncBlacklist& MESIncBlacklist::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

MESIncBlacklist* MESIncBlacklist::default_instance_ = NULL;

MESIncBlacklist* MESIncBlacklist::New(::google::protobuf::Arena* arena) const {
  MESIncBlacklist* n = new MESIncBlacklist;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MESIncBlacklist::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESIncBlacklist)
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MESIncBlacklist::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.MESIncBlacklist)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sFromId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), this->sfromid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESIncBlacklist.sFromId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sToId;
        break;
      }

      // optional string sToId = 2;
      case 2: {
        if (tag == 18) {
         parse_sToId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), this->stoid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESIncBlacklist.sToId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 3;
      case 3: {
        if (tag == 26) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESIncBlacklist.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESIncBlacklist)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESIncBlacklist)
  return false;
#undef DO_
}

void MESIncBlacklist::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESIncBlacklist)
  // optional string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), this->sfromid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESIncBlacklist.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // optional string sToId = 2;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), this->stoid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESIncBlacklist.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stoid(), output);
  }

  // optional string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESIncBlacklist.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.MESIncBlacklist)
}

int MESIncBlacklist::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESIncBlacklist)
  int total_size = 0;

  // optional string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // optional string sToId = 2;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // optional string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MESIncBlacklist::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESIncBlacklist*>(&from));
}

void MESIncBlacklist::MergeFrom(const MESIncBlacklist& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESIncBlacklist)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
}

void MESIncBlacklist::CopyFrom(const MESIncBlacklist& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESIncBlacklist)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESIncBlacklist::IsInitialized() const {

  return true;
}

void MESIncBlacklist::Swap(MESIncBlacklist* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESIncBlacklist::InternalSwap(MESIncBlacklist* other) {
  sfromid_.Swap(&other->sfromid_);
  stoid_.Swap(&other->stoid_);
  smsgid_.Swap(&other->smsgid_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string MESIncBlacklist::GetTypeName() const {
  return "im.MESIncBlacklist";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MESIncBlacklist

// optional string sFromId = 1;
void MESIncBlacklist::clear_sfromid() {
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESIncBlacklist::sfromid() const {
  // @@protoc_insertion_point(field_get:im.MESIncBlacklist.sFromId)
  return sfromid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESIncBlacklist::set_sfromid(const ::std::string& value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESIncBlacklist.sFromId)
}
 void MESIncBlacklist::set_sfromid(const char* value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESIncBlacklist.sFromId)
}
 void MESIncBlacklist::set_sfromid(const char* value, size_t size) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESIncBlacklist.sFromId)
}
 ::std::string* MESIncBlacklist::mutable_sfromid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESIncBlacklist.sFromId)
  return sfromid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESIncBlacklist::release_sfromid() {
  // @@protoc_insertion_point(field_release:im.MESIncBlacklist.sFromId)
  
  return sfromid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESIncBlacklist::set_allocated_sfromid(::std::string* sfromid) {
  if (sfromid != NULL) {
    
  } else {
    
  }
  sfromid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sfromid);
  // @@protoc_insertion_point(field_set_allocated:im.MESIncBlacklist.sFromId)
}

// optional string sToId = 2;
void MESIncBlacklist::clear_stoid() {
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESIncBlacklist::stoid() const {
  // @@protoc_insertion_point(field_get:im.MESIncBlacklist.sToId)
  return stoid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESIncBlacklist::set_stoid(const ::std::string& value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESIncBlacklist.sToId)
}
 void MESIncBlacklist::set_stoid(const char* value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESIncBlacklist.sToId)
}
 void MESIncBlacklist::set_stoid(const char* value, size_t size) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESIncBlacklist.sToId)
}
 ::std::string* MESIncBlacklist::mutable_stoid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESIncBlacklist.sToId)
  return stoid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESIncBlacklist::release_stoid() {
  // @@protoc_insertion_point(field_release:im.MESIncBlacklist.sToId)
  
  return stoid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESIncBlacklist::set_allocated_stoid(::std::string* stoid) {
  if (stoid != NULL) {
    
  } else {
    
  }
  stoid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stoid);
  // @@protoc_insertion_point(field_set_allocated:im.MESIncBlacklist.sToId)
}

// optional string sMsgId = 3;
void MESIncBlacklist::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESIncBlacklist::smsgid() const {
  // @@protoc_insertion_point(field_get:im.MESIncBlacklist.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESIncBlacklist::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESIncBlacklist.sMsgId)
}
 void MESIncBlacklist::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESIncBlacklist.sMsgId)
}
 void MESIncBlacklist::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESIncBlacklist.sMsgId)
}
 ::std::string* MESIncBlacklist::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESIncBlacklist.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESIncBlacklist::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.MESIncBlacklist.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESIncBlacklist::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.MESIncBlacklist.sMsgId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESIncBlacklistAck::kSUserIdFieldNumber;
const int MESIncBlacklistAck::kSMsgIdFieldNumber;
const int MESIncBlacklistAck::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESIncBlacklistAck::MESIncBlacklistAck()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESIncBlacklistAck)
}

void MESIncBlacklistAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MESIncBlacklistAck::MESIncBlacklistAck(const MESIncBlacklistAck& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.MESIncBlacklistAck)
}

void MESIncBlacklistAck::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

MESIncBlacklistAck::~MESIncBlacklistAck() {
  // @@protoc_insertion_point(destructor:im.MESIncBlacklistAck)
  SharedDtor();
}

void MESIncBlacklistAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MESIncBlacklistAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MESIncBlacklistAck& MESIncBlacklistAck::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

MESIncBlacklistAck* MESIncBlacklistAck::default_instance_ = NULL;

MESIncBlacklistAck* MESIncBlacklistAck::New(::google::protobuf::Arena* arena) const {
  MESIncBlacklistAck* n = new MESIncBlacklistAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MESIncBlacklistAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESIncBlacklistAck)
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

bool MESIncBlacklistAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.MESIncBlacklistAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sUserId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), this->suserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESIncBlacklistAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 2;
      case 2: {
        if (tag == 18) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESIncBlacklistAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_errcode;
        break;
      }

      // optional .im.ErrCode errcode = 3;
      case 3: {
        if (tag == 24) {
         parse_errcode:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESIncBlacklistAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESIncBlacklistAck)
  return false;
#undef DO_
}

void MESIncBlacklistAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESIncBlacklistAck)
  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), this->suserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESIncBlacklistAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // optional string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESIncBlacklistAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  // optional .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->errcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.MESIncBlacklistAck)
}

int MESIncBlacklistAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESIncBlacklistAck)
  int total_size = 0;

  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // optional string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // optional .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MESIncBlacklistAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESIncBlacklistAck*>(&from));
}

void MESIncBlacklistAck::MergeFrom(const MESIncBlacklistAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESIncBlacklistAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void MESIncBlacklistAck::CopyFrom(const MESIncBlacklistAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESIncBlacklistAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESIncBlacklistAck::IsInitialized() const {

  return true;
}

void MESIncBlacklistAck::Swap(MESIncBlacklistAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESIncBlacklistAck::InternalSwap(MESIncBlacklistAck* other) {
  suserid_.Swap(&other->suserid_);
  smsgid_.Swap(&other->smsgid_);
  std::swap(errcode_, other->errcode_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string MESIncBlacklistAck::GetTypeName() const {
  return "im.MESIncBlacklistAck";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MESIncBlacklistAck

// optional string sUserId = 1;
void MESIncBlacklistAck::clear_suserid() {
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESIncBlacklistAck::suserid() const {
  // @@protoc_insertion_point(field_get:im.MESIncBlacklistAck.sUserId)
  return suserid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESIncBlacklistAck::set_suserid(const ::std::string& value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESIncBlacklistAck.sUserId)
}
 void MESIncBlacklistAck::set_suserid(const char* value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESIncBlacklistAck.sUserId)
}
 void MESIncBlacklistAck::set_suserid(const char* value, size_t size) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESIncBlacklistAck.sUserId)
}
 ::std::string* MESIncBlacklistAck::mutable_suserid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESIncBlacklistAck.sUserId)
  return suserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESIncBlacklistAck::release_suserid() {
  // @@protoc_insertion_point(field_release:im.MESIncBlacklistAck.sUserId)
  
  return suserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESIncBlacklistAck::set_allocated_suserid(::std::string* suserid) {
  if (suserid != NULL) {
    
  } else {
    
  }
  suserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), suserid);
  // @@protoc_insertion_point(field_set_allocated:im.MESIncBlacklistAck.sUserId)
}

// optional string sMsgId = 2;
void MESIncBlacklistAck::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESIncBlacklistAck::smsgid() const {
  // @@protoc_insertion_point(field_get:im.MESIncBlacklistAck.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESIncBlacklistAck::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESIncBlacklistAck.sMsgId)
}
 void MESIncBlacklistAck::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESIncBlacklistAck.sMsgId)
}
 void MESIncBlacklistAck::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESIncBlacklistAck.sMsgId)
}
 ::std::string* MESIncBlacklistAck::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESIncBlacklistAck.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESIncBlacklistAck::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.MESIncBlacklistAck.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESIncBlacklistAck::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.MESIncBlacklistAck.sMsgId)
}

// optional .im.ErrCode errcode = 3;
void MESIncBlacklistAck::clear_errcode() {
  errcode_ = 0;
}
 ::im::ErrCode MESIncBlacklistAck::errcode() const {
  // @@protoc_insertion_point(field_get:im.MESIncBlacklistAck.errcode)
  return static_cast< ::im::ErrCode >(errcode_);
}
 void MESIncBlacklistAck::set_errcode(::im::ErrCode value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:im.MESIncBlacklistAck.errcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESDecBlacklist::kSFromIdFieldNumber;
const int MESDecBlacklist::kSToIdFieldNumber;
const int MESDecBlacklist::kSMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESDecBlacklist::MESDecBlacklist()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESDecBlacklist)
}

void MESDecBlacklist::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MESDecBlacklist::MESDecBlacklist(const MESDecBlacklist& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.MESDecBlacklist)
}

void MESDecBlacklist::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MESDecBlacklist::~MESDecBlacklist() {
  // @@protoc_insertion_point(destructor:im.MESDecBlacklist)
  SharedDtor();
}

void MESDecBlacklist::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MESDecBlacklist::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MESDecBlacklist& MESDecBlacklist::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

MESDecBlacklist* MESDecBlacklist::default_instance_ = NULL;

MESDecBlacklist* MESDecBlacklist::New(::google::protobuf::Arena* arena) const {
  MESDecBlacklist* n = new MESDecBlacklist;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MESDecBlacklist::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESDecBlacklist)
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MESDecBlacklist::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.MESDecBlacklist)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sFromId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), this->sfromid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESDecBlacklist.sFromId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sToId;
        break;
      }

      // optional string sToId = 2;
      case 2: {
        if (tag == 18) {
         parse_sToId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), this->stoid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESDecBlacklist.sToId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 3;
      case 3: {
        if (tag == 26) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESDecBlacklist.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESDecBlacklist)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESDecBlacklist)
  return false;
#undef DO_
}

void MESDecBlacklist::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESDecBlacklist)
  // optional string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), this->sfromid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESDecBlacklist.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // optional string sToId = 2;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), this->stoid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESDecBlacklist.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stoid(), output);
  }

  // optional string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESDecBlacklist.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.MESDecBlacklist)
}

int MESDecBlacklist::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESDecBlacklist)
  int total_size = 0;

  // optional string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // optional string sToId = 2;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // optional string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MESDecBlacklist::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESDecBlacklist*>(&from));
}

void MESDecBlacklist::MergeFrom(const MESDecBlacklist& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESDecBlacklist)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
}

void MESDecBlacklist::CopyFrom(const MESDecBlacklist& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESDecBlacklist)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESDecBlacklist::IsInitialized() const {

  return true;
}

void MESDecBlacklist::Swap(MESDecBlacklist* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESDecBlacklist::InternalSwap(MESDecBlacklist* other) {
  sfromid_.Swap(&other->sfromid_);
  stoid_.Swap(&other->stoid_);
  smsgid_.Swap(&other->smsgid_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string MESDecBlacklist::GetTypeName() const {
  return "im.MESDecBlacklist";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MESDecBlacklist

// optional string sFromId = 1;
void MESDecBlacklist::clear_sfromid() {
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESDecBlacklist::sfromid() const {
  // @@protoc_insertion_point(field_get:im.MESDecBlacklist.sFromId)
  return sfromid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESDecBlacklist::set_sfromid(const ::std::string& value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESDecBlacklist.sFromId)
}
 void MESDecBlacklist::set_sfromid(const char* value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESDecBlacklist.sFromId)
}
 void MESDecBlacklist::set_sfromid(const char* value, size_t size) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESDecBlacklist.sFromId)
}
 ::std::string* MESDecBlacklist::mutable_sfromid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESDecBlacklist.sFromId)
  return sfromid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESDecBlacklist::release_sfromid() {
  // @@protoc_insertion_point(field_release:im.MESDecBlacklist.sFromId)
  
  return sfromid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESDecBlacklist::set_allocated_sfromid(::std::string* sfromid) {
  if (sfromid != NULL) {
    
  } else {
    
  }
  sfromid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sfromid);
  // @@protoc_insertion_point(field_set_allocated:im.MESDecBlacklist.sFromId)
}

// optional string sToId = 2;
void MESDecBlacklist::clear_stoid() {
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESDecBlacklist::stoid() const {
  // @@protoc_insertion_point(field_get:im.MESDecBlacklist.sToId)
  return stoid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESDecBlacklist::set_stoid(const ::std::string& value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESDecBlacklist.sToId)
}
 void MESDecBlacklist::set_stoid(const char* value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESDecBlacklist.sToId)
}
 void MESDecBlacklist::set_stoid(const char* value, size_t size) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESDecBlacklist.sToId)
}
 ::std::string* MESDecBlacklist::mutable_stoid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESDecBlacklist.sToId)
  return stoid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESDecBlacklist::release_stoid() {
  // @@protoc_insertion_point(field_release:im.MESDecBlacklist.sToId)
  
  return stoid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESDecBlacklist::set_allocated_stoid(::std::string* stoid) {
  if (stoid != NULL) {
    
  } else {
    
  }
  stoid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stoid);
  // @@protoc_insertion_point(field_set_allocated:im.MESDecBlacklist.sToId)
}

// optional string sMsgId = 3;
void MESDecBlacklist::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESDecBlacklist::smsgid() const {
  // @@protoc_insertion_point(field_get:im.MESDecBlacklist.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESDecBlacklist::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESDecBlacklist.sMsgId)
}
 void MESDecBlacklist::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESDecBlacklist.sMsgId)
}
 void MESDecBlacklist::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESDecBlacklist.sMsgId)
}
 ::std::string* MESDecBlacklist::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESDecBlacklist.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESDecBlacklist::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.MESDecBlacklist.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESDecBlacklist::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.MESDecBlacklist.sMsgId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESDecBlacklistAck::kSUserIdFieldNumber;
const int MESDecBlacklistAck::kSMsgIdFieldNumber;
const int MESDecBlacklistAck::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESDecBlacklistAck::MESDecBlacklistAck()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESDecBlacklistAck)
}

void MESDecBlacklistAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MESDecBlacklistAck::MESDecBlacklistAck(const MESDecBlacklistAck& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.MESDecBlacklistAck)
}

void MESDecBlacklistAck::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

MESDecBlacklistAck::~MESDecBlacklistAck() {
  // @@protoc_insertion_point(destructor:im.MESDecBlacklistAck)
  SharedDtor();
}

void MESDecBlacklistAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MESDecBlacklistAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MESDecBlacklistAck& MESDecBlacklistAck::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

MESDecBlacklistAck* MESDecBlacklistAck::default_instance_ = NULL;

MESDecBlacklistAck* MESDecBlacklistAck::New(::google::protobuf::Arena* arena) const {
  MESDecBlacklistAck* n = new MESDecBlacklistAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MESDecBlacklistAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESDecBlacklistAck)
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

bool MESDecBlacklistAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.MESDecBlacklistAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sUserId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), this->suserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESDecBlacklistAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 2;
      case 2: {
        if (tag == 18) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESDecBlacklistAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_errcode;
        break;
      }

      // optional .im.ErrCode errcode = 3;
      case 3: {
        if (tag == 24) {
         parse_errcode:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESDecBlacklistAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESDecBlacklistAck)
  return false;
#undef DO_
}

void MESDecBlacklistAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESDecBlacklistAck)
  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), this->suserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESDecBlacklistAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // optional string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESDecBlacklistAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  // optional .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->errcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.MESDecBlacklistAck)
}

int MESDecBlacklistAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESDecBlacklistAck)
  int total_size = 0;

  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // optional string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // optional .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MESDecBlacklistAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESDecBlacklistAck*>(&from));
}

void MESDecBlacklistAck::MergeFrom(const MESDecBlacklistAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESDecBlacklistAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void MESDecBlacklistAck::CopyFrom(const MESDecBlacklistAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESDecBlacklistAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESDecBlacklistAck::IsInitialized() const {

  return true;
}

void MESDecBlacklistAck::Swap(MESDecBlacklistAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESDecBlacklistAck::InternalSwap(MESDecBlacklistAck* other) {
  suserid_.Swap(&other->suserid_);
  smsgid_.Swap(&other->smsgid_);
  std::swap(errcode_, other->errcode_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string MESDecBlacklistAck::GetTypeName() const {
  return "im.MESDecBlacklistAck";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MESDecBlacklistAck

// optional string sUserId = 1;
void MESDecBlacklistAck::clear_suserid() {
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESDecBlacklistAck::suserid() const {
  // @@protoc_insertion_point(field_get:im.MESDecBlacklistAck.sUserId)
  return suserid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESDecBlacklistAck::set_suserid(const ::std::string& value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESDecBlacklistAck.sUserId)
}
 void MESDecBlacklistAck::set_suserid(const char* value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESDecBlacklistAck.sUserId)
}
 void MESDecBlacklistAck::set_suserid(const char* value, size_t size) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESDecBlacklistAck.sUserId)
}
 ::std::string* MESDecBlacklistAck::mutable_suserid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESDecBlacklistAck.sUserId)
  return suserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESDecBlacklistAck::release_suserid() {
  // @@protoc_insertion_point(field_release:im.MESDecBlacklistAck.sUserId)
  
  return suserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESDecBlacklistAck::set_allocated_suserid(::std::string* suserid) {
  if (suserid != NULL) {
    
  } else {
    
  }
  suserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), suserid);
  // @@protoc_insertion_point(field_set_allocated:im.MESDecBlacklistAck.sUserId)
}

// optional string sMsgId = 2;
void MESDecBlacklistAck::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESDecBlacklistAck::smsgid() const {
  // @@protoc_insertion_point(field_get:im.MESDecBlacklistAck.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESDecBlacklistAck::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESDecBlacklistAck.sMsgId)
}
 void MESDecBlacklistAck::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESDecBlacklistAck.sMsgId)
}
 void MESDecBlacklistAck::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESDecBlacklistAck.sMsgId)
}
 ::std::string* MESDecBlacklistAck::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESDecBlacklistAck.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESDecBlacklistAck::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.MESDecBlacklistAck.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESDecBlacklistAck::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.MESDecBlacklistAck.sMsgId)
}

// optional .im.ErrCode errcode = 3;
void MESDecBlacklistAck::clear_errcode() {
  errcode_ = 0;
}
 ::im::ErrCode MESDecBlacklistAck::errcode() const {
  // @@protoc_insertion_point(field_get:im.MESDecBlacklistAck.errcode)
  return static_cast< ::im::ErrCode >(errcode_);
}
 void MESDecBlacklistAck::set_errcode(::im::ErrCode value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:im.MESDecBlacklistAck.errcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESJoinGrp::kSFromIdFieldNumber;
const int MESJoinGrp::kSToIdFieldNumber;
const int MESJoinGrp::kSGrpIdFieldNumber;
const int MESJoinGrp::kSMsgIdFieldNumber;
const int MESJoinGrp::kReqTypeFieldNumber;
const int MESJoinGrp::kSSelfIntroduceFieldNumber;
const int MESJoinGrp::kSDescFieldNumber;
const int MESJoinGrp::kMsgTimeFieldNumber;
const int MESJoinGrp::kExtendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESJoinGrp::MESJoinGrp()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESJoinGrp)
}

void MESJoinGrp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MESJoinGrp::MESJoinGrp(const MESJoinGrp& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.MESJoinGrp)
}

void MESJoinGrp::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reqtype_ = 0u;
  sselfintroduce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdesc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgtime_ = GOOGLE_ULONGLONG(0);
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MESJoinGrp::~MESJoinGrp() {
  // @@protoc_insertion_point(destructor:im.MESJoinGrp)
  SharedDtor();
}

void MESJoinGrp::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sselfintroduce_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdesc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MESJoinGrp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MESJoinGrp& MESJoinGrp::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

MESJoinGrp* MESJoinGrp::default_instance_ = NULL;

MESJoinGrp* MESJoinGrp::New(::google::protobuf::Arena* arena) const {
  MESJoinGrp* n = new MESJoinGrp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MESJoinGrp::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESJoinGrp)
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reqtype_ = 0u;
  sselfintroduce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgtime_ = GOOGLE_ULONGLONG(0);
  extend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MESJoinGrp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.MESJoinGrp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sFromId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), this->sfromid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESJoinGrp.sFromId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sToId;
        break;
      }

      // optional string sToId = 2;
      case 2: {
        if (tag == 18) {
         parse_sToId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), this->stoid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESJoinGrp.sToId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sGrpId;
        break;
      }

      // optional string sGrpId = 3;
      case 3: {
        if (tag == 26) {
         parse_sGrpId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgrpid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgrpid().data(), this->sgrpid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESJoinGrp.sGrpId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 4;
      case 4: {
        if (tag == 34) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESJoinGrp.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_reqType;
        break;
      }

      // optional uint32 reqType = 5;
      case 5: {
        if (tag == 40) {
         parse_reqType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reqtype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_sSelfIntroduce;
        break;
      }

      // optional string sSelfIntroduce = 6;
      case 6: {
        if (tag == 50) {
         parse_sSelfIntroduce:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sselfintroduce()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sselfintroduce().data(), this->sselfintroduce().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESJoinGrp.sSelfIntroduce"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_sDesc;
        break;
      }

      // optional string sDesc = 7;
      case 7: {
        if (tag == 58) {
         parse_sDesc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sdesc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sdesc().data(), this->sdesc().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESJoinGrp.sDesc"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_msgTime;
        break;
      }

      // optional uint64 msgTime = 8;
      case 8: {
        if (tag == 64) {
         parse_msgTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_extend;
        break;
      }

      // optional string extend = 9;
      case 9: {
        if (tag == 74) {
         parse_extend:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extend()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extend().data(), this->extend().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESJoinGrp.extend"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESJoinGrp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESJoinGrp)
  return false;
#undef DO_
}

void MESJoinGrp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESJoinGrp)
  // optional string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), this->sfromid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESJoinGrp.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // optional string sToId = 2;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), this->stoid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESJoinGrp.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stoid(), output);
  }

  // optional string sGrpId = 3;
  if (this->sgrpid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgrpid().data(), this->sgrpid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESJoinGrp.sGrpId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sgrpid(), output);
  }

  // optional string sMsgId = 4;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESJoinGrp.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->smsgid(), output);
  }

  // optional uint32 reqType = 5;
  if (this->reqtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->reqtype(), output);
  }

  // optional string sSelfIntroduce = 6;
  if (this->sselfintroduce().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sselfintroduce().data(), this->sselfintroduce().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESJoinGrp.sSelfIntroduce");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->sselfintroduce(), output);
  }

  // optional string sDesc = 7;
  if (this->sdesc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sdesc().data(), this->sdesc().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESJoinGrp.sDesc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->sdesc(), output);
  }

  // optional uint64 msgTime = 8;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->msgtime(), output);
  }

  // optional string extend = 9;
  if (this->extend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extend().data(), this->extend().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESJoinGrp.extend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->extend(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.MESJoinGrp)
}

int MESJoinGrp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESJoinGrp)
  int total_size = 0;

  // optional string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // optional string sToId = 2;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // optional string sGrpId = 3;
  if (this->sgrpid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgrpid());
  }

  // optional string sMsgId = 4;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // optional uint32 reqType = 5;
  if (this->reqtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->reqtype());
  }

  // optional string sSelfIntroduce = 6;
  if (this->sselfintroduce().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sselfintroduce());
  }

  // optional string sDesc = 7;
  if (this->sdesc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sdesc());
  }

  // optional uint64 msgTime = 8;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // optional string extend = 9;
  if (this->extend().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extend());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MESJoinGrp::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESJoinGrp*>(&from));
}

void MESJoinGrp::MergeFrom(const MESJoinGrp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESJoinGrp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.sgrpid().size() > 0) {

    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.reqtype() != 0) {
    set_reqtype(from.reqtype());
  }
  if (from.sselfintroduce().size() > 0) {

    sselfintroduce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sselfintroduce_);
  }
  if (from.sdesc().size() > 0) {

    sdesc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdesc_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.extend().size() > 0) {

    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
}

void MESJoinGrp::CopyFrom(const MESJoinGrp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESJoinGrp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESJoinGrp::IsInitialized() const {

  return true;
}

void MESJoinGrp::Swap(MESJoinGrp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESJoinGrp::InternalSwap(MESJoinGrp* other) {
  sfromid_.Swap(&other->sfromid_);
  stoid_.Swap(&other->stoid_);
  sgrpid_.Swap(&other->sgrpid_);
  smsgid_.Swap(&other->smsgid_);
  std::swap(reqtype_, other->reqtype_);
  sselfintroduce_.Swap(&other->sselfintroduce_);
  sdesc_.Swap(&other->sdesc_);
  std::swap(msgtime_, other->msgtime_);
  extend_.Swap(&other->extend_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string MESJoinGrp::GetTypeName() const {
  return "im.MESJoinGrp";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MESJoinGrp

// optional string sFromId = 1;
void MESJoinGrp::clear_sfromid() {
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESJoinGrp::sfromid() const {
  // @@protoc_insertion_point(field_get:im.MESJoinGrp.sFromId)
  return sfromid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESJoinGrp::set_sfromid(const ::std::string& value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESJoinGrp.sFromId)
}
 void MESJoinGrp::set_sfromid(const char* value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESJoinGrp.sFromId)
}
 void MESJoinGrp::set_sfromid(const char* value, size_t size) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESJoinGrp.sFromId)
}
 ::std::string* MESJoinGrp::mutable_sfromid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESJoinGrp.sFromId)
  return sfromid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESJoinGrp::release_sfromid() {
  // @@protoc_insertion_point(field_release:im.MESJoinGrp.sFromId)
  
  return sfromid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESJoinGrp::set_allocated_sfromid(::std::string* sfromid) {
  if (sfromid != NULL) {
    
  } else {
    
  }
  sfromid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sfromid);
  // @@protoc_insertion_point(field_set_allocated:im.MESJoinGrp.sFromId)
}

// optional string sToId = 2;
void MESJoinGrp::clear_stoid() {
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESJoinGrp::stoid() const {
  // @@protoc_insertion_point(field_get:im.MESJoinGrp.sToId)
  return stoid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESJoinGrp::set_stoid(const ::std::string& value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESJoinGrp.sToId)
}
 void MESJoinGrp::set_stoid(const char* value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESJoinGrp.sToId)
}
 void MESJoinGrp::set_stoid(const char* value, size_t size) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESJoinGrp.sToId)
}
 ::std::string* MESJoinGrp::mutable_stoid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESJoinGrp.sToId)
  return stoid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESJoinGrp::release_stoid() {
  // @@protoc_insertion_point(field_release:im.MESJoinGrp.sToId)
  
  return stoid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESJoinGrp::set_allocated_stoid(::std::string* stoid) {
  if (stoid != NULL) {
    
  } else {
    
  }
  stoid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stoid);
  // @@protoc_insertion_point(field_set_allocated:im.MESJoinGrp.sToId)
}

// optional string sGrpId = 3;
void MESJoinGrp::clear_sgrpid() {
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESJoinGrp::sgrpid() const {
  // @@protoc_insertion_point(field_get:im.MESJoinGrp.sGrpId)
  return sgrpid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESJoinGrp::set_sgrpid(const ::std::string& value) {
  
  sgrpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESJoinGrp.sGrpId)
}
 void MESJoinGrp::set_sgrpid(const char* value) {
  
  sgrpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESJoinGrp.sGrpId)
}
 void MESJoinGrp::set_sgrpid(const char* value, size_t size) {
  
  sgrpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESJoinGrp.sGrpId)
}
 ::std::string* MESJoinGrp::mutable_sgrpid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESJoinGrp.sGrpId)
  return sgrpid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESJoinGrp::release_sgrpid() {
  // @@protoc_insertion_point(field_release:im.MESJoinGrp.sGrpId)
  
  return sgrpid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESJoinGrp::set_allocated_sgrpid(::std::string* sgrpid) {
  if (sgrpid != NULL) {
    
  } else {
    
  }
  sgrpid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sgrpid);
  // @@protoc_insertion_point(field_set_allocated:im.MESJoinGrp.sGrpId)
}

// optional string sMsgId = 4;
void MESJoinGrp::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESJoinGrp::smsgid() const {
  // @@protoc_insertion_point(field_get:im.MESJoinGrp.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESJoinGrp::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESJoinGrp.sMsgId)
}
 void MESJoinGrp::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESJoinGrp.sMsgId)
}
 void MESJoinGrp::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESJoinGrp.sMsgId)
}
 ::std::string* MESJoinGrp::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESJoinGrp.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESJoinGrp::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.MESJoinGrp.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESJoinGrp::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.MESJoinGrp.sMsgId)
}

// optional uint32 reqType = 5;
void MESJoinGrp::clear_reqtype() {
  reqtype_ = 0u;
}
 ::google::protobuf::uint32 MESJoinGrp::reqtype() const {
  // @@protoc_insertion_point(field_get:im.MESJoinGrp.reqType)
  return reqtype_;
}
 void MESJoinGrp::set_reqtype(::google::protobuf::uint32 value) {
  
  reqtype_ = value;
  // @@protoc_insertion_point(field_set:im.MESJoinGrp.reqType)
}

// optional string sSelfIntroduce = 6;
void MESJoinGrp::clear_sselfintroduce() {
  sselfintroduce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESJoinGrp::sselfintroduce() const {
  // @@protoc_insertion_point(field_get:im.MESJoinGrp.sSelfIntroduce)
  return sselfintroduce_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESJoinGrp::set_sselfintroduce(const ::std::string& value) {
  
  sselfintroduce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESJoinGrp.sSelfIntroduce)
}
 void MESJoinGrp::set_sselfintroduce(const char* value) {
  
  sselfintroduce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESJoinGrp.sSelfIntroduce)
}
 void MESJoinGrp::set_sselfintroduce(const char* value, size_t size) {
  
  sselfintroduce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESJoinGrp.sSelfIntroduce)
}
 ::std::string* MESJoinGrp::mutable_sselfintroduce() {
  
  // @@protoc_insertion_point(field_mutable:im.MESJoinGrp.sSelfIntroduce)
  return sselfintroduce_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESJoinGrp::release_sselfintroduce() {
  // @@protoc_insertion_point(field_release:im.MESJoinGrp.sSelfIntroduce)
  
  return sselfintroduce_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESJoinGrp::set_allocated_sselfintroduce(::std::string* sselfintroduce) {
  if (sselfintroduce != NULL) {
    
  } else {
    
  }
  sselfintroduce_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sselfintroduce);
  // @@protoc_insertion_point(field_set_allocated:im.MESJoinGrp.sSelfIntroduce)
}

// optional string sDesc = 7;
void MESJoinGrp::clear_sdesc() {
  sdesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESJoinGrp::sdesc() const {
  // @@protoc_insertion_point(field_get:im.MESJoinGrp.sDesc)
  return sdesc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESJoinGrp::set_sdesc(const ::std::string& value) {
  
  sdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESJoinGrp.sDesc)
}
 void MESJoinGrp::set_sdesc(const char* value) {
  
  sdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESJoinGrp.sDesc)
}
 void MESJoinGrp::set_sdesc(const char* value, size_t size) {
  
  sdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESJoinGrp.sDesc)
}
 ::std::string* MESJoinGrp::mutable_sdesc() {
  
  // @@protoc_insertion_point(field_mutable:im.MESJoinGrp.sDesc)
  return sdesc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESJoinGrp::release_sdesc() {
  // @@protoc_insertion_point(field_release:im.MESJoinGrp.sDesc)
  
  return sdesc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESJoinGrp::set_allocated_sdesc(::std::string* sdesc) {
  if (sdesc != NULL) {
    
  } else {
    
  }
  sdesc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sdesc);
  // @@protoc_insertion_point(field_set_allocated:im.MESJoinGrp.sDesc)
}

// optional uint64 msgTime = 8;
void MESJoinGrp::clear_msgtime() {
  msgtime_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 MESJoinGrp::msgtime() const {
  // @@protoc_insertion_point(field_get:im.MESJoinGrp.msgTime)
  return msgtime_;
}
 void MESJoinGrp::set_msgtime(::google::protobuf::uint64 value) {
  
  msgtime_ = value;
  // @@protoc_insertion_point(field_set:im.MESJoinGrp.msgTime)
}

// optional string extend = 9;
void MESJoinGrp::clear_extend() {
  extend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESJoinGrp::extend() const {
  // @@protoc_insertion_point(field_get:im.MESJoinGrp.extend)
  return extend_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESJoinGrp::set_extend(const ::std::string& value) {
  
  extend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESJoinGrp.extend)
}
 void MESJoinGrp::set_extend(const char* value) {
  
  extend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESJoinGrp.extend)
}
 void MESJoinGrp::set_extend(const char* value, size_t size) {
  
  extend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESJoinGrp.extend)
}
 ::std::string* MESJoinGrp::mutable_extend() {
  
  // @@protoc_insertion_point(field_mutable:im.MESJoinGrp.extend)
  return extend_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESJoinGrp::release_extend() {
  // @@protoc_insertion_point(field_release:im.MESJoinGrp.extend)
  
  return extend_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESJoinGrp::set_allocated_extend(::std::string* extend) {
  if (extend != NULL) {
    
  } else {
    
  }
  extend_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extend);
  // @@protoc_insertion_point(field_set_allocated:im.MESJoinGrp.extend)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESJoinGrpAck::kSUserIdFieldNumber;
const int MESJoinGrpAck::kSGrpIdFieldNumber;
const int MESJoinGrpAck::kSMsgIdFieldNumber;
const int MESJoinGrpAck::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESJoinGrpAck::MESJoinGrpAck()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESJoinGrpAck)
}

void MESJoinGrpAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MESJoinGrpAck::MESJoinGrpAck(const MESJoinGrpAck& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.MESJoinGrpAck)
}

void MESJoinGrpAck::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

MESJoinGrpAck::~MESJoinGrpAck() {
  // @@protoc_insertion_point(destructor:im.MESJoinGrpAck)
  SharedDtor();
}

void MESJoinGrpAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MESJoinGrpAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MESJoinGrpAck& MESJoinGrpAck::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

MESJoinGrpAck* MESJoinGrpAck::default_instance_ = NULL;

MESJoinGrpAck* MESJoinGrpAck::New(::google::protobuf::Arena* arena) const {
  MESJoinGrpAck* n = new MESJoinGrpAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MESJoinGrpAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESJoinGrpAck)
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

bool MESJoinGrpAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.MESJoinGrpAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sUserId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), this->suserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESJoinGrpAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sGrpId;
        break;
      }

      // optional string sGrpId = 2;
      case 2: {
        if (tag == 18) {
         parse_sGrpId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgrpid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgrpid().data(), this->sgrpid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESJoinGrpAck.sGrpId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 3;
      case 3: {
        if (tag == 26) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESJoinGrpAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_errcode;
        break;
      }

      // optional .im.ErrCode errcode = 4;
      case 4: {
        if (tag == 32) {
         parse_errcode:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESJoinGrpAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESJoinGrpAck)
  return false;
#undef DO_
}

void MESJoinGrpAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESJoinGrpAck)
  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), this->suserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESJoinGrpAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // optional string sGrpId = 2;
  if (this->sgrpid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgrpid().data(), this->sgrpid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESJoinGrpAck.sGrpId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sgrpid(), output);
  }

  // optional string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESJoinGrpAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // optional .im.ErrCode errcode = 4;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->errcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.MESJoinGrpAck)
}

int MESJoinGrpAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESJoinGrpAck)
  int total_size = 0;

  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // optional string sGrpId = 2;
  if (this->sgrpid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgrpid());
  }

  // optional string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // optional .im.ErrCode errcode = 4;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MESJoinGrpAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESJoinGrpAck*>(&from));
}

void MESJoinGrpAck::MergeFrom(const MESJoinGrpAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESJoinGrpAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.sgrpid().size() > 0) {

    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void MESJoinGrpAck::CopyFrom(const MESJoinGrpAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESJoinGrpAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESJoinGrpAck::IsInitialized() const {

  return true;
}

void MESJoinGrpAck::Swap(MESJoinGrpAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESJoinGrpAck::InternalSwap(MESJoinGrpAck* other) {
  suserid_.Swap(&other->suserid_);
  sgrpid_.Swap(&other->sgrpid_);
  smsgid_.Swap(&other->smsgid_);
  std::swap(errcode_, other->errcode_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string MESJoinGrpAck::GetTypeName() const {
  return "im.MESJoinGrpAck";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MESJoinGrpAck

// optional string sUserId = 1;
void MESJoinGrpAck::clear_suserid() {
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESJoinGrpAck::suserid() const {
  // @@protoc_insertion_point(field_get:im.MESJoinGrpAck.sUserId)
  return suserid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESJoinGrpAck::set_suserid(const ::std::string& value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESJoinGrpAck.sUserId)
}
 void MESJoinGrpAck::set_suserid(const char* value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESJoinGrpAck.sUserId)
}
 void MESJoinGrpAck::set_suserid(const char* value, size_t size) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESJoinGrpAck.sUserId)
}
 ::std::string* MESJoinGrpAck::mutable_suserid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESJoinGrpAck.sUserId)
  return suserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESJoinGrpAck::release_suserid() {
  // @@protoc_insertion_point(field_release:im.MESJoinGrpAck.sUserId)
  
  return suserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESJoinGrpAck::set_allocated_suserid(::std::string* suserid) {
  if (suserid != NULL) {
    
  } else {
    
  }
  suserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), suserid);
  // @@protoc_insertion_point(field_set_allocated:im.MESJoinGrpAck.sUserId)
}

// optional string sGrpId = 2;
void MESJoinGrpAck::clear_sgrpid() {
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESJoinGrpAck::sgrpid() const {
  // @@protoc_insertion_point(field_get:im.MESJoinGrpAck.sGrpId)
  return sgrpid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESJoinGrpAck::set_sgrpid(const ::std::string& value) {
  
  sgrpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESJoinGrpAck.sGrpId)
}
 void MESJoinGrpAck::set_sgrpid(const char* value) {
  
  sgrpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESJoinGrpAck.sGrpId)
}
 void MESJoinGrpAck::set_sgrpid(const char* value, size_t size) {
  
  sgrpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESJoinGrpAck.sGrpId)
}
 ::std::string* MESJoinGrpAck::mutable_sgrpid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESJoinGrpAck.sGrpId)
  return sgrpid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESJoinGrpAck::release_sgrpid() {
  // @@protoc_insertion_point(field_release:im.MESJoinGrpAck.sGrpId)
  
  return sgrpid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESJoinGrpAck::set_allocated_sgrpid(::std::string* sgrpid) {
  if (sgrpid != NULL) {
    
  } else {
    
  }
  sgrpid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sgrpid);
  // @@protoc_insertion_point(field_set_allocated:im.MESJoinGrpAck.sGrpId)
}

// optional string sMsgId = 3;
void MESJoinGrpAck::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESJoinGrpAck::smsgid() const {
  // @@protoc_insertion_point(field_get:im.MESJoinGrpAck.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESJoinGrpAck::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESJoinGrpAck.sMsgId)
}
 void MESJoinGrpAck::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESJoinGrpAck.sMsgId)
}
 void MESJoinGrpAck::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESJoinGrpAck.sMsgId)
}
 ::std::string* MESJoinGrpAck::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESJoinGrpAck.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESJoinGrpAck::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.MESJoinGrpAck.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESJoinGrpAck::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.MESJoinGrpAck.sMsgId)
}

// optional .im.ErrCode errcode = 4;
void MESJoinGrpAck::clear_errcode() {
  errcode_ = 0;
}
 ::im::ErrCode MESJoinGrpAck::errcode() const {
  // @@protoc_insertion_point(field_get:im.MESJoinGrpAck.errcode)
  return static_cast< ::im::ErrCode >(errcode_);
}
 void MESJoinGrpAck::set_errcode(::im::ErrCode value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:im.MESJoinGrpAck.errcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESJoinGrpDeliverAck::kSUserIdFieldNumber;
const int MESJoinGrpDeliverAck::kSGrpIdFieldNumber;
const int MESJoinGrpDeliverAck::kSMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESJoinGrpDeliverAck::MESJoinGrpDeliverAck()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESJoinGrpDeliverAck)
}

void MESJoinGrpDeliverAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MESJoinGrpDeliverAck::MESJoinGrpDeliverAck(const MESJoinGrpDeliverAck& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.MESJoinGrpDeliverAck)
}

void MESJoinGrpDeliverAck::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MESJoinGrpDeliverAck::~MESJoinGrpDeliverAck() {
  // @@protoc_insertion_point(destructor:im.MESJoinGrpDeliverAck)
  SharedDtor();
}

void MESJoinGrpDeliverAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MESJoinGrpDeliverAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MESJoinGrpDeliverAck& MESJoinGrpDeliverAck::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

MESJoinGrpDeliverAck* MESJoinGrpDeliverAck::default_instance_ = NULL;

MESJoinGrpDeliverAck* MESJoinGrpDeliverAck::New(::google::protobuf::Arena* arena) const {
  MESJoinGrpDeliverAck* n = new MESJoinGrpDeliverAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MESJoinGrpDeliverAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESJoinGrpDeliverAck)
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MESJoinGrpDeliverAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.MESJoinGrpDeliverAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sUserId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), this->suserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESJoinGrpDeliverAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sGrpId;
        break;
      }

      // optional string sGrpId = 2;
      case 2: {
        if (tag == 18) {
         parse_sGrpId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgrpid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgrpid().data(), this->sgrpid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESJoinGrpDeliverAck.sGrpId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 3;
      case 3: {
        if (tag == 26) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESJoinGrpDeliverAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESJoinGrpDeliverAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESJoinGrpDeliverAck)
  return false;
#undef DO_
}

void MESJoinGrpDeliverAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESJoinGrpDeliverAck)
  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), this->suserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESJoinGrpDeliverAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // optional string sGrpId = 2;
  if (this->sgrpid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgrpid().data(), this->sgrpid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESJoinGrpDeliverAck.sGrpId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sgrpid(), output);
  }

  // optional string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESJoinGrpDeliverAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.MESJoinGrpDeliverAck)
}

int MESJoinGrpDeliverAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESJoinGrpDeliverAck)
  int total_size = 0;

  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // optional string sGrpId = 2;
  if (this->sgrpid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgrpid());
  }

  // optional string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MESJoinGrpDeliverAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESJoinGrpDeliverAck*>(&from));
}

void MESJoinGrpDeliverAck::MergeFrom(const MESJoinGrpDeliverAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESJoinGrpDeliverAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.sgrpid().size() > 0) {

    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
}

void MESJoinGrpDeliverAck::CopyFrom(const MESJoinGrpDeliverAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESJoinGrpDeliverAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESJoinGrpDeliverAck::IsInitialized() const {

  return true;
}

void MESJoinGrpDeliverAck::Swap(MESJoinGrpDeliverAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESJoinGrpDeliverAck::InternalSwap(MESJoinGrpDeliverAck* other) {
  suserid_.Swap(&other->suserid_);
  sgrpid_.Swap(&other->sgrpid_);
  smsgid_.Swap(&other->smsgid_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string MESJoinGrpDeliverAck::GetTypeName() const {
  return "im.MESJoinGrpDeliverAck";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MESJoinGrpDeliverAck

// optional string sUserId = 1;
void MESJoinGrpDeliverAck::clear_suserid() {
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESJoinGrpDeliverAck::suserid() const {
  // @@protoc_insertion_point(field_get:im.MESJoinGrpDeliverAck.sUserId)
  return suserid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESJoinGrpDeliverAck::set_suserid(const ::std::string& value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESJoinGrpDeliverAck.sUserId)
}
 void MESJoinGrpDeliverAck::set_suserid(const char* value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESJoinGrpDeliverAck.sUserId)
}
 void MESJoinGrpDeliverAck::set_suserid(const char* value, size_t size) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESJoinGrpDeliverAck.sUserId)
}
 ::std::string* MESJoinGrpDeliverAck::mutable_suserid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESJoinGrpDeliverAck.sUserId)
  return suserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESJoinGrpDeliverAck::release_suserid() {
  // @@protoc_insertion_point(field_release:im.MESJoinGrpDeliverAck.sUserId)
  
  return suserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESJoinGrpDeliverAck::set_allocated_suserid(::std::string* suserid) {
  if (suserid != NULL) {
    
  } else {
    
  }
  suserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), suserid);
  // @@protoc_insertion_point(field_set_allocated:im.MESJoinGrpDeliverAck.sUserId)
}

// optional string sGrpId = 2;
void MESJoinGrpDeliverAck::clear_sgrpid() {
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESJoinGrpDeliverAck::sgrpid() const {
  // @@protoc_insertion_point(field_get:im.MESJoinGrpDeliverAck.sGrpId)
  return sgrpid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESJoinGrpDeliverAck::set_sgrpid(const ::std::string& value) {
  
  sgrpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESJoinGrpDeliverAck.sGrpId)
}
 void MESJoinGrpDeliverAck::set_sgrpid(const char* value) {
  
  sgrpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESJoinGrpDeliverAck.sGrpId)
}
 void MESJoinGrpDeliverAck::set_sgrpid(const char* value, size_t size) {
  
  sgrpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESJoinGrpDeliverAck.sGrpId)
}
 ::std::string* MESJoinGrpDeliverAck::mutable_sgrpid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESJoinGrpDeliverAck.sGrpId)
  return sgrpid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESJoinGrpDeliverAck::release_sgrpid() {
  // @@protoc_insertion_point(field_release:im.MESJoinGrpDeliverAck.sGrpId)
  
  return sgrpid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESJoinGrpDeliverAck::set_allocated_sgrpid(::std::string* sgrpid) {
  if (sgrpid != NULL) {
    
  } else {
    
  }
  sgrpid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sgrpid);
  // @@protoc_insertion_point(field_set_allocated:im.MESJoinGrpDeliverAck.sGrpId)
}

// optional string sMsgId = 3;
void MESJoinGrpDeliverAck::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESJoinGrpDeliverAck::smsgid() const {
  // @@protoc_insertion_point(field_get:im.MESJoinGrpDeliverAck.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESJoinGrpDeliverAck::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESJoinGrpDeliverAck.sMsgId)
}
 void MESJoinGrpDeliverAck::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESJoinGrpDeliverAck.sMsgId)
}
 void MESJoinGrpDeliverAck::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESJoinGrpDeliverAck.sMsgId)
}
 ::std::string* MESJoinGrpDeliverAck::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESJoinGrpDeliverAck.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESJoinGrpDeliverAck::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.MESJoinGrpDeliverAck.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESJoinGrpDeliverAck::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.MESJoinGrpDeliverAck.sMsgId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserKey::kSUserIdFieldNumber;
const int UserKey::kSKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserKey::UserKey()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.UserKey)
}

void UserKey::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

UserKey::UserKey(const UserKey& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.UserKey)
}

void UserKey::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  skey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

UserKey::~UserKey() {
  // @@protoc_insertion_point(destructor:im.UserKey)
  SharedDtor();
}

void UserKey::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  skey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void UserKey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const UserKey& UserKey::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

UserKey* UserKey::default_instance_ = NULL;

UserKey* UserKey::New(::google::protobuf::Arena* arena) const {
  UserKey* n = new UserKey;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserKey::Clear() {
// @@protoc_insertion_point(message_clear_start:im.UserKey)
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  skey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool UserKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.UserKey)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sUserId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), this->suserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.UserKey.sUserId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sKey;
        break;
      }

      // optional string sKey = 2;
      case 2: {
        if (tag == 18) {
         parse_sKey:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_skey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->skey().data(), this->skey().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.UserKey.sKey"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.UserKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.UserKey)
  return false;
#undef DO_
}

void UserKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.UserKey)
  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), this->suserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.UserKey.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // optional string sKey = 2;
  if (this->skey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->skey().data(), this->skey().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.UserKey.sKey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->skey(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.UserKey)
}

int UserKey::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.UserKey)
  int total_size = 0;

  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // optional string sKey = 2;
  if (this->skey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->skey());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserKey::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const UserKey*>(&from));
}

void UserKey::MergeFrom(const UserKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.UserKey)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.skey().size() > 0) {

    skey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.skey_);
  }
}

void UserKey::CopyFrom(const UserKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.UserKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserKey::IsInitialized() const {

  return true;
}

void UserKey::Swap(UserKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserKey::InternalSwap(UserKey* other) {
  suserid_.Swap(&other->suserid_);
  skey_.Swap(&other->skey_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string UserKey::GetTypeName() const {
  return "im.UserKey";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserKey

// optional string sUserId = 1;
void UserKey::clear_suserid() {
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& UserKey::suserid() const {
  // @@protoc_insertion_point(field_get:im.UserKey.sUserId)
  return suserid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserKey::set_suserid(const ::std::string& value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.UserKey.sUserId)
}
 void UserKey::set_suserid(const char* value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.UserKey.sUserId)
}
 void UserKey::set_suserid(const char* value, size_t size) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.UserKey.sUserId)
}
 ::std::string* UserKey::mutable_suserid() {
  
  // @@protoc_insertion_point(field_mutable:im.UserKey.sUserId)
  return suserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* UserKey::release_suserid() {
  // @@protoc_insertion_point(field_release:im.UserKey.sUserId)
  
  return suserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserKey::set_allocated_suserid(::std::string* suserid) {
  if (suserid != NULL) {
    
  } else {
    
  }
  suserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), suserid);
  // @@protoc_insertion_point(field_set_allocated:im.UserKey.sUserId)
}

// optional string sKey = 2;
void UserKey::clear_skey() {
  skey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& UserKey::skey() const {
  // @@protoc_insertion_point(field_get:im.UserKey.sKey)
  return skey_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserKey::set_skey(const ::std::string& value) {
  
  skey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.UserKey.sKey)
}
 void UserKey::set_skey(const char* value) {
  
  skey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.UserKey.sKey)
}
 void UserKey::set_skey(const char* value, size_t size) {
  
  skey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.UserKey.sKey)
}
 ::std::string* UserKey::mutable_skey() {
  
  // @@protoc_insertion_point(field_mutable:im.UserKey.sKey)
  return skey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* UserKey::release_skey() {
  // @@protoc_insertion_point(field_release:im.UserKey.sKey)
  
  return skey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserKey::set_allocated_skey(::std::string* skey) {
  if (skey != NULL) {
    
  } else {
    
  }
  skey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), skey);
  // @@protoc_insertion_point(field_set_allocated:im.UserKey.sKey)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESExchangeKey::kSFromIdFieldNumber;
const int MESExchangeKey::kSGrpIdFieldNumber;
const int MESExchangeKey::kSMsgIdFieldNumber;
const int MESExchangeKey::kEncryptFieldNumber;
const int MESExchangeKey::kExchangeModeFieldNumber;
const int MESExchangeKey::kSOprUserIdFieldNumber;
const int MESExchangeKey::kMsgTimeFieldNumber;
const int MESExchangeKey::kLsUserKeysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESExchangeKey::MESExchangeKey()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESExchangeKey)
}

void MESExchangeKey::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MESExchangeKey::MESExchangeKey(const MESExchangeKey& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.MESExchangeKey)
}

void MESExchangeKey::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  encrypt_ = 0u;
  exchangemode_ = 0u;
  sopruserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgtime_ = GOOGLE_ULONGLONG(0);
}

MESExchangeKey::~MESExchangeKey() {
  // @@protoc_insertion_point(destructor:im.MESExchangeKey)
  SharedDtor();
}

void MESExchangeKey::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sopruserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MESExchangeKey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MESExchangeKey& MESExchangeKey::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

MESExchangeKey* MESExchangeKey::default_instance_ = NULL;

MESExchangeKey* MESExchangeKey::New(::google::protobuf::Arena* arena) const {
  MESExchangeKey* n = new MESExchangeKey;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MESExchangeKey::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESExchangeKey)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MESExchangeKey, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MESExchangeKey*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(encrypt_, exchangemode_);
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sopruserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgtime_ = GOOGLE_ULONGLONG(0);

#undef ZR_HELPER_
#undef ZR_

  lsuserkeys_.Clear();
}

bool MESExchangeKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.MESExchangeKey)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sFromId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), this->sfromid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESExchangeKey.sFromId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sGrpId;
        break;
      }

      // optional string sGrpId = 3;
      case 3: {
        if (tag == 26) {
         parse_sGrpId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgrpid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgrpid().data(), this->sgrpid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESExchangeKey.sGrpId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 4;
      case 4: {
        if (tag == 34) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESExchangeKey.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_encrypt;
        break;
      }

      // optional uint32 encrypt = 5;
      case 5: {
        if (tag == 40) {
         parse_encrypt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &encrypt_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_exchangeMode;
        break;
      }

      // optional uint32 exchangeMode = 6;
      case 6: {
        if (tag == 48) {
         parse_exchangeMode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &exchangemode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_sOprUserId;
        break;
      }

      // optional string sOprUserId = 7;
      case 7: {
        if (tag == 58) {
         parse_sOprUserId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sopruserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sopruserid().data(), this->sopruserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESExchangeKey.sOprUserId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_msgTime;
        break;
      }

      // optional uint64 msgTime = 8;
      case 8: {
        if (tag == 64) {
         parse_msgTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_lsUserKeys;
        break;
      }

      // repeated .im.UserKey lsUserKeys = 12;
      case 12: {
        if (tag == 98) {
         parse_lsUserKeys:
          DO_(input->IncrementRecursionDepth());
         parse_loop_lsUserKeys:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_lsuserkeys()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_loop_lsUserKeys;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESExchangeKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESExchangeKey)
  return false;
#undef DO_
}

void MESExchangeKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESExchangeKey)
  // optional string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), this->sfromid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESExchangeKey.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // optional string sGrpId = 3;
  if (this->sgrpid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgrpid().data(), this->sgrpid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESExchangeKey.sGrpId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sgrpid(), output);
  }

  // optional string sMsgId = 4;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESExchangeKey.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->smsgid(), output);
  }

  // optional uint32 encrypt = 5;
  if (this->encrypt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->encrypt(), output);
  }

  // optional uint32 exchangeMode = 6;
  if (this->exchangemode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->exchangemode(), output);
  }

  // optional string sOprUserId = 7;
  if (this->sopruserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sopruserid().data(), this->sopruserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESExchangeKey.sOprUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->sopruserid(), output);
  }

  // optional uint64 msgTime = 8;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->msgtime(), output);
  }

  // repeated .im.UserKey lsUserKeys = 12;
  for (unsigned int i = 0, n = this->lsuserkeys_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      12, this->lsuserkeys(i), output);
  }

  // @@protoc_insertion_point(serialize_end:im.MESExchangeKey)
}

int MESExchangeKey::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESExchangeKey)
  int total_size = 0;

  // optional string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // optional string sGrpId = 3;
  if (this->sgrpid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgrpid());
  }

  // optional string sMsgId = 4;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // optional uint32 encrypt = 5;
  if (this->encrypt() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->encrypt());
  }

  // optional uint32 exchangeMode = 6;
  if (this->exchangemode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->exchangemode());
  }

  // optional string sOprUserId = 7;
  if (this->sopruserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sopruserid());
  }

  // optional uint64 msgTime = 8;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // repeated .im.UserKey lsUserKeys = 12;
  total_size += 1 * this->lsuserkeys_size();
  for (int i = 0; i < this->lsuserkeys_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->lsuserkeys(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MESExchangeKey::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESExchangeKey*>(&from));
}

void MESExchangeKey::MergeFrom(const MESExchangeKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESExchangeKey)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  lsuserkeys_.MergeFrom(from.lsuserkeys_);
  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.sgrpid().size() > 0) {

    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.encrypt() != 0) {
    set_encrypt(from.encrypt());
  }
  if (from.exchangemode() != 0) {
    set_exchangemode(from.exchangemode());
  }
  if (from.sopruserid().size() > 0) {

    sopruserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sopruserid_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
}

void MESExchangeKey::CopyFrom(const MESExchangeKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESExchangeKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESExchangeKey::IsInitialized() const {

  return true;
}

void MESExchangeKey::Swap(MESExchangeKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESExchangeKey::InternalSwap(MESExchangeKey* other) {
  sfromid_.Swap(&other->sfromid_);
  sgrpid_.Swap(&other->sgrpid_);
  smsgid_.Swap(&other->smsgid_);
  std::swap(encrypt_, other->encrypt_);
  std::swap(exchangemode_, other->exchangemode_);
  sopruserid_.Swap(&other->sopruserid_);
  std::swap(msgtime_, other->msgtime_);
  lsuserkeys_.UnsafeArenaSwap(&other->lsuserkeys_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string MESExchangeKey::GetTypeName() const {
  return "im.MESExchangeKey";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MESExchangeKey

// optional string sFromId = 1;
void MESExchangeKey::clear_sfromid() {
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESExchangeKey::sfromid() const {
  // @@protoc_insertion_point(field_get:im.MESExchangeKey.sFromId)
  return sfromid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESExchangeKey::set_sfromid(const ::std::string& value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESExchangeKey.sFromId)
}
 void MESExchangeKey::set_sfromid(const char* value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESExchangeKey.sFromId)
}
 void MESExchangeKey::set_sfromid(const char* value, size_t size) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESExchangeKey.sFromId)
}
 ::std::string* MESExchangeKey::mutable_sfromid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESExchangeKey.sFromId)
  return sfromid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESExchangeKey::release_sfromid() {
  // @@protoc_insertion_point(field_release:im.MESExchangeKey.sFromId)
  
  return sfromid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESExchangeKey::set_allocated_sfromid(::std::string* sfromid) {
  if (sfromid != NULL) {
    
  } else {
    
  }
  sfromid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sfromid);
  // @@protoc_insertion_point(field_set_allocated:im.MESExchangeKey.sFromId)
}

// optional string sGrpId = 3;
void MESExchangeKey::clear_sgrpid() {
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESExchangeKey::sgrpid() const {
  // @@protoc_insertion_point(field_get:im.MESExchangeKey.sGrpId)
  return sgrpid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESExchangeKey::set_sgrpid(const ::std::string& value) {
  
  sgrpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESExchangeKey.sGrpId)
}
 void MESExchangeKey::set_sgrpid(const char* value) {
  
  sgrpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESExchangeKey.sGrpId)
}
 void MESExchangeKey::set_sgrpid(const char* value, size_t size) {
  
  sgrpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESExchangeKey.sGrpId)
}
 ::std::string* MESExchangeKey::mutable_sgrpid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESExchangeKey.sGrpId)
  return sgrpid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESExchangeKey::release_sgrpid() {
  // @@protoc_insertion_point(field_release:im.MESExchangeKey.sGrpId)
  
  return sgrpid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESExchangeKey::set_allocated_sgrpid(::std::string* sgrpid) {
  if (sgrpid != NULL) {
    
  } else {
    
  }
  sgrpid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sgrpid);
  // @@protoc_insertion_point(field_set_allocated:im.MESExchangeKey.sGrpId)
}

// optional string sMsgId = 4;
void MESExchangeKey::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESExchangeKey::smsgid() const {
  // @@protoc_insertion_point(field_get:im.MESExchangeKey.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESExchangeKey::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESExchangeKey.sMsgId)
}
 void MESExchangeKey::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESExchangeKey.sMsgId)
}
 void MESExchangeKey::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESExchangeKey.sMsgId)
}
 ::std::string* MESExchangeKey::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESExchangeKey.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESExchangeKey::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.MESExchangeKey.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESExchangeKey::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.MESExchangeKey.sMsgId)
}

// optional uint32 encrypt = 5;
void MESExchangeKey::clear_encrypt() {
  encrypt_ = 0u;
}
 ::google::protobuf::uint32 MESExchangeKey::encrypt() const {
  // @@protoc_insertion_point(field_get:im.MESExchangeKey.encrypt)
  return encrypt_;
}
 void MESExchangeKey::set_encrypt(::google::protobuf::uint32 value) {
  
  encrypt_ = value;
  // @@protoc_insertion_point(field_set:im.MESExchangeKey.encrypt)
}

// optional uint32 exchangeMode = 6;
void MESExchangeKey::clear_exchangemode() {
  exchangemode_ = 0u;
}
 ::google::protobuf::uint32 MESExchangeKey::exchangemode() const {
  // @@protoc_insertion_point(field_get:im.MESExchangeKey.exchangeMode)
  return exchangemode_;
}
 void MESExchangeKey::set_exchangemode(::google::protobuf::uint32 value) {
  
  exchangemode_ = value;
  // @@protoc_insertion_point(field_set:im.MESExchangeKey.exchangeMode)
}

// optional string sOprUserId = 7;
void MESExchangeKey::clear_sopruserid() {
  sopruserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESExchangeKey::sopruserid() const {
  // @@protoc_insertion_point(field_get:im.MESExchangeKey.sOprUserId)
  return sopruserid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESExchangeKey::set_sopruserid(const ::std::string& value) {
  
  sopruserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESExchangeKey.sOprUserId)
}
 void MESExchangeKey::set_sopruserid(const char* value) {
  
  sopruserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESExchangeKey.sOprUserId)
}
 void MESExchangeKey::set_sopruserid(const char* value, size_t size) {
  
  sopruserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESExchangeKey.sOprUserId)
}
 ::std::string* MESExchangeKey::mutable_sopruserid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESExchangeKey.sOprUserId)
  return sopruserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESExchangeKey::release_sopruserid() {
  // @@protoc_insertion_point(field_release:im.MESExchangeKey.sOprUserId)
  
  return sopruserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESExchangeKey::set_allocated_sopruserid(::std::string* sopruserid) {
  if (sopruserid != NULL) {
    
  } else {
    
  }
  sopruserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sopruserid);
  // @@protoc_insertion_point(field_set_allocated:im.MESExchangeKey.sOprUserId)
}

// optional uint64 msgTime = 8;
void MESExchangeKey::clear_msgtime() {
  msgtime_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 MESExchangeKey::msgtime() const {
  // @@protoc_insertion_point(field_get:im.MESExchangeKey.msgTime)
  return msgtime_;
}
 void MESExchangeKey::set_msgtime(::google::protobuf::uint64 value) {
  
  msgtime_ = value;
  // @@protoc_insertion_point(field_set:im.MESExchangeKey.msgTime)
}

// repeated .im.UserKey lsUserKeys = 12;
int MESExchangeKey::lsuserkeys_size() const {
  return lsuserkeys_.size();
}
void MESExchangeKey::clear_lsuserkeys() {
  lsuserkeys_.Clear();
}
const ::im::UserKey& MESExchangeKey::lsuserkeys(int index) const {
  // @@protoc_insertion_point(field_get:im.MESExchangeKey.lsUserKeys)
  return lsuserkeys_.Get(index);
}
::im::UserKey* MESExchangeKey::mutable_lsuserkeys(int index) {
  // @@protoc_insertion_point(field_mutable:im.MESExchangeKey.lsUserKeys)
  return lsuserkeys_.Mutable(index);
}
::im::UserKey* MESExchangeKey::add_lsuserkeys() {
  // @@protoc_insertion_point(field_add:im.MESExchangeKey.lsUserKeys)
  return lsuserkeys_.Add();
}
::google::protobuf::RepeatedPtrField< ::im::UserKey >*
MESExchangeKey::mutable_lsuserkeys() {
  // @@protoc_insertion_point(field_mutable_list:im.MESExchangeKey.lsUserKeys)
  return &lsuserkeys_;
}
const ::google::protobuf::RepeatedPtrField< ::im::UserKey >&
MESExchangeKey::lsuserkeys() const {
  // @@protoc_insertion_point(field_list:im.MESExchangeKey.lsUserKeys)
  return lsuserkeys_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESExchangeKeyAck::kSUserIdFieldNumber;
const int MESExchangeKeyAck::kSGrpIdFieldNumber;
const int MESExchangeKeyAck::kSMsgIdFieldNumber;
const int MESExchangeKeyAck::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESExchangeKeyAck::MESExchangeKeyAck()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESExchangeKeyAck)
}

void MESExchangeKeyAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MESExchangeKeyAck::MESExchangeKeyAck(const MESExchangeKeyAck& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.MESExchangeKeyAck)
}

void MESExchangeKeyAck::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

MESExchangeKeyAck::~MESExchangeKeyAck() {
  // @@protoc_insertion_point(destructor:im.MESExchangeKeyAck)
  SharedDtor();
}

void MESExchangeKeyAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MESExchangeKeyAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MESExchangeKeyAck& MESExchangeKeyAck::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

MESExchangeKeyAck* MESExchangeKeyAck::default_instance_ = NULL;

MESExchangeKeyAck* MESExchangeKeyAck::New(::google::protobuf::Arena* arena) const {
  MESExchangeKeyAck* n = new MESExchangeKeyAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MESExchangeKeyAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESExchangeKeyAck)
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

bool MESExchangeKeyAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.MESExchangeKeyAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sUserId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), this->suserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESExchangeKeyAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sGrpId;
        break;
      }

      // optional string sGrpId = 2;
      case 2: {
        if (tag == 18) {
         parse_sGrpId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgrpid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgrpid().data(), this->sgrpid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESExchangeKeyAck.sGrpId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 3;
      case 3: {
        if (tag == 26) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESExchangeKeyAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_errcode;
        break;
      }

      // optional .im.ErrCode errcode = 4;
      case 4: {
        if (tag == 32) {
         parse_errcode:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESExchangeKeyAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESExchangeKeyAck)
  return false;
#undef DO_
}

void MESExchangeKeyAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESExchangeKeyAck)
  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), this->suserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESExchangeKeyAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // optional string sGrpId = 2;
  if (this->sgrpid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgrpid().data(), this->sgrpid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESExchangeKeyAck.sGrpId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sgrpid(), output);
  }

  // optional string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESExchangeKeyAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // optional .im.ErrCode errcode = 4;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->errcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.MESExchangeKeyAck)
}

int MESExchangeKeyAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESExchangeKeyAck)
  int total_size = 0;

  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // optional string sGrpId = 2;
  if (this->sgrpid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgrpid());
  }

  // optional string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // optional .im.ErrCode errcode = 4;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MESExchangeKeyAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESExchangeKeyAck*>(&from));
}

void MESExchangeKeyAck::MergeFrom(const MESExchangeKeyAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESExchangeKeyAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.sgrpid().size() > 0) {

    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void MESExchangeKeyAck::CopyFrom(const MESExchangeKeyAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESExchangeKeyAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESExchangeKeyAck::IsInitialized() const {

  return true;
}

void MESExchangeKeyAck::Swap(MESExchangeKeyAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESExchangeKeyAck::InternalSwap(MESExchangeKeyAck* other) {
  suserid_.Swap(&other->suserid_);
  sgrpid_.Swap(&other->sgrpid_);
  smsgid_.Swap(&other->smsgid_);
  std::swap(errcode_, other->errcode_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string MESExchangeKeyAck::GetTypeName() const {
  return "im.MESExchangeKeyAck";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MESExchangeKeyAck

// optional string sUserId = 1;
void MESExchangeKeyAck::clear_suserid() {
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESExchangeKeyAck::suserid() const {
  // @@protoc_insertion_point(field_get:im.MESExchangeKeyAck.sUserId)
  return suserid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESExchangeKeyAck::set_suserid(const ::std::string& value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESExchangeKeyAck.sUserId)
}
 void MESExchangeKeyAck::set_suserid(const char* value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESExchangeKeyAck.sUserId)
}
 void MESExchangeKeyAck::set_suserid(const char* value, size_t size) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESExchangeKeyAck.sUserId)
}
 ::std::string* MESExchangeKeyAck::mutable_suserid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESExchangeKeyAck.sUserId)
  return suserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESExchangeKeyAck::release_suserid() {
  // @@protoc_insertion_point(field_release:im.MESExchangeKeyAck.sUserId)
  
  return suserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESExchangeKeyAck::set_allocated_suserid(::std::string* suserid) {
  if (suserid != NULL) {
    
  } else {
    
  }
  suserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), suserid);
  // @@protoc_insertion_point(field_set_allocated:im.MESExchangeKeyAck.sUserId)
}

// optional string sGrpId = 2;
void MESExchangeKeyAck::clear_sgrpid() {
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESExchangeKeyAck::sgrpid() const {
  // @@protoc_insertion_point(field_get:im.MESExchangeKeyAck.sGrpId)
  return sgrpid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESExchangeKeyAck::set_sgrpid(const ::std::string& value) {
  
  sgrpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESExchangeKeyAck.sGrpId)
}
 void MESExchangeKeyAck::set_sgrpid(const char* value) {
  
  sgrpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESExchangeKeyAck.sGrpId)
}
 void MESExchangeKeyAck::set_sgrpid(const char* value, size_t size) {
  
  sgrpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESExchangeKeyAck.sGrpId)
}
 ::std::string* MESExchangeKeyAck::mutable_sgrpid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESExchangeKeyAck.sGrpId)
  return sgrpid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESExchangeKeyAck::release_sgrpid() {
  // @@protoc_insertion_point(field_release:im.MESExchangeKeyAck.sGrpId)
  
  return sgrpid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESExchangeKeyAck::set_allocated_sgrpid(::std::string* sgrpid) {
  if (sgrpid != NULL) {
    
  } else {
    
  }
  sgrpid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sgrpid);
  // @@protoc_insertion_point(field_set_allocated:im.MESExchangeKeyAck.sGrpId)
}

// optional string sMsgId = 3;
void MESExchangeKeyAck::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESExchangeKeyAck::smsgid() const {
  // @@protoc_insertion_point(field_get:im.MESExchangeKeyAck.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESExchangeKeyAck::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESExchangeKeyAck.sMsgId)
}
 void MESExchangeKeyAck::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESExchangeKeyAck.sMsgId)
}
 void MESExchangeKeyAck::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESExchangeKeyAck.sMsgId)
}
 ::std::string* MESExchangeKeyAck::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESExchangeKeyAck.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESExchangeKeyAck::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.MESExchangeKeyAck.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESExchangeKeyAck::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.MESExchangeKeyAck.sMsgId)
}

// optional .im.ErrCode errcode = 4;
void MESExchangeKeyAck::clear_errcode() {
  errcode_ = 0;
}
 ::im::ErrCode MESExchangeKeyAck::errcode() const {
  // @@protoc_insertion_point(field_get:im.MESExchangeKeyAck.errcode)
  return static_cast< ::im::ErrCode >(errcode_);
}
 void MESExchangeKeyAck::set_errcode(::im::ErrCode value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:im.MESExchangeKeyAck.errcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESExchangeKeyDeliver::kSFromIdFieldNumber;
const int MESExchangeKeyDeliver::kSToIdFieldNumber;
const int MESExchangeKeyDeliver::kSGrpIdFieldNumber;
const int MESExchangeKeyDeliver::kSMsgIdFieldNumber;
const int MESExchangeKeyDeliver::kExchangeModeFieldNumber;
const int MESExchangeKeyDeliver::kSKeyFieldNumber;
const int MESExchangeKeyDeliver::kEncryptFieldNumber;
const int MESExchangeKeyDeliver::kSOprUserIdFieldNumber;
const int MESExchangeKeyDeliver::kMsgTimeFieldNumber;
const int MESExchangeKeyDeliver::kExtendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESExchangeKeyDeliver::MESExchangeKeyDeliver()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESExchangeKeyDeliver)
}

void MESExchangeKeyDeliver::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MESExchangeKeyDeliver::MESExchangeKeyDeliver(const MESExchangeKeyDeliver& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.MESExchangeKeyDeliver)
}

void MESExchangeKeyDeliver::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchangemode_ = 0u;
  skey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  encrypt_ = 0u;
  sopruserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgtime_ = GOOGLE_ULONGLONG(0);
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MESExchangeKeyDeliver::~MESExchangeKeyDeliver() {
  // @@protoc_insertion_point(destructor:im.MESExchangeKeyDeliver)
  SharedDtor();
}

void MESExchangeKeyDeliver::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  skey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sopruserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MESExchangeKeyDeliver::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MESExchangeKeyDeliver& MESExchangeKeyDeliver::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

MESExchangeKeyDeliver* MESExchangeKeyDeliver::default_instance_ = NULL;

MESExchangeKeyDeliver* MESExchangeKeyDeliver::New(::google::protobuf::Arena* arena) const {
  MESExchangeKeyDeliver* n = new MESExchangeKeyDeliver;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MESExchangeKeyDeliver::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESExchangeKeyDeliver)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MESExchangeKeyDeliver, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MESExchangeKeyDeliver*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(exchangemode_, encrypt_);
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  skey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sopruserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgtime_ = GOOGLE_ULONGLONG(0);
  extend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool MESExchangeKeyDeliver::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.MESExchangeKeyDeliver)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sFromId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), this->sfromid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESExchangeKeyDeliver.sFromId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sToId;
        break;
      }

      // optional string sToId = 2;
      case 2: {
        if (tag == 18) {
         parse_sToId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), this->stoid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESExchangeKeyDeliver.sToId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sGrpId;
        break;
      }

      // optional string sGrpId = 3;
      case 3: {
        if (tag == 26) {
         parse_sGrpId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgrpid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgrpid().data(), this->sgrpid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESExchangeKeyDeliver.sGrpId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 4;
      case 4: {
        if (tag == 34) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESExchangeKeyDeliver.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_exchangeMode;
        break;
      }

      // optional uint32 exchangeMode = 5;
      case 5: {
        if (tag == 40) {
         parse_exchangeMode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &exchangemode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_sKey;
        break;
      }

      // optional string sKey = 6;
      case 6: {
        if (tag == 50) {
         parse_sKey:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_skey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->skey().data(), this->skey().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESExchangeKeyDeliver.sKey"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_encrypt;
        break;
      }

      // optional uint32 encrypt = 7;
      case 7: {
        if (tag == 56) {
         parse_encrypt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &encrypt_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_sOprUserId;
        break;
      }

      // optional string sOprUserId = 8;
      case 8: {
        if (tag == 66) {
         parse_sOprUserId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sopruserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sopruserid().data(), this->sopruserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESExchangeKeyDeliver.sOprUserId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_msgTime;
        break;
      }

      // optional uint64 msgTime = 9;
      case 9: {
        if (tag == 72) {
         parse_msgTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_extend;
        break;
      }

      // optional string extend = 10;
      case 10: {
        if (tag == 82) {
         parse_extend:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extend()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extend().data(), this->extend().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESExchangeKeyDeliver.extend"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESExchangeKeyDeliver)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESExchangeKeyDeliver)
  return false;
#undef DO_
}

void MESExchangeKeyDeliver::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESExchangeKeyDeliver)
  // optional string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), this->sfromid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESExchangeKeyDeliver.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // optional string sToId = 2;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), this->stoid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESExchangeKeyDeliver.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stoid(), output);
  }

  // optional string sGrpId = 3;
  if (this->sgrpid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgrpid().data(), this->sgrpid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESExchangeKeyDeliver.sGrpId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sgrpid(), output);
  }

  // optional string sMsgId = 4;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESExchangeKeyDeliver.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->smsgid(), output);
  }

  // optional uint32 exchangeMode = 5;
  if (this->exchangemode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->exchangemode(), output);
  }

  // optional string sKey = 6;
  if (this->skey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->skey().data(), this->skey().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESExchangeKeyDeliver.sKey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->skey(), output);
  }

  // optional uint32 encrypt = 7;
  if (this->encrypt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->encrypt(), output);
  }

  // optional string sOprUserId = 8;
  if (this->sopruserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sopruserid().data(), this->sopruserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESExchangeKeyDeliver.sOprUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->sopruserid(), output);
  }

  // optional uint64 msgTime = 9;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->msgtime(), output);
  }

  // optional string extend = 10;
  if (this->extend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extend().data(), this->extend().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESExchangeKeyDeliver.extend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->extend(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.MESExchangeKeyDeliver)
}

int MESExchangeKeyDeliver::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESExchangeKeyDeliver)
  int total_size = 0;

  // optional string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // optional string sToId = 2;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // optional string sGrpId = 3;
  if (this->sgrpid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgrpid());
  }

  // optional string sMsgId = 4;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // optional uint32 exchangeMode = 5;
  if (this->exchangemode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->exchangemode());
  }

  // optional string sKey = 6;
  if (this->skey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->skey());
  }

  // optional uint32 encrypt = 7;
  if (this->encrypt() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->encrypt());
  }

  // optional string sOprUserId = 8;
  if (this->sopruserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sopruserid());
  }

  // optional uint64 msgTime = 9;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // optional string extend = 10;
  if (this->extend().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extend());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MESExchangeKeyDeliver::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESExchangeKeyDeliver*>(&from));
}

void MESExchangeKeyDeliver::MergeFrom(const MESExchangeKeyDeliver& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESExchangeKeyDeliver)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.sgrpid().size() > 0) {

    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.exchangemode() != 0) {
    set_exchangemode(from.exchangemode());
  }
  if (from.skey().size() > 0) {

    skey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.skey_);
  }
  if (from.encrypt() != 0) {
    set_encrypt(from.encrypt());
  }
  if (from.sopruserid().size() > 0) {

    sopruserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sopruserid_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.extend().size() > 0) {

    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
}

void MESExchangeKeyDeliver::CopyFrom(const MESExchangeKeyDeliver& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESExchangeKeyDeliver)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESExchangeKeyDeliver::IsInitialized() const {

  return true;
}

void MESExchangeKeyDeliver::Swap(MESExchangeKeyDeliver* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESExchangeKeyDeliver::InternalSwap(MESExchangeKeyDeliver* other) {
  sfromid_.Swap(&other->sfromid_);
  stoid_.Swap(&other->stoid_);
  sgrpid_.Swap(&other->sgrpid_);
  smsgid_.Swap(&other->smsgid_);
  std::swap(exchangemode_, other->exchangemode_);
  skey_.Swap(&other->skey_);
  std::swap(encrypt_, other->encrypt_);
  sopruserid_.Swap(&other->sopruserid_);
  std::swap(msgtime_, other->msgtime_);
  extend_.Swap(&other->extend_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string MESExchangeKeyDeliver::GetTypeName() const {
  return "im.MESExchangeKeyDeliver";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MESExchangeKeyDeliver

// optional string sFromId = 1;
void MESExchangeKeyDeliver::clear_sfromid() {
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESExchangeKeyDeliver::sfromid() const {
  // @@protoc_insertion_point(field_get:im.MESExchangeKeyDeliver.sFromId)
  return sfromid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESExchangeKeyDeliver::set_sfromid(const ::std::string& value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESExchangeKeyDeliver.sFromId)
}
 void MESExchangeKeyDeliver::set_sfromid(const char* value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESExchangeKeyDeliver.sFromId)
}
 void MESExchangeKeyDeliver::set_sfromid(const char* value, size_t size) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESExchangeKeyDeliver.sFromId)
}
 ::std::string* MESExchangeKeyDeliver::mutable_sfromid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESExchangeKeyDeliver.sFromId)
  return sfromid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESExchangeKeyDeliver::release_sfromid() {
  // @@protoc_insertion_point(field_release:im.MESExchangeKeyDeliver.sFromId)
  
  return sfromid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESExchangeKeyDeliver::set_allocated_sfromid(::std::string* sfromid) {
  if (sfromid != NULL) {
    
  } else {
    
  }
  sfromid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sfromid);
  // @@protoc_insertion_point(field_set_allocated:im.MESExchangeKeyDeliver.sFromId)
}

// optional string sToId = 2;
void MESExchangeKeyDeliver::clear_stoid() {
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESExchangeKeyDeliver::stoid() const {
  // @@protoc_insertion_point(field_get:im.MESExchangeKeyDeliver.sToId)
  return stoid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESExchangeKeyDeliver::set_stoid(const ::std::string& value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESExchangeKeyDeliver.sToId)
}
 void MESExchangeKeyDeliver::set_stoid(const char* value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESExchangeKeyDeliver.sToId)
}
 void MESExchangeKeyDeliver::set_stoid(const char* value, size_t size) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESExchangeKeyDeliver.sToId)
}
 ::std::string* MESExchangeKeyDeliver::mutable_stoid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESExchangeKeyDeliver.sToId)
  return stoid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESExchangeKeyDeliver::release_stoid() {
  // @@protoc_insertion_point(field_release:im.MESExchangeKeyDeliver.sToId)
  
  return stoid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESExchangeKeyDeliver::set_allocated_stoid(::std::string* stoid) {
  if (stoid != NULL) {
    
  } else {
    
  }
  stoid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stoid);
  // @@protoc_insertion_point(field_set_allocated:im.MESExchangeKeyDeliver.sToId)
}

// optional string sGrpId = 3;
void MESExchangeKeyDeliver::clear_sgrpid() {
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESExchangeKeyDeliver::sgrpid() const {
  // @@protoc_insertion_point(field_get:im.MESExchangeKeyDeliver.sGrpId)
  return sgrpid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESExchangeKeyDeliver::set_sgrpid(const ::std::string& value) {
  
  sgrpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESExchangeKeyDeliver.sGrpId)
}
 void MESExchangeKeyDeliver::set_sgrpid(const char* value) {
  
  sgrpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESExchangeKeyDeliver.sGrpId)
}
 void MESExchangeKeyDeliver::set_sgrpid(const char* value, size_t size) {
  
  sgrpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESExchangeKeyDeliver.sGrpId)
}
 ::std::string* MESExchangeKeyDeliver::mutable_sgrpid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESExchangeKeyDeliver.sGrpId)
  return sgrpid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESExchangeKeyDeliver::release_sgrpid() {
  // @@protoc_insertion_point(field_release:im.MESExchangeKeyDeliver.sGrpId)
  
  return sgrpid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESExchangeKeyDeliver::set_allocated_sgrpid(::std::string* sgrpid) {
  if (sgrpid != NULL) {
    
  } else {
    
  }
  sgrpid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sgrpid);
  // @@protoc_insertion_point(field_set_allocated:im.MESExchangeKeyDeliver.sGrpId)
}

// optional string sMsgId = 4;
void MESExchangeKeyDeliver::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESExchangeKeyDeliver::smsgid() const {
  // @@protoc_insertion_point(field_get:im.MESExchangeKeyDeliver.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESExchangeKeyDeliver::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESExchangeKeyDeliver.sMsgId)
}
 void MESExchangeKeyDeliver::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESExchangeKeyDeliver.sMsgId)
}
 void MESExchangeKeyDeliver::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESExchangeKeyDeliver.sMsgId)
}
 ::std::string* MESExchangeKeyDeliver::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESExchangeKeyDeliver.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESExchangeKeyDeliver::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.MESExchangeKeyDeliver.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESExchangeKeyDeliver::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.MESExchangeKeyDeliver.sMsgId)
}

// optional uint32 exchangeMode = 5;
void MESExchangeKeyDeliver::clear_exchangemode() {
  exchangemode_ = 0u;
}
 ::google::protobuf::uint32 MESExchangeKeyDeliver::exchangemode() const {
  // @@protoc_insertion_point(field_get:im.MESExchangeKeyDeliver.exchangeMode)
  return exchangemode_;
}
 void MESExchangeKeyDeliver::set_exchangemode(::google::protobuf::uint32 value) {
  
  exchangemode_ = value;
  // @@protoc_insertion_point(field_set:im.MESExchangeKeyDeliver.exchangeMode)
}

// optional string sKey = 6;
void MESExchangeKeyDeliver::clear_skey() {
  skey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESExchangeKeyDeliver::skey() const {
  // @@protoc_insertion_point(field_get:im.MESExchangeKeyDeliver.sKey)
  return skey_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESExchangeKeyDeliver::set_skey(const ::std::string& value) {
  
  skey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESExchangeKeyDeliver.sKey)
}
 void MESExchangeKeyDeliver::set_skey(const char* value) {
  
  skey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESExchangeKeyDeliver.sKey)
}
 void MESExchangeKeyDeliver::set_skey(const char* value, size_t size) {
  
  skey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESExchangeKeyDeliver.sKey)
}
 ::std::string* MESExchangeKeyDeliver::mutable_skey() {
  
  // @@protoc_insertion_point(field_mutable:im.MESExchangeKeyDeliver.sKey)
  return skey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESExchangeKeyDeliver::release_skey() {
  // @@protoc_insertion_point(field_release:im.MESExchangeKeyDeliver.sKey)
  
  return skey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESExchangeKeyDeliver::set_allocated_skey(::std::string* skey) {
  if (skey != NULL) {
    
  } else {
    
  }
  skey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), skey);
  // @@protoc_insertion_point(field_set_allocated:im.MESExchangeKeyDeliver.sKey)
}

// optional uint32 encrypt = 7;
void MESExchangeKeyDeliver::clear_encrypt() {
  encrypt_ = 0u;
}
 ::google::protobuf::uint32 MESExchangeKeyDeliver::encrypt() const {
  // @@protoc_insertion_point(field_get:im.MESExchangeKeyDeliver.encrypt)
  return encrypt_;
}
 void MESExchangeKeyDeliver::set_encrypt(::google::protobuf::uint32 value) {
  
  encrypt_ = value;
  // @@protoc_insertion_point(field_set:im.MESExchangeKeyDeliver.encrypt)
}

// optional string sOprUserId = 8;
void MESExchangeKeyDeliver::clear_sopruserid() {
  sopruserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESExchangeKeyDeliver::sopruserid() const {
  // @@protoc_insertion_point(field_get:im.MESExchangeKeyDeliver.sOprUserId)
  return sopruserid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESExchangeKeyDeliver::set_sopruserid(const ::std::string& value) {
  
  sopruserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESExchangeKeyDeliver.sOprUserId)
}
 void MESExchangeKeyDeliver::set_sopruserid(const char* value) {
  
  sopruserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESExchangeKeyDeliver.sOprUserId)
}
 void MESExchangeKeyDeliver::set_sopruserid(const char* value, size_t size) {
  
  sopruserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESExchangeKeyDeliver.sOprUserId)
}
 ::std::string* MESExchangeKeyDeliver::mutable_sopruserid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESExchangeKeyDeliver.sOprUserId)
  return sopruserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESExchangeKeyDeliver::release_sopruserid() {
  // @@protoc_insertion_point(field_release:im.MESExchangeKeyDeliver.sOprUserId)
  
  return sopruserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESExchangeKeyDeliver::set_allocated_sopruserid(::std::string* sopruserid) {
  if (sopruserid != NULL) {
    
  } else {
    
  }
  sopruserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sopruserid);
  // @@protoc_insertion_point(field_set_allocated:im.MESExchangeKeyDeliver.sOprUserId)
}

// optional uint64 msgTime = 9;
void MESExchangeKeyDeliver::clear_msgtime() {
  msgtime_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 MESExchangeKeyDeliver::msgtime() const {
  // @@protoc_insertion_point(field_get:im.MESExchangeKeyDeliver.msgTime)
  return msgtime_;
}
 void MESExchangeKeyDeliver::set_msgtime(::google::protobuf::uint64 value) {
  
  msgtime_ = value;
  // @@protoc_insertion_point(field_set:im.MESExchangeKeyDeliver.msgTime)
}

// optional string extend = 10;
void MESExchangeKeyDeliver::clear_extend() {
  extend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESExchangeKeyDeliver::extend() const {
  // @@protoc_insertion_point(field_get:im.MESExchangeKeyDeliver.extend)
  return extend_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESExchangeKeyDeliver::set_extend(const ::std::string& value) {
  
  extend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESExchangeKeyDeliver.extend)
}
 void MESExchangeKeyDeliver::set_extend(const char* value) {
  
  extend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESExchangeKeyDeliver.extend)
}
 void MESExchangeKeyDeliver::set_extend(const char* value, size_t size) {
  
  extend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESExchangeKeyDeliver.extend)
}
 ::std::string* MESExchangeKeyDeliver::mutable_extend() {
  
  // @@protoc_insertion_point(field_mutable:im.MESExchangeKeyDeliver.extend)
  return extend_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESExchangeKeyDeliver::release_extend() {
  // @@protoc_insertion_point(field_release:im.MESExchangeKeyDeliver.extend)
  
  return extend_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESExchangeKeyDeliver::set_allocated_extend(::std::string* extend) {
  if (extend != NULL) {
    
  } else {
    
  }
  extend_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extend);
  // @@protoc_insertion_point(field_set_allocated:im.MESExchangeKeyDeliver.extend)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESExchangeKeyDeliverAck::kSFromIdFieldNumber;
const int MESExchangeKeyDeliverAck::kSToIdFieldNumber;
const int MESExchangeKeyDeliverAck::kSGrpIdFieldNumber;
const int MESExchangeKeyDeliverAck::kSMsgIdFieldNumber;
const int MESExchangeKeyDeliverAck::kSKeyFieldNumber;
const int MESExchangeKeyDeliverAck::kEncryptFieldNumber;
const int MESExchangeKeyDeliverAck::kErrcodeFieldNumber;
const int MESExchangeKeyDeliverAck::kMsgTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESExchangeKeyDeliverAck::MESExchangeKeyDeliverAck()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESExchangeKeyDeliverAck)
}

void MESExchangeKeyDeliverAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MESExchangeKeyDeliverAck::MESExchangeKeyDeliverAck(const MESExchangeKeyDeliverAck& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.MESExchangeKeyDeliverAck)
}

void MESExchangeKeyDeliverAck::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  skey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  encrypt_ = 0u;
  errcode_ = 0;
  msgtime_ = GOOGLE_ULONGLONG(0);
}

MESExchangeKeyDeliverAck::~MESExchangeKeyDeliverAck() {
  // @@protoc_insertion_point(destructor:im.MESExchangeKeyDeliverAck)
  SharedDtor();
}

void MESExchangeKeyDeliverAck::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  skey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MESExchangeKeyDeliverAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MESExchangeKeyDeliverAck& MESExchangeKeyDeliverAck::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

MESExchangeKeyDeliverAck* MESExchangeKeyDeliverAck::default_instance_ = NULL;

MESExchangeKeyDeliverAck* MESExchangeKeyDeliverAck::New(::google::protobuf::Arena* arena) const {
  MESExchangeKeyDeliverAck* n = new MESExchangeKeyDeliverAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MESExchangeKeyDeliverAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESExchangeKeyDeliverAck)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MESExchangeKeyDeliverAck, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MESExchangeKeyDeliverAck*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(encrypt_, msgtime_);
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  skey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool MESExchangeKeyDeliverAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.MESExchangeKeyDeliverAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sFromId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), this->sfromid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESExchangeKeyDeliverAck.sFromId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sToId;
        break;
      }

      // optional string sToId = 2;
      case 2: {
        if (tag == 18) {
         parse_sToId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), this->stoid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESExchangeKeyDeliverAck.sToId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sGrpId;
        break;
      }

      // optional string sGrpId = 3;
      case 3: {
        if (tag == 26) {
         parse_sGrpId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgrpid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgrpid().data(), this->sgrpid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESExchangeKeyDeliverAck.sGrpId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 4;
      case 4: {
        if (tag == 34) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESExchangeKeyDeliverAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_sKey;
        break;
      }

      // optional string sKey = 5;
      case 5: {
        if (tag == 42) {
         parse_sKey:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_skey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->skey().data(), this->skey().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESExchangeKeyDeliverAck.sKey"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_encrypt;
        break;
      }

      // optional uint32 encrypt = 6;
      case 6: {
        if (tag == 48) {
         parse_encrypt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &encrypt_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_errcode;
        break;
      }

      // optional .im.ErrCode errcode = 7;
      case 7: {
        if (tag == 56) {
         parse_errcode:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_msgTime;
        break;
      }

      // optional uint64 msgTime = 8;
      case 8: {
        if (tag == 64) {
         parse_msgTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESExchangeKeyDeliverAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESExchangeKeyDeliverAck)
  return false;
#undef DO_
}

void MESExchangeKeyDeliverAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESExchangeKeyDeliverAck)
  // optional string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), this->sfromid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESExchangeKeyDeliverAck.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // optional string sToId = 2;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), this->stoid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESExchangeKeyDeliverAck.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stoid(), output);
  }

  // optional string sGrpId = 3;
  if (this->sgrpid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgrpid().data(), this->sgrpid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESExchangeKeyDeliverAck.sGrpId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sgrpid(), output);
  }

  // optional string sMsgId = 4;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESExchangeKeyDeliverAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->smsgid(), output);
  }

  // optional string sKey = 5;
  if (this->skey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->skey().data(), this->skey().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESExchangeKeyDeliverAck.sKey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->skey(), output);
  }

  // optional uint32 encrypt = 6;
  if (this->encrypt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->encrypt(), output);
  }

  // optional .im.ErrCode errcode = 7;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->errcode(), output);
  }

  // optional uint64 msgTime = 8;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->msgtime(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.MESExchangeKeyDeliverAck)
}

int MESExchangeKeyDeliverAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESExchangeKeyDeliverAck)
  int total_size = 0;

  // optional string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // optional string sToId = 2;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // optional string sGrpId = 3;
  if (this->sgrpid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgrpid());
  }

  // optional string sMsgId = 4;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // optional string sKey = 5;
  if (this->skey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->skey());
  }

  // optional uint32 encrypt = 6;
  if (this->encrypt() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->encrypt());
  }

  // optional .im.ErrCode errcode = 7;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  // optional uint64 msgTime = 8;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MESExchangeKeyDeliverAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESExchangeKeyDeliverAck*>(&from));
}

void MESExchangeKeyDeliverAck::MergeFrom(const MESExchangeKeyDeliverAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESExchangeKeyDeliverAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.sgrpid().size() > 0) {

    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.skey().size() > 0) {

    skey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.skey_);
  }
  if (from.encrypt() != 0) {
    set_encrypt(from.encrypt());
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
}

void MESExchangeKeyDeliverAck::CopyFrom(const MESExchangeKeyDeliverAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESExchangeKeyDeliverAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESExchangeKeyDeliverAck::IsInitialized() const {

  return true;
}

void MESExchangeKeyDeliverAck::Swap(MESExchangeKeyDeliverAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESExchangeKeyDeliverAck::InternalSwap(MESExchangeKeyDeliverAck* other) {
  sfromid_.Swap(&other->sfromid_);
  stoid_.Swap(&other->stoid_);
  sgrpid_.Swap(&other->sgrpid_);
  smsgid_.Swap(&other->smsgid_);
  skey_.Swap(&other->skey_);
  std::swap(encrypt_, other->encrypt_);
  std::swap(errcode_, other->errcode_);
  std::swap(msgtime_, other->msgtime_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string MESExchangeKeyDeliverAck::GetTypeName() const {
  return "im.MESExchangeKeyDeliverAck";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MESExchangeKeyDeliverAck

// optional string sFromId = 1;
void MESExchangeKeyDeliverAck::clear_sfromid() {
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESExchangeKeyDeliverAck::sfromid() const {
  // @@protoc_insertion_point(field_get:im.MESExchangeKeyDeliverAck.sFromId)
  return sfromid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESExchangeKeyDeliverAck::set_sfromid(const ::std::string& value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESExchangeKeyDeliverAck.sFromId)
}
 void MESExchangeKeyDeliverAck::set_sfromid(const char* value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESExchangeKeyDeliverAck.sFromId)
}
 void MESExchangeKeyDeliverAck::set_sfromid(const char* value, size_t size) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESExchangeKeyDeliverAck.sFromId)
}
 ::std::string* MESExchangeKeyDeliverAck::mutable_sfromid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESExchangeKeyDeliverAck.sFromId)
  return sfromid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESExchangeKeyDeliverAck::release_sfromid() {
  // @@protoc_insertion_point(field_release:im.MESExchangeKeyDeliverAck.sFromId)
  
  return sfromid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESExchangeKeyDeliverAck::set_allocated_sfromid(::std::string* sfromid) {
  if (sfromid != NULL) {
    
  } else {
    
  }
  sfromid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sfromid);
  // @@protoc_insertion_point(field_set_allocated:im.MESExchangeKeyDeliverAck.sFromId)
}

// optional string sToId = 2;
void MESExchangeKeyDeliverAck::clear_stoid() {
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESExchangeKeyDeliverAck::stoid() const {
  // @@protoc_insertion_point(field_get:im.MESExchangeKeyDeliverAck.sToId)
  return stoid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESExchangeKeyDeliverAck::set_stoid(const ::std::string& value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESExchangeKeyDeliverAck.sToId)
}
 void MESExchangeKeyDeliverAck::set_stoid(const char* value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESExchangeKeyDeliverAck.sToId)
}
 void MESExchangeKeyDeliverAck::set_stoid(const char* value, size_t size) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESExchangeKeyDeliverAck.sToId)
}
 ::std::string* MESExchangeKeyDeliverAck::mutable_stoid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESExchangeKeyDeliverAck.sToId)
  return stoid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESExchangeKeyDeliverAck::release_stoid() {
  // @@protoc_insertion_point(field_release:im.MESExchangeKeyDeliverAck.sToId)
  
  return stoid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESExchangeKeyDeliverAck::set_allocated_stoid(::std::string* stoid) {
  if (stoid != NULL) {
    
  } else {
    
  }
  stoid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stoid);
  // @@protoc_insertion_point(field_set_allocated:im.MESExchangeKeyDeliverAck.sToId)
}

// optional string sGrpId = 3;
void MESExchangeKeyDeliverAck::clear_sgrpid() {
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESExchangeKeyDeliverAck::sgrpid() const {
  // @@protoc_insertion_point(field_get:im.MESExchangeKeyDeliverAck.sGrpId)
  return sgrpid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESExchangeKeyDeliverAck::set_sgrpid(const ::std::string& value) {
  
  sgrpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESExchangeKeyDeliverAck.sGrpId)
}
 void MESExchangeKeyDeliverAck::set_sgrpid(const char* value) {
  
  sgrpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESExchangeKeyDeliverAck.sGrpId)
}
 void MESExchangeKeyDeliverAck::set_sgrpid(const char* value, size_t size) {
  
  sgrpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESExchangeKeyDeliverAck.sGrpId)
}
 ::std::string* MESExchangeKeyDeliverAck::mutable_sgrpid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESExchangeKeyDeliverAck.sGrpId)
  return sgrpid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESExchangeKeyDeliverAck::release_sgrpid() {
  // @@protoc_insertion_point(field_release:im.MESExchangeKeyDeliverAck.sGrpId)
  
  return sgrpid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESExchangeKeyDeliverAck::set_allocated_sgrpid(::std::string* sgrpid) {
  if (sgrpid != NULL) {
    
  } else {
    
  }
  sgrpid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sgrpid);
  // @@protoc_insertion_point(field_set_allocated:im.MESExchangeKeyDeliverAck.sGrpId)
}

// optional string sMsgId = 4;
void MESExchangeKeyDeliverAck::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESExchangeKeyDeliverAck::smsgid() const {
  // @@protoc_insertion_point(field_get:im.MESExchangeKeyDeliverAck.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESExchangeKeyDeliverAck::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESExchangeKeyDeliverAck.sMsgId)
}
 void MESExchangeKeyDeliverAck::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESExchangeKeyDeliverAck.sMsgId)
}
 void MESExchangeKeyDeliverAck::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESExchangeKeyDeliverAck.sMsgId)
}
 ::std::string* MESExchangeKeyDeliverAck::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESExchangeKeyDeliverAck.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESExchangeKeyDeliverAck::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.MESExchangeKeyDeliverAck.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESExchangeKeyDeliverAck::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.MESExchangeKeyDeliverAck.sMsgId)
}

// optional string sKey = 5;
void MESExchangeKeyDeliverAck::clear_skey() {
  skey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESExchangeKeyDeliverAck::skey() const {
  // @@protoc_insertion_point(field_get:im.MESExchangeKeyDeliverAck.sKey)
  return skey_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESExchangeKeyDeliverAck::set_skey(const ::std::string& value) {
  
  skey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESExchangeKeyDeliverAck.sKey)
}
 void MESExchangeKeyDeliverAck::set_skey(const char* value) {
  
  skey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESExchangeKeyDeliverAck.sKey)
}
 void MESExchangeKeyDeliverAck::set_skey(const char* value, size_t size) {
  
  skey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESExchangeKeyDeliverAck.sKey)
}
 ::std::string* MESExchangeKeyDeliverAck::mutable_skey() {
  
  // @@protoc_insertion_point(field_mutable:im.MESExchangeKeyDeliverAck.sKey)
  return skey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESExchangeKeyDeliverAck::release_skey() {
  // @@protoc_insertion_point(field_release:im.MESExchangeKeyDeliverAck.sKey)
  
  return skey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESExchangeKeyDeliverAck::set_allocated_skey(::std::string* skey) {
  if (skey != NULL) {
    
  } else {
    
  }
  skey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), skey);
  // @@protoc_insertion_point(field_set_allocated:im.MESExchangeKeyDeliverAck.sKey)
}

// optional uint32 encrypt = 6;
void MESExchangeKeyDeliverAck::clear_encrypt() {
  encrypt_ = 0u;
}
 ::google::protobuf::uint32 MESExchangeKeyDeliverAck::encrypt() const {
  // @@protoc_insertion_point(field_get:im.MESExchangeKeyDeliverAck.encrypt)
  return encrypt_;
}
 void MESExchangeKeyDeliverAck::set_encrypt(::google::protobuf::uint32 value) {
  
  encrypt_ = value;
  // @@protoc_insertion_point(field_set:im.MESExchangeKeyDeliverAck.encrypt)
}

// optional .im.ErrCode errcode = 7;
void MESExchangeKeyDeliverAck::clear_errcode() {
  errcode_ = 0;
}
 ::im::ErrCode MESExchangeKeyDeliverAck::errcode() const {
  // @@protoc_insertion_point(field_get:im.MESExchangeKeyDeliverAck.errcode)
  return static_cast< ::im::ErrCode >(errcode_);
}
 void MESExchangeKeyDeliverAck::set_errcode(::im::ErrCode value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:im.MESExchangeKeyDeliverAck.errcode)
}

// optional uint64 msgTime = 8;
void MESExchangeKeyDeliverAck::clear_msgtime() {
  msgtime_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 MESExchangeKeyDeliverAck::msgtime() const {
  // @@protoc_insertion_point(field_get:im.MESExchangeKeyDeliverAck.msgTime)
  return msgtime_;
}
 void MESExchangeKeyDeliverAck::set_msgtime(::google::protobuf::uint64 value) {
  
  msgtime_ = value;
  // @@protoc_insertion_point(field_set:im.MESExchangeKeyDeliverAck.msgTime)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESExchangeKeyDeliverNotifyAck::kSUserIdFieldNumber;
const int MESExchangeKeyDeliverNotifyAck::kSMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESExchangeKeyDeliverNotifyAck::MESExchangeKeyDeliverNotifyAck()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESExchangeKeyDeliverNotifyAck)
}

void MESExchangeKeyDeliverNotifyAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MESExchangeKeyDeliverNotifyAck::MESExchangeKeyDeliverNotifyAck(const MESExchangeKeyDeliverNotifyAck& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.MESExchangeKeyDeliverNotifyAck)
}

void MESExchangeKeyDeliverNotifyAck::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MESExchangeKeyDeliverNotifyAck::~MESExchangeKeyDeliverNotifyAck() {
  // @@protoc_insertion_point(destructor:im.MESExchangeKeyDeliverNotifyAck)
  SharedDtor();
}

void MESExchangeKeyDeliverNotifyAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MESExchangeKeyDeliverNotifyAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MESExchangeKeyDeliverNotifyAck& MESExchangeKeyDeliverNotifyAck::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

MESExchangeKeyDeliverNotifyAck* MESExchangeKeyDeliverNotifyAck::default_instance_ = NULL;

MESExchangeKeyDeliverNotifyAck* MESExchangeKeyDeliverNotifyAck::New(::google::protobuf::Arena* arena) const {
  MESExchangeKeyDeliverNotifyAck* n = new MESExchangeKeyDeliverNotifyAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MESExchangeKeyDeliverNotifyAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESExchangeKeyDeliverNotifyAck)
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MESExchangeKeyDeliverNotifyAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.MESExchangeKeyDeliverNotifyAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sUserId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), this->suserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESExchangeKeyDeliverNotifyAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 2;
      case 2: {
        if (tag == 18) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESExchangeKeyDeliverNotifyAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESExchangeKeyDeliverNotifyAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESExchangeKeyDeliverNotifyAck)
  return false;
#undef DO_
}

void MESExchangeKeyDeliverNotifyAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESExchangeKeyDeliverNotifyAck)
  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), this->suserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESExchangeKeyDeliverNotifyAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // optional string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESExchangeKeyDeliverNotifyAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.MESExchangeKeyDeliverNotifyAck)
}

int MESExchangeKeyDeliverNotifyAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESExchangeKeyDeliverNotifyAck)
  int total_size = 0;

  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // optional string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MESExchangeKeyDeliverNotifyAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESExchangeKeyDeliverNotifyAck*>(&from));
}

void MESExchangeKeyDeliverNotifyAck::MergeFrom(const MESExchangeKeyDeliverNotifyAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESExchangeKeyDeliverNotifyAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
}

void MESExchangeKeyDeliverNotifyAck::CopyFrom(const MESExchangeKeyDeliverNotifyAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESExchangeKeyDeliverNotifyAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESExchangeKeyDeliverNotifyAck::IsInitialized() const {

  return true;
}

void MESExchangeKeyDeliverNotifyAck::Swap(MESExchangeKeyDeliverNotifyAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESExchangeKeyDeliverNotifyAck::InternalSwap(MESExchangeKeyDeliverNotifyAck* other) {
  suserid_.Swap(&other->suserid_);
  smsgid_.Swap(&other->smsgid_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string MESExchangeKeyDeliverNotifyAck::GetTypeName() const {
  return "im.MESExchangeKeyDeliverNotifyAck";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MESExchangeKeyDeliverNotifyAck

// optional string sUserId = 1;
void MESExchangeKeyDeliverNotifyAck::clear_suserid() {
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESExchangeKeyDeliverNotifyAck::suserid() const {
  // @@protoc_insertion_point(field_get:im.MESExchangeKeyDeliverNotifyAck.sUserId)
  return suserid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESExchangeKeyDeliverNotifyAck::set_suserid(const ::std::string& value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESExchangeKeyDeliverNotifyAck.sUserId)
}
 void MESExchangeKeyDeliverNotifyAck::set_suserid(const char* value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESExchangeKeyDeliverNotifyAck.sUserId)
}
 void MESExchangeKeyDeliverNotifyAck::set_suserid(const char* value, size_t size) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESExchangeKeyDeliverNotifyAck.sUserId)
}
 ::std::string* MESExchangeKeyDeliverNotifyAck::mutable_suserid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESExchangeKeyDeliverNotifyAck.sUserId)
  return suserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESExchangeKeyDeliverNotifyAck::release_suserid() {
  // @@protoc_insertion_point(field_release:im.MESExchangeKeyDeliverNotifyAck.sUserId)
  
  return suserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESExchangeKeyDeliverNotifyAck::set_allocated_suserid(::std::string* suserid) {
  if (suserid != NULL) {
    
  } else {
    
  }
  suserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), suserid);
  // @@protoc_insertion_point(field_set_allocated:im.MESExchangeKeyDeliverNotifyAck.sUserId)
}

// optional string sMsgId = 2;
void MESExchangeKeyDeliverNotifyAck::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESExchangeKeyDeliverNotifyAck::smsgid() const {
  // @@protoc_insertion_point(field_get:im.MESExchangeKeyDeliverNotifyAck.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESExchangeKeyDeliverNotifyAck::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESExchangeKeyDeliverNotifyAck.sMsgId)
}
 void MESExchangeKeyDeliverNotifyAck::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESExchangeKeyDeliverNotifyAck.sMsgId)
}
 void MESExchangeKeyDeliverNotifyAck::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESExchangeKeyDeliverNotifyAck.sMsgId)
}
 ::std::string* MESExchangeKeyDeliverNotifyAck::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESExchangeKeyDeliverNotifyAck.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESExchangeKeyDeliverNotifyAck::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.MESExchangeKeyDeliverNotifyAck.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESExchangeKeyDeliverNotifyAck::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.MESExchangeKeyDeliverNotifyAck.sMsgId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int _InnerGrpNotify::kSGrpIdFieldNumber;
const int _InnerGrpNotify::kLsToIdFieldNumber;
const int _InnerGrpNotify::kSMsgIdFieldNumber;
const int _InnerGrpNotify::kMsgTimeFieldNumber;
const int _InnerGrpNotify::kSOprUserIdFieldNumber;
const int _InnerGrpNotify::kSMnpledUserIdFieldNumber;
const int _InnerGrpNotify::kSContentFieldNumber;
const int _InnerGrpNotify::kNotifyTypeFieldNumber;
const int _InnerGrpNotify::kErrcodeFieldNumber;
const int _InnerGrpNotify::kExtendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

_InnerGrpNotify::_InnerGrpNotify()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im._InnerGrpNotify)
}

void _InnerGrpNotify::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

_InnerGrpNotify::_InnerGrpNotify(const _InnerGrpNotify& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im._InnerGrpNotify)
}

void _InnerGrpNotify::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgtime_ = GOOGLE_ULONGLONG(0);
  sopruserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  notifytype_ = 0;
  errcode_ = 0;
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

_InnerGrpNotify::~_InnerGrpNotify() {
  // @@protoc_insertion_point(destructor:im._InnerGrpNotify)
  SharedDtor();
}

void _InnerGrpNotify::SharedDtor() {
  sgrpid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sopruserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void _InnerGrpNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const _InnerGrpNotify& _InnerGrpNotify::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

_InnerGrpNotify* _InnerGrpNotify::default_instance_ = NULL;

_InnerGrpNotify* _InnerGrpNotify::New(::google::protobuf::Arena* arena) const {
  _InnerGrpNotify* n = new _InnerGrpNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void _InnerGrpNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:im._InnerGrpNotify)
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgtime_ = GOOGLE_ULONGLONG(0);
  sopruserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  notifytype_ = 0;
  errcode_ = 0;
  extend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lstoid_.Clear();
  smnpleduserid_.Clear();
}

bool _InnerGrpNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im._InnerGrpNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sGrpId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgrpid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgrpid().data(), this->sgrpid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._InnerGrpNotify.sGrpId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_lsToId;
        break;
      }

      // repeated string lsToId = 2;
      case 2: {
        if (tag == 18) {
         parse_lsToId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_lstoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->lstoid(this->lstoid_size() - 1).data(),
            this->lstoid(this->lstoid_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._InnerGrpNotify.lsToId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_lsToId;
        if (input->ExpectTag(26)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 3;
      case 3: {
        if (tag == 26) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._InnerGrpNotify.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_msgTime;
        break;
      }

      // optional uint64 msgTime = 4;
      case 4: {
        if (tag == 32) {
         parse_msgTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_sOprUserId;
        break;
      }

      // optional string sOprUserId = 5;
      case 5: {
        if (tag == 42) {
         parse_sOprUserId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sopruserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sopruserid().data(), this->sopruserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._InnerGrpNotify.sOprUserId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_sMnpledUserId;
        break;
      }

      // repeated string sMnpledUserId = 6;
      case 6: {
        if (tag == 50) {
         parse_sMnpledUserId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_smnpleduserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smnpleduserid(this->smnpleduserid_size() - 1).data(),
            this->smnpleduserid(this->smnpleduserid_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._InnerGrpNotify.sMnpledUserId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_sMnpledUserId;
        if (input->ExpectTag(58)) goto parse_sContent;
        break;
      }

      // optional string sContent = 7;
      case 7: {
        if (tag == 58) {
         parse_sContent:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scontent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scontent().data(), this->scontent().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._InnerGrpNotify.sContent"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_notifyType;
        break;
      }

      // optional .im.NotifyType notifyType = 8;
      case 8: {
        if (tag == 64) {
         parse_notifyType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_notifytype(static_cast< ::im::NotifyType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_errcode;
        break;
      }

      // optional .im.ErrCode errcode = 9;
      case 9: {
        if (tag == 72) {
         parse_errcode:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_extend;
        break;
      }

      // optional string extend = 10;
      case 10: {
        if (tag == 82) {
         parse_extend:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extend()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extend().data(), this->extend().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._InnerGrpNotify.extend"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im._InnerGrpNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im._InnerGrpNotify)
  return false;
#undef DO_
}

void _InnerGrpNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im._InnerGrpNotify)
  // optional string sGrpId = 1;
  if (this->sgrpid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgrpid().data(), this->sgrpid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._InnerGrpNotify.sGrpId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sgrpid(), output);
  }

  // repeated string lsToId = 2;
  for (int i = 0; i < this->lstoid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lstoid(i).data(), this->lstoid(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._InnerGrpNotify.lsToId");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->lstoid(i), output);
  }

  // optional string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._InnerGrpNotify.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // optional uint64 msgTime = 4;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->msgtime(), output);
  }

  // optional string sOprUserId = 5;
  if (this->sopruserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sopruserid().data(), this->sopruserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._InnerGrpNotify.sOprUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->sopruserid(), output);
  }

  // repeated string sMnpledUserId = 6;
  for (int i = 0; i < this->smnpleduserid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smnpleduserid(i).data(), this->smnpleduserid(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._InnerGrpNotify.sMnpledUserId");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->smnpleduserid(i), output);
  }

  // optional string sContent = 7;
  if (this->scontent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scontent().data(), this->scontent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._InnerGrpNotify.sContent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->scontent(), output);
  }

  // optional .im.NotifyType notifyType = 8;
  if (this->notifytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->notifytype(), output);
  }

  // optional .im.ErrCode errcode = 9;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->errcode(), output);
  }

  // optional string extend = 10;
  if (this->extend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extend().data(), this->extend().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._InnerGrpNotify.extend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->extend(), output);
  }

  // @@protoc_insertion_point(serialize_end:im._InnerGrpNotify)
}

int _InnerGrpNotify::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im._InnerGrpNotify)
  int total_size = 0;

  // optional string sGrpId = 1;
  if (this->sgrpid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgrpid());
  }

  // optional string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // optional uint64 msgTime = 4;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // optional string sOprUserId = 5;
  if (this->sopruserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sopruserid());
  }

  // optional string sContent = 7;
  if (this->scontent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scontent());
  }

  // optional .im.NotifyType notifyType = 8;
  if (this->notifytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->notifytype());
  }

  // optional .im.ErrCode errcode = 9;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  // optional string extend = 10;
  if (this->extend().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extend());
  }

  // repeated string lsToId = 2;
  total_size += 1 * this->lstoid_size();
  for (int i = 0; i < this->lstoid_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->lstoid(i));
  }

  // repeated string sMnpledUserId = 6;
  total_size += 1 * this->smnpleduserid_size();
  for (int i = 0; i < this->smnpleduserid_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->smnpleduserid(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void _InnerGrpNotify::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const _InnerGrpNotify*>(&from));
}

void _InnerGrpNotify::MergeFrom(const _InnerGrpNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im._InnerGrpNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  lstoid_.MergeFrom(from.lstoid_);
  smnpleduserid_.MergeFrom(from.smnpleduserid_);
  if (from.sgrpid().size() > 0) {

    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.sopruserid().size() > 0) {

    sopruserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sopruserid_);
  }
  if (from.scontent().size() > 0) {

    scontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scontent_);
  }
  if (from.notifytype() != 0) {
    set_notifytype(from.notifytype());
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
  if (from.extend().size() > 0) {

    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
}

void _InnerGrpNotify::CopyFrom(const _InnerGrpNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im._InnerGrpNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool _InnerGrpNotify::IsInitialized() const {

  return true;
}

void _InnerGrpNotify::Swap(_InnerGrpNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void _InnerGrpNotify::InternalSwap(_InnerGrpNotify* other) {
  sgrpid_.Swap(&other->sgrpid_);
  lstoid_.UnsafeArenaSwap(&other->lstoid_);
  smsgid_.Swap(&other->smsgid_);
  std::swap(msgtime_, other->msgtime_);
  sopruserid_.Swap(&other->sopruserid_);
  smnpleduserid_.UnsafeArenaSwap(&other->smnpleduserid_);
  scontent_.Swap(&other->scontent_);
  std::swap(notifytype_, other->notifytype_);
  std::swap(errcode_, other->errcode_);
  extend_.Swap(&other->extend_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string _InnerGrpNotify::GetTypeName() const {
  return "im._InnerGrpNotify";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// _InnerGrpNotify

// optional string sGrpId = 1;
void _InnerGrpNotify::clear_sgrpid() {
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& _InnerGrpNotify::sgrpid() const {
  // @@protoc_insertion_point(field_get:im._InnerGrpNotify.sGrpId)
  return sgrpid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void _InnerGrpNotify::set_sgrpid(const ::std::string& value) {
  
  sgrpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im._InnerGrpNotify.sGrpId)
}
 void _InnerGrpNotify::set_sgrpid(const char* value) {
  
  sgrpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im._InnerGrpNotify.sGrpId)
}
 void _InnerGrpNotify::set_sgrpid(const char* value, size_t size) {
  
  sgrpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im._InnerGrpNotify.sGrpId)
}
 ::std::string* _InnerGrpNotify::mutable_sgrpid() {
  
  // @@protoc_insertion_point(field_mutable:im._InnerGrpNotify.sGrpId)
  return sgrpid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* _InnerGrpNotify::release_sgrpid() {
  // @@protoc_insertion_point(field_release:im._InnerGrpNotify.sGrpId)
  
  return sgrpid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void _InnerGrpNotify::set_allocated_sgrpid(::std::string* sgrpid) {
  if (sgrpid != NULL) {
    
  } else {
    
  }
  sgrpid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sgrpid);
  // @@protoc_insertion_point(field_set_allocated:im._InnerGrpNotify.sGrpId)
}

// repeated string lsToId = 2;
int _InnerGrpNotify::lstoid_size() const {
  return lstoid_.size();
}
void _InnerGrpNotify::clear_lstoid() {
  lstoid_.Clear();
}
 const ::std::string& _InnerGrpNotify::lstoid(int index) const {
  // @@protoc_insertion_point(field_get:im._InnerGrpNotify.lsToId)
  return lstoid_.Get(index);
}
 ::std::string* _InnerGrpNotify::mutable_lstoid(int index) {
  // @@protoc_insertion_point(field_mutable:im._InnerGrpNotify.lsToId)
  return lstoid_.Mutable(index);
}
 void _InnerGrpNotify::set_lstoid(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:im._InnerGrpNotify.lsToId)
  lstoid_.Mutable(index)->assign(value);
}
 void _InnerGrpNotify::set_lstoid(int index, const char* value) {
  lstoid_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:im._InnerGrpNotify.lsToId)
}
 void _InnerGrpNotify::set_lstoid(int index, const char* value, size_t size) {
  lstoid_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:im._InnerGrpNotify.lsToId)
}
 ::std::string* _InnerGrpNotify::add_lstoid() {
  // @@protoc_insertion_point(field_add_mutable:im._InnerGrpNotify.lsToId)
  return lstoid_.Add();
}
 void _InnerGrpNotify::add_lstoid(const ::std::string& value) {
  lstoid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:im._InnerGrpNotify.lsToId)
}
 void _InnerGrpNotify::add_lstoid(const char* value) {
  lstoid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:im._InnerGrpNotify.lsToId)
}
 void _InnerGrpNotify::add_lstoid(const char* value, size_t size) {
  lstoid_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:im._InnerGrpNotify.lsToId)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
_InnerGrpNotify::lstoid() const {
  // @@protoc_insertion_point(field_list:im._InnerGrpNotify.lsToId)
  return lstoid_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
_InnerGrpNotify::mutable_lstoid() {
  // @@protoc_insertion_point(field_mutable_list:im._InnerGrpNotify.lsToId)
  return &lstoid_;
}

// optional string sMsgId = 3;
void _InnerGrpNotify::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& _InnerGrpNotify::smsgid() const {
  // @@protoc_insertion_point(field_get:im._InnerGrpNotify.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void _InnerGrpNotify::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im._InnerGrpNotify.sMsgId)
}
 void _InnerGrpNotify::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im._InnerGrpNotify.sMsgId)
}
 void _InnerGrpNotify::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im._InnerGrpNotify.sMsgId)
}
 ::std::string* _InnerGrpNotify::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im._InnerGrpNotify.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* _InnerGrpNotify::release_smsgid() {
  // @@protoc_insertion_point(field_release:im._InnerGrpNotify.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void _InnerGrpNotify::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im._InnerGrpNotify.sMsgId)
}

// optional uint64 msgTime = 4;
void _InnerGrpNotify::clear_msgtime() {
  msgtime_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 _InnerGrpNotify::msgtime() const {
  // @@protoc_insertion_point(field_get:im._InnerGrpNotify.msgTime)
  return msgtime_;
}
 void _InnerGrpNotify::set_msgtime(::google::protobuf::uint64 value) {
  
  msgtime_ = value;
  // @@protoc_insertion_point(field_set:im._InnerGrpNotify.msgTime)
}

// optional string sOprUserId = 5;
void _InnerGrpNotify::clear_sopruserid() {
  sopruserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& _InnerGrpNotify::sopruserid() const {
  // @@protoc_insertion_point(field_get:im._InnerGrpNotify.sOprUserId)
  return sopruserid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void _InnerGrpNotify::set_sopruserid(const ::std::string& value) {
  
  sopruserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im._InnerGrpNotify.sOprUserId)
}
 void _InnerGrpNotify::set_sopruserid(const char* value) {
  
  sopruserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im._InnerGrpNotify.sOprUserId)
}
 void _InnerGrpNotify::set_sopruserid(const char* value, size_t size) {
  
  sopruserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im._InnerGrpNotify.sOprUserId)
}
 ::std::string* _InnerGrpNotify::mutable_sopruserid() {
  
  // @@protoc_insertion_point(field_mutable:im._InnerGrpNotify.sOprUserId)
  return sopruserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* _InnerGrpNotify::release_sopruserid() {
  // @@protoc_insertion_point(field_release:im._InnerGrpNotify.sOprUserId)
  
  return sopruserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void _InnerGrpNotify::set_allocated_sopruserid(::std::string* sopruserid) {
  if (sopruserid != NULL) {
    
  } else {
    
  }
  sopruserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sopruserid);
  // @@protoc_insertion_point(field_set_allocated:im._InnerGrpNotify.sOprUserId)
}

// repeated string sMnpledUserId = 6;
int _InnerGrpNotify::smnpleduserid_size() const {
  return smnpleduserid_.size();
}
void _InnerGrpNotify::clear_smnpleduserid() {
  smnpleduserid_.Clear();
}
 const ::std::string& _InnerGrpNotify::smnpleduserid(int index) const {
  // @@protoc_insertion_point(field_get:im._InnerGrpNotify.sMnpledUserId)
  return smnpleduserid_.Get(index);
}
 ::std::string* _InnerGrpNotify::mutable_smnpleduserid(int index) {
  // @@protoc_insertion_point(field_mutable:im._InnerGrpNotify.sMnpledUserId)
  return smnpleduserid_.Mutable(index);
}
 void _InnerGrpNotify::set_smnpleduserid(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:im._InnerGrpNotify.sMnpledUserId)
  smnpleduserid_.Mutable(index)->assign(value);
}
 void _InnerGrpNotify::set_smnpleduserid(int index, const char* value) {
  smnpleduserid_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:im._InnerGrpNotify.sMnpledUserId)
}
 void _InnerGrpNotify::set_smnpleduserid(int index, const char* value, size_t size) {
  smnpleduserid_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:im._InnerGrpNotify.sMnpledUserId)
}
 ::std::string* _InnerGrpNotify::add_smnpleduserid() {
  // @@protoc_insertion_point(field_add_mutable:im._InnerGrpNotify.sMnpledUserId)
  return smnpleduserid_.Add();
}
 void _InnerGrpNotify::add_smnpleduserid(const ::std::string& value) {
  smnpleduserid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:im._InnerGrpNotify.sMnpledUserId)
}
 void _InnerGrpNotify::add_smnpleduserid(const char* value) {
  smnpleduserid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:im._InnerGrpNotify.sMnpledUserId)
}
 void _InnerGrpNotify::add_smnpleduserid(const char* value, size_t size) {
  smnpleduserid_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:im._InnerGrpNotify.sMnpledUserId)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
_InnerGrpNotify::smnpleduserid() const {
  // @@protoc_insertion_point(field_list:im._InnerGrpNotify.sMnpledUserId)
  return smnpleduserid_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
_InnerGrpNotify::mutable_smnpleduserid() {
  // @@protoc_insertion_point(field_mutable_list:im._InnerGrpNotify.sMnpledUserId)
  return &smnpleduserid_;
}

// optional string sContent = 7;
void _InnerGrpNotify::clear_scontent() {
  scontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& _InnerGrpNotify::scontent() const {
  // @@protoc_insertion_point(field_get:im._InnerGrpNotify.sContent)
  return scontent_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void _InnerGrpNotify::set_scontent(const ::std::string& value) {
  
  scontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im._InnerGrpNotify.sContent)
}
 void _InnerGrpNotify::set_scontent(const char* value) {
  
  scontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im._InnerGrpNotify.sContent)
}
 void _InnerGrpNotify::set_scontent(const char* value, size_t size) {
  
  scontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im._InnerGrpNotify.sContent)
}
 ::std::string* _InnerGrpNotify::mutable_scontent() {
  
  // @@protoc_insertion_point(field_mutable:im._InnerGrpNotify.sContent)
  return scontent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* _InnerGrpNotify::release_scontent() {
  // @@protoc_insertion_point(field_release:im._InnerGrpNotify.sContent)
  
  return scontent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void _InnerGrpNotify::set_allocated_scontent(::std::string* scontent) {
  if (scontent != NULL) {
    
  } else {
    
  }
  scontent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scontent);
  // @@protoc_insertion_point(field_set_allocated:im._InnerGrpNotify.sContent)
}

// optional .im.NotifyType notifyType = 8;
void _InnerGrpNotify::clear_notifytype() {
  notifytype_ = 0;
}
 ::im::NotifyType _InnerGrpNotify::notifytype() const {
  // @@protoc_insertion_point(field_get:im._InnerGrpNotify.notifyType)
  return static_cast< ::im::NotifyType >(notifytype_);
}
 void _InnerGrpNotify::set_notifytype(::im::NotifyType value) {
  
  notifytype_ = value;
  // @@protoc_insertion_point(field_set:im._InnerGrpNotify.notifyType)
}

// optional .im.ErrCode errcode = 9;
void _InnerGrpNotify::clear_errcode() {
  errcode_ = 0;
}
 ::im::ErrCode _InnerGrpNotify::errcode() const {
  // @@protoc_insertion_point(field_get:im._InnerGrpNotify.errcode)
  return static_cast< ::im::ErrCode >(errcode_);
}
 void _InnerGrpNotify::set_errcode(::im::ErrCode value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:im._InnerGrpNotify.errcode)
}

// optional string extend = 10;
void _InnerGrpNotify::clear_extend() {
  extend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& _InnerGrpNotify::extend() const {
  // @@protoc_insertion_point(field_get:im._InnerGrpNotify.extend)
  return extend_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void _InnerGrpNotify::set_extend(const ::std::string& value) {
  
  extend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im._InnerGrpNotify.extend)
}
 void _InnerGrpNotify::set_extend(const char* value) {
  
  extend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im._InnerGrpNotify.extend)
}
 void _InnerGrpNotify::set_extend(const char* value, size_t size) {
  
  extend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im._InnerGrpNotify.extend)
}
 ::std::string* _InnerGrpNotify::mutable_extend() {
  
  // @@protoc_insertion_point(field_mutable:im._InnerGrpNotify.extend)
  return extend_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* _InnerGrpNotify::release_extend() {
  // @@protoc_insertion_point(field_release:im._InnerGrpNotify.extend)
  
  return extend_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void _InnerGrpNotify::set_allocated_extend(::std::string* extend) {
  if (extend != NULL) {
    
  } else {
    
  }
  extend_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extend);
  // @@protoc_insertion_point(field_set_allocated:im._InnerGrpNotify.extend)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int _MESGrpInterNotify::kSGrpIdFieldNumber;
const int _MESGrpInterNotify::kSToIdFieldNumber;
const int _MESGrpInterNotify::kSMsgIdFieldNumber;
const int _MESGrpInterNotify::kMsgTimeFieldNumber;
const int _MESGrpInterNotify::kSOprUserIdFieldNumber;
const int _MESGrpInterNotify::kSMnpledUserIdFieldNumber;
const int _MESGrpInterNotify::kSContentFieldNumber;
const int _MESGrpInterNotify::kNotifyTypeFieldNumber;
const int _MESGrpInterNotify::kErrcodeFieldNumber;
const int _MESGrpInterNotify::kExtendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

_MESGrpInterNotify::_MESGrpInterNotify()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im._MESGrpInterNotify)
}

void _MESGrpInterNotify::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

_MESGrpInterNotify::_MESGrpInterNotify(const _MESGrpInterNotify& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im._MESGrpInterNotify)
}

void _MESGrpInterNotify::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgtime_ = GOOGLE_ULONGLONG(0);
  sopruserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  notifytype_ = 0;
  errcode_ = 0;
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

_MESGrpInterNotify::~_MESGrpInterNotify() {
  // @@protoc_insertion_point(destructor:im._MESGrpInterNotify)
  SharedDtor();
}

void _MESGrpInterNotify::SharedDtor() {
  sgrpid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sopruserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void _MESGrpInterNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const _MESGrpInterNotify& _MESGrpInterNotify::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

_MESGrpInterNotify* _MESGrpInterNotify::default_instance_ = NULL;

_MESGrpInterNotify* _MESGrpInterNotify::New(::google::protobuf::Arena* arena) const {
  _MESGrpInterNotify* n = new _MESGrpInterNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void _MESGrpInterNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:im._MESGrpInterNotify)
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgtime_ = GOOGLE_ULONGLONG(0);
  sopruserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  notifytype_ = 0;
  errcode_ = 0;
  extend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.Clear();
  smnpleduserid_.Clear();
}

bool _MESGrpInterNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im._MESGrpInterNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sGrpId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgrpid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgrpid().data(), this->sgrpid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._MESGrpInterNotify.sGrpId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sToId;
        break;
      }

      // repeated string sToId = 2;
      case 2: {
        if (tag == 18) {
         parse_sToId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid(this->stoid_size() - 1).data(),
            this->stoid(this->stoid_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._MESGrpInterNotify.sToId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sToId;
        if (input->ExpectTag(26)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 3;
      case 3: {
        if (tag == 26) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._MESGrpInterNotify.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_msgTime;
        break;
      }

      // optional uint64 msgTime = 4;
      case 4: {
        if (tag == 32) {
         parse_msgTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_sOprUserId;
        break;
      }

      // optional string sOprUserId = 5;
      case 5: {
        if (tag == 42) {
         parse_sOprUserId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sopruserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sopruserid().data(), this->sopruserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._MESGrpInterNotify.sOprUserId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_sMnpledUserId;
        break;
      }

      // repeated string sMnpledUserId = 6;
      case 6: {
        if (tag == 50) {
         parse_sMnpledUserId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_smnpleduserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smnpleduserid(this->smnpleduserid_size() - 1).data(),
            this->smnpleduserid(this->smnpleduserid_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._MESGrpInterNotify.sMnpledUserId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_sMnpledUserId;
        if (input->ExpectTag(58)) goto parse_sContent;
        break;
      }

      // optional string sContent = 7;
      case 7: {
        if (tag == 58) {
         parse_sContent:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scontent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scontent().data(), this->scontent().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._MESGrpInterNotify.sContent"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_notifyType;
        break;
      }

      // optional .im.NotifyType notifyType = 8;
      case 8: {
        if (tag == 64) {
         parse_notifyType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_notifytype(static_cast< ::im::NotifyType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_errcode;
        break;
      }

      // optional .im.ErrCode errcode = 9;
      case 9: {
        if (tag == 72) {
         parse_errcode:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_extend;
        break;
      }

      // optional string extend = 10;
      case 10: {
        if (tag == 82) {
         parse_extend:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extend()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extend().data(), this->extend().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._MESGrpInterNotify.extend"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im._MESGrpInterNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im._MESGrpInterNotify)
  return false;
#undef DO_
}

void _MESGrpInterNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im._MESGrpInterNotify)
  // optional string sGrpId = 1;
  if (this->sgrpid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgrpid().data(), this->sgrpid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._MESGrpInterNotify.sGrpId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sgrpid(), output);
  }

  // repeated string sToId = 2;
  for (int i = 0; i < this->stoid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid(i).data(), this->stoid(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._MESGrpInterNotify.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->stoid(i), output);
  }

  // optional string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._MESGrpInterNotify.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // optional uint64 msgTime = 4;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->msgtime(), output);
  }

  // optional string sOprUserId = 5;
  if (this->sopruserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sopruserid().data(), this->sopruserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._MESGrpInterNotify.sOprUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->sopruserid(), output);
  }

  // repeated string sMnpledUserId = 6;
  for (int i = 0; i < this->smnpleduserid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smnpleduserid(i).data(), this->smnpleduserid(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._MESGrpInterNotify.sMnpledUserId");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->smnpleduserid(i), output);
  }

  // optional string sContent = 7;
  if (this->scontent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scontent().data(), this->scontent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._MESGrpInterNotify.sContent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->scontent(), output);
  }

  // optional .im.NotifyType notifyType = 8;
  if (this->notifytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->notifytype(), output);
  }

  // optional .im.ErrCode errcode = 9;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->errcode(), output);
  }

  // optional string extend = 10;
  if (this->extend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extend().data(), this->extend().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._MESGrpInterNotify.extend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->extend(), output);
  }

  // @@protoc_insertion_point(serialize_end:im._MESGrpInterNotify)
}

int _MESGrpInterNotify::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im._MESGrpInterNotify)
  int total_size = 0;

  // optional string sGrpId = 1;
  if (this->sgrpid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgrpid());
  }

  // optional string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // optional uint64 msgTime = 4;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // optional string sOprUserId = 5;
  if (this->sopruserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sopruserid());
  }

  // optional string sContent = 7;
  if (this->scontent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scontent());
  }

  // optional .im.NotifyType notifyType = 8;
  if (this->notifytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->notifytype());
  }

  // optional .im.ErrCode errcode = 9;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  // optional string extend = 10;
  if (this->extend().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extend());
  }

  // repeated string sToId = 2;
  total_size += 1 * this->stoid_size();
  for (int i = 0; i < this->stoid_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->stoid(i));
  }

  // repeated string sMnpledUserId = 6;
  total_size += 1 * this->smnpleduserid_size();
  for (int i = 0; i < this->smnpleduserid_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->smnpleduserid(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void _MESGrpInterNotify::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const _MESGrpInterNotify*>(&from));
}

void _MESGrpInterNotify::MergeFrom(const _MESGrpInterNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im._MESGrpInterNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  stoid_.MergeFrom(from.stoid_);
  smnpleduserid_.MergeFrom(from.smnpleduserid_);
  if (from.sgrpid().size() > 0) {

    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.sopruserid().size() > 0) {

    sopruserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sopruserid_);
  }
  if (from.scontent().size() > 0) {

    scontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scontent_);
  }
  if (from.notifytype() != 0) {
    set_notifytype(from.notifytype());
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
  if (from.extend().size() > 0) {

    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
}

void _MESGrpInterNotify::CopyFrom(const _MESGrpInterNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im._MESGrpInterNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool _MESGrpInterNotify::IsInitialized() const {

  return true;
}

void _MESGrpInterNotify::Swap(_MESGrpInterNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void _MESGrpInterNotify::InternalSwap(_MESGrpInterNotify* other) {
  sgrpid_.Swap(&other->sgrpid_);
  stoid_.UnsafeArenaSwap(&other->stoid_);
  smsgid_.Swap(&other->smsgid_);
  std::swap(msgtime_, other->msgtime_);
  sopruserid_.Swap(&other->sopruserid_);
  smnpleduserid_.UnsafeArenaSwap(&other->smnpleduserid_);
  scontent_.Swap(&other->scontent_);
  std::swap(notifytype_, other->notifytype_);
  std::swap(errcode_, other->errcode_);
  extend_.Swap(&other->extend_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string _MESGrpInterNotify::GetTypeName() const {
  return "im._MESGrpInterNotify";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// _MESGrpInterNotify

// optional string sGrpId = 1;
void _MESGrpInterNotify::clear_sgrpid() {
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& _MESGrpInterNotify::sgrpid() const {
  // @@protoc_insertion_point(field_get:im._MESGrpInterNotify.sGrpId)
  return sgrpid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void _MESGrpInterNotify::set_sgrpid(const ::std::string& value) {
  
  sgrpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im._MESGrpInterNotify.sGrpId)
}
 void _MESGrpInterNotify::set_sgrpid(const char* value) {
  
  sgrpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im._MESGrpInterNotify.sGrpId)
}
 void _MESGrpInterNotify::set_sgrpid(const char* value, size_t size) {
  
  sgrpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im._MESGrpInterNotify.sGrpId)
}
 ::std::string* _MESGrpInterNotify::mutable_sgrpid() {
  
  // @@protoc_insertion_point(field_mutable:im._MESGrpInterNotify.sGrpId)
  return sgrpid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* _MESGrpInterNotify::release_sgrpid() {
  // @@protoc_insertion_point(field_release:im._MESGrpInterNotify.sGrpId)
  
  return sgrpid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void _MESGrpInterNotify::set_allocated_sgrpid(::std::string* sgrpid) {
  if (sgrpid != NULL) {
    
  } else {
    
  }
  sgrpid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sgrpid);
  // @@protoc_insertion_point(field_set_allocated:im._MESGrpInterNotify.sGrpId)
}

// repeated string sToId = 2;
int _MESGrpInterNotify::stoid_size() const {
  return stoid_.size();
}
void _MESGrpInterNotify::clear_stoid() {
  stoid_.Clear();
}
 const ::std::string& _MESGrpInterNotify::stoid(int index) const {
  // @@protoc_insertion_point(field_get:im._MESGrpInterNotify.sToId)
  return stoid_.Get(index);
}
 ::std::string* _MESGrpInterNotify::mutable_stoid(int index) {
  // @@protoc_insertion_point(field_mutable:im._MESGrpInterNotify.sToId)
  return stoid_.Mutable(index);
}
 void _MESGrpInterNotify::set_stoid(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:im._MESGrpInterNotify.sToId)
  stoid_.Mutable(index)->assign(value);
}
 void _MESGrpInterNotify::set_stoid(int index, const char* value) {
  stoid_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:im._MESGrpInterNotify.sToId)
}
 void _MESGrpInterNotify::set_stoid(int index, const char* value, size_t size) {
  stoid_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:im._MESGrpInterNotify.sToId)
}
 ::std::string* _MESGrpInterNotify::add_stoid() {
  // @@protoc_insertion_point(field_add_mutable:im._MESGrpInterNotify.sToId)
  return stoid_.Add();
}
 void _MESGrpInterNotify::add_stoid(const ::std::string& value) {
  stoid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:im._MESGrpInterNotify.sToId)
}
 void _MESGrpInterNotify::add_stoid(const char* value) {
  stoid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:im._MESGrpInterNotify.sToId)
}
 void _MESGrpInterNotify::add_stoid(const char* value, size_t size) {
  stoid_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:im._MESGrpInterNotify.sToId)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
_MESGrpInterNotify::stoid() const {
  // @@protoc_insertion_point(field_list:im._MESGrpInterNotify.sToId)
  return stoid_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
_MESGrpInterNotify::mutable_stoid() {
  // @@protoc_insertion_point(field_mutable_list:im._MESGrpInterNotify.sToId)
  return &stoid_;
}

// optional string sMsgId = 3;
void _MESGrpInterNotify::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& _MESGrpInterNotify::smsgid() const {
  // @@protoc_insertion_point(field_get:im._MESGrpInterNotify.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void _MESGrpInterNotify::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im._MESGrpInterNotify.sMsgId)
}
 void _MESGrpInterNotify::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im._MESGrpInterNotify.sMsgId)
}
 void _MESGrpInterNotify::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im._MESGrpInterNotify.sMsgId)
}
 ::std::string* _MESGrpInterNotify::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im._MESGrpInterNotify.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* _MESGrpInterNotify::release_smsgid() {
  // @@protoc_insertion_point(field_release:im._MESGrpInterNotify.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void _MESGrpInterNotify::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im._MESGrpInterNotify.sMsgId)
}

// optional uint64 msgTime = 4;
void _MESGrpInterNotify::clear_msgtime() {
  msgtime_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 _MESGrpInterNotify::msgtime() const {
  // @@protoc_insertion_point(field_get:im._MESGrpInterNotify.msgTime)
  return msgtime_;
}
 void _MESGrpInterNotify::set_msgtime(::google::protobuf::uint64 value) {
  
  msgtime_ = value;
  // @@protoc_insertion_point(field_set:im._MESGrpInterNotify.msgTime)
}

// optional string sOprUserId = 5;
void _MESGrpInterNotify::clear_sopruserid() {
  sopruserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& _MESGrpInterNotify::sopruserid() const {
  // @@protoc_insertion_point(field_get:im._MESGrpInterNotify.sOprUserId)
  return sopruserid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void _MESGrpInterNotify::set_sopruserid(const ::std::string& value) {
  
  sopruserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im._MESGrpInterNotify.sOprUserId)
}
 void _MESGrpInterNotify::set_sopruserid(const char* value) {
  
  sopruserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im._MESGrpInterNotify.sOprUserId)
}
 void _MESGrpInterNotify::set_sopruserid(const char* value, size_t size) {
  
  sopruserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im._MESGrpInterNotify.sOprUserId)
}
 ::std::string* _MESGrpInterNotify::mutable_sopruserid() {
  
  // @@protoc_insertion_point(field_mutable:im._MESGrpInterNotify.sOprUserId)
  return sopruserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* _MESGrpInterNotify::release_sopruserid() {
  // @@protoc_insertion_point(field_release:im._MESGrpInterNotify.sOprUserId)
  
  return sopruserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void _MESGrpInterNotify::set_allocated_sopruserid(::std::string* sopruserid) {
  if (sopruserid != NULL) {
    
  } else {
    
  }
  sopruserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sopruserid);
  // @@protoc_insertion_point(field_set_allocated:im._MESGrpInterNotify.sOprUserId)
}

// repeated string sMnpledUserId = 6;
int _MESGrpInterNotify::smnpleduserid_size() const {
  return smnpleduserid_.size();
}
void _MESGrpInterNotify::clear_smnpleduserid() {
  smnpleduserid_.Clear();
}
 const ::std::string& _MESGrpInterNotify::smnpleduserid(int index) const {
  // @@protoc_insertion_point(field_get:im._MESGrpInterNotify.sMnpledUserId)
  return smnpleduserid_.Get(index);
}
 ::std::string* _MESGrpInterNotify::mutable_smnpleduserid(int index) {
  // @@protoc_insertion_point(field_mutable:im._MESGrpInterNotify.sMnpledUserId)
  return smnpleduserid_.Mutable(index);
}
 void _MESGrpInterNotify::set_smnpleduserid(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:im._MESGrpInterNotify.sMnpledUserId)
  smnpleduserid_.Mutable(index)->assign(value);
}
 void _MESGrpInterNotify::set_smnpleduserid(int index, const char* value) {
  smnpleduserid_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:im._MESGrpInterNotify.sMnpledUserId)
}
 void _MESGrpInterNotify::set_smnpleduserid(int index, const char* value, size_t size) {
  smnpleduserid_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:im._MESGrpInterNotify.sMnpledUserId)
}
 ::std::string* _MESGrpInterNotify::add_smnpleduserid() {
  // @@protoc_insertion_point(field_add_mutable:im._MESGrpInterNotify.sMnpledUserId)
  return smnpleduserid_.Add();
}
 void _MESGrpInterNotify::add_smnpleduserid(const ::std::string& value) {
  smnpleduserid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:im._MESGrpInterNotify.sMnpledUserId)
}
 void _MESGrpInterNotify::add_smnpleduserid(const char* value) {
  smnpleduserid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:im._MESGrpInterNotify.sMnpledUserId)
}
 void _MESGrpInterNotify::add_smnpleduserid(const char* value, size_t size) {
  smnpleduserid_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:im._MESGrpInterNotify.sMnpledUserId)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
_MESGrpInterNotify::smnpleduserid() const {
  // @@protoc_insertion_point(field_list:im._MESGrpInterNotify.sMnpledUserId)
  return smnpleduserid_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
_MESGrpInterNotify::mutable_smnpleduserid() {
  // @@protoc_insertion_point(field_mutable_list:im._MESGrpInterNotify.sMnpledUserId)
  return &smnpleduserid_;
}

// optional string sContent = 7;
void _MESGrpInterNotify::clear_scontent() {
  scontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& _MESGrpInterNotify::scontent() const {
  // @@protoc_insertion_point(field_get:im._MESGrpInterNotify.sContent)
  return scontent_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void _MESGrpInterNotify::set_scontent(const ::std::string& value) {
  
  scontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im._MESGrpInterNotify.sContent)
}
 void _MESGrpInterNotify::set_scontent(const char* value) {
  
  scontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im._MESGrpInterNotify.sContent)
}
 void _MESGrpInterNotify::set_scontent(const char* value, size_t size) {
  
  scontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im._MESGrpInterNotify.sContent)
}
 ::std::string* _MESGrpInterNotify::mutable_scontent() {
  
  // @@protoc_insertion_point(field_mutable:im._MESGrpInterNotify.sContent)
  return scontent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* _MESGrpInterNotify::release_scontent() {
  // @@protoc_insertion_point(field_release:im._MESGrpInterNotify.sContent)
  
  return scontent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void _MESGrpInterNotify::set_allocated_scontent(::std::string* scontent) {
  if (scontent != NULL) {
    
  } else {
    
  }
  scontent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scontent);
  // @@protoc_insertion_point(field_set_allocated:im._MESGrpInterNotify.sContent)
}

// optional .im.NotifyType notifyType = 8;
void _MESGrpInterNotify::clear_notifytype() {
  notifytype_ = 0;
}
 ::im::NotifyType _MESGrpInterNotify::notifytype() const {
  // @@protoc_insertion_point(field_get:im._MESGrpInterNotify.notifyType)
  return static_cast< ::im::NotifyType >(notifytype_);
}
 void _MESGrpInterNotify::set_notifytype(::im::NotifyType value) {
  
  notifytype_ = value;
  // @@protoc_insertion_point(field_set:im._MESGrpInterNotify.notifyType)
}

// optional .im.ErrCode errcode = 9;
void _MESGrpInterNotify::clear_errcode() {
  errcode_ = 0;
}
 ::im::ErrCode _MESGrpInterNotify::errcode() const {
  // @@protoc_insertion_point(field_get:im._MESGrpInterNotify.errcode)
  return static_cast< ::im::ErrCode >(errcode_);
}
 void _MESGrpInterNotify::set_errcode(::im::ErrCode value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:im._MESGrpInterNotify.errcode)
}

// optional string extend = 10;
void _MESGrpInterNotify::clear_extend() {
  extend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& _MESGrpInterNotify::extend() const {
  // @@protoc_insertion_point(field_get:im._MESGrpInterNotify.extend)
  return extend_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void _MESGrpInterNotify::set_extend(const ::std::string& value) {
  
  extend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im._MESGrpInterNotify.extend)
}
 void _MESGrpInterNotify::set_extend(const char* value) {
  
  extend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im._MESGrpInterNotify.extend)
}
 void _MESGrpInterNotify::set_extend(const char* value, size_t size) {
  
  extend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im._MESGrpInterNotify.extend)
}
 ::std::string* _MESGrpInterNotify::mutable_extend() {
  
  // @@protoc_insertion_point(field_mutable:im._MESGrpInterNotify.extend)
  return extend_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* _MESGrpInterNotify::release_extend() {
  // @@protoc_insertion_point(field_release:im._MESGrpInterNotify.extend)
  
  return extend_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void _MESGrpInterNotify::set_allocated_extend(::std::string* extend) {
  if (extend != NULL) {
    
  } else {
    
  }
  extend_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extend);
  // @@protoc_insertion_point(field_set_allocated:im._MESGrpInterNotify.extend)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int _MESGrpInterNotifyAck::kSUserIdFieldNumber;
const int _MESGrpInterNotifyAck::kSGrpIdFieldNumber;
const int _MESGrpInterNotifyAck::kSMsgIdFieldNumber;
const int _MESGrpInterNotifyAck::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

_MESGrpInterNotifyAck::_MESGrpInterNotifyAck()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im._MESGrpInterNotifyAck)
}

void _MESGrpInterNotifyAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

_MESGrpInterNotifyAck::_MESGrpInterNotifyAck(const _MESGrpInterNotifyAck& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im._MESGrpInterNotifyAck)
}

void _MESGrpInterNotifyAck::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

_MESGrpInterNotifyAck::~_MESGrpInterNotifyAck() {
  // @@protoc_insertion_point(destructor:im._MESGrpInterNotifyAck)
  SharedDtor();
}

void _MESGrpInterNotifyAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void _MESGrpInterNotifyAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const _MESGrpInterNotifyAck& _MESGrpInterNotifyAck::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

_MESGrpInterNotifyAck* _MESGrpInterNotifyAck::default_instance_ = NULL;

_MESGrpInterNotifyAck* _MESGrpInterNotifyAck::New(::google::protobuf::Arena* arena) const {
  _MESGrpInterNotifyAck* n = new _MESGrpInterNotifyAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void _MESGrpInterNotifyAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im._MESGrpInterNotifyAck)
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

bool _MESGrpInterNotifyAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im._MESGrpInterNotifyAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sUserId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), this->suserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._MESGrpInterNotifyAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sGrpId;
        break;
      }

      // optional string sGrpId = 2;
      case 2: {
        if (tag == 18) {
         parse_sGrpId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgrpid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgrpid().data(), this->sgrpid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._MESGrpInterNotifyAck.sGrpId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 3;
      case 3: {
        if (tag == 26) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._MESGrpInterNotifyAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_errcode;
        break;
      }

      // optional .im.ErrCode errcode = 4;
      case 4: {
        if (tag == 32) {
         parse_errcode:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im._MESGrpInterNotifyAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im._MESGrpInterNotifyAck)
  return false;
#undef DO_
}

void _MESGrpInterNotifyAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im._MESGrpInterNotifyAck)
  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), this->suserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._MESGrpInterNotifyAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // optional string sGrpId = 2;
  if (this->sgrpid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgrpid().data(), this->sgrpid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._MESGrpInterNotifyAck.sGrpId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sgrpid(), output);
  }

  // optional string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._MESGrpInterNotifyAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // optional .im.ErrCode errcode = 4;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->errcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:im._MESGrpInterNotifyAck)
}

int _MESGrpInterNotifyAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im._MESGrpInterNotifyAck)
  int total_size = 0;

  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // optional string sGrpId = 2;
  if (this->sgrpid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgrpid());
  }

  // optional string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // optional .im.ErrCode errcode = 4;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void _MESGrpInterNotifyAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const _MESGrpInterNotifyAck*>(&from));
}

void _MESGrpInterNotifyAck::MergeFrom(const _MESGrpInterNotifyAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im._MESGrpInterNotifyAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.sgrpid().size() > 0) {

    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void _MESGrpInterNotifyAck::CopyFrom(const _MESGrpInterNotifyAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im._MESGrpInterNotifyAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool _MESGrpInterNotifyAck::IsInitialized() const {

  return true;
}

void _MESGrpInterNotifyAck::Swap(_MESGrpInterNotifyAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void _MESGrpInterNotifyAck::InternalSwap(_MESGrpInterNotifyAck* other) {
  suserid_.Swap(&other->suserid_);
  sgrpid_.Swap(&other->sgrpid_);
  smsgid_.Swap(&other->smsgid_);
  std::swap(errcode_, other->errcode_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string _MESGrpInterNotifyAck::GetTypeName() const {
  return "im._MESGrpInterNotifyAck";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// _MESGrpInterNotifyAck

// optional string sUserId = 1;
void _MESGrpInterNotifyAck::clear_suserid() {
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& _MESGrpInterNotifyAck::suserid() const {
  // @@protoc_insertion_point(field_get:im._MESGrpInterNotifyAck.sUserId)
  return suserid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void _MESGrpInterNotifyAck::set_suserid(const ::std::string& value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im._MESGrpInterNotifyAck.sUserId)
}
 void _MESGrpInterNotifyAck::set_suserid(const char* value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im._MESGrpInterNotifyAck.sUserId)
}
 void _MESGrpInterNotifyAck::set_suserid(const char* value, size_t size) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im._MESGrpInterNotifyAck.sUserId)
}
 ::std::string* _MESGrpInterNotifyAck::mutable_suserid() {
  
  // @@protoc_insertion_point(field_mutable:im._MESGrpInterNotifyAck.sUserId)
  return suserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* _MESGrpInterNotifyAck::release_suserid() {
  // @@protoc_insertion_point(field_release:im._MESGrpInterNotifyAck.sUserId)
  
  return suserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void _MESGrpInterNotifyAck::set_allocated_suserid(::std::string* suserid) {
  if (suserid != NULL) {
    
  } else {
    
  }
  suserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), suserid);
  // @@protoc_insertion_point(field_set_allocated:im._MESGrpInterNotifyAck.sUserId)
}

// optional string sGrpId = 2;
void _MESGrpInterNotifyAck::clear_sgrpid() {
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& _MESGrpInterNotifyAck::sgrpid() const {
  // @@protoc_insertion_point(field_get:im._MESGrpInterNotifyAck.sGrpId)
  return sgrpid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void _MESGrpInterNotifyAck::set_sgrpid(const ::std::string& value) {
  
  sgrpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im._MESGrpInterNotifyAck.sGrpId)
}
 void _MESGrpInterNotifyAck::set_sgrpid(const char* value) {
  
  sgrpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im._MESGrpInterNotifyAck.sGrpId)
}
 void _MESGrpInterNotifyAck::set_sgrpid(const char* value, size_t size) {
  
  sgrpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im._MESGrpInterNotifyAck.sGrpId)
}
 ::std::string* _MESGrpInterNotifyAck::mutable_sgrpid() {
  
  // @@protoc_insertion_point(field_mutable:im._MESGrpInterNotifyAck.sGrpId)
  return sgrpid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* _MESGrpInterNotifyAck::release_sgrpid() {
  // @@protoc_insertion_point(field_release:im._MESGrpInterNotifyAck.sGrpId)
  
  return sgrpid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void _MESGrpInterNotifyAck::set_allocated_sgrpid(::std::string* sgrpid) {
  if (sgrpid != NULL) {
    
  } else {
    
  }
  sgrpid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sgrpid);
  // @@protoc_insertion_point(field_set_allocated:im._MESGrpInterNotifyAck.sGrpId)
}

// optional string sMsgId = 3;
void _MESGrpInterNotifyAck::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& _MESGrpInterNotifyAck::smsgid() const {
  // @@protoc_insertion_point(field_get:im._MESGrpInterNotifyAck.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void _MESGrpInterNotifyAck::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im._MESGrpInterNotifyAck.sMsgId)
}
 void _MESGrpInterNotifyAck::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im._MESGrpInterNotifyAck.sMsgId)
}
 void _MESGrpInterNotifyAck::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im._MESGrpInterNotifyAck.sMsgId)
}
 ::std::string* _MESGrpInterNotifyAck::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im._MESGrpInterNotifyAck.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* _MESGrpInterNotifyAck::release_smsgid() {
  // @@protoc_insertion_point(field_release:im._MESGrpInterNotifyAck.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void _MESGrpInterNotifyAck::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im._MESGrpInterNotifyAck.sMsgId)
}

// optional .im.ErrCode errcode = 4;
void _MESGrpInterNotifyAck::clear_errcode() {
  errcode_ = 0;
}
 ::im::ErrCode _MESGrpInterNotifyAck::errcode() const {
  // @@protoc_insertion_point(field_get:im._MESGrpInterNotifyAck.errcode)
  return static_cast< ::im::ErrCode >(errcode_);
}
 void _MESGrpInterNotifyAck::set_errcode(::im::ErrCode value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:im._MESGrpInterNotifyAck.errcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESGrpNotify::kSGrpIdFieldNumber;
const int MESGrpNotify::kSToIdFieldNumber;
const int MESGrpNotify::kSMsgIdFieldNumber;
const int MESGrpNotify::kMsgTimeFieldNumber;
const int MESGrpNotify::kSOprUserIdFieldNumber;
const int MESGrpNotify::kSMnpledUserIdFieldNumber;
const int MESGrpNotify::kSContentFieldNumber;
const int MESGrpNotify::kNotifyTypeFieldNumber;
const int MESGrpNotify::kErrcodeFieldNumber;
const int MESGrpNotify::kExtendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESGrpNotify::MESGrpNotify()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESGrpNotify)
}

void MESGrpNotify::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MESGrpNotify::MESGrpNotify(const MESGrpNotify& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.MESGrpNotify)
}

void MESGrpNotify::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgtime_ = GOOGLE_ULONGLONG(0);
  sopruserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  notifytype_ = 0;
  errcode_ = 0;
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MESGrpNotify::~MESGrpNotify() {
  // @@protoc_insertion_point(destructor:im.MESGrpNotify)
  SharedDtor();
}

void MESGrpNotify::SharedDtor() {
  sgrpid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sopruserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MESGrpNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MESGrpNotify& MESGrpNotify::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

MESGrpNotify* MESGrpNotify::default_instance_ = NULL;

MESGrpNotify* MESGrpNotify::New(::google::protobuf::Arena* arena) const {
  MESGrpNotify* n = new MESGrpNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MESGrpNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESGrpNotify)
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgtime_ = GOOGLE_ULONGLONG(0);
  sopruserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  notifytype_ = 0;
  errcode_ = 0;
  extend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smnpleduserid_.Clear();
}

bool MESGrpNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.MESGrpNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sGrpId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgrpid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgrpid().data(), this->sgrpid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESGrpNotify.sGrpId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sToId;
        break;
      }

      // optional string sToId = 2;
      case 2: {
        if (tag == 18) {
         parse_sToId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), this->stoid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESGrpNotify.sToId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 3;
      case 3: {
        if (tag == 26) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESGrpNotify.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_msgTime;
        break;
      }

      // optional uint64 msgTime = 4;
      case 4: {
        if (tag == 32) {
         parse_msgTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_sOprUserId;
        break;
      }

      // optional string sOprUserId = 5;
      case 5: {
        if (tag == 42) {
         parse_sOprUserId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sopruserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sopruserid().data(), this->sopruserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESGrpNotify.sOprUserId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_sMnpledUserId;
        break;
      }

      // repeated string sMnpledUserId = 6;
      case 6: {
        if (tag == 50) {
         parse_sMnpledUserId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_smnpleduserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smnpleduserid(this->smnpleduserid_size() - 1).data(),
            this->smnpleduserid(this->smnpleduserid_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESGrpNotify.sMnpledUserId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_sMnpledUserId;
        if (input->ExpectTag(58)) goto parse_sContent;
        break;
      }

      // optional string sContent = 7;
      case 7: {
        if (tag == 58) {
         parse_sContent:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scontent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scontent().data(), this->scontent().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESGrpNotify.sContent"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_notifyType;
        break;
      }

      // optional .im.NotifyType notifyType = 8;
      case 8: {
        if (tag == 64) {
         parse_notifyType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_notifytype(static_cast< ::im::NotifyType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_errcode;
        break;
      }

      // optional .im.ErrCode errcode = 9;
      case 9: {
        if (tag == 72) {
         parse_errcode:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_extend;
        break;
      }

      // optional string extend = 10;
      case 10: {
        if (tag == 82) {
         parse_extend:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extend()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extend().data(), this->extend().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESGrpNotify.extend"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESGrpNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESGrpNotify)
  return false;
#undef DO_
}

void MESGrpNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESGrpNotify)
  // optional string sGrpId = 1;
  if (this->sgrpid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgrpid().data(), this->sgrpid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESGrpNotify.sGrpId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sgrpid(), output);
  }

  // optional string sToId = 2;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), this->stoid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESGrpNotify.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stoid(), output);
  }

  // optional string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESGrpNotify.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // optional uint64 msgTime = 4;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->msgtime(), output);
  }

  // optional string sOprUserId = 5;
  if (this->sopruserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sopruserid().data(), this->sopruserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESGrpNotify.sOprUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->sopruserid(), output);
  }

  // repeated string sMnpledUserId = 6;
  for (int i = 0; i < this->smnpleduserid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smnpleduserid(i).data(), this->smnpleduserid(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESGrpNotify.sMnpledUserId");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->smnpleduserid(i), output);
  }

  // optional string sContent = 7;
  if (this->scontent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scontent().data(), this->scontent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESGrpNotify.sContent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->scontent(), output);
  }

  // optional .im.NotifyType notifyType = 8;
  if (this->notifytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->notifytype(), output);
  }

  // optional .im.ErrCode errcode = 9;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->errcode(), output);
  }

  // optional string extend = 10;
  if (this->extend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extend().data(), this->extend().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESGrpNotify.extend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->extend(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.MESGrpNotify)
}

int MESGrpNotify::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESGrpNotify)
  int total_size = 0;

  // optional string sGrpId = 1;
  if (this->sgrpid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgrpid());
  }

  // optional string sToId = 2;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // optional string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // optional uint64 msgTime = 4;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // optional string sOprUserId = 5;
  if (this->sopruserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sopruserid());
  }

  // optional string sContent = 7;
  if (this->scontent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scontent());
  }

  // optional .im.NotifyType notifyType = 8;
  if (this->notifytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->notifytype());
  }

  // optional .im.ErrCode errcode = 9;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  // optional string extend = 10;
  if (this->extend().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extend());
  }

  // repeated string sMnpledUserId = 6;
  total_size += 1 * this->smnpleduserid_size();
  for (int i = 0; i < this->smnpleduserid_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->smnpleduserid(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MESGrpNotify::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESGrpNotify*>(&from));
}

void MESGrpNotify::MergeFrom(const MESGrpNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESGrpNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  smnpleduserid_.MergeFrom(from.smnpleduserid_);
  if (from.sgrpid().size() > 0) {

    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.sopruserid().size() > 0) {

    sopruserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sopruserid_);
  }
  if (from.scontent().size() > 0) {

    scontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scontent_);
  }
  if (from.notifytype() != 0) {
    set_notifytype(from.notifytype());
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
  if (from.extend().size() > 0) {

    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
}

void MESGrpNotify::CopyFrom(const MESGrpNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESGrpNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESGrpNotify::IsInitialized() const {

  return true;
}

void MESGrpNotify::Swap(MESGrpNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESGrpNotify::InternalSwap(MESGrpNotify* other) {
  sgrpid_.Swap(&other->sgrpid_);
  stoid_.Swap(&other->stoid_);
  smsgid_.Swap(&other->smsgid_);
  std::swap(msgtime_, other->msgtime_);
  sopruserid_.Swap(&other->sopruserid_);
  smnpleduserid_.UnsafeArenaSwap(&other->smnpleduserid_);
  scontent_.Swap(&other->scontent_);
  std::swap(notifytype_, other->notifytype_);
  std::swap(errcode_, other->errcode_);
  extend_.Swap(&other->extend_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string MESGrpNotify::GetTypeName() const {
  return "im.MESGrpNotify";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MESGrpNotify

// optional string sGrpId = 1;
void MESGrpNotify::clear_sgrpid() {
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESGrpNotify::sgrpid() const {
  // @@protoc_insertion_point(field_get:im.MESGrpNotify.sGrpId)
  return sgrpid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESGrpNotify::set_sgrpid(const ::std::string& value) {
  
  sgrpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESGrpNotify.sGrpId)
}
 void MESGrpNotify::set_sgrpid(const char* value) {
  
  sgrpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESGrpNotify.sGrpId)
}
 void MESGrpNotify::set_sgrpid(const char* value, size_t size) {
  
  sgrpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESGrpNotify.sGrpId)
}
 ::std::string* MESGrpNotify::mutable_sgrpid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESGrpNotify.sGrpId)
  return sgrpid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESGrpNotify::release_sgrpid() {
  // @@protoc_insertion_point(field_release:im.MESGrpNotify.sGrpId)
  
  return sgrpid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESGrpNotify::set_allocated_sgrpid(::std::string* sgrpid) {
  if (sgrpid != NULL) {
    
  } else {
    
  }
  sgrpid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sgrpid);
  // @@protoc_insertion_point(field_set_allocated:im.MESGrpNotify.sGrpId)
}

// optional string sToId = 2;
void MESGrpNotify::clear_stoid() {
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESGrpNotify::stoid() const {
  // @@protoc_insertion_point(field_get:im.MESGrpNotify.sToId)
  return stoid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESGrpNotify::set_stoid(const ::std::string& value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESGrpNotify.sToId)
}
 void MESGrpNotify::set_stoid(const char* value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESGrpNotify.sToId)
}
 void MESGrpNotify::set_stoid(const char* value, size_t size) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESGrpNotify.sToId)
}
 ::std::string* MESGrpNotify::mutable_stoid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESGrpNotify.sToId)
  return stoid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESGrpNotify::release_stoid() {
  // @@protoc_insertion_point(field_release:im.MESGrpNotify.sToId)
  
  return stoid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESGrpNotify::set_allocated_stoid(::std::string* stoid) {
  if (stoid != NULL) {
    
  } else {
    
  }
  stoid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stoid);
  // @@protoc_insertion_point(field_set_allocated:im.MESGrpNotify.sToId)
}

// optional string sMsgId = 3;
void MESGrpNotify::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESGrpNotify::smsgid() const {
  // @@protoc_insertion_point(field_get:im.MESGrpNotify.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESGrpNotify::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESGrpNotify.sMsgId)
}
 void MESGrpNotify::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESGrpNotify.sMsgId)
}
 void MESGrpNotify::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESGrpNotify.sMsgId)
}
 ::std::string* MESGrpNotify::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESGrpNotify.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESGrpNotify::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.MESGrpNotify.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESGrpNotify::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.MESGrpNotify.sMsgId)
}

// optional uint64 msgTime = 4;
void MESGrpNotify::clear_msgtime() {
  msgtime_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 MESGrpNotify::msgtime() const {
  // @@protoc_insertion_point(field_get:im.MESGrpNotify.msgTime)
  return msgtime_;
}
 void MESGrpNotify::set_msgtime(::google::protobuf::uint64 value) {
  
  msgtime_ = value;
  // @@protoc_insertion_point(field_set:im.MESGrpNotify.msgTime)
}

// optional string sOprUserId = 5;
void MESGrpNotify::clear_sopruserid() {
  sopruserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESGrpNotify::sopruserid() const {
  // @@protoc_insertion_point(field_get:im.MESGrpNotify.sOprUserId)
  return sopruserid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESGrpNotify::set_sopruserid(const ::std::string& value) {
  
  sopruserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESGrpNotify.sOprUserId)
}
 void MESGrpNotify::set_sopruserid(const char* value) {
  
  sopruserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESGrpNotify.sOprUserId)
}
 void MESGrpNotify::set_sopruserid(const char* value, size_t size) {
  
  sopruserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESGrpNotify.sOprUserId)
}
 ::std::string* MESGrpNotify::mutable_sopruserid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESGrpNotify.sOprUserId)
  return sopruserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESGrpNotify::release_sopruserid() {
  // @@protoc_insertion_point(field_release:im.MESGrpNotify.sOprUserId)
  
  return sopruserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESGrpNotify::set_allocated_sopruserid(::std::string* sopruserid) {
  if (sopruserid != NULL) {
    
  } else {
    
  }
  sopruserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sopruserid);
  // @@protoc_insertion_point(field_set_allocated:im.MESGrpNotify.sOprUserId)
}

// repeated string sMnpledUserId = 6;
int MESGrpNotify::smnpleduserid_size() const {
  return smnpleduserid_.size();
}
void MESGrpNotify::clear_smnpleduserid() {
  smnpleduserid_.Clear();
}
 const ::std::string& MESGrpNotify::smnpleduserid(int index) const {
  // @@protoc_insertion_point(field_get:im.MESGrpNotify.sMnpledUserId)
  return smnpleduserid_.Get(index);
}
 ::std::string* MESGrpNotify::mutable_smnpleduserid(int index) {
  // @@protoc_insertion_point(field_mutable:im.MESGrpNotify.sMnpledUserId)
  return smnpleduserid_.Mutable(index);
}
 void MESGrpNotify::set_smnpleduserid(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:im.MESGrpNotify.sMnpledUserId)
  smnpleduserid_.Mutable(index)->assign(value);
}
 void MESGrpNotify::set_smnpleduserid(int index, const char* value) {
  smnpleduserid_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:im.MESGrpNotify.sMnpledUserId)
}
 void MESGrpNotify::set_smnpleduserid(int index, const char* value, size_t size) {
  smnpleduserid_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:im.MESGrpNotify.sMnpledUserId)
}
 ::std::string* MESGrpNotify::add_smnpleduserid() {
  // @@protoc_insertion_point(field_add_mutable:im.MESGrpNotify.sMnpledUserId)
  return smnpleduserid_.Add();
}
 void MESGrpNotify::add_smnpleduserid(const ::std::string& value) {
  smnpleduserid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:im.MESGrpNotify.sMnpledUserId)
}
 void MESGrpNotify::add_smnpleduserid(const char* value) {
  smnpleduserid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:im.MESGrpNotify.sMnpledUserId)
}
 void MESGrpNotify::add_smnpleduserid(const char* value, size_t size) {
  smnpleduserid_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:im.MESGrpNotify.sMnpledUserId)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
MESGrpNotify::smnpleduserid() const {
  // @@protoc_insertion_point(field_list:im.MESGrpNotify.sMnpledUserId)
  return smnpleduserid_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
MESGrpNotify::mutable_smnpleduserid() {
  // @@protoc_insertion_point(field_mutable_list:im.MESGrpNotify.sMnpledUserId)
  return &smnpleduserid_;
}

// optional string sContent = 7;
void MESGrpNotify::clear_scontent() {
  scontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESGrpNotify::scontent() const {
  // @@protoc_insertion_point(field_get:im.MESGrpNotify.sContent)
  return scontent_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESGrpNotify::set_scontent(const ::std::string& value) {
  
  scontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESGrpNotify.sContent)
}
 void MESGrpNotify::set_scontent(const char* value) {
  
  scontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESGrpNotify.sContent)
}
 void MESGrpNotify::set_scontent(const char* value, size_t size) {
  
  scontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESGrpNotify.sContent)
}
 ::std::string* MESGrpNotify::mutable_scontent() {
  
  // @@protoc_insertion_point(field_mutable:im.MESGrpNotify.sContent)
  return scontent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESGrpNotify::release_scontent() {
  // @@protoc_insertion_point(field_release:im.MESGrpNotify.sContent)
  
  return scontent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESGrpNotify::set_allocated_scontent(::std::string* scontent) {
  if (scontent != NULL) {
    
  } else {
    
  }
  scontent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scontent);
  // @@protoc_insertion_point(field_set_allocated:im.MESGrpNotify.sContent)
}

// optional .im.NotifyType notifyType = 8;
void MESGrpNotify::clear_notifytype() {
  notifytype_ = 0;
}
 ::im::NotifyType MESGrpNotify::notifytype() const {
  // @@protoc_insertion_point(field_get:im.MESGrpNotify.notifyType)
  return static_cast< ::im::NotifyType >(notifytype_);
}
 void MESGrpNotify::set_notifytype(::im::NotifyType value) {
  
  notifytype_ = value;
  // @@protoc_insertion_point(field_set:im.MESGrpNotify.notifyType)
}

// optional .im.ErrCode errcode = 9;
void MESGrpNotify::clear_errcode() {
  errcode_ = 0;
}
 ::im::ErrCode MESGrpNotify::errcode() const {
  // @@protoc_insertion_point(field_get:im.MESGrpNotify.errcode)
  return static_cast< ::im::ErrCode >(errcode_);
}
 void MESGrpNotify::set_errcode(::im::ErrCode value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:im.MESGrpNotify.errcode)
}

// optional string extend = 10;
void MESGrpNotify::clear_extend() {
  extend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESGrpNotify::extend() const {
  // @@protoc_insertion_point(field_get:im.MESGrpNotify.extend)
  return extend_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESGrpNotify::set_extend(const ::std::string& value) {
  
  extend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESGrpNotify.extend)
}
 void MESGrpNotify::set_extend(const char* value) {
  
  extend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESGrpNotify.extend)
}
 void MESGrpNotify::set_extend(const char* value, size_t size) {
  
  extend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESGrpNotify.extend)
}
 ::std::string* MESGrpNotify::mutable_extend() {
  
  // @@protoc_insertion_point(field_mutable:im.MESGrpNotify.extend)
  return extend_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESGrpNotify::release_extend() {
  // @@protoc_insertion_point(field_release:im.MESGrpNotify.extend)
  
  return extend_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESGrpNotify::set_allocated_extend(::std::string* extend) {
  if (extend != NULL) {
    
  } else {
    
  }
  extend_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extend);
  // @@protoc_insertion_point(field_set_allocated:im.MESGrpNotify.extend)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESGrpNotifyDeliverAck::kSUserIdFieldNumber;
const int MESGrpNotifyDeliverAck::kSGrpIdFieldNumber;
const int MESGrpNotifyDeliverAck::kSMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESGrpNotifyDeliverAck::MESGrpNotifyDeliverAck()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESGrpNotifyDeliverAck)
}

void MESGrpNotifyDeliverAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MESGrpNotifyDeliverAck::MESGrpNotifyDeliverAck(const MESGrpNotifyDeliverAck& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.MESGrpNotifyDeliverAck)
}

void MESGrpNotifyDeliverAck::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MESGrpNotifyDeliverAck::~MESGrpNotifyDeliverAck() {
  // @@protoc_insertion_point(destructor:im.MESGrpNotifyDeliverAck)
  SharedDtor();
}

void MESGrpNotifyDeliverAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MESGrpNotifyDeliverAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MESGrpNotifyDeliverAck& MESGrpNotifyDeliverAck::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

MESGrpNotifyDeliverAck* MESGrpNotifyDeliverAck::default_instance_ = NULL;

MESGrpNotifyDeliverAck* MESGrpNotifyDeliverAck::New(::google::protobuf::Arena* arena) const {
  MESGrpNotifyDeliverAck* n = new MESGrpNotifyDeliverAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MESGrpNotifyDeliverAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESGrpNotifyDeliverAck)
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MESGrpNotifyDeliverAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.MESGrpNotifyDeliverAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sUserId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), this->suserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESGrpNotifyDeliverAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sGrpId;
        break;
      }

      // optional string sGrpId = 2;
      case 2: {
        if (tag == 18) {
         parse_sGrpId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgrpid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgrpid().data(), this->sgrpid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESGrpNotifyDeliverAck.sGrpId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 3;
      case 3: {
        if (tag == 26) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESGrpNotifyDeliverAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESGrpNotifyDeliverAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESGrpNotifyDeliverAck)
  return false;
#undef DO_
}

void MESGrpNotifyDeliverAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESGrpNotifyDeliverAck)
  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), this->suserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESGrpNotifyDeliverAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // optional string sGrpId = 2;
  if (this->sgrpid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgrpid().data(), this->sgrpid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESGrpNotifyDeliverAck.sGrpId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sgrpid(), output);
  }

  // optional string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESGrpNotifyDeliverAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.MESGrpNotifyDeliverAck)
}

int MESGrpNotifyDeliverAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESGrpNotifyDeliverAck)
  int total_size = 0;

  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // optional string sGrpId = 2;
  if (this->sgrpid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgrpid());
  }

  // optional string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MESGrpNotifyDeliverAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESGrpNotifyDeliverAck*>(&from));
}

void MESGrpNotifyDeliverAck::MergeFrom(const MESGrpNotifyDeliverAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESGrpNotifyDeliverAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.sgrpid().size() > 0) {

    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
}

void MESGrpNotifyDeliverAck::CopyFrom(const MESGrpNotifyDeliverAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESGrpNotifyDeliverAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESGrpNotifyDeliverAck::IsInitialized() const {

  return true;
}

void MESGrpNotifyDeliverAck::Swap(MESGrpNotifyDeliverAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESGrpNotifyDeliverAck::InternalSwap(MESGrpNotifyDeliverAck* other) {
  suserid_.Swap(&other->suserid_);
  sgrpid_.Swap(&other->sgrpid_);
  smsgid_.Swap(&other->smsgid_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string MESGrpNotifyDeliverAck::GetTypeName() const {
  return "im.MESGrpNotifyDeliverAck";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MESGrpNotifyDeliverAck

// optional string sUserId = 1;
void MESGrpNotifyDeliverAck::clear_suserid() {
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESGrpNotifyDeliverAck::suserid() const {
  // @@protoc_insertion_point(field_get:im.MESGrpNotifyDeliverAck.sUserId)
  return suserid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESGrpNotifyDeliverAck::set_suserid(const ::std::string& value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESGrpNotifyDeliverAck.sUserId)
}
 void MESGrpNotifyDeliverAck::set_suserid(const char* value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESGrpNotifyDeliverAck.sUserId)
}
 void MESGrpNotifyDeliverAck::set_suserid(const char* value, size_t size) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESGrpNotifyDeliverAck.sUserId)
}
 ::std::string* MESGrpNotifyDeliverAck::mutable_suserid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESGrpNotifyDeliverAck.sUserId)
  return suserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESGrpNotifyDeliverAck::release_suserid() {
  // @@protoc_insertion_point(field_release:im.MESGrpNotifyDeliverAck.sUserId)
  
  return suserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESGrpNotifyDeliverAck::set_allocated_suserid(::std::string* suserid) {
  if (suserid != NULL) {
    
  } else {
    
  }
  suserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), suserid);
  // @@protoc_insertion_point(field_set_allocated:im.MESGrpNotifyDeliverAck.sUserId)
}

// optional string sGrpId = 2;
void MESGrpNotifyDeliverAck::clear_sgrpid() {
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESGrpNotifyDeliverAck::sgrpid() const {
  // @@protoc_insertion_point(field_get:im.MESGrpNotifyDeliverAck.sGrpId)
  return sgrpid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESGrpNotifyDeliverAck::set_sgrpid(const ::std::string& value) {
  
  sgrpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESGrpNotifyDeliverAck.sGrpId)
}
 void MESGrpNotifyDeliverAck::set_sgrpid(const char* value) {
  
  sgrpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESGrpNotifyDeliverAck.sGrpId)
}
 void MESGrpNotifyDeliverAck::set_sgrpid(const char* value, size_t size) {
  
  sgrpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESGrpNotifyDeliverAck.sGrpId)
}
 ::std::string* MESGrpNotifyDeliverAck::mutable_sgrpid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESGrpNotifyDeliverAck.sGrpId)
  return sgrpid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESGrpNotifyDeliverAck::release_sgrpid() {
  // @@protoc_insertion_point(field_release:im.MESGrpNotifyDeliverAck.sGrpId)
  
  return sgrpid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESGrpNotifyDeliverAck::set_allocated_sgrpid(::std::string* sgrpid) {
  if (sgrpid != NULL) {
    
  } else {
    
  }
  sgrpid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sgrpid);
  // @@protoc_insertion_point(field_set_allocated:im.MESGrpNotifyDeliverAck.sGrpId)
}

// optional string sMsgId = 3;
void MESGrpNotifyDeliverAck::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESGrpNotifyDeliverAck::smsgid() const {
  // @@protoc_insertion_point(field_get:im.MESGrpNotifyDeliverAck.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESGrpNotifyDeliverAck::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESGrpNotifyDeliverAck.sMsgId)
}
 void MESGrpNotifyDeliverAck::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESGrpNotifyDeliverAck.sMsgId)
}
 void MESGrpNotifyDeliverAck::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESGrpNotifyDeliverAck.sMsgId)
}
 ::std::string* MESGrpNotifyDeliverAck::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESGrpNotifyDeliverAck.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESGrpNotifyDeliverAck::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.MESGrpNotifyDeliverAck.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESGrpNotifyDeliverAck::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.MESGrpNotifyDeliverAck.sMsgId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int _MESGrpInterChat::kSFromIdFieldNumber;
const int _MESGrpInterChat::kSGrpIdFieldNumber;
const int _MESGrpInterChat::kSToIdFieldNumber;
const int _MESGrpInterChat::kNNotifyCountFieldNumber;
const int _MESGrpInterChat::kSMsgIdFieldNumber;
const int _MESGrpInterChat::kMsgTypeFieldNumber;
const int _MESGrpInterChat::kMsgTimeFieldNumber;
const int _MESGrpInterChat::kEncryptFieldNumber;
const int _MESGrpInterChat::kSContentFieldNumber;
const int _MESGrpInterChat::kSNotifyUsersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

_MESGrpInterChat::_MESGrpInterChat()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im._MESGrpInterChat)
}

void _MESGrpInterChat::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

_MESGrpInterChat::_MESGrpInterChat(const _MESGrpInterChat& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im._MESGrpInterChat)
}

void _MESGrpInterChat::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nnotifycount_ = 0u;
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgtype_ = 0u;
  msgtime_ = GOOGLE_ULONGLONG(0);
  encrypt_ = 0u;
  scontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

_MESGrpInterChat::~_MESGrpInterChat() {
  // @@protoc_insertion_point(destructor:im._MESGrpInterChat)
  SharedDtor();
}

void _MESGrpInterChat::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void _MESGrpInterChat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const _MESGrpInterChat& _MESGrpInterChat::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

_MESGrpInterChat* _MESGrpInterChat::default_instance_ = NULL;

_MESGrpInterChat* _MESGrpInterChat::New(::google::protobuf::Arena* arena) const {
  _MESGrpInterChat* n = new _MESGrpInterChat;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void _MESGrpInterChat::Clear() {
// @@protoc_insertion_point(message_clear_start:im._MESGrpInterChat)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(_MESGrpInterChat, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<_MESGrpInterChat*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(nnotifycount_, msgtime_);
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  encrypt_ = 0u;
  scontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

  stoid_.Clear();
  snotifyusers_.Clear();
}

bool _MESGrpInterChat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im._MESGrpInterChat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sFromId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), this->sfromid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._MESGrpInterChat.sFromId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sGrpId;
        break;
      }

      // optional string sGrpId = 2;
      case 2: {
        if (tag == 18) {
         parse_sGrpId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgrpid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgrpid().data(), this->sgrpid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._MESGrpInterChat.sGrpId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sToId;
        break;
      }

      // repeated string sToId = 3;
      case 3: {
        if (tag == 26) {
         parse_sToId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid(this->stoid_size() - 1).data(),
            this->stoid(this->stoid_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._MESGrpInterChat.sToId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sToId;
        if (input->ExpectTag(32)) goto parse_nNotifyCount;
        break;
      }

      // optional uint32 nNotifyCount = 4;
      case 4: {
        if (tag == 32) {
         parse_nNotifyCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nnotifycount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 5;
      case 5: {
        if (tag == 42) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._MESGrpInterChat.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_msgType;
        break;
      }

      // optional uint32 msgType = 6;
      case 6: {
        if (tag == 48) {
         parse_msgType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgtype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_msgTime;
        break;
      }

      // optional uint64 msgTime = 7;
      case 7: {
        if (tag == 56) {
         parse_msgTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_encrypt;
        break;
      }

      // optional uint32 encrypt = 8;
      case 8: {
        if (tag == 64) {
         parse_encrypt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &encrypt_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_sContent;
        break;
      }

      // optional string sContent = 9;
      case 9: {
        if (tag == 74) {
         parse_sContent:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scontent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scontent().data(), this->scontent().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._MESGrpInterChat.sContent"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_sNotifyUsers;
        break;
      }

      // repeated string sNotifyUsers = 10;
      case 10: {
        if (tag == 82) {
         parse_sNotifyUsers:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_snotifyusers()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->snotifyusers(this->snotifyusers_size() - 1).data(),
            this->snotifyusers(this->snotifyusers_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._MESGrpInterChat.sNotifyUsers"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_sNotifyUsers;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im._MESGrpInterChat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im._MESGrpInterChat)
  return false;
#undef DO_
}

void _MESGrpInterChat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im._MESGrpInterChat)
  // optional string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), this->sfromid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._MESGrpInterChat.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // optional string sGrpId = 2;
  if (this->sgrpid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgrpid().data(), this->sgrpid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._MESGrpInterChat.sGrpId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sgrpid(), output);
  }

  // repeated string sToId = 3;
  for (int i = 0; i < this->stoid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid(i).data(), this->stoid(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._MESGrpInterChat.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->stoid(i), output);
  }

  // optional uint32 nNotifyCount = 4;
  if (this->nnotifycount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->nnotifycount(), output);
  }

  // optional string sMsgId = 5;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._MESGrpInterChat.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->smsgid(), output);
  }

  // optional uint32 msgType = 6;
  if (this->msgtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->msgtype(), output);
  }

  // optional uint64 msgTime = 7;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->msgtime(), output);
  }

  // optional uint32 encrypt = 8;
  if (this->encrypt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->encrypt(), output);
  }

  // optional string sContent = 9;
  if (this->scontent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scontent().data(), this->scontent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._MESGrpInterChat.sContent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->scontent(), output);
  }

  // repeated string sNotifyUsers = 10;
  for (int i = 0; i < this->snotifyusers_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->snotifyusers(i).data(), this->snotifyusers(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._MESGrpInterChat.sNotifyUsers");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->snotifyusers(i), output);
  }

  // @@protoc_insertion_point(serialize_end:im._MESGrpInterChat)
}

int _MESGrpInterChat::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im._MESGrpInterChat)
  int total_size = 0;

  // optional string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // optional string sGrpId = 2;
  if (this->sgrpid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgrpid());
  }

  // optional uint32 nNotifyCount = 4;
  if (this->nnotifycount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nnotifycount());
  }

  // optional string sMsgId = 5;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // optional uint32 msgType = 6;
  if (this->msgtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgtype());
  }

  // optional uint64 msgTime = 7;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // optional uint32 encrypt = 8;
  if (this->encrypt() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->encrypt());
  }

  // optional string sContent = 9;
  if (this->scontent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scontent());
  }

  // repeated string sToId = 3;
  total_size += 1 * this->stoid_size();
  for (int i = 0; i < this->stoid_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->stoid(i));
  }

  // repeated string sNotifyUsers = 10;
  total_size += 1 * this->snotifyusers_size();
  for (int i = 0; i < this->snotifyusers_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->snotifyusers(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void _MESGrpInterChat::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const _MESGrpInterChat*>(&from));
}

void _MESGrpInterChat::MergeFrom(const _MESGrpInterChat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im._MESGrpInterChat)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  stoid_.MergeFrom(from.stoid_);
  snotifyusers_.MergeFrom(from.snotifyusers_);
  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.sgrpid().size() > 0) {

    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  if (from.nnotifycount() != 0) {
    set_nnotifycount(from.nnotifycount());
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.msgtype() != 0) {
    set_msgtype(from.msgtype());
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.encrypt() != 0) {
    set_encrypt(from.encrypt());
  }
  if (from.scontent().size() > 0) {

    scontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scontent_);
  }
}

void _MESGrpInterChat::CopyFrom(const _MESGrpInterChat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im._MESGrpInterChat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool _MESGrpInterChat::IsInitialized() const {

  return true;
}

void _MESGrpInterChat::Swap(_MESGrpInterChat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void _MESGrpInterChat::InternalSwap(_MESGrpInterChat* other) {
  sfromid_.Swap(&other->sfromid_);
  sgrpid_.Swap(&other->sgrpid_);
  stoid_.UnsafeArenaSwap(&other->stoid_);
  std::swap(nnotifycount_, other->nnotifycount_);
  smsgid_.Swap(&other->smsgid_);
  std::swap(msgtype_, other->msgtype_);
  std::swap(msgtime_, other->msgtime_);
  std::swap(encrypt_, other->encrypt_);
  scontent_.Swap(&other->scontent_);
  snotifyusers_.UnsafeArenaSwap(&other->snotifyusers_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string _MESGrpInterChat::GetTypeName() const {
  return "im._MESGrpInterChat";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// _MESGrpInterChat

// optional string sFromId = 1;
void _MESGrpInterChat::clear_sfromid() {
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& _MESGrpInterChat::sfromid() const {
  // @@protoc_insertion_point(field_get:im._MESGrpInterChat.sFromId)
  return sfromid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void _MESGrpInterChat::set_sfromid(const ::std::string& value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im._MESGrpInterChat.sFromId)
}
 void _MESGrpInterChat::set_sfromid(const char* value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im._MESGrpInterChat.sFromId)
}
 void _MESGrpInterChat::set_sfromid(const char* value, size_t size) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im._MESGrpInterChat.sFromId)
}
 ::std::string* _MESGrpInterChat::mutable_sfromid() {
  
  // @@protoc_insertion_point(field_mutable:im._MESGrpInterChat.sFromId)
  return sfromid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* _MESGrpInterChat::release_sfromid() {
  // @@protoc_insertion_point(field_release:im._MESGrpInterChat.sFromId)
  
  return sfromid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void _MESGrpInterChat::set_allocated_sfromid(::std::string* sfromid) {
  if (sfromid != NULL) {
    
  } else {
    
  }
  sfromid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sfromid);
  // @@protoc_insertion_point(field_set_allocated:im._MESGrpInterChat.sFromId)
}

// optional string sGrpId = 2;
void _MESGrpInterChat::clear_sgrpid() {
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& _MESGrpInterChat::sgrpid() const {
  // @@protoc_insertion_point(field_get:im._MESGrpInterChat.sGrpId)
  return sgrpid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void _MESGrpInterChat::set_sgrpid(const ::std::string& value) {
  
  sgrpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im._MESGrpInterChat.sGrpId)
}
 void _MESGrpInterChat::set_sgrpid(const char* value) {
  
  sgrpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im._MESGrpInterChat.sGrpId)
}
 void _MESGrpInterChat::set_sgrpid(const char* value, size_t size) {
  
  sgrpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im._MESGrpInterChat.sGrpId)
}
 ::std::string* _MESGrpInterChat::mutable_sgrpid() {
  
  // @@protoc_insertion_point(field_mutable:im._MESGrpInterChat.sGrpId)
  return sgrpid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* _MESGrpInterChat::release_sgrpid() {
  // @@protoc_insertion_point(field_release:im._MESGrpInterChat.sGrpId)
  
  return sgrpid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void _MESGrpInterChat::set_allocated_sgrpid(::std::string* sgrpid) {
  if (sgrpid != NULL) {
    
  } else {
    
  }
  sgrpid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sgrpid);
  // @@protoc_insertion_point(field_set_allocated:im._MESGrpInterChat.sGrpId)
}

// repeated string sToId = 3;
int _MESGrpInterChat::stoid_size() const {
  return stoid_.size();
}
void _MESGrpInterChat::clear_stoid() {
  stoid_.Clear();
}
 const ::std::string& _MESGrpInterChat::stoid(int index) const {
  // @@protoc_insertion_point(field_get:im._MESGrpInterChat.sToId)
  return stoid_.Get(index);
}
 ::std::string* _MESGrpInterChat::mutable_stoid(int index) {
  // @@protoc_insertion_point(field_mutable:im._MESGrpInterChat.sToId)
  return stoid_.Mutable(index);
}
 void _MESGrpInterChat::set_stoid(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:im._MESGrpInterChat.sToId)
  stoid_.Mutable(index)->assign(value);
}
 void _MESGrpInterChat::set_stoid(int index, const char* value) {
  stoid_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:im._MESGrpInterChat.sToId)
}
 void _MESGrpInterChat::set_stoid(int index, const char* value, size_t size) {
  stoid_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:im._MESGrpInterChat.sToId)
}
 ::std::string* _MESGrpInterChat::add_stoid() {
  // @@protoc_insertion_point(field_add_mutable:im._MESGrpInterChat.sToId)
  return stoid_.Add();
}
 void _MESGrpInterChat::add_stoid(const ::std::string& value) {
  stoid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:im._MESGrpInterChat.sToId)
}
 void _MESGrpInterChat::add_stoid(const char* value) {
  stoid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:im._MESGrpInterChat.sToId)
}
 void _MESGrpInterChat::add_stoid(const char* value, size_t size) {
  stoid_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:im._MESGrpInterChat.sToId)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
_MESGrpInterChat::stoid() const {
  // @@protoc_insertion_point(field_list:im._MESGrpInterChat.sToId)
  return stoid_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
_MESGrpInterChat::mutable_stoid() {
  // @@protoc_insertion_point(field_mutable_list:im._MESGrpInterChat.sToId)
  return &stoid_;
}

// optional uint32 nNotifyCount = 4;
void _MESGrpInterChat::clear_nnotifycount() {
  nnotifycount_ = 0u;
}
 ::google::protobuf::uint32 _MESGrpInterChat::nnotifycount() const {
  // @@protoc_insertion_point(field_get:im._MESGrpInterChat.nNotifyCount)
  return nnotifycount_;
}
 void _MESGrpInterChat::set_nnotifycount(::google::protobuf::uint32 value) {
  
  nnotifycount_ = value;
  // @@protoc_insertion_point(field_set:im._MESGrpInterChat.nNotifyCount)
}

// optional string sMsgId = 5;
void _MESGrpInterChat::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& _MESGrpInterChat::smsgid() const {
  // @@protoc_insertion_point(field_get:im._MESGrpInterChat.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void _MESGrpInterChat::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im._MESGrpInterChat.sMsgId)
}
 void _MESGrpInterChat::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im._MESGrpInterChat.sMsgId)
}
 void _MESGrpInterChat::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im._MESGrpInterChat.sMsgId)
}
 ::std::string* _MESGrpInterChat::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im._MESGrpInterChat.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* _MESGrpInterChat::release_smsgid() {
  // @@protoc_insertion_point(field_release:im._MESGrpInterChat.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void _MESGrpInterChat::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im._MESGrpInterChat.sMsgId)
}

// optional uint32 msgType = 6;
void _MESGrpInterChat::clear_msgtype() {
  msgtype_ = 0u;
}
 ::google::protobuf::uint32 _MESGrpInterChat::msgtype() const {
  // @@protoc_insertion_point(field_get:im._MESGrpInterChat.msgType)
  return msgtype_;
}
 void _MESGrpInterChat::set_msgtype(::google::protobuf::uint32 value) {
  
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:im._MESGrpInterChat.msgType)
}

// optional uint64 msgTime = 7;
void _MESGrpInterChat::clear_msgtime() {
  msgtime_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 _MESGrpInterChat::msgtime() const {
  // @@protoc_insertion_point(field_get:im._MESGrpInterChat.msgTime)
  return msgtime_;
}
 void _MESGrpInterChat::set_msgtime(::google::protobuf::uint64 value) {
  
  msgtime_ = value;
  // @@protoc_insertion_point(field_set:im._MESGrpInterChat.msgTime)
}

// optional uint32 encrypt = 8;
void _MESGrpInterChat::clear_encrypt() {
  encrypt_ = 0u;
}
 ::google::protobuf::uint32 _MESGrpInterChat::encrypt() const {
  // @@protoc_insertion_point(field_get:im._MESGrpInterChat.encrypt)
  return encrypt_;
}
 void _MESGrpInterChat::set_encrypt(::google::protobuf::uint32 value) {
  
  encrypt_ = value;
  // @@protoc_insertion_point(field_set:im._MESGrpInterChat.encrypt)
}

// optional string sContent = 9;
void _MESGrpInterChat::clear_scontent() {
  scontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& _MESGrpInterChat::scontent() const {
  // @@protoc_insertion_point(field_get:im._MESGrpInterChat.sContent)
  return scontent_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void _MESGrpInterChat::set_scontent(const ::std::string& value) {
  
  scontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im._MESGrpInterChat.sContent)
}
 void _MESGrpInterChat::set_scontent(const char* value) {
  
  scontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im._MESGrpInterChat.sContent)
}
 void _MESGrpInterChat::set_scontent(const char* value, size_t size) {
  
  scontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im._MESGrpInterChat.sContent)
}
 ::std::string* _MESGrpInterChat::mutable_scontent() {
  
  // @@protoc_insertion_point(field_mutable:im._MESGrpInterChat.sContent)
  return scontent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* _MESGrpInterChat::release_scontent() {
  // @@protoc_insertion_point(field_release:im._MESGrpInterChat.sContent)
  
  return scontent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void _MESGrpInterChat::set_allocated_scontent(::std::string* scontent) {
  if (scontent != NULL) {
    
  } else {
    
  }
  scontent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scontent);
  // @@protoc_insertion_point(field_set_allocated:im._MESGrpInterChat.sContent)
}

// repeated string sNotifyUsers = 10;
int _MESGrpInterChat::snotifyusers_size() const {
  return snotifyusers_.size();
}
void _MESGrpInterChat::clear_snotifyusers() {
  snotifyusers_.Clear();
}
 const ::std::string& _MESGrpInterChat::snotifyusers(int index) const {
  // @@protoc_insertion_point(field_get:im._MESGrpInterChat.sNotifyUsers)
  return snotifyusers_.Get(index);
}
 ::std::string* _MESGrpInterChat::mutable_snotifyusers(int index) {
  // @@protoc_insertion_point(field_mutable:im._MESGrpInterChat.sNotifyUsers)
  return snotifyusers_.Mutable(index);
}
 void _MESGrpInterChat::set_snotifyusers(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:im._MESGrpInterChat.sNotifyUsers)
  snotifyusers_.Mutable(index)->assign(value);
}
 void _MESGrpInterChat::set_snotifyusers(int index, const char* value) {
  snotifyusers_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:im._MESGrpInterChat.sNotifyUsers)
}
 void _MESGrpInterChat::set_snotifyusers(int index, const char* value, size_t size) {
  snotifyusers_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:im._MESGrpInterChat.sNotifyUsers)
}
 ::std::string* _MESGrpInterChat::add_snotifyusers() {
  // @@protoc_insertion_point(field_add_mutable:im._MESGrpInterChat.sNotifyUsers)
  return snotifyusers_.Add();
}
 void _MESGrpInterChat::add_snotifyusers(const ::std::string& value) {
  snotifyusers_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:im._MESGrpInterChat.sNotifyUsers)
}
 void _MESGrpInterChat::add_snotifyusers(const char* value) {
  snotifyusers_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:im._MESGrpInterChat.sNotifyUsers)
}
 void _MESGrpInterChat::add_snotifyusers(const char* value, size_t size) {
  snotifyusers_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:im._MESGrpInterChat.sNotifyUsers)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
_MESGrpInterChat::snotifyusers() const {
  // @@protoc_insertion_point(field_list:im._MESGrpInterChat.sNotifyUsers)
  return snotifyusers_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
_MESGrpInterChat::mutable_snotifyusers() {
  // @@protoc_insertion_point(field_mutable_list:im._MESGrpInterChat.sNotifyUsers)
  return &snotifyusers_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int _MESGrpInterChatAck::kSUserIdFieldNumber;
const int _MESGrpInterChatAck::kSGrpIdFieldNumber;
const int _MESGrpInterChatAck::kSMsgIdFieldNumber;
const int _MESGrpInterChatAck::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

_MESGrpInterChatAck::_MESGrpInterChatAck()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im._MESGrpInterChatAck)
}

void _MESGrpInterChatAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

_MESGrpInterChatAck::_MESGrpInterChatAck(const _MESGrpInterChatAck& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im._MESGrpInterChatAck)
}

void _MESGrpInterChatAck::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

_MESGrpInterChatAck::~_MESGrpInterChatAck() {
  // @@protoc_insertion_point(destructor:im._MESGrpInterChatAck)
  SharedDtor();
}

void _MESGrpInterChatAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void _MESGrpInterChatAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const _MESGrpInterChatAck& _MESGrpInterChatAck::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

_MESGrpInterChatAck* _MESGrpInterChatAck::default_instance_ = NULL;

_MESGrpInterChatAck* _MESGrpInterChatAck::New(::google::protobuf::Arena* arena) const {
  _MESGrpInterChatAck* n = new _MESGrpInterChatAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void _MESGrpInterChatAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im._MESGrpInterChatAck)
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

bool _MESGrpInterChatAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im._MESGrpInterChatAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sUserId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), this->suserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._MESGrpInterChatAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sGrpId;
        break;
      }

      // optional string sGrpId = 2;
      case 2: {
        if (tag == 18) {
         parse_sGrpId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgrpid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgrpid().data(), this->sgrpid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._MESGrpInterChatAck.sGrpId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 3;
      case 3: {
        if (tag == 26) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._MESGrpInterChatAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_errcode;
        break;
      }

      // optional .im.ErrCode errcode = 4;
      case 4: {
        if (tag == 32) {
         parse_errcode:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im._MESGrpInterChatAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im._MESGrpInterChatAck)
  return false;
#undef DO_
}

void _MESGrpInterChatAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im._MESGrpInterChatAck)
  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), this->suserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._MESGrpInterChatAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // optional string sGrpId = 2;
  if (this->sgrpid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgrpid().data(), this->sgrpid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._MESGrpInterChatAck.sGrpId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sgrpid(), output);
  }

  // optional string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._MESGrpInterChatAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // optional .im.ErrCode errcode = 4;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->errcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:im._MESGrpInterChatAck)
}

int _MESGrpInterChatAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im._MESGrpInterChatAck)
  int total_size = 0;

  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // optional string sGrpId = 2;
  if (this->sgrpid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgrpid());
  }

  // optional string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // optional .im.ErrCode errcode = 4;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void _MESGrpInterChatAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const _MESGrpInterChatAck*>(&from));
}

void _MESGrpInterChatAck::MergeFrom(const _MESGrpInterChatAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im._MESGrpInterChatAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.sgrpid().size() > 0) {

    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void _MESGrpInterChatAck::CopyFrom(const _MESGrpInterChatAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im._MESGrpInterChatAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool _MESGrpInterChatAck::IsInitialized() const {

  return true;
}

void _MESGrpInterChatAck::Swap(_MESGrpInterChatAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void _MESGrpInterChatAck::InternalSwap(_MESGrpInterChatAck* other) {
  suserid_.Swap(&other->suserid_);
  sgrpid_.Swap(&other->sgrpid_);
  smsgid_.Swap(&other->smsgid_);
  std::swap(errcode_, other->errcode_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string _MESGrpInterChatAck::GetTypeName() const {
  return "im._MESGrpInterChatAck";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// _MESGrpInterChatAck

// optional string sUserId = 1;
void _MESGrpInterChatAck::clear_suserid() {
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& _MESGrpInterChatAck::suserid() const {
  // @@protoc_insertion_point(field_get:im._MESGrpInterChatAck.sUserId)
  return suserid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void _MESGrpInterChatAck::set_suserid(const ::std::string& value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im._MESGrpInterChatAck.sUserId)
}
 void _MESGrpInterChatAck::set_suserid(const char* value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im._MESGrpInterChatAck.sUserId)
}
 void _MESGrpInterChatAck::set_suserid(const char* value, size_t size) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im._MESGrpInterChatAck.sUserId)
}
 ::std::string* _MESGrpInterChatAck::mutable_suserid() {
  
  // @@protoc_insertion_point(field_mutable:im._MESGrpInterChatAck.sUserId)
  return suserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* _MESGrpInterChatAck::release_suserid() {
  // @@protoc_insertion_point(field_release:im._MESGrpInterChatAck.sUserId)
  
  return suserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void _MESGrpInterChatAck::set_allocated_suserid(::std::string* suserid) {
  if (suserid != NULL) {
    
  } else {
    
  }
  suserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), suserid);
  // @@protoc_insertion_point(field_set_allocated:im._MESGrpInterChatAck.sUserId)
}

// optional string sGrpId = 2;
void _MESGrpInterChatAck::clear_sgrpid() {
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& _MESGrpInterChatAck::sgrpid() const {
  // @@protoc_insertion_point(field_get:im._MESGrpInterChatAck.sGrpId)
  return sgrpid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void _MESGrpInterChatAck::set_sgrpid(const ::std::string& value) {
  
  sgrpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im._MESGrpInterChatAck.sGrpId)
}
 void _MESGrpInterChatAck::set_sgrpid(const char* value) {
  
  sgrpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im._MESGrpInterChatAck.sGrpId)
}
 void _MESGrpInterChatAck::set_sgrpid(const char* value, size_t size) {
  
  sgrpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im._MESGrpInterChatAck.sGrpId)
}
 ::std::string* _MESGrpInterChatAck::mutable_sgrpid() {
  
  // @@protoc_insertion_point(field_mutable:im._MESGrpInterChatAck.sGrpId)
  return sgrpid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* _MESGrpInterChatAck::release_sgrpid() {
  // @@protoc_insertion_point(field_release:im._MESGrpInterChatAck.sGrpId)
  
  return sgrpid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void _MESGrpInterChatAck::set_allocated_sgrpid(::std::string* sgrpid) {
  if (sgrpid != NULL) {
    
  } else {
    
  }
  sgrpid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sgrpid);
  // @@protoc_insertion_point(field_set_allocated:im._MESGrpInterChatAck.sGrpId)
}

// optional string sMsgId = 3;
void _MESGrpInterChatAck::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& _MESGrpInterChatAck::smsgid() const {
  // @@protoc_insertion_point(field_get:im._MESGrpInterChatAck.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void _MESGrpInterChatAck::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im._MESGrpInterChatAck.sMsgId)
}
 void _MESGrpInterChatAck::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im._MESGrpInterChatAck.sMsgId)
}
 void _MESGrpInterChatAck::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im._MESGrpInterChatAck.sMsgId)
}
 ::std::string* _MESGrpInterChatAck::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im._MESGrpInterChatAck.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* _MESGrpInterChatAck::release_smsgid() {
  // @@protoc_insertion_point(field_release:im._MESGrpInterChatAck.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void _MESGrpInterChatAck::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im._MESGrpInterChatAck.sMsgId)
}

// optional .im.ErrCode errcode = 4;
void _MESGrpInterChatAck::clear_errcode() {
  errcode_ = 0;
}
 ::im::ErrCode _MESGrpInterChatAck::errcode() const {
  // @@protoc_insertion_point(field_get:im._MESGrpInterChatAck.errcode)
  return static_cast< ::im::ErrCode >(errcode_);
}
 void _MESGrpInterChatAck::set_errcode(::im::ErrCode value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:im._MESGrpInterChatAck.errcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESGrpChatDeliveredAck::kSFromIdFieldNumber;
const int MESGrpChatDeliveredAck::kSGrpIdFieldNumber;
const int MESGrpChatDeliveredAck::kSMsgIdFieldNumber;
const int MESGrpChatDeliveredAck::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESGrpChatDeliveredAck::MESGrpChatDeliveredAck()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESGrpChatDeliveredAck)
}

void MESGrpChatDeliveredAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MESGrpChatDeliveredAck::MESGrpChatDeliveredAck(const MESGrpChatDeliveredAck& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.MESGrpChatDeliveredAck)
}

void MESGrpChatDeliveredAck::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

MESGrpChatDeliveredAck::~MESGrpChatDeliveredAck() {
  // @@protoc_insertion_point(destructor:im.MESGrpChatDeliveredAck)
  SharedDtor();
}

void MESGrpChatDeliveredAck::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MESGrpChatDeliveredAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MESGrpChatDeliveredAck& MESGrpChatDeliveredAck::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

MESGrpChatDeliveredAck* MESGrpChatDeliveredAck::default_instance_ = NULL;

MESGrpChatDeliveredAck* MESGrpChatDeliveredAck::New(::google::protobuf::Arena* arena) const {
  MESGrpChatDeliveredAck* n = new MESGrpChatDeliveredAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MESGrpChatDeliveredAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESGrpChatDeliveredAck)
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

bool MESGrpChatDeliveredAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.MESGrpChatDeliveredAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sFromId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), this->sfromid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESGrpChatDeliveredAck.sFromId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sGrpId;
        break;
      }

      // optional string sGrpId = 2;
      case 2: {
        if (tag == 18) {
         parse_sGrpId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgrpid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgrpid().data(), this->sgrpid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESGrpChatDeliveredAck.sGrpId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 3;
      case 3: {
        if (tag == 26) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESGrpChatDeliveredAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_errcode;
        break;
      }

      // optional .im.ErrCode errcode = 4;
      case 4: {
        if (tag == 32) {
         parse_errcode:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESGrpChatDeliveredAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESGrpChatDeliveredAck)
  return false;
#undef DO_
}

void MESGrpChatDeliveredAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESGrpChatDeliveredAck)
  // optional string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), this->sfromid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESGrpChatDeliveredAck.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // optional string sGrpId = 2;
  if (this->sgrpid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgrpid().data(), this->sgrpid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESGrpChatDeliveredAck.sGrpId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sgrpid(), output);
  }

  // optional string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESGrpChatDeliveredAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // optional .im.ErrCode errcode = 4;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->errcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.MESGrpChatDeliveredAck)
}

int MESGrpChatDeliveredAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESGrpChatDeliveredAck)
  int total_size = 0;

  // optional string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // optional string sGrpId = 2;
  if (this->sgrpid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgrpid());
  }

  // optional string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // optional .im.ErrCode errcode = 4;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MESGrpChatDeliveredAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESGrpChatDeliveredAck*>(&from));
}

void MESGrpChatDeliveredAck::MergeFrom(const MESGrpChatDeliveredAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESGrpChatDeliveredAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.sgrpid().size() > 0) {

    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void MESGrpChatDeliveredAck::CopyFrom(const MESGrpChatDeliveredAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESGrpChatDeliveredAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESGrpChatDeliveredAck::IsInitialized() const {

  return true;
}

void MESGrpChatDeliveredAck::Swap(MESGrpChatDeliveredAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESGrpChatDeliveredAck::InternalSwap(MESGrpChatDeliveredAck* other) {
  sfromid_.Swap(&other->sfromid_);
  sgrpid_.Swap(&other->sgrpid_);
  smsgid_.Swap(&other->smsgid_);
  std::swap(errcode_, other->errcode_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string MESGrpChatDeliveredAck::GetTypeName() const {
  return "im.MESGrpChatDeliveredAck";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MESGrpChatDeliveredAck

// optional string sFromId = 1;
void MESGrpChatDeliveredAck::clear_sfromid() {
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESGrpChatDeliveredAck::sfromid() const {
  // @@protoc_insertion_point(field_get:im.MESGrpChatDeliveredAck.sFromId)
  return sfromid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESGrpChatDeliveredAck::set_sfromid(const ::std::string& value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESGrpChatDeliveredAck.sFromId)
}
 void MESGrpChatDeliveredAck::set_sfromid(const char* value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESGrpChatDeliveredAck.sFromId)
}
 void MESGrpChatDeliveredAck::set_sfromid(const char* value, size_t size) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESGrpChatDeliveredAck.sFromId)
}
 ::std::string* MESGrpChatDeliveredAck::mutable_sfromid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESGrpChatDeliveredAck.sFromId)
  return sfromid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESGrpChatDeliveredAck::release_sfromid() {
  // @@protoc_insertion_point(field_release:im.MESGrpChatDeliveredAck.sFromId)
  
  return sfromid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESGrpChatDeliveredAck::set_allocated_sfromid(::std::string* sfromid) {
  if (sfromid != NULL) {
    
  } else {
    
  }
  sfromid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sfromid);
  // @@protoc_insertion_point(field_set_allocated:im.MESGrpChatDeliveredAck.sFromId)
}

// optional string sGrpId = 2;
void MESGrpChatDeliveredAck::clear_sgrpid() {
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESGrpChatDeliveredAck::sgrpid() const {
  // @@protoc_insertion_point(field_get:im.MESGrpChatDeliveredAck.sGrpId)
  return sgrpid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESGrpChatDeliveredAck::set_sgrpid(const ::std::string& value) {
  
  sgrpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESGrpChatDeliveredAck.sGrpId)
}
 void MESGrpChatDeliveredAck::set_sgrpid(const char* value) {
  
  sgrpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESGrpChatDeliveredAck.sGrpId)
}
 void MESGrpChatDeliveredAck::set_sgrpid(const char* value, size_t size) {
  
  sgrpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESGrpChatDeliveredAck.sGrpId)
}
 ::std::string* MESGrpChatDeliveredAck::mutable_sgrpid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESGrpChatDeliveredAck.sGrpId)
  return sgrpid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESGrpChatDeliveredAck::release_sgrpid() {
  // @@protoc_insertion_point(field_release:im.MESGrpChatDeliveredAck.sGrpId)
  
  return sgrpid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESGrpChatDeliveredAck::set_allocated_sgrpid(::std::string* sgrpid) {
  if (sgrpid != NULL) {
    
  } else {
    
  }
  sgrpid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sgrpid);
  // @@protoc_insertion_point(field_set_allocated:im.MESGrpChatDeliveredAck.sGrpId)
}

// optional string sMsgId = 3;
void MESGrpChatDeliveredAck::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESGrpChatDeliveredAck::smsgid() const {
  // @@protoc_insertion_point(field_get:im.MESGrpChatDeliveredAck.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESGrpChatDeliveredAck::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESGrpChatDeliveredAck.sMsgId)
}
 void MESGrpChatDeliveredAck::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESGrpChatDeliveredAck.sMsgId)
}
 void MESGrpChatDeliveredAck::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESGrpChatDeliveredAck.sMsgId)
}
 ::std::string* MESGrpChatDeliveredAck::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESGrpChatDeliveredAck.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESGrpChatDeliveredAck::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.MESGrpChatDeliveredAck.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESGrpChatDeliveredAck::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.MESGrpChatDeliveredAck.sMsgId)
}

// optional .im.ErrCode errcode = 4;
void MESGrpChatDeliveredAck::clear_errcode() {
  errcode_ = 0;
}
 ::im::ErrCode MESGrpChatDeliveredAck::errcode() const {
  // @@protoc_insertion_point(field_get:im.MESGrpChatDeliveredAck.errcode)
  return static_cast< ::im::ErrCode >(errcode_);
}
 void MESGrpChatDeliveredAck::set_errcode(::im::ErrCode value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:im.MESGrpChatDeliveredAck.errcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESGrpChat::kSFromIdFieldNumber;
const int MESGrpChat::kSGrpIdFieldNumber;
const int MESGrpChat::kSToIdFieldNumber;
const int MESGrpChat::kNNotifyCountFieldNumber;
const int MESGrpChat::kSMsgIdFieldNumber;
const int MESGrpChat::kMsgTypeFieldNumber;
const int MESGrpChat::kMsgTimeFieldNumber;
const int MESGrpChat::kEncryptFieldNumber;
const int MESGrpChat::kSContentFieldNumber;
const int MESGrpChat::kSNotifyUsersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESGrpChat::MESGrpChat()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESGrpChat)
}

void MESGrpChat::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MESGrpChat::MESGrpChat(const MESGrpChat& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.MESGrpChat)
}

void MESGrpChat::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nnotifycount_ = 0u;
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgtype_ = 0u;
  msgtime_ = GOOGLE_ULONGLONG(0);
  encrypt_ = 0u;
  scontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MESGrpChat::~MESGrpChat() {
  // @@protoc_insertion_point(destructor:im.MESGrpChat)
  SharedDtor();
}

void MESGrpChat::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MESGrpChat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MESGrpChat& MESGrpChat::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

MESGrpChat* MESGrpChat::default_instance_ = NULL;

MESGrpChat* MESGrpChat::New(::google::protobuf::Arena* arena) const {
  MESGrpChat* n = new MESGrpChat;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MESGrpChat::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESGrpChat)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MESGrpChat, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MESGrpChat*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(nnotifycount_, msgtime_);
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  encrypt_ = 0u;
  scontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

  snotifyusers_.Clear();
}

bool MESGrpChat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.MESGrpChat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sFromId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), this->sfromid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESGrpChat.sFromId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sGrpId;
        break;
      }

      // optional string sGrpId = 2;
      case 2: {
        if (tag == 18) {
         parse_sGrpId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgrpid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgrpid().data(), this->sgrpid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESGrpChat.sGrpId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sToId;
        break;
      }

      // optional string sToId = 3;
      case 3: {
        if (tag == 26) {
         parse_sToId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), this->stoid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESGrpChat.sToId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_nNotifyCount;
        break;
      }

      // optional uint32 nNotifyCount = 4;
      case 4: {
        if (tag == 32) {
         parse_nNotifyCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nnotifycount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 5;
      case 5: {
        if (tag == 42) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESGrpChat.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_msgType;
        break;
      }

      // optional uint32 msgType = 6;
      case 6: {
        if (tag == 48) {
         parse_msgType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgtype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_msgTime;
        break;
      }

      // optional uint64 msgTime = 7;
      case 7: {
        if (tag == 56) {
         parse_msgTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_encrypt;
        break;
      }

      // optional uint32 encrypt = 8;
      case 8: {
        if (tag == 64) {
         parse_encrypt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &encrypt_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_sContent;
        break;
      }

      // optional string sContent = 9;
      case 9: {
        if (tag == 74) {
         parse_sContent:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scontent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scontent().data(), this->scontent().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESGrpChat.sContent"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_sNotifyUsers;
        break;
      }

      // repeated string sNotifyUsers = 10;
      case 10: {
        if (tag == 82) {
         parse_sNotifyUsers:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_snotifyusers()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->snotifyusers(this->snotifyusers_size() - 1).data(),
            this->snotifyusers(this->snotifyusers_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESGrpChat.sNotifyUsers"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_sNotifyUsers;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESGrpChat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESGrpChat)
  return false;
#undef DO_
}

void MESGrpChat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESGrpChat)
  // optional string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), this->sfromid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESGrpChat.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // optional string sGrpId = 2;
  if (this->sgrpid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgrpid().data(), this->sgrpid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESGrpChat.sGrpId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sgrpid(), output);
  }

  // optional string sToId = 3;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), this->stoid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESGrpChat.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->stoid(), output);
  }

  // optional uint32 nNotifyCount = 4;
  if (this->nnotifycount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->nnotifycount(), output);
  }

  // optional string sMsgId = 5;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESGrpChat.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->smsgid(), output);
  }

  // optional uint32 msgType = 6;
  if (this->msgtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->msgtype(), output);
  }

  // optional uint64 msgTime = 7;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->msgtime(), output);
  }

  // optional uint32 encrypt = 8;
  if (this->encrypt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->encrypt(), output);
  }

  // optional string sContent = 9;
  if (this->scontent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scontent().data(), this->scontent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESGrpChat.sContent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->scontent(), output);
  }

  // repeated string sNotifyUsers = 10;
  for (int i = 0; i < this->snotifyusers_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->snotifyusers(i).data(), this->snotifyusers(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESGrpChat.sNotifyUsers");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->snotifyusers(i), output);
  }

  // @@protoc_insertion_point(serialize_end:im.MESGrpChat)
}

int MESGrpChat::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESGrpChat)
  int total_size = 0;

  // optional string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // optional string sGrpId = 2;
  if (this->sgrpid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgrpid());
  }

  // optional string sToId = 3;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // optional uint32 nNotifyCount = 4;
  if (this->nnotifycount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nnotifycount());
  }

  // optional string sMsgId = 5;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // optional uint32 msgType = 6;
  if (this->msgtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgtype());
  }

  // optional uint64 msgTime = 7;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // optional uint32 encrypt = 8;
  if (this->encrypt() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->encrypt());
  }

  // optional string sContent = 9;
  if (this->scontent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scontent());
  }

  // repeated string sNotifyUsers = 10;
  total_size += 1 * this->snotifyusers_size();
  for (int i = 0; i < this->snotifyusers_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->snotifyusers(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MESGrpChat::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESGrpChat*>(&from));
}

void MESGrpChat::MergeFrom(const MESGrpChat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESGrpChat)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  snotifyusers_.MergeFrom(from.snotifyusers_);
  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.sgrpid().size() > 0) {

    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.nnotifycount() != 0) {
    set_nnotifycount(from.nnotifycount());
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.msgtype() != 0) {
    set_msgtype(from.msgtype());
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.encrypt() != 0) {
    set_encrypt(from.encrypt());
  }
  if (from.scontent().size() > 0) {

    scontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scontent_);
  }
}

void MESGrpChat::CopyFrom(const MESGrpChat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESGrpChat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESGrpChat::IsInitialized() const {

  return true;
}

void MESGrpChat::Swap(MESGrpChat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESGrpChat::InternalSwap(MESGrpChat* other) {
  sfromid_.Swap(&other->sfromid_);
  sgrpid_.Swap(&other->sgrpid_);
  stoid_.Swap(&other->stoid_);
  std::swap(nnotifycount_, other->nnotifycount_);
  smsgid_.Swap(&other->smsgid_);
  std::swap(msgtype_, other->msgtype_);
  std::swap(msgtime_, other->msgtime_);
  std::swap(encrypt_, other->encrypt_);
  scontent_.Swap(&other->scontent_);
  snotifyusers_.UnsafeArenaSwap(&other->snotifyusers_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string MESGrpChat::GetTypeName() const {
  return "im.MESGrpChat";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MESGrpChat

// optional string sFromId = 1;
void MESGrpChat::clear_sfromid() {
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESGrpChat::sfromid() const {
  // @@protoc_insertion_point(field_get:im.MESGrpChat.sFromId)
  return sfromid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESGrpChat::set_sfromid(const ::std::string& value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESGrpChat.sFromId)
}
 void MESGrpChat::set_sfromid(const char* value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESGrpChat.sFromId)
}
 void MESGrpChat::set_sfromid(const char* value, size_t size) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESGrpChat.sFromId)
}
 ::std::string* MESGrpChat::mutable_sfromid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESGrpChat.sFromId)
  return sfromid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESGrpChat::release_sfromid() {
  // @@protoc_insertion_point(field_release:im.MESGrpChat.sFromId)
  
  return sfromid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESGrpChat::set_allocated_sfromid(::std::string* sfromid) {
  if (sfromid != NULL) {
    
  } else {
    
  }
  sfromid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sfromid);
  // @@protoc_insertion_point(field_set_allocated:im.MESGrpChat.sFromId)
}

// optional string sGrpId = 2;
void MESGrpChat::clear_sgrpid() {
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESGrpChat::sgrpid() const {
  // @@protoc_insertion_point(field_get:im.MESGrpChat.sGrpId)
  return sgrpid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESGrpChat::set_sgrpid(const ::std::string& value) {
  
  sgrpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESGrpChat.sGrpId)
}
 void MESGrpChat::set_sgrpid(const char* value) {
  
  sgrpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESGrpChat.sGrpId)
}
 void MESGrpChat::set_sgrpid(const char* value, size_t size) {
  
  sgrpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESGrpChat.sGrpId)
}
 ::std::string* MESGrpChat::mutable_sgrpid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESGrpChat.sGrpId)
  return sgrpid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESGrpChat::release_sgrpid() {
  // @@protoc_insertion_point(field_release:im.MESGrpChat.sGrpId)
  
  return sgrpid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESGrpChat::set_allocated_sgrpid(::std::string* sgrpid) {
  if (sgrpid != NULL) {
    
  } else {
    
  }
  sgrpid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sgrpid);
  // @@protoc_insertion_point(field_set_allocated:im.MESGrpChat.sGrpId)
}

// optional string sToId = 3;
void MESGrpChat::clear_stoid() {
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESGrpChat::stoid() const {
  // @@protoc_insertion_point(field_get:im.MESGrpChat.sToId)
  return stoid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESGrpChat::set_stoid(const ::std::string& value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESGrpChat.sToId)
}
 void MESGrpChat::set_stoid(const char* value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESGrpChat.sToId)
}
 void MESGrpChat::set_stoid(const char* value, size_t size) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESGrpChat.sToId)
}
 ::std::string* MESGrpChat::mutable_stoid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESGrpChat.sToId)
  return stoid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESGrpChat::release_stoid() {
  // @@protoc_insertion_point(field_release:im.MESGrpChat.sToId)
  
  return stoid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESGrpChat::set_allocated_stoid(::std::string* stoid) {
  if (stoid != NULL) {
    
  } else {
    
  }
  stoid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stoid);
  // @@protoc_insertion_point(field_set_allocated:im.MESGrpChat.sToId)
}

// optional uint32 nNotifyCount = 4;
void MESGrpChat::clear_nnotifycount() {
  nnotifycount_ = 0u;
}
 ::google::protobuf::uint32 MESGrpChat::nnotifycount() const {
  // @@protoc_insertion_point(field_get:im.MESGrpChat.nNotifyCount)
  return nnotifycount_;
}
 void MESGrpChat::set_nnotifycount(::google::protobuf::uint32 value) {
  
  nnotifycount_ = value;
  // @@protoc_insertion_point(field_set:im.MESGrpChat.nNotifyCount)
}

// optional string sMsgId = 5;
void MESGrpChat::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESGrpChat::smsgid() const {
  // @@protoc_insertion_point(field_get:im.MESGrpChat.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESGrpChat::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESGrpChat.sMsgId)
}
 void MESGrpChat::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESGrpChat.sMsgId)
}
 void MESGrpChat::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESGrpChat.sMsgId)
}
 ::std::string* MESGrpChat::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESGrpChat.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESGrpChat::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.MESGrpChat.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESGrpChat::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.MESGrpChat.sMsgId)
}

// optional uint32 msgType = 6;
void MESGrpChat::clear_msgtype() {
  msgtype_ = 0u;
}
 ::google::protobuf::uint32 MESGrpChat::msgtype() const {
  // @@protoc_insertion_point(field_get:im.MESGrpChat.msgType)
  return msgtype_;
}
 void MESGrpChat::set_msgtype(::google::protobuf::uint32 value) {
  
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:im.MESGrpChat.msgType)
}

// optional uint64 msgTime = 7;
void MESGrpChat::clear_msgtime() {
  msgtime_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 MESGrpChat::msgtime() const {
  // @@protoc_insertion_point(field_get:im.MESGrpChat.msgTime)
  return msgtime_;
}
 void MESGrpChat::set_msgtime(::google::protobuf::uint64 value) {
  
  msgtime_ = value;
  // @@protoc_insertion_point(field_set:im.MESGrpChat.msgTime)
}

// optional uint32 encrypt = 8;
void MESGrpChat::clear_encrypt() {
  encrypt_ = 0u;
}
 ::google::protobuf::uint32 MESGrpChat::encrypt() const {
  // @@protoc_insertion_point(field_get:im.MESGrpChat.encrypt)
  return encrypt_;
}
 void MESGrpChat::set_encrypt(::google::protobuf::uint32 value) {
  
  encrypt_ = value;
  // @@protoc_insertion_point(field_set:im.MESGrpChat.encrypt)
}

// optional string sContent = 9;
void MESGrpChat::clear_scontent() {
  scontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESGrpChat::scontent() const {
  // @@protoc_insertion_point(field_get:im.MESGrpChat.sContent)
  return scontent_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESGrpChat::set_scontent(const ::std::string& value) {
  
  scontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESGrpChat.sContent)
}
 void MESGrpChat::set_scontent(const char* value) {
  
  scontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESGrpChat.sContent)
}
 void MESGrpChat::set_scontent(const char* value, size_t size) {
  
  scontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESGrpChat.sContent)
}
 ::std::string* MESGrpChat::mutable_scontent() {
  
  // @@protoc_insertion_point(field_mutable:im.MESGrpChat.sContent)
  return scontent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESGrpChat::release_scontent() {
  // @@protoc_insertion_point(field_release:im.MESGrpChat.sContent)
  
  return scontent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESGrpChat::set_allocated_scontent(::std::string* scontent) {
  if (scontent != NULL) {
    
  } else {
    
  }
  scontent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scontent);
  // @@protoc_insertion_point(field_set_allocated:im.MESGrpChat.sContent)
}

// repeated string sNotifyUsers = 10;
int MESGrpChat::snotifyusers_size() const {
  return snotifyusers_.size();
}
void MESGrpChat::clear_snotifyusers() {
  snotifyusers_.Clear();
}
 const ::std::string& MESGrpChat::snotifyusers(int index) const {
  // @@protoc_insertion_point(field_get:im.MESGrpChat.sNotifyUsers)
  return snotifyusers_.Get(index);
}
 ::std::string* MESGrpChat::mutable_snotifyusers(int index) {
  // @@protoc_insertion_point(field_mutable:im.MESGrpChat.sNotifyUsers)
  return snotifyusers_.Mutable(index);
}
 void MESGrpChat::set_snotifyusers(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:im.MESGrpChat.sNotifyUsers)
  snotifyusers_.Mutable(index)->assign(value);
}
 void MESGrpChat::set_snotifyusers(int index, const char* value) {
  snotifyusers_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:im.MESGrpChat.sNotifyUsers)
}
 void MESGrpChat::set_snotifyusers(int index, const char* value, size_t size) {
  snotifyusers_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:im.MESGrpChat.sNotifyUsers)
}
 ::std::string* MESGrpChat::add_snotifyusers() {
  // @@protoc_insertion_point(field_add_mutable:im.MESGrpChat.sNotifyUsers)
  return snotifyusers_.Add();
}
 void MESGrpChat::add_snotifyusers(const ::std::string& value) {
  snotifyusers_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:im.MESGrpChat.sNotifyUsers)
}
 void MESGrpChat::add_snotifyusers(const char* value) {
  snotifyusers_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:im.MESGrpChat.sNotifyUsers)
}
 void MESGrpChat::add_snotifyusers(const char* value, size_t size) {
  snotifyusers_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:im.MESGrpChat.sNotifyUsers)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
MESGrpChat::snotifyusers() const {
  // @@protoc_insertion_point(field_list:im.MESGrpChat.sNotifyUsers)
  return snotifyusers_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
MESGrpChat::mutable_snotifyusers() {
  // @@protoc_insertion_point(field_mutable_list:im.MESGrpChat.sNotifyUsers)
  return &snotifyusers_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int _MESGrpInterChatCancel::kSFromIdFieldNumber;
const int _MESGrpInterChatCancel::kSGrpIdFieldNumber;
const int _MESGrpInterChatCancel::kSToIdFieldNumber;
const int _MESGrpInterChatCancel::kSMsgIdFieldNumber;
const int _MESGrpInterChatCancel::kMsgTimeFieldNumber;
const int _MESGrpInterChatCancel::kCancelTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

_MESGrpInterChatCancel::_MESGrpInterChatCancel()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im._MESGrpInterChatCancel)
}

void _MESGrpInterChatCancel::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

_MESGrpInterChatCancel::_MESGrpInterChatCancel(const _MESGrpInterChatCancel& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im._MESGrpInterChatCancel)
}

void _MESGrpInterChatCancel::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgtime_ = GOOGLE_ULONGLONG(0);
  canceltime_ = GOOGLE_ULONGLONG(0);
}

_MESGrpInterChatCancel::~_MESGrpInterChatCancel() {
  // @@protoc_insertion_point(destructor:im._MESGrpInterChatCancel)
  SharedDtor();
}

void _MESGrpInterChatCancel::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void _MESGrpInterChatCancel::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const _MESGrpInterChatCancel& _MESGrpInterChatCancel::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

_MESGrpInterChatCancel* _MESGrpInterChatCancel::default_instance_ = NULL;

_MESGrpInterChatCancel* _MESGrpInterChatCancel::New(::google::protobuf::Arena* arena) const {
  _MESGrpInterChatCancel* n = new _MESGrpInterChatCancel;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void _MESGrpInterChatCancel::Clear() {
// @@protoc_insertion_point(message_clear_start:im._MESGrpInterChatCancel)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(_MESGrpInterChatCancel, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<_MESGrpInterChatCancel*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(msgtime_, canceltime_);
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

  stoid_.Clear();
}

bool _MESGrpInterChatCancel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im._MESGrpInterChatCancel)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sFromId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), this->sfromid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._MESGrpInterChatCancel.sFromId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sGrpId;
        break;
      }

      // optional string sGrpId = 2;
      case 2: {
        if (tag == 18) {
         parse_sGrpId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgrpid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgrpid().data(), this->sgrpid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._MESGrpInterChatCancel.sGrpId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sToId;
        break;
      }

      // repeated string sToId = 3;
      case 3: {
        if (tag == 26) {
         parse_sToId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid(this->stoid_size() - 1).data(),
            this->stoid(this->stoid_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._MESGrpInterChatCancel.sToId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sToId;
        if (input->ExpectTag(34)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 4;
      case 4: {
        if (tag == 34) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._MESGrpInterChatCancel.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_msgTime;
        break;
      }

      // optional uint64 msgTime = 5;
      case 5: {
        if (tag == 40) {
         parse_msgTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_cancelTime;
        break;
      }

      // optional uint64 cancelTime = 6;
      case 6: {
        if (tag == 48) {
         parse_cancelTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &canceltime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im._MESGrpInterChatCancel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im._MESGrpInterChatCancel)
  return false;
#undef DO_
}

void _MESGrpInterChatCancel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im._MESGrpInterChatCancel)
  // optional string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), this->sfromid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._MESGrpInterChatCancel.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // optional string sGrpId = 2;
  if (this->sgrpid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgrpid().data(), this->sgrpid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._MESGrpInterChatCancel.sGrpId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sgrpid(), output);
  }

  // repeated string sToId = 3;
  for (int i = 0; i < this->stoid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid(i).data(), this->stoid(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._MESGrpInterChatCancel.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->stoid(i), output);
  }

  // optional string sMsgId = 4;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._MESGrpInterChatCancel.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->smsgid(), output);
  }

  // optional uint64 msgTime = 5;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->msgtime(), output);
  }

  // optional uint64 cancelTime = 6;
  if (this->canceltime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->canceltime(), output);
  }

  // @@protoc_insertion_point(serialize_end:im._MESGrpInterChatCancel)
}

int _MESGrpInterChatCancel::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im._MESGrpInterChatCancel)
  int total_size = 0;

  // optional string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // optional string sGrpId = 2;
  if (this->sgrpid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgrpid());
  }

  // optional string sMsgId = 4;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // optional uint64 msgTime = 5;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // optional uint64 cancelTime = 6;
  if (this->canceltime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->canceltime());
  }

  // repeated string sToId = 3;
  total_size += 1 * this->stoid_size();
  for (int i = 0; i < this->stoid_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->stoid(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void _MESGrpInterChatCancel::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const _MESGrpInterChatCancel*>(&from));
}

void _MESGrpInterChatCancel::MergeFrom(const _MESGrpInterChatCancel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im._MESGrpInterChatCancel)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  stoid_.MergeFrom(from.stoid_);
  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.sgrpid().size() > 0) {

    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.canceltime() != 0) {
    set_canceltime(from.canceltime());
  }
}

void _MESGrpInterChatCancel::CopyFrom(const _MESGrpInterChatCancel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im._MESGrpInterChatCancel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool _MESGrpInterChatCancel::IsInitialized() const {

  return true;
}

void _MESGrpInterChatCancel::Swap(_MESGrpInterChatCancel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void _MESGrpInterChatCancel::InternalSwap(_MESGrpInterChatCancel* other) {
  sfromid_.Swap(&other->sfromid_);
  sgrpid_.Swap(&other->sgrpid_);
  stoid_.UnsafeArenaSwap(&other->stoid_);
  smsgid_.Swap(&other->smsgid_);
  std::swap(msgtime_, other->msgtime_);
  std::swap(canceltime_, other->canceltime_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string _MESGrpInterChatCancel::GetTypeName() const {
  return "im._MESGrpInterChatCancel";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// _MESGrpInterChatCancel

// optional string sFromId = 1;
void _MESGrpInterChatCancel::clear_sfromid() {
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& _MESGrpInterChatCancel::sfromid() const {
  // @@protoc_insertion_point(field_get:im._MESGrpInterChatCancel.sFromId)
  return sfromid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void _MESGrpInterChatCancel::set_sfromid(const ::std::string& value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im._MESGrpInterChatCancel.sFromId)
}
 void _MESGrpInterChatCancel::set_sfromid(const char* value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im._MESGrpInterChatCancel.sFromId)
}
 void _MESGrpInterChatCancel::set_sfromid(const char* value, size_t size) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im._MESGrpInterChatCancel.sFromId)
}
 ::std::string* _MESGrpInterChatCancel::mutable_sfromid() {
  
  // @@protoc_insertion_point(field_mutable:im._MESGrpInterChatCancel.sFromId)
  return sfromid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* _MESGrpInterChatCancel::release_sfromid() {
  // @@protoc_insertion_point(field_release:im._MESGrpInterChatCancel.sFromId)
  
  return sfromid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void _MESGrpInterChatCancel::set_allocated_sfromid(::std::string* sfromid) {
  if (sfromid != NULL) {
    
  } else {
    
  }
  sfromid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sfromid);
  // @@protoc_insertion_point(field_set_allocated:im._MESGrpInterChatCancel.sFromId)
}

// optional string sGrpId = 2;
void _MESGrpInterChatCancel::clear_sgrpid() {
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& _MESGrpInterChatCancel::sgrpid() const {
  // @@protoc_insertion_point(field_get:im._MESGrpInterChatCancel.sGrpId)
  return sgrpid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void _MESGrpInterChatCancel::set_sgrpid(const ::std::string& value) {
  
  sgrpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im._MESGrpInterChatCancel.sGrpId)
}
 void _MESGrpInterChatCancel::set_sgrpid(const char* value) {
  
  sgrpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im._MESGrpInterChatCancel.sGrpId)
}
 void _MESGrpInterChatCancel::set_sgrpid(const char* value, size_t size) {
  
  sgrpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im._MESGrpInterChatCancel.sGrpId)
}
 ::std::string* _MESGrpInterChatCancel::mutable_sgrpid() {
  
  // @@protoc_insertion_point(field_mutable:im._MESGrpInterChatCancel.sGrpId)
  return sgrpid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* _MESGrpInterChatCancel::release_sgrpid() {
  // @@protoc_insertion_point(field_release:im._MESGrpInterChatCancel.sGrpId)
  
  return sgrpid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void _MESGrpInterChatCancel::set_allocated_sgrpid(::std::string* sgrpid) {
  if (sgrpid != NULL) {
    
  } else {
    
  }
  sgrpid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sgrpid);
  // @@protoc_insertion_point(field_set_allocated:im._MESGrpInterChatCancel.sGrpId)
}

// repeated string sToId = 3;
int _MESGrpInterChatCancel::stoid_size() const {
  return stoid_.size();
}
void _MESGrpInterChatCancel::clear_stoid() {
  stoid_.Clear();
}
 const ::std::string& _MESGrpInterChatCancel::stoid(int index) const {
  // @@protoc_insertion_point(field_get:im._MESGrpInterChatCancel.sToId)
  return stoid_.Get(index);
}
 ::std::string* _MESGrpInterChatCancel::mutable_stoid(int index) {
  // @@protoc_insertion_point(field_mutable:im._MESGrpInterChatCancel.sToId)
  return stoid_.Mutable(index);
}
 void _MESGrpInterChatCancel::set_stoid(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:im._MESGrpInterChatCancel.sToId)
  stoid_.Mutable(index)->assign(value);
}
 void _MESGrpInterChatCancel::set_stoid(int index, const char* value) {
  stoid_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:im._MESGrpInterChatCancel.sToId)
}
 void _MESGrpInterChatCancel::set_stoid(int index, const char* value, size_t size) {
  stoid_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:im._MESGrpInterChatCancel.sToId)
}
 ::std::string* _MESGrpInterChatCancel::add_stoid() {
  // @@protoc_insertion_point(field_add_mutable:im._MESGrpInterChatCancel.sToId)
  return stoid_.Add();
}
 void _MESGrpInterChatCancel::add_stoid(const ::std::string& value) {
  stoid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:im._MESGrpInterChatCancel.sToId)
}
 void _MESGrpInterChatCancel::add_stoid(const char* value) {
  stoid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:im._MESGrpInterChatCancel.sToId)
}
 void _MESGrpInterChatCancel::add_stoid(const char* value, size_t size) {
  stoid_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:im._MESGrpInterChatCancel.sToId)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
_MESGrpInterChatCancel::stoid() const {
  // @@protoc_insertion_point(field_list:im._MESGrpInterChatCancel.sToId)
  return stoid_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
_MESGrpInterChatCancel::mutable_stoid() {
  // @@protoc_insertion_point(field_mutable_list:im._MESGrpInterChatCancel.sToId)
  return &stoid_;
}

// optional string sMsgId = 4;
void _MESGrpInterChatCancel::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& _MESGrpInterChatCancel::smsgid() const {
  // @@protoc_insertion_point(field_get:im._MESGrpInterChatCancel.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void _MESGrpInterChatCancel::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im._MESGrpInterChatCancel.sMsgId)
}
 void _MESGrpInterChatCancel::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im._MESGrpInterChatCancel.sMsgId)
}
 void _MESGrpInterChatCancel::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im._MESGrpInterChatCancel.sMsgId)
}
 ::std::string* _MESGrpInterChatCancel::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im._MESGrpInterChatCancel.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* _MESGrpInterChatCancel::release_smsgid() {
  // @@protoc_insertion_point(field_release:im._MESGrpInterChatCancel.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void _MESGrpInterChatCancel::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im._MESGrpInterChatCancel.sMsgId)
}

// optional uint64 msgTime = 5;
void _MESGrpInterChatCancel::clear_msgtime() {
  msgtime_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 _MESGrpInterChatCancel::msgtime() const {
  // @@protoc_insertion_point(field_get:im._MESGrpInterChatCancel.msgTime)
  return msgtime_;
}
 void _MESGrpInterChatCancel::set_msgtime(::google::protobuf::uint64 value) {
  
  msgtime_ = value;
  // @@protoc_insertion_point(field_set:im._MESGrpInterChatCancel.msgTime)
}

// optional uint64 cancelTime = 6;
void _MESGrpInterChatCancel::clear_canceltime() {
  canceltime_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 _MESGrpInterChatCancel::canceltime() const {
  // @@protoc_insertion_point(field_get:im._MESGrpInterChatCancel.cancelTime)
  return canceltime_;
}
 void _MESGrpInterChatCancel::set_canceltime(::google::protobuf::uint64 value) {
  
  canceltime_ = value;
  // @@protoc_insertion_point(field_set:im._MESGrpInterChatCancel.cancelTime)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int _MESGrpInterChatCancelAck::kSUserIdFieldNumber;
const int _MESGrpInterChatCancelAck::kSGrpIdFieldNumber;
const int _MESGrpInterChatCancelAck::kSMsgIdFieldNumber;
const int _MESGrpInterChatCancelAck::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

_MESGrpInterChatCancelAck::_MESGrpInterChatCancelAck()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im._MESGrpInterChatCancelAck)
}

void _MESGrpInterChatCancelAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

_MESGrpInterChatCancelAck::_MESGrpInterChatCancelAck(const _MESGrpInterChatCancelAck& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im._MESGrpInterChatCancelAck)
}

void _MESGrpInterChatCancelAck::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

_MESGrpInterChatCancelAck::~_MESGrpInterChatCancelAck() {
  // @@protoc_insertion_point(destructor:im._MESGrpInterChatCancelAck)
  SharedDtor();
}

void _MESGrpInterChatCancelAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void _MESGrpInterChatCancelAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const _MESGrpInterChatCancelAck& _MESGrpInterChatCancelAck::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

_MESGrpInterChatCancelAck* _MESGrpInterChatCancelAck::default_instance_ = NULL;

_MESGrpInterChatCancelAck* _MESGrpInterChatCancelAck::New(::google::protobuf::Arena* arena) const {
  _MESGrpInterChatCancelAck* n = new _MESGrpInterChatCancelAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void _MESGrpInterChatCancelAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im._MESGrpInterChatCancelAck)
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

bool _MESGrpInterChatCancelAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im._MESGrpInterChatCancelAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sUserId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), this->suserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._MESGrpInterChatCancelAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sGrpId;
        break;
      }

      // optional string sGrpId = 2;
      case 2: {
        if (tag == 18) {
         parse_sGrpId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgrpid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgrpid().data(), this->sgrpid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._MESGrpInterChatCancelAck.sGrpId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 3;
      case 3: {
        if (tag == 26) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im._MESGrpInterChatCancelAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_errcode;
        break;
      }

      // optional .im.ErrCode errcode = 4;
      case 4: {
        if (tag == 32) {
         parse_errcode:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im._MESGrpInterChatCancelAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im._MESGrpInterChatCancelAck)
  return false;
#undef DO_
}

void _MESGrpInterChatCancelAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im._MESGrpInterChatCancelAck)
  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), this->suserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._MESGrpInterChatCancelAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // optional string sGrpId = 2;
  if (this->sgrpid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgrpid().data(), this->sgrpid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._MESGrpInterChatCancelAck.sGrpId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sgrpid(), output);
  }

  // optional string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im._MESGrpInterChatCancelAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // optional .im.ErrCode errcode = 4;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->errcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:im._MESGrpInterChatCancelAck)
}

int _MESGrpInterChatCancelAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im._MESGrpInterChatCancelAck)
  int total_size = 0;

  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // optional string sGrpId = 2;
  if (this->sgrpid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgrpid());
  }

  // optional string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // optional .im.ErrCode errcode = 4;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void _MESGrpInterChatCancelAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const _MESGrpInterChatCancelAck*>(&from));
}

void _MESGrpInterChatCancelAck::MergeFrom(const _MESGrpInterChatCancelAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im._MESGrpInterChatCancelAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.sgrpid().size() > 0) {

    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void _MESGrpInterChatCancelAck::CopyFrom(const _MESGrpInterChatCancelAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im._MESGrpInterChatCancelAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool _MESGrpInterChatCancelAck::IsInitialized() const {

  return true;
}

void _MESGrpInterChatCancelAck::Swap(_MESGrpInterChatCancelAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void _MESGrpInterChatCancelAck::InternalSwap(_MESGrpInterChatCancelAck* other) {
  suserid_.Swap(&other->suserid_);
  sgrpid_.Swap(&other->sgrpid_);
  smsgid_.Swap(&other->smsgid_);
  std::swap(errcode_, other->errcode_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string _MESGrpInterChatCancelAck::GetTypeName() const {
  return "im._MESGrpInterChatCancelAck";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// _MESGrpInterChatCancelAck

// optional string sUserId = 1;
void _MESGrpInterChatCancelAck::clear_suserid() {
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& _MESGrpInterChatCancelAck::suserid() const {
  // @@protoc_insertion_point(field_get:im._MESGrpInterChatCancelAck.sUserId)
  return suserid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void _MESGrpInterChatCancelAck::set_suserid(const ::std::string& value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im._MESGrpInterChatCancelAck.sUserId)
}
 void _MESGrpInterChatCancelAck::set_suserid(const char* value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im._MESGrpInterChatCancelAck.sUserId)
}
 void _MESGrpInterChatCancelAck::set_suserid(const char* value, size_t size) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im._MESGrpInterChatCancelAck.sUserId)
}
 ::std::string* _MESGrpInterChatCancelAck::mutable_suserid() {
  
  // @@protoc_insertion_point(field_mutable:im._MESGrpInterChatCancelAck.sUserId)
  return suserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* _MESGrpInterChatCancelAck::release_suserid() {
  // @@protoc_insertion_point(field_release:im._MESGrpInterChatCancelAck.sUserId)
  
  return suserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void _MESGrpInterChatCancelAck::set_allocated_suserid(::std::string* suserid) {
  if (suserid != NULL) {
    
  } else {
    
  }
  suserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), suserid);
  // @@protoc_insertion_point(field_set_allocated:im._MESGrpInterChatCancelAck.sUserId)
}

// optional string sGrpId = 2;
void _MESGrpInterChatCancelAck::clear_sgrpid() {
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& _MESGrpInterChatCancelAck::sgrpid() const {
  // @@protoc_insertion_point(field_get:im._MESGrpInterChatCancelAck.sGrpId)
  return sgrpid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void _MESGrpInterChatCancelAck::set_sgrpid(const ::std::string& value) {
  
  sgrpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im._MESGrpInterChatCancelAck.sGrpId)
}
 void _MESGrpInterChatCancelAck::set_sgrpid(const char* value) {
  
  sgrpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im._MESGrpInterChatCancelAck.sGrpId)
}
 void _MESGrpInterChatCancelAck::set_sgrpid(const char* value, size_t size) {
  
  sgrpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im._MESGrpInterChatCancelAck.sGrpId)
}
 ::std::string* _MESGrpInterChatCancelAck::mutable_sgrpid() {
  
  // @@protoc_insertion_point(field_mutable:im._MESGrpInterChatCancelAck.sGrpId)
  return sgrpid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* _MESGrpInterChatCancelAck::release_sgrpid() {
  // @@protoc_insertion_point(field_release:im._MESGrpInterChatCancelAck.sGrpId)
  
  return sgrpid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void _MESGrpInterChatCancelAck::set_allocated_sgrpid(::std::string* sgrpid) {
  if (sgrpid != NULL) {
    
  } else {
    
  }
  sgrpid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sgrpid);
  // @@protoc_insertion_point(field_set_allocated:im._MESGrpInterChatCancelAck.sGrpId)
}

// optional string sMsgId = 3;
void _MESGrpInterChatCancelAck::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& _MESGrpInterChatCancelAck::smsgid() const {
  // @@protoc_insertion_point(field_get:im._MESGrpInterChatCancelAck.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void _MESGrpInterChatCancelAck::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im._MESGrpInterChatCancelAck.sMsgId)
}
 void _MESGrpInterChatCancelAck::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im._MESGrpInterChatCancelAck.sMsgId)
}
 void _MESGrpInterChatCancelAck::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im._MESGrpInterChatCancelAck.sMsgId)
}
 ::std::string* _MESGrpInterChatCancelAck::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im._MESGrpInterChatCancelAck.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* _MESGrpInterChatCancelAck::release_smsgid() {
  // @@protoc_insertion_point(field_release:im._MESGrpInterChatCancelAck.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void _MESGrpInterChatCancelAck::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im._MESGrpInterChatCancelAck.sMsgId)
}

// optional .im.ErrCode errcode = 4;
void _MESGrpInterChatCancelAck::clear_errcode() {
  errcode_ = 0;
}
 ::im::ErrCode _MESGrpInterChatCancelAck::errcode() const {
  // @@protoc_insertion_point(field_get:im._MESGrpInterChatCancelAck.errcode)
  return static_cast< ::im::ErrCode >(errcode_);
}
 void _MESGrpInterChatCancelAck::set_errcode(::im::ErrCode value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:im._MESGrpInterChatCancelAck.errcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESChatCancel::kSFromIdFieldNumber;
const int MESChatCancel::kSToIdFieldNumber;
const int MESChatCancel::kNCancelTypeFieldNumber;
const int MESChatCancel::kSGroupIdFieldNumber;
const int MESChatCancel::kSMsgIdFieldNumber;
const int MESChatCancel::kMsgTimeFieldNumber;
const int MESChatCancel::kCancelTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESChatCancel::MESChatCancel()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESChatCancel)
}

void MESChatCancel::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MESChatCancel::MESChatCancel(const MESChatCancel& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.MESChatCancel)
}

void MESChatCancel::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ncanceltype_ = 0u;
  sgroupid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgtime_ = GOOGLE_ULONGLONG(0);
  canceltime_ = GOOGLE_ULONGLONG(0);
}

MESChatCancel::~MESChatCancel() {
  // @@protoc_insertion_point(destructor:im.MESChatCancel)
  SharedDtor();
}

void MESChatCancel::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MESChatCancel::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MESChatCancel& MESChatCancel::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

MESChatCancel* MESChatCancel::default_instance_ = NULL;

MESChatCancel* MESChatCancel::New(::google::protobuf::Arena* arena) const {
  MESChatCancel* n = new MESChatCancel;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MESChatCancel::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESChatCancel)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MESChatCancel, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MESChatCancel*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(msgtime_, ncanceltype_);
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgroupid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool MESChatCancel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.MESChatCancel)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sFromId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), this->sfromid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESChatCancel.sFromId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sToId;
        break;
      }

      // optional string sToId = 2;
      case 2: {
        if (tag == 18) {
         parse_sToId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), this->stoid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESChatCancel.sToId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_nCancelType;
        break;
      }

      // optional uint32 nCancelType = 3;
      case 3: {
        if (tag == 24) {
         parse_nCancelType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ncanceltype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_sGroupId;
        break;
      }

      // optional string sGroupId = 4;
      case 4: {
        if (tag == 34) {
         parse_sGroupId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgroupid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgroupid().data(), this->sgroupid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESChatCancel.sGroupId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 5;
      case 5: {
        if (tag == 42) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESChatCancel.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_msgTime;
        break;
      }

      // optional uint64 msgTime = 6;
      case 6: {
        if (tag == 48) {
         parse_msgTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_cancelTime;
        break;
      }

      // optional uint64 cancelTime = 7;
      case 7: {
        if (tag == 56) {
         parse_cancelTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &canceltime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESChatCancel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESChatCancel)
  return false;
#undef DO_
}

void MESChatCancel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESChatCancel)
  // optional string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), this->sfromid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESChatCancel.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // optional string sToId = 2;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), this->stoid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESChatCancel.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stoid(), output);
  }

  // optional uint32 nCancelType = 3;
  if (this->ncanceltype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ncanceltype(), output);
  }

  // optional string sGroupId = 4;
  if (this->sgroupid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgroupid().data(), this->sgroupid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESChatCancel.sGroupId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sgroupid(), output);
  }

  // optional string sMsgId = 5;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESChatCancel.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->smsgid(), output);
  }

  // optional uint64 msgTime = 6;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->msgtime(), output);
  }

  // optional uint64 cancelTime = 7;
  if (this->canceltime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->canceltime(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.MESChatCancel)
}

int MESChatCancel::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESChatCancel)
  int total_size = 0;

  // optional string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // optional string sToId = 2;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // optional uint32 nCancelType = 3;
  if (this->ncanceltype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ncanceltype());
  }

  // optional string sGroupId = 4;
  if (this->sgroupid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgroupid());
  }

  // optional string sMsgId = 5;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // optional uint64 msgTime = 6;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // optional uint64 cancelTime = 7;
  if (this->canceltime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->canceltime());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MESChatCancel::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESChatCancel*>(&from));
}

void MESChatCancel::MergeFrom(const MESChatCancel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESChatCancel)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.ncanceltype() != 0) {
    set_ncanceltype(from.ncanceltype());
  }
  if (from.sgroupid().size() > 0) {

    sgroupid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgroupid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.canceltime() != 0) {
    set_canceltime(from.canceltime());
  }
}

void MESChatCancel::CopyFrom(const MESChatCancel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESChatCancel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESChatCancel::IsInitialized() const {

  return true;
}

void MESChatCancel::Swap(MESChatCancel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESChatCancel::InternalSwap(MESChatCancel* other) {
  sfromid_.Swap(&other->sfromid_);
  stoid_.Swap(&other->stoid_);
  std::swap(ncanceltype_, other->ncanceltype_);
  sgroupid_.Swap(&other->sgroupid_);
  smsgid_.Swap(&other->smsgid_);
  std::swap(msgtime_, other->msgtime_);
  std::swap(canceltime_, other->canceltime_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string MESChatCancel::GetTypeName() const {
  return "im.MESChatCancel";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MESChatCancel

// optional string sFromId = 1;
void MESChatCancel::clear_sfromid() {
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESChatCancel::sfromid() const {
  // @@protoc_insertion_point(field_get:im.MESChatCancel.sFromId)
  return sfromid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESChatCancel::set_sfromid(const ::std::string& value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESChatCancel.sFromId)
}
 void MESChatCancel::set_sfromid(const char* value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESChatCancel.sFromId)
}
 void MESChatCancel::set_sfromid(const char* value, size_t size) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESChatCancel.sFromId)
}
 ::std::string* MESChatCancel::mutable_sfromid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESChatCancel.sFromId)
  return sfromid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESChatCancel::release_sfromid() {
  // @@protoc_insertion_point(field_release:im.MESChatCancel.sFromId)
  
  return sfromid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESChatCancel::set_allocated_sfromid(::std::string* sfromid) {
  if (sfromid != NULL) {
    
  } else {
    
  }
  sfromid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sfromid);
  // @@protoc_insertion_point(field_set_allocated:im.MESChatCancel.sFromId)
}

// optional string sToId = 2;
void MESChatCancel::clear_stoid() {
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESChatCancel::stoid() const {
  // @@protoc_insertion_point(field_get:im.MESChatCancel.sToId)
  return stoid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESChatCancel::set_stoid(const ::std::string& value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESChatCancel.sToId)
}
 void MESChatCancel::set_stoid(const char* value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESChatCancel.sToId)
}
 void MESChatCancel::set_stoid(const char* value, size_t size) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESChatCancel.sToId)
}
 ::std::string* MESChatCancel::mutable_stoid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESChatCancel.sToId)
  return stoid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESChatCancel::release_stoid() {
  // @@protoc_insertion_point(field_release:im.MESChatCancel.sToId)
  
  return stoid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESChatCancel::set_allocated_stoid(::std::string* stoid) {
  if (stoid != NULL) {
    
  } else {
    
  }
  stoid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stoid);
  // @@protoc_insertion_point(field_set_allocated:im.MESChatCancel.sToId)
}

// optional uint32 nCancelType = 3;
void MESChatCancel::clear_ncanceltype() {
  ncanceltype_ = 0u;
}
 ::google::protobuf::uint32 MESChatCancel::ncanceltype() const {
  // @@protoc_insertion_point(field_get:im.MESChatCancel.nCancelType)
  return ncanceltype_;
}
 void MESChatCancel::set_ncanceltype(::google::protobuf::uint32 value) {
  
  ncanceltype_ = value;
  // @@protoc_insertion_point(field_set:im.MESChatCancel.nCancelType)
}

// optional string sGroupId = 4;
void MESChatCancel::clear_sgroupid() {
  sgroupid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESChatCancel::sgroupid() const {
  // @@protoc_insertion_point(field_get:im.MESChatCancel.sGroupId)
  return sgroupid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESChatCancel::set_sgroupid(const ::std::string& value) {
  
  sgroupid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESChatCancel.sGroupId)
}
 void MESChatCancel::set_sgroupid(const char* value) {
  
  sgroupid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESChatCancel.sGroupId)
}
 void MESChatCancel::set_sgroupid(const char* value, size_t size) {
  
  sgroupid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESChatCancel.sGroupId)
}
 ::std::string* MESChatCancel::mutable_sgroupid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESChatCancel.sGroupId)
  return sgroupid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESChatCancel::release_sgroupid() {
  // @@protoc_insertion_point(field_release:im.MESChatCancel.sGroupId)
  
  return sgroupid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESChatCancel::set_allocated_sgroupid(::std::string* sgroupid) {
  if (sgroupid != NULL) {
    
  } else {
    
  }
  sgroupid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sgroupid);
  // @@protoc_insertion_point(field_set_allocated:im.MESChatCancel.sGroupId)
}

// optional string sMsgId = 5;
void MESChatCancel::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESChatCancel::smsgid() const {
  // @@protoc_insertion_point(field_get:im.MESChatCancel.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESChatCancel::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESChatCancel.sMsgId)
}
 void MESChatCancel::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESChatCancel.sMsgId)
}
 void MESChatCancel::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESChatCancel.sMsgId)
}
 ::std::string* MESChatCancel::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESChatCancel.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESChatCancel::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.MESChatCancel.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESChatCancel::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.MESChatCancel.sMsgId)
}

// optional uint64 msgTime = 6;
void MESChatCancel::clear_msgtime() {
  msgtime_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 MESChatCancel::msgtime() const {
  // @@protoc_insertion_point(field_get:im.MESChatCancel.msgTime)
  return msgtime_;
}
 void MESChatCancel::set_msgtime(::google::protobuf::uint64 value) {
  
  msgtime_ = value;
  // @@protoc_insertion_point(field_set:im.MESChatCancel.msgTime)
}

// optional uint64 cancelTime = 7;
void MESChatCancel::clear_canceltime() {
  canceltime_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 MESChatCancel::canceltime() const {
  // @@protoc_insertion_point(field_get:im.MESChatCancel.cancelTime)
  return canceltime_;
}
 void MESChatCancel::set_canceltime(::google::protobuf::uint64 value) {
  
  canceltime_ = value;
  // @@protoc_insertion_point(field_set:im.MESChatCancel.cancelTime)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MESChatCancelAck::kSUserIdFieldNumber;
const int MESChatCancelAck::kSMsgIdFieldNumber;
const int MESChatCancelAck::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MESChatCancelAck::MESChatCancelAck()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MESChatCancelAck)
}

void MESChatCancelAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MESChatCancelAck::MESChatCancelAck(const MESChatCancelAck& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.MESChatCancelAck)
}

void MESChatCancelAck::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

MESChatCancelAck::~MESChatCancelAck() {
  // @@protoc_insertion_point(destructor:im.MESChatCancelAck)
  SharedDtor();
}

void MESChatCancelAck::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MESChatCancelAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MESChatCancelAck& MESChatCancelAck::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

MESChatCancelAck* MESChatCancelAck::default_instance_ = NULL;

MESChatCancelAck* MESChatCancelAck::New(::google::protobuf::Arena* arena) const {
  MESChatCancelAck* n = new MESChatCancelAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MESChatCancelAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MESChatCancelAck)
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

bool MESChatCancelAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.MESChatCancelAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sUserId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), this->suserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESChatCancelAck.sUserId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 2;
      case 2: {
        if (tag == 18) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MESChatCancelAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_errcode;
        break;
      }

      // optional .im.ErrCode errcode = 3;
      case 3: {
        if (tag == 24) {
         parse_errcode:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MESChatCancelAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MESChatCancelAck)
  return false;
#undef DO_
}

void MESChatCancelAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MESChatCancelAck)
  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), this->suserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESChatCancelAck.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // optional string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MESChatCancelAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  // optional .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->errcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.MESChatCancelAck)
}

int MESChatCancelAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.MESChatCancelAck)
  int total_size = 0;

  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // optional string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // optional .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MESChatCancelAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MESChatCancelAck*>(&from));
}

void MESChatCancelAck::MergeFrom(const MESChatCancelAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MESChatCancelAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void MESChatCancelAck::CopyFrom(const MESChatCancelAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MESChatCancelAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MESChatCancelAck::IsInitialized() const {

  return true;
}

void MESChatCancelAck::Swap(MESChatCancelAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MESChatCancelAck::InternalSwap(MESChatCancelAck* other) {
  suserid_.Swap(&other->suserid_);
  smsgid_.Swap(&other->smsgid_);
  std::swap(errcode_, other->errcode_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string MESChatCancelAck::GetTypeName() const {
  return "im.MESChatCancelAck";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MESChatCancelAck

// optional string sUserId = 1;
void MESChatCancelAck::clear_suserid() {
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESChatCancelAck::suserid() const {
  // @@protoc_insertion_point(field_get:im.MESChatCancelAck.sUserId)
  return suserid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESChatCancelAck::set_suserid(const ::std::string& value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESChatCancelAck.sUserId)
}
 void MESChatCancelAck::set_suserid(const char* value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESChatCancelAck.sUserId)
}
 void MESChatCancelAck::set_suserid(const char* value, size_t size) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESChatCancelAck.sUserId)
}
 ::std::string* MESChatCancelAck::mutable_suserid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESChatCancelAck.sUserId)
  return suserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESChatCancelAck::release_suserid() {
  // @@protoc_insertion_point(field_release:im.MESChatCancelAck.sUserId)
  
  return suserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESChatCancelAck::set_allocated_suserid(::std::string* suserid) {
  if (suserid != NULL) {
    
  } else {
    
  }
  suserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), suserid);
  // @@protoc_insertion_point(field_set_allocated:im.MESChatCancelAck.sUserId)
}

// optional string sMsgId = 2;
void MESChatCancelAck::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MESChatCancelAck::smsgid() const {
  // @@protoc_insertion_point(field_get:im.MESChatCancelAck.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESChatCancelAck::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MESChatCancelAck.sMsgId)
}
 void MESChatCancelAck::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MESChatCancelAck.sMsgId)
}
 void MESChatCancelAck::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MESChatCancelAck.sMsgId)
}
 ::std::string* MESChatCancelAck::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.MESChatCancelAck.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MESChatCancelAck::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.MESChatCancelAck.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MESChatCancelAck::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.MESChatCancelAck.sMsgId)
}

// optional .im.ErrCode errcode = 3;
void MESChatCancelAck::clear_errcode() {
  errcode_ = 0;
}
 ::im::ErrCode MESChatCancelAck::errcode() const {
  // @@protoc_insertion_point(field_get:im.MESChatCancelAck.errcode)
  return static_cast< ::im::ErrCode >(errcode_);
}
 void MESChatCancelAck::set_errcode(::im::ErrCode value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:im.MESChatCancelAck.errcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MSGCommonNotify::kSFromIdFieldNumber;
const int MSGCommonNotify::kSToIdsFieldNumber;
const int MSGCommonNotify::kSMsgIdFieldNumber;
const int MSGCommonNotify::kNotifyTypeFieldNumber;
const int MSGCommonNotify::kSContentFieldNumber;
const int MSGCommonNotify::kMsgTimeFieldNumber;
const int MSGCommonNotify::kSToIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MSGCommonNotify::MSGCommonNotify()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MSGCommonNotify)
}

void MSGCommonNotify::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MSGCommonNotify::MSGCommonNotify(const MSGCommonNotify& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.MSGCommonNotify)
}

void MSGCommonNotify::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  notifytype_ = 0;
  scontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgtime_ = GOOGLE_ULONGLONG(0);
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MSGCommonNotify::~MSGCommonNotify() {
  // @@protoc_insertion_point(destructor:im.MSGCommonNotify)
  SharedDtor();
}

void MSGCommonNotify::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MSGCommonNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MSGCommonNotify& MSGCommonNotify::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

MSGCommonNotify* MSGCommonNotify::default_instance_ = NULL;

MSGCommonNotify* MSGCommonNotify::New(::google::protobuf::Arena* arena) const {
  MSGCommonNotify* n = new MSGCommonNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MSGCommonNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MSGCommonNotify)
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  notifytype_ = 0;
  scontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgtime_ = GOOGLE_ULONGLONG(0);
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoids_.Clear();
}

bool MSGCommonNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.MSGCommonNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sFromId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), this->sfromid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MSGCommonNotify.sFromId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sToIds;
        break;
      }

      // repeated string sToIds = 2;
      case 2: {
        if (tag == 18) {
         parse_sToIds:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_stoids()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoids(this->stoids_size() - 1).data(),
            this->stoids(this->stoids_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MSGCommonNotify.sToIds"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sToIds;
        if (input->ExpectTag(26)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 3;
      case 3: {
        if (tag == 26) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MSGCommonNotify.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_notifyType;
        break;
      }

      // optional .im.CommonNotifyType notifyType = 4;
      case 4: {
        if (tag == 32) {
         parse_notifyType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_notifytype(static_cast< ::im::CommonNotifyType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_sContent;
        break;
      }

      // optional string sContent = 5;
      case 5: {
        if (tag == 42) {
         parse_sContent:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scontent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scontent().data(), this->scontent().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MSGCommonNotify.sContent"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_msgTime;
        break;
      }

      // optional uint64 msgTime = 6;
      case 6: {
        if (tag == 48) {
         parse_msgTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_sToId;
        break;
      }

      // optional string sToId = 7;
      case 7: {
        if (tag == 58) {
         parse_sToId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), this->stoid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MSGCommonNotify.sToId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MSGCommonNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MSGCommonNotify)
  return false;
#undef DO_
}

void MSGCommonNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MSGCommonNotify)
  // optional string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), this->sfromid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MSGCommonNotify.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // repeated string sToIds = 2;
  for (int i = 0; i < this->stoids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoids(i).data(), this->stoids(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MSGCommonNotify.sToIds");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->stoids(i), output);
  }

  // optional string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MSGCommonNotify.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // optional .im.CommonNotifyType notifyType = 4;
  if (this->notifytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->notifytype(), output);
  }

  // optional string sContent = 5;
  if (this->scontent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scontent().data(), this->scontent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MSGCommonNotify.sContent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->scontent(), output);
  }

  // optional uint64 msgTime = 6;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->msgtime(), output);
  }

  // optional string sToId = 7;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), this->stoid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MSGCommonNotify.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->stoid(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.MSGCommonNotify)
}

int MSGCommonNotify::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.MSGCommonNotify)
  int total_size = 0;

  // optional string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // optional string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // optional .im.CommonNotifyType notifyType = 4;
  if (this->notifytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->notifytype());
  }

  // optional string sContent = 5;
  if (this->scontent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scontent());
  }

  // optional uint64 msgTime = 6;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // optional string sToId = 7;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // repeated string sToIds = 2;
  total_size += 1 * this->stoids_size();
  for (int i = 0; i < this->stoids_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->stoids(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MSGCommonNotify::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MSGCommonNotify*>(&from));
}

void MSGCommonNotify::MergeFrom(const MSGCommonNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MSGCommonNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  stoids_.MergeFrom(from.stoids_);
  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.notifytype() != 0) {
    set_notifytype(from.notifytype());
  }
  if (from.scontent().size() > 0) {

    scontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scontent_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
}

void MSGCommonNotify::CopyFrom(const MSGCommonNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MSGCommonNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSGCommonNotify::IsInitialized() const {

  return true;
}

void MSGCommonNotify::Swap(MSGCommonNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MSGCommonNotify::InternalSwap(MSGCommonNotify* other) {
  sfromid_.Swap(&other->sfromid_);
  stoids_.UnsafeArenaSwap(&other->stoids_);
  smsgid_.Swap(&other->smsgid_);
  std::swap(notifytype_, other->notifytype_);
  scontent_.Swap(&other->scontent_);
  std::swap(msgtime_, other->msgtime_);
  stoid_.Swap(&other->stoid_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string MSGCommonNotify::GetTypeName() const {
  return "im.MSGCommonNotify";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MSGCommonNotify

// optional string sFromId = 1;
void MSGCommonNotify::clear_sfromid() {
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MSGCommonNotify::sfromid() const {
  // @@protoc_insertion_point(field_get:im.MSGCommonNotify.sFromId)
  return sfromid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MSGCommonNotify::set_sfromid(const ::std::string& value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MSGCommonNotify.sFromId)
}
 void MSGCommonNotify::set_sfromid(const char* value) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MSGCommonNotify.sFromId)
}
 void MSGCommonNotify::set_sfromid(const char* value, size_t size) {
  
  sfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MSGCommonNotify.sFromId)
}
 ::std::string* MSGCommonNotify::mutable_sfromid() {
  
  // @@protoc_insertion_point(field_mutable:im.MSGCommonNotify.sFromId)
  return sfromid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MSGCommonNotify::release_sfromid() {
  // @@protoc_insertion_point(field_release:im.MSGCommonNotify.sFromId)
  
  return sfromid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MSGCommonNotify::set_allocated_sfromid(::std::string* sfromid) {
  if (sfromid != NULL) {
    
  } else {
    
  }
  sfromid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sfromid);
  // @@protoc_insertion_point(field_set_allocated:im.MSGCommonNotify.sFromId)
}

// repeated string sToIds = 2;
int MSGCommonNotify::stoids_size() const {
  return stoids_.size();
}
void MSGCommonNotify::clear_stoids() {
  stoids_.Clear();
}
 const ::std::string& MSGCommonNotify::stoids(int index) const {
  // @@protoc_insertion_point(field_get:im.MSGCommonNotify.sToIds)
  return stoids_.Get(index);
}
 ::std::string* MSGCommonNotify::mutable_stoids(int index) {
  // @@protoc_insertion_point(field_mutable:im.MSGCommonNotify.sToIds)
  return stoids_.Mutable(index);
}
 void MSGCommonNotify::set_stoids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:im.MSGCommonNotify.sToIds)
  stoids_.Mutable(index)->assign(value);
}
 void MSGCommonNotify::set_stoids(int index, const char* value) {
  stoids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:im.MSGCommonNotify.sToIds)
}
 void MSGCommonNotify::set_stoids(int index, const char* value, size_t size) {
  stoids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:im.MSGCommonNotify.sToIds)
}
 ::std::string* MSGCommonNotify::add_stoids() {
  // @@protoc_insertion_point(field_add_mutable:im.MSGCommonNotify.sToIds)
  return stoids_.Add();
}
 void MSGCommonNotify::add_stoids(const ::std::string& value) {
  stoids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:im.MSGCommonNotify.sToIds)
}
 void MSGCommonNotify::add_stoids(const char* value) {
  stoids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:im.MSGCommonNotify.sToIds)
}
 void MSGCommonNotify::add_stoids(const char* value, size_t size) {
  stoids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:im.MSGCommonNotify.sToIds)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
MSGCommonNotify::stoids() const {
  // @@protoc_insertion_point(field_list:im.MSGCommonNotify.sToIds)
  return stoids_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
MSGCommonNotify::mutable_stoids() {
  // @@protoc_insertion_point(field_mutable_list:im.MSGCommonNotify.sToIds)
  return &stoids_;
}

// optional string sMsgId = 3;
void MSGCommonNotify::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MSGCommonNotify::smsgid() const {
  // @@protoc_insertion_point(field_get:im.MSGCommonNotify.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MSGCommonNotify::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MSGCommonNotify.sMsgId)
}
 void MSGCommonNotify::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MSGCommonNotify.sMsgId)
}
 void MSGCommonNotify::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MSGCommonNotify.sMsgId)
}
 ::std::string* MSGCommonNotify::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.MSGCommonNotify.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MSGCommonNotify::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.MSGCommonNotify.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MSGCommonNotify::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.MSGCommonNotify.sMsgId)
}

// optional .im.CommonNotifyType notifyType = 4;
void MSGCommonNotify::clear_notifytype() {
  notifytype_ = 0;
}
 ::im::CommonNotifyType MSGCommonNotify::notifytype() const {
  // @@protoc_insertion_point(field_get:im.MSGCommonNotify.notifyType)
  return static_cast< ::im::CommonNotifyType >(notifytype_);
}
 void MSGCommonNotify::set_notifytype(::im::CommonNotifyType value) {
  
  notifytype_ = value;
  // @@protoc_insertion_point(field_set:im.MSGCommonNotify.notifyType)
}

// optional string sContent = 5;
void MSGCommonNotify::clear_scontent() {
  scontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MSGCommonNotify::scontent() const {
  // @@protoc_insertion_point(field_get:im.MSGCommonNotify.sContent)
  return scontent_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MSGCommonNotify::set_scontent(const ::std::string& value) {
  
  scontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MSGCommonNotify.sContent)
}
 void MSGCommonNotify::set_scontent(const char* value) {
  
  scontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MSGCommonNotify.sContent)
}
 void MSGCommonNotify::set_scontent(const char* value, size_t size) {
  
  scontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MSGCommonNotify.sContent)
}
 ::std::string* MSGCommonNotify::mutable_scontent() {
  
  // @@protoc_insertion_point(field_mutable:im.MSGCommonNotify.sContent)
  return scontent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MSGCommonNotify::release_scontent() {
  // @@protoc_insertion_point(field_release:im.MSGCommonNotify.sContent)
  
  return scontent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MSGCommonNotify::set_allocated_scontent(::std::string* scontent) {
  if (scontent != NULL) {
    
  } else {
    
  }
  scontent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scontent);
  // @@protoc_insertion_point(field_set_allocated:im.MSGCommonNotify.sContent)
}

// optional uint64 msgTime = 6;
void MSGCommonNotify::clear_msgtime() {
  msgtime_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 MSGCommonNotify::msgtime() const {
  // @@protoc_insertion_point(field_get:im.MSGCommonNotify.msgTime)
  return msgtime_;
}
 void MSGCommonNotify::set_msgtime(::google::protobuf::uint64 value) {
  
  msgtime_ = value;
  // @@protoc_insertion_point(field_set:im.MSGCommonNotify.msgTime)
}

// optional string sToId = 7;
void MSGCommonNotify::clear_stoid() {
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MSGCommonNotify::stoid() const {
  // @@protoc_insertion_point(field_get:im.MSGCommonNotify.sToId)
  return stoid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MSGCommonNotify::set_stoid(const ::std::string& value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MSGCommonNotify.sToId)
}
 void MSGCommonNotify::set_stoid(const char* value) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MSGCommonNotify.sToId)
}
 void MSGCommonNotify::set_stoid(const char* value, size_t size) {
  
  stoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MSGCommonNotify.sToId)
}
 ::std::string* MSGCommonNotify::mutable_stoid() {
  
  // @@protoc_insertion_point(field_mutable:im.MSGCommonNotify.sToId)
  return stoid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MSGCommonNotify::release_stoid() {
  // @@protoc_insertion_point(field_release:im.MSGCommonNotify.sToId)
  
  return stoid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MSGCommonNotify::set_allocated_stoid(::std::string* stoid) {
  if (stoid != NULL) {
    
  } else {
    
  }
  stoid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stoid);
  // @@protoc_insertion_point(field_set_allocated:im.MSGCommonNotify.sToId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MSGCommonNotifyACK::kSUserIdFieldNumber;
const int MSGCommonNotifyACK::kSMsgIdFieldNumber;
const int MSGCommonNotifyACK::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MSGCommonNotifyACK::MSGCommonNotifyACK()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.MSGCommonNotifyACK)
}

void MSGCommonNotifyACK::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MSGCommonNotifyACK::MSGCommonNotifyACK(const MSGCommonNotifyACK& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:im.MSGCommonNotifyACK)
}

void MSGCommonNotifyACK::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

MSGCommonNotifyACK::~MSGCommonNotifyACK() {
  // @@protoc_insertion_point(destructor:im.MSGCommonNotifyACK)
  SharedDtor();
}

void MSGCommonNotifyACK::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MSGCommonNotifyACK::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MSGCommonNotifyACK& MSGCommonNotifyACK::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_im_2emes_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_im_2emes_2eproto();
#endif
  return *default_instance_;
}

MSGCommonNotifyACK* MSGCommonNotifyACK::default_instance_ = NULL;

MSGCommonNotifyACK* MSGCommonNotifyACK::New(::google::protobuf::Arena* arena) const {
  MSGCommonNotifyACK* n = new MSGCommonNotifyACK;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MSGCommonNotifyACK::Clear() {
// @@protoc_insertion_point(message_clear_start:im.MSGCommonNotifyACK)
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

bool MSGCommonNotifyACK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im.MSGCommonNotifyACK)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sUserId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), this->suserid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MSGCommonNotifyACK.sUserId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sMsgId;
        break;
      }

      // optional string sMsgId = 2;
      case 2: {
        if (tag == 18) {
         parse_sMsgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), this->smsgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.MSGCommonNotifyACK.sMsgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_errcode;
        break;
      }

      // optional .im.ErrCode errcode = 3;
      case 3: {
        if (tag == 24) {
         parse_errcode:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.MSGCommonNotifyACK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.MSGCommonNotifyACK)
  return false;
#undef DO_
}

void MSGCommonNotifyACK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.MSGCommonNotifyACK)
  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), this->suserid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MSGCommonNotifyACK.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // optional string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), this->smsgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.MSGCommonNotifyACK.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  // optional .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->errcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:im.MSGCommonNotifyACK)
}

int MSGCommonNotifyACK::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:im.MSGCommonNotifyACK)
  int total_size = 0;

  // optional string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // optional string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // optional .im.ErrCode errcode = 3;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MSGCommonNotifyACK::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MSGCommonNotifyACK*>(&from));
}

void MSGCommonNotifyACK::MergeFrom(const MSGCommonNotifyACK& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.MSGCommonNotifyACK)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void MSGCommonNotifyACK::CopyFrom(const MSGCommonNotifyACK& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.MSGCommonNotifyACK)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSGCommonNotifyACK::IsInitialized() const {

  return true;
}

void MSGCommonNotifyACK::Swap(MSGCommonNotifyACK* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MSGCommonNotifyACK::InternalSwap(MSGCommonNotifyACK* other) {
  suserid_.Swap(&other->suserid_);
  smsgid_.Swap(&other->smsgid_);
  std::swap(errcode_, other->errcode_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string MSGCommonNotifyACK::GetTypeName() const {
  return "im.MSGCommonNotifyACK";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MSGCommonNotifyACK

// optional string sUserId = 1;
void MSGCommonNotifyACK::clear_suserid() {
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MSGCommonNotifyACK::suserid() const {
  // @@protoc_insertion_point(field_get:im.MSGCommonNotifyACK.sUserId)
  return suserid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MSGCommonNotifyACK::set_suserid(const ::std::string& value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MSGCommonNotifyACK.sUserId)
}
 void MSGCommonNotifyACK::set_suserid(const char* value) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MSGCommonNotifyACK.sUserId)
}
 void MSGCommonNotifyACK::set_suserid(const char* value, size_t size) {
  
  suserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MSGCommonNotifyACK.sUserId)
}
 ::std::string* MSGCommonNotifyACK::mutable_suserid() {
  
  // @@protoc_insertion_point(field_mutable:im.MSGCommonNotifyACK.sUserId)
  return suserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MSGCommonNotifyACK::release_suserid() {
  // @@protoc_insertion_point(field_release:im.MSGCommonNotifyACK.sUserId)
  
  return suserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MSGCommonNotifyACK::set_allocated_suserid(::std::string* suserid) {
  if (suserid != NULL) {
    
  } else {
    
  }
  suserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), suserid);
  // @@protoc_insertion_point(field_set_allocated:im.MSGCommonNotifyACK.sUserId)
}

// optional string sMsgId = 2;
void MSGCommonNotifyACK::clear_smsgid() {
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MSGCommonNotifyACK::smsgid() const {
  // @@protoc_insertion_point(field_get:im.MSGCommonNotifyACK.sMsgId)
  return smsgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MSGCommonNotifyACK::set_smsgid(const ::std::string& value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im.MSGCommonNotifyACK.sMsgId)
}
 void MSGCommonNotifyACK::set_smsgid(const char* value) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im.MSGCommonNotifyACK.sMsgId)
}
 void MSGCommonNotifyACK::set_smsgid(const char* value, size_t size) {
  
  smsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im.MSGCommonNotifyACK.sMsgId)
}
 ::std::string* MSGCommonNotifyACK::mutable_smsgid() {
  
  // @@protoc_insertion_point(field_mutable:im.MSGCommonNotifyACK.sMsgId)
  return smsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MSGCommonNotifyACK::release_smsgid() {
  // @@protoc_insertion_point(field_release:im.MSGCommonNotifyACK.sMsgId)
  
  return smsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MSGCommonNotifyACK::set_allocated_smsgid(::std::string* smsgid) {
  if (smsgid != NULL) {
    
  } else {
    
  }
  smsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsgid);
  // @@protoc_insertion_point(field_set_allocated:im.MSGCommonNotifyACK.sMsgId)
}

// optional .im.ErrCode errcode = 3;
void MSGCommonNotifyACK::clear_errcode() {
  errcode_ = 0;
}
 ::im::ErrCode MSGCommonNotifyACK::errcode() const {
  // @@protoc_insertion_point(field_get:im.MSGCommonNotifyACK.errcode)
  return static_cast< ::im::ErrCode >(errcode_);
}
 void MSGCommonNotifyACK::set_errcode(::im::ErrCode value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:im.MSGCommonNotifyACK.errcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace im

// @@protoc_insertion_point(global_scope)
