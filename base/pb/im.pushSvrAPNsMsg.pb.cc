// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: im.pushSvrAPNsMsg.proto

#include "im.pushSvrAPNsMsg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace im {
class PSvrMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PSvrMsg>
      _instance;
} _PSvrMsg_default_instance_;
class PSvrMsgAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PSvrMsgAck>
      _instance;
} _PSvrMsgAck_default_instance_;
class PSvrAPNsResponeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PSvrAPNsRespone>
      _instance;
} _PSvrAPNsRespone_default_instance_;
class PSvrAPNsNotifyAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PSvrAPNsNotifyAck>
      _instance;
} _PSvrAPNsNotifyAck_default_instance_;
}  // namespace im
namespace protobuf_im_2epushSvrAPNsMsg_2eproto {
static void InitDefaultsPSvrMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_PSvrMsg_default_instance_;
    new (ptr) ::im::PSvrMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::PSvrMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PSvrMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPSvrMsg}, {}};

static void InitDefaultsPSvrMsgAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_PSvrMsgAck_default_instance_;
    new (ptr) ::im::PSvrMsgAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::PSvrMsgAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PSvrMsgAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPSvrMsgAck}, {}};

static void InitDefaultsPSvrAPNsRespone() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_PSvrAPNsRespone_default_instance_;
    new (ptr) ::im::PSvrAPNsRespone();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::PSvrAPNsRespone::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PSvrAPNsRespone =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPSvrAPNsRespone}, {}};

static void InitDefaultsPSvrAPNsNotifyAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im::_PSvrAPNsNotifyAck_default_instance_;
    new (ptr) ::im::PSvrAPNsNotifyAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im::PSvrAPNsNotifyAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PSvrAPNsNotifyAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPSvrAPNsNotifyAck}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_PSvrMsg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PSvrMsgAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PSvrAPNsRespone.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PSvrAPNsNotifyAck.base);
}

}  // namespace protobuf_im_2epushSvrAPNsMsg_2eproto
namespace im {

// ===================================================================

void PSvrMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PSvrMsg::kEMsgTypeFieldNumber;
const int PSvrMsg::kSMsgIdFieldNumber;
const int PSvrMsg::kNGroupIdFieldNumber;
const int PSvrMsg::kSFromIdFieldNumber;
const int PSvrMsg::kSToIdFieldNumber;
const int PSvrMsg::kUDeviceVerFieldNumber;
const int PSvrMsg::kSToTokenFieldNumber;
const int PSvrMsg::kSBodyFieldNumber;
const int PSvrMsg::kNUnreadNotifyMsgCountFieldNumber;
const int PSvrMsg::kVersionCodeFieldNumber;
const int PSvrMsg::kEDiveceTypeFieldNumber;
const int PSvrMsg::kCallTypeFieldNumber;
const int PSvrMsg::kScallIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PSvrMsg::PSvrMsg()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2epushSvrAPNsMsg_2eproto::scc_info_PSvrMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.PSvrMsg)
}
PSvrMsg::PSvrMsg(const PSvrMsg& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sfromid().size() > 0) {
    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stoid().size() > 0) {
    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  stotoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stotoken().size() > 0) {
    stotoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stotoken_);
  }
  sbody_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sbody().size() > 0) {
    sbody_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sbody_);
  }
  scallid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.scallid().size() > 0) {
    scallid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scallid_);
  }
  ::memcpy(&emsgtype_, &from.emsgtype_,
    static_cast<size_t>(reinterpret_cast<char*>(&calltype_) -
    reinterpret_cast<char*>(&emsgtype_)) + sizeof(calltype_));
  // @@protoc_insertion_point(copy_constructor:im.PSvrMsg)
}

void PSvrMsg::SharedCtor() {
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stotoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sbody_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scallid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&emsgtype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&calltype_) -
      reinterpret_cast<char*>(&emsgtype_)) + sizeof(calltype_));
}

PSvrMsg::~PSvrMsg() {
  // @@protoc_insertion_point(destructor:im.PSvrMsg)
  SharedDtor();
}

void PSvrMsg::SharedDtor() {
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stotoken_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sbody_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scallid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PSvrMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PSvrMsg& PSvrMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2epushSvrAPNsMsg_2eproto::scc_info_PSvrMsg.base);
  return *internal_default_instance();
}


void PSvrMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:im.PSvrMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stotoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sbody_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scallid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&emsgtype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&calltype_) -
      reinterpret_cast<char*>(&emsgtype_)) + sizeof(calltype_));
  _internal_metadata_.Clear();
}

bool PSvrMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.PSvrMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .im.MsgType eMsgType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_emsgtype(static_cast< ::im::MsgType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.PSvrMsg.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nGroupId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ngroupid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sFromId = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), static_cast<int>(this->sfromid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.PSvrMsg.sFromId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sToId = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), static_cast<int>(this->stoid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.PSvrMsg.sToId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uDeviceVer = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &udevicever_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sToToken = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stotoken()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stotoken().data(), static_cast<int>(this->stotoken().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.PSvrMsg.sToToken"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sBody = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sbody()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sbody().data(), static_cast<int>(this->sbody().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.PSvrMsg.sBody"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nUnreadNotifyMsgCount = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nunreadnotifymsgcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 versionCode = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &versioncode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.DiveceType eDivece_type = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_edivece_type(static_cast< ::im::DiveceType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 callType = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &calltype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string scallId = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scallid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scallid().data(), static_cast<int>(this->scallid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.PSvrMsg.scallId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.PSvrMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.PSvrMsg)
  return false;
#undef DO_
}

void PSvrMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.PSvrMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .im.MsgType eMsgType = 1;
  if (this->emsgtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->emsgtype(), output);
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.PSvrMsg.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  // uint32 nGroupId = 3;
  if (this->ngroupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ngroupid(), output);
  }

  // string sFromId = 4;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), static_cast<int>(this->sfromid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.PSvrMsg.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sfromid(), output);
  }

  // string sToId = 5;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), static_cast<int>(this->stoid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.PSvrMsg.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->stoid(), output);
  }

  // uint32 uDeviceVer = 6;
  if (this->udevicever() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->udevicever(), output);
  }

  // string sToToken = 7;
  if (this->stotoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stotoken().data(), static_cast<int>(this->stotoken().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.PSvrMsg.sToToken");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->stotoken(), output);
  }

  // string sBody = 8;
  if (this->sbody().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sbody().data(), static_cast<int>(this->sbody().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.PSvrMsg.sBody");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->sbody(), output);
  }

  // uint32 nUnreadNotifyMsgCount = 9;
  if (this->nunreadnotifymsgcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->nunreadnotifymsgcount(), output);
  }

  // uint32 versionCode = 10;
  if (this->versioncode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->versioncode(), output);
  }

  // .im.DiveceType eDivece_type = 11;
  if (this->edivece_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->edivece_type(), output);
  }

  // uint32 callType = 12;
  if (this->calltype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->calltype(), output);
  }

  // string scallId = 13;
  if (this->scallid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scallid().data(), static_cast<int>(this->scallid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.PSvrMsg.scallId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->scallid(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.PSvrMsg)
}

size_t PSvrMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.PSvrMsg)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // string sFromId = 4;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // string sToId = 5;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // string sToToken = 7;
  if (this->stotoken().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stotoken());
  }

  // string sBody = 8;
  if (this->sbody().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sbody());
  }

  // string scallId = 13;
  if (this->scallid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scallid());
  }

  // .im.MsgType eMsgType = 1;
  if (this->emsgtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->emsgtype());
  }

  // uint32 nGroupId = 3;
  if (this->ngroupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ngroupid());
  }

  // uint32 uDeviceVer = 6;
  if (this->udevicever() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->udevicever());
  }

  // uint32 nUnreadNotifyMsgCount = 9;
  if (this->nunreadnotifymsgcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nunreadnotifymsgcount());
  }

  // uint32 versionCode = 10;
  if (this->versioncode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->versioncode());
  }

  // .im.DiveceType eDivece_type = 11;
  if (this->edivece_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->edivece_type());
  }

  // uint32 callType = 12;
  if (this->calltype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->calltype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PSvrMsg::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const PSvrMsg*>(&from));
}

void PSvrMsg::MergeFrom(const PSvrMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.PSvrMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.stotoken().size() > 0) {

    stotoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stotoken_);
  }
  if (from.sbody().size() > 0) {

    sbody_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sbody_);
  }
  if (from.scallid().size() > 0) {

    scallid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scallid_);
  }
  if (from.emsgtype() != 0) {
    set_emsgtype(from.emsgtype());
  }
  if (from.ngroupid() != 0) {
    set_ngroupid(from.ngroupid());
  }
  if (from.udevicever() != 0) {
    set_udevicever(from.udevicever());
  }
  if (from.nunreadnotifymsgcount() != 0) {
    set_nunreadnotifymsgcount(from.nunreadnotifymsgcount());
  }
  if (from.versioncode() != 0) {
    set_versioncode(from.versioncode());
  }
  if (from.edivece_type() != 0) {
    set_edivece_type(from.edivece_type());
  }
  if (from.calltype() != 0) {
    set_calltype(from.calltype());
  }
}

void PSvrMsg::CopyFrom(const PSvrMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.PSvrMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PSvrMsg::IsInitialized() const {
  return true;
}

void PSvrMsg::Swap(PSvrMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PSvrMsg::InternalSwap(PSvrMsg* other) {
  using std::swap;
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sfromid_.Swap(&other->sfromid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  stoid_.Swap(&other->stoid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  stotoken_.Swap(&other->stotoken_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sbody_.Swap(&other->sbody_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  scallid_.Swap(&other->scallid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(emsgtype_, other->emsgtype_);
  swap(ngroupid_, other->ngroupid_);
  swap(udevicever_, other->udevicever_);
  swap(nunreadnotifymsgcount_, other->nunreadnotifymsgcount_);
  swap(versioncode_, other->versioncode_);
  swap(edivece_type_, other->edivece_type_);
  swap(calltype_, other->calltype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string PSvrMsg::GetTypeName() const {
  return "im.PSvrMsg";
}


// ===================================================================

void PSvrMsgAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PSvrMsgAck::kSMsgIdFieldNumber;
const int PSvrMsgAck::kNErrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PSvrMsgAck::PSvrMsgAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2epushSvrAPNsMsg_2eproto::scc_info_PSvrMsgAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.PSvrMsgAck)
}
PSvrMsgAck::PSvrMsgAck(const PSvrMsgAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  nerr_ = from.nerr_;
  // @@protoc_insertion_point(copy_constructor:im.PSvrMsgAck)
}

void PSvrMsgAck::SharedCtor() {
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nerr_ = 0;
}

PSvrMsgAck::~PSvrMsgAck() {
  // @@protoc_insertion_point(destructor:im.PSvrMsgAck)
  SharedDtor();
}

void PSvrMsgAck::SharedDtor() {
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PSvrMsgAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PSvrMsgAck& PSvrMsgAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2epushSvrAPNsMsg_2eproto::scc_info_PSvrMsgAck.base);
  return *internal_default_instance();
}


void PSvrMsgAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.PSvrMsgAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nerr_ = 0;
  _internal_metadata_.Clear();
}

bool PSvrMsgAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.PSvrMsgAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sMsgId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.PSvrMsgAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode nErr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_nerr(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.PSvrMsgAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.PSvrMsgAck)
  return false;
#undef DO_
}

void PSvrMsgAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.PSvrMsgAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sMsgId = 1;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.PSvrMsgAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->smsgid(), output);
  }

  // .im.ErrCode nErr = 2;
  if (this->nerr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->nerr(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.PSvrMsgAck)
}

size_t PSvrMsgAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.PSvrMsgAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sMsgId = 1;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // .im.ErrCode nErr = 2;
  if (this->nerr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->nerr());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PSvrMsgAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const PSvrMsgAck*>(&from));
}

void PSvrMsgAck::MergeFrom(const PSvrMsgAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.PSvrMsgAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.nerr() != 0) {
    set_nerr(from.nerr());
  }
}

void PSvrMsgAck::CopyFrom(const PSvrMsgAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.PSvrMsgAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PSvrMsgAck::IsInitialized() const {
  return true;
}

void PSvrMsgAck::Swap(PSvrMsgAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PSvrMsgAck::InternalSwap(PSvrMsgAck* other) {
  using std::swap;
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(nerr_, other->nerr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string PSvrMsgAck::GetTypeName() const {
  return "im.PSvrMsgAck";
}


// ===================================================================

void PSvrAPNsRespone::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PSvrAPNsRespone::kSMsgIdFieldNumber;
const int PSvrAPNsRespone::kSToIdFieldNumber;
const int PSvrAPNsRespone::kNErrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PSvrAPNsRespone::PSvrAPNsRespone()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2epushSvrAPNsMsg_2eproto::scc_info_PSvrAPNsRespone.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.PSvrAPNsRespone)
}
PSvrAPNsRespone::PSvrAPNsRespone(const PSvrAPNsRespone& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stoid().size() > 0) {
    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  nerr_ = from.nerr_;
  // @@protoc_insertion_point(copy_constructor:im.PSvrAPNsRespone)
}

void PSvrAPNsRespone::SharedCtor() {
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nerr_ = 0;
}

PSvrAPNsRespone::~PSvrAPNsRespone() {
  // @@protoc_insertion_point(destructor:im.PSvrAPNsRespone)
  SharedDtor();
}

void PSvrAPNsRespone::SharedDtor() {
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PSvrAPNsRespone::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PSvrAPNsRespone& PSvrAPNsRespone::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2epushSvrAPNsMsg_2eproto::scc_info_PSvrAPNsRespone.base);
  return *internal_default_instance();
}


void PSvrAPNsRespone::Clear() {
// @@protoc_insertion_point(message_clear_start:im.PSvrAPNsRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nerr_ = 0;
  _internal_metadata_.Clear();
}

bool PSvrAPNsRespone::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.PSvrAPNsRespone)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sMsgId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.PSvrAPNsRespone.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sToId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), static_cast<int>(this->stoid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.PSvrAPNsRespone.sToId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode nErr = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_nerr(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.PSvrAPNsRespone)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.PSvrAPNsRespone)
  return false;
#undef DO_
}

void PSvrAPNsRespone::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.PSvrAPNsRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sMsgId = 1;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.PSvrAPNsRespone.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->smsgid(), output);
  }

  // string sToId = 2;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), static_cast<int>(this->stoid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.PSvrAPNsRespone.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stoid(), output);
  }

  // .im.ErrCode nErr = 3;
  if (this->nerr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->nerr(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.PSvrAPNsRespone)
}

size_t PSvrAPNsRespone::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.PSvrAPNsRespone)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sMsgId = 1;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // string sToId = 2;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // .im.ErrCode nErr = 3;
  if (this->nerr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->nerr());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PSvrAPNsRespone::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const PSvrAPNsRespone*>(&from));
}

void PSvrAPNsRespone::MergeFrom(const PSvrAPNsRespone& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.PSvrAPNsRespone)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.nerr() != 0) {
    set_nerr(from.nerr());
  }
}

void PSvrAPNsRespone::CopyFrom(const PSvrAPNsRespone& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.PSvrAPNsRespone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PSvrAPNsRespone::IsInitialized() const {
  return true;
}

void PSvrAPNsRespone::Swap(PSvrAPNsRespone* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PSvrAPNsRespone::InternalSwap(PSvrAPNsRespone* other) {
  using std::swap;
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  stoid_.Swap(&other->stoid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(nerr_, other->nerr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string PSvrAPNsRespone::GetTypeName() const {
  return "im.PSvrAPNsRespone";
}


// ===================================================================

void PSvrAPNsNotifyAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PSvrAPNsNotifyAck::kSMsgIdFieldNumber;
const int PSvrAPNsNotifyAck::kSToIdFieldNumber;
const int PSvrAPNsNotifyAck::kNErrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PSvrAPNsNotifyAck::PSvrAPNsNotifyAck()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2epushSvrAPNsMsg_2eproto::scc_info_PSvrAPNsNotifyAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im.PSvrAPNsNotifyAck)
}
PSvrAPNsNotifyAck::PSvrAPNsNotifyAck(const PSvrAPNsNotifyAck& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stoid().size() > 0) {
    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  nerr_ = from.nerr_;
  // @@protoc_insertion_point(copy_constructor:im.PSvrAPNsNotifyAck)
}

void PSvrAPNsNotifyAck::SharedCtor() {
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nerr_ = 0;
}

PSvrAPNsNotifyAck::~PSvrAPNsNotifyAck() {
  // @@protoc_insertion_point(destructor:im.PSvrAPNsNotifyAck)
  SharedDtor();
}

void PSvrAPNsNotifyAck::SharedDtor() {
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PSvrAPNsNotifyAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PSvrAPNsNotifyAck& PSvrAPNsNotifyAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2epushSvrAPNsMsg_2eproto::scc_info_PSvrAPNsNotifyAck.base);
  return *internal_default_instance();
}


void PSvrAPNsNotifyAck::Clear() {
// @@protoc_insertion_point(message_clear_start:im.PSvrAPNsNotifyAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nerr_ = 0;
  _internal_metadata_.Clear();
}

bool PSvrAPNsNotifyAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:im.PSvrAPNsNotifyAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sMsgId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.PSvrAPNsNotifyAck.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sToId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), static_cast<int>(this->stoid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im.PSvrAPNsNotifyAck.sToId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .im.ErrCode nErr = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_nerr(static_cast< ::im::ErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im.PSvrAPNsNotifyAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im.PSvrAPNsNotifyAck)
  return false;
#undef DO_
}

void PSvrAPNsNotifyAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im.PSvrAPNsNotifyAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sMsgId = 1;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.PSvrAPNsNotifyAck.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->smsgid(), output);
  }

  // string sToId = 2;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), static_cast<int>(this->stoid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im.PSvrAPNsNotifyAck.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stoid(), output);
  }

  // .im.ErrCode nErr = 3;
  if (this->nerr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->nerr(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:im.PSvrAPNsNotifyAck)
}

size_t PSvrAPNsNotifyAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im.PSvrAPNsNotifyAck)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string sMsgId = 1;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // string sToId = 2;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // .im.ErrCode nErr = 3;
  if (this->nerr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->nerr());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PSvrAPNsNotifyAck::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const PSvrAPNsNotifyAck*>(&from));
}

void PSvrAPNsNotifyAck::MergeFrom(const PSvrAPNsNotifyAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im.PSvrAPNsNotifyAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.nerr() != 0) {
    set_nerr(from.nerr());
  }
}

void PSvrAPNsNotifyAck::CopyFrom(const PSvrAPNsNotifyAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.PSvrAPNsNotifyAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PSvrAPNsNotifyAck::IsInitialized() const {
  return true;
}

void PSvrAPNsNotifyAck::Swap(PSvrAPNsNotifyAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PSvrAPNsNotifyAck::InternalSwap(PSvrAPNsNotifyAck* other) {
  using std::swap;
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  stoid_.Swap(&other->stoid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(nerr_, other->nerr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string PSvrAPNsNotifyAck::GetTypeName() const {
  return "im.PSvrAPNsNotifyAck";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace im
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::PSvrMsg* Arena::CreateMaybeMessage< ::im::PSvrMsg >(Arena* arena) {
  return Arena::CreateInternal< ::im::PSvrMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::PSvrMsgAck* Arena::CreateMaybeMessage< ::im::PSvrMsgAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::PSvrMsgAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::PSvrAPNsRespone* Arena::CreateMaybeMessage< ::im::PSvrAPNsRespone >(Arena* arena) {
  return Arena::CreateInternal< ::im::PSvrAPNsRespone >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im::PSvrAPNsNotifyAck* Arena::CreateMaybeMessage< ::im::PSvrAPNsNotifyAck >(Arena* arena) {
  return Arena::CreateInternal< ::im::PSvrAPNsNotifyAck >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
