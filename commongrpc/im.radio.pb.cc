// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: im.radio.proto

#include "im.radio.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace radionotify {
class RadioMsgNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RadioMsgNotify>
      _instance;
} _RadioMsgNotify_default_instance_;
class RadioMsgNotifyACKDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RadioMsgNotifyACK>
      _instance;
} _RadioMsgNotifyACK_default_instance_;
class RadioPushSetNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RadioPushSetNotify>
      _instance;
} _RadioPushSetNotify_default_instance_;
class RadioPushSetNotifyACKDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RadioPushSetNotifyACK>
      _instance;
} _RadioPushSetNotifyACK_default_instance_;
}  // namespace radionotify
namespace protobuf_im_2eradio_2eproto {
static void InitDefaultsRadioMsgNotify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::radionotify::_RadioMsgNotify_default_instance_;
    new (ptr) ::radionotify::RadioMsgNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::radionotify::RadioMsgNotify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RadioMsgNotify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRadioMsgNotify}, {}};

static void InitDefaultsRadioMsgNotifyACK() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::radionotify::_RadioMsgNotifyACK_default_instance_;
    new (ptr) ::radionotify::RadioMsgNotifyACK();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::radionotify::RadioMsgNotifyACK::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RadioMsgNotifyACK =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRadioMsgNotifyACK}, {}};

static void InitDefaultsRadioPushSetNotify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::radionotify::_RadioPushSetNotify_default_instance_;
    new (ptr) ::radionotify::RadioPushSetNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::radionotify::RadioPushSetNotify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RadioPushSetNotify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRadioPushSetNotify}, {}};

static void InitDefaultsRadioPushSetNotifyACK() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::radionotify::_RadioPushSetNotifyACK_default_instance_;
    new (ptr) ::radionotify::RadioPushSetNotifyACK();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::radionotify::RadioPushSetNotifyACK::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RadioPushSetNotifyACK =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRadioPushSetNotifyACK}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_RadioMsgNotify.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RadioMsgNotifyACK.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RadioPushSetNotify.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RadioPushSetNotifyACK.base);
}

::google::protobuf::Metadata file_level_metadata[4];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::radionotify::RadioMsgNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::radionotify::RadioMsgNotify, sradioid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::radionotify::RadioMsgNotify, smsgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::radionotify::RadioMsgNotify, msgtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::radionotify::RadioMsgNotify, sopruserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::radionotify::RadioMsgNotify, smnpleduserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::radionotify::RadioMsgNotify, scontent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::radionotify::RadioMsgNotify, notifytype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::radionotify::RadioMsgNotify, extend_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::radionotify::RadioMsgNotifyACK, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::radionotify::RadioMsgNotifyACK, smsgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::radionotify::RadioMsgNotifyACK, msgtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::radionotify::RadioMsgNotifyACK, expcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::radionotify::RadioPushSetNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::radionotify::RadioPushSetNotify, smsgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::radionotify::RadioPushSetNotify, suserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::radionotify::RadioPushSetNotify, sradioid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::radionotify::RadioPushSetNotify, notifytype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::radionotify::RadioPushSetNotify, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::radionotify::RadioPushSetNotify, msgtime_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::radionotify::RadioPushSetNotifyACK, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::radionotify::RadioPushSetNotifyACK, smsgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::radionotify::RadioPushSetNotifyACK, msgtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::radionotify::RadioPushSetNotifyACK, expcode_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::radionotify::RadioMsgNotify)},
  { 13, -1, sizeof(::radionotify::RadioMsgNotifyACK)},
  { 21, -1, sizeof(::radionotify::RadioPushSetNotify)},
  { 32, -1, sizeof(::radionotify::RadioPushSetNotifyACK)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::radionotify::_RadioMsgNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::radionotify::_RadioMsgNotifyACK_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::radionotify::_RadioPushSetNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::radionotify::_RadioPushSetNotifyACK_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "im.radio.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016im.radio.proto\022\013radionotify\"\302\001\n\016RadioM"
      "sgNotify\022\020\n\010sRadioId\030\001 \001(\t\022\016\n\006sMsgId\030\002 \001"
      "(\t\022\017\n\007msgTime\030\003 \001(\004\022\022\n\nsOprUserId\030\004 \001(\t\022"
      "\025\n\rsMnpledUserId\030\005 \003(\t\022\020\n\010sContent\030\006 \001(\t"
      "\0220\n\nnotifyType\030\007 \001(\0162\034.radionotify.Radio"
      "NotifyType\022\016\n\006extend\030\010 \001(\t\"a\n\021RadioMsgNo"
      "tifyACK\022\016\n\006sMsgId\030\001 \001(\t\022\017\n\007msgTime\030\002 \001(\004"
      "\022+\n\007expcode\030\003 \001(\0162\032.radionotify.Exceptio"
      "nCode\"\241\001\n\022RadioPushSetNotify\022\016\n\006sMsgId\030\001"
      " \001(\t\022\017\n\007sUserId\030\002 \001(\t\022\020\n\010sRadioId\030\003 \001(\t\022"
      "7\n\nnotifyType\030\004 \001(\0162#.radionotify.RadioP"
      "ushSetNotifyType\022\016\n\006status\030\005 \001(\r\022\017\n\007msgT"
      "ime\030\006 \001(\004\"e\n\025RadioPushSetNotifyACK\022\016\n\006sM"
      "sgId\030\001 \001(\t\022\017\n\007msgTime\030\002 \001(\004\022+\n\007expcode\030\003"
      " \001(\0162\032.radionotify.ExceptionCode*\353\003\n\017Rad"
      "ioNotifyType\022\026\n\022RADIO_TYPE_UNKNOWN\020\000\022\033\n\027"
      "RADIO_TYPE_NAME_CHANGED\020\001\022\033\n\027RADIO_TYPE_"
      "ICON_CHANGED\020\002\022\035\n\031RADIO_TYPE_NOTICE_CHAN"
      "GED\020\003\022\032\n\026RADIO_TYPE_MEMBER_QUIT\020\004\022\034\n\030RAD"
      "IO_TYPE_MEMBER_REMOVE\020\005\022\024\n\020RADIO_TYPE_AP"
      "PLY\020\006\022\025\n\021RADIO_TYPE_INVITE\020\007\022\035\n\031RADIO_TY"
      "PE_MASTER_CHANGED\020\010\022\030\n\024RADIO_TYPE_ADMIN_"
      "SET\020\t\022\032\n\026RADIO_TYPE_ADMIN_UNSET\020\n\022\026\n\022RAD"
      "IO_TYPE_DISMISS\020\013\022\026\n\022RADIO_TYPE_NOSPEAK\020"
      "\014\022\027\n\023RADIO_TYPE_SPEAKING\020\r\022\025\n\021RADIO_TYPE"
      "_CREATE\020\016\022$\n RADIO_TYPE_FORBID_INTERFACI"
      "NG_ON\020\017\022%\n!RADIO_TYPE_FORBID_INTERFACING"
      "_OFF\020\020*g\n\026RadioPushSetNotifyType\022\017\n\013PUSH"
      "_NEWMSG\020\000\022\027\n\023PUSH_HIDEMSGSOUNDON\020\001\022\017\n\013PU"
      "SH_ISHIDE\020\002\022\022\n\016PUSH_UNDISTURB\020\003*(\n\rExcep"
      "tionCode\022\n\n\006NO_EXP\020\000\022\013\n\007EXP_ERR\020\0012\306\001\n\022Ra"
      "dioNotifyService\022Q\n\020OnRadioMsgNotify\022\033.r"
      "adionotify.RadioMsgNotify\032\036.radionotify."
      "RadioMsgNotifyACK\"\000\022]\n\024OnRadioPushSetNot"
      "ify\022\037.radionotify.RadioPushSetNotify\032\".r"
      "adionotify.RadioPushSetNotifyACK\"\000b\006prot"
      "o3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1442);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "im.radio.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_im_2eradio_2eproto
namespace radionotify {
const ::google::protobuf::EnumDescriptor* RadioNotifyType_descriptor() {
  protobuf_im_2eradio_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_im_2eradio_2eproto::file_level_enum_descriptors[0];
}
bool RadioNotifyType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* RadioPushSetNotifyType_descriptor() {
  protobuf_im_2eradio_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_im_2eradio_2eproto::file_level_enum_descriptors[1];
}
bool RadioPushSetNotifyType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ExceptionCode_descriptor() {
  protobuf_im_2eradio_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_im_2eradio_2eproto::file_level_enum_descriptors[2];
}
bool ExceptionCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void RadioMsgNotify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RadioMsgNotify::kSRadioIdFieldNumber;
const int RadioMsgNotify::kSMsgIdFieldNumber;
const int RadioMsgNotify::kMsgTimeFieldNumber;
const int RadioMsgNotify::kSOprUserIdFieldNumber;
const int RadioMsgNotify::kSMnpledUserIdFieldNumber;
const int RadioMsgNotify::kSContentFieldNumber;
const int RadioMsgNotify::kNotifyTypeFieldNumber;
const int RadioMsgNotify::kExtendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RadioMsgNotify::RadioMsgNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2eradio_2eproto::scc_info_RadioMsgNotify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:radionotify.RadioMsgNotify)
}
RadioMsgNotify::RadioMsgNotify(const RadioMsgNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      smnpleduserid_(from.smnpleduserid_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sradioid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sradioid().size() > 0) {
    sradioid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sradioid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  sopruserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sopruserid().size() > 0) {
    sopruserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sopruserid_);
  }
  scontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.scontent().size() > 0) {
    scontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scontent_);
  }
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extend().size() > 0) {
    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  ::memcpy(&msgtime_, &from.msgtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&notifytype_) -
    reinterpret_cast<char*>(&msgtime_)) + sizeof(notifytype_));
  // @@protoc_insertion_point(copy_constructor:radionotify.RadioMsgNotify)
}

void RadioMsgNotify::SharedCtor() {
  sradioid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sopruserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&notifytype_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(notifytype_));
}

RadioMsgNotify::~RadioMsgNotify() {
  // @@protoc_insertion_point(destructor:radionotify.RadioMsgNotify)
  SharedDtor();
}

void RadioMsgNotify::SharedDtor() {
  sradioid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sopruserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RadioMsgNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RadioMsgNotify::descriptor() {
  ::protobuf_im_2eradio_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_im_2eradio_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RadioMsgNotify& RadioMsgNotify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2eradio_2eproto::scc_info_RadioMsgNotify.base);
  return *internal_default_instance();
}


void RadioMsgNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:radionotify.RadioMsgNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  smnpleduserid_.Clear();
  sradioid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sopruserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&notifytype_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(notifytype_));
  _internal_metadata_.Clear();
}

bool RadioMsgNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:radionotify.RadioMsgNotify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sRadioId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sradioid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sradioid().data(), static_cast<int>(this->sradioid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "radionotify.RadioMsgNotify.sRadioId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "radionotify.RadioMsgNotify.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgTime = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sOprUserId = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sopruserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sopruserid().data(), static_cast<int>(this->sopruserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "radionotify.RadioMsgNotify.sOprUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string sMnpledUserId = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_smnpleduserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smnpleduserid(this->smnpleduserid_size() - 1).data(),
            static_cast<int>(this->smnpleduserid(this->smnpleduserid_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "radionotify.RadioMsgNotify.sMnpledUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sContent = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scontent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scontent().data(), static_cast<int>(this->scontent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "radionotify.RadioMsgNotify.sContent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .radionotify.RadioNotifyType notifyType = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_notifytype(static_cast< ::radionotify::RadioNotifyType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string extend = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extend()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extend().data(), static_cast<int>(this->extend().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "radionotify.RadioMsgNotify.extend"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:radionotify.RadioMsgNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:radionotify.RadioMsgNotify)
  return false;
#undef DO_
}

void RadioMsgNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:radionotify.RadioMsgNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sRadioId = 1;
  if (this->sradioid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sradioid().data(), static_cast<int>(this->sradioid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "radionotify.RadioMsgNotify.sRadioId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sradioid(), output);
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "radionotify.RadioMsgNotify.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  // uint64 msgTime = 3;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->msgtime(), output);
  }

  // string sOprUserId = 4;
  if (this->sopruserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sopruserid().data(), static_cast<int>(this->sopruserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "radionotify.RadioMsgNotify.sOprUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sopruserid(), output);
  }

  // repeated string sMnpledUserId = 5;
  for (int i = 0, n = this->smnpleduserid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smnpleduserid(i).data(), static_cast<int>(this->smnpleduserid(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "radionotify.RadioMsgNotify.sMnpledUserId");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->smnpleduserid(i), output);
  }

  // string sContent = 6;
  if (this->scontent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scontent().data(), static_cast<int>(this->scontent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "radionotify.RadioMsgNotify.sContent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->scontent(), output);
  }

  // .radionotify.RadioNotifyType notifyType = 7;
  if (this->notifytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->notifytype(), output);
  }

  // string extend = 8;
  if (this->extend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extend().data(), static_cast<int>(this->extend().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "radionotify.RadioMsgNotify.extend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->extend(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:radionotify.RadioMsgNotify)
}

::google::protobuf::uint8* RadioMsgNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:radionotify.RadioMsgNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sRadioId = 1;
  if (this->sradioid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sradioid().data(), static_cast<int>(this->sradioid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "radionotify.RadioMsgNotify.sRadioId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sradioid(), target);
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "radionotify.RadioMsgNotify.sMsgId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->smsgid(), target);
  }

  // uint64 msgTime = 3;
  if (this->msgtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->msgtime(), target);
  }

  // string sOprUserId = 4;
  if (this->sopruserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sopruserid().data(), static_cast<int>(this->sopruserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "radionotify.RadioMsgNotify.sOprUserId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->sopruserid(), target);
  }

  // repeated string sMnpledUserId = 5;
  for (int i = 0, n = this->smnpleduserid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smnpleduserid(i).data(), static_cast<int>(this->smnpleduserid(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "radionotify.RadioMsgNotify.sMnpledUserId");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->smnpleduserid(i), target);
  }

  // string sContent = 6;
  if (this->scontent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scontent().data(), static_cast<int>(this->scontent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "radionotify.RadioMsgNotify.sContent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->scontent(), target);
  }

  // .radionotify.RadioNotifyType notifyType = 7;
  if (this->notifytype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->notifytype(), target);
  }

  // string extend = 8;
  if (this->extend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extend().data(), static_cast<int>(this->extend().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "radionotify.RadioMsgNotify.extend");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->extend(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:radionotify.RadioMsgNotify)
  return target;
}

size_t RadioMsgNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:radionotify.RadioMsgNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string sMnpledUserId = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->smnpleduserid_size());
  for (int i = 0, n = this->smnpleduserid_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->smnpleduserid(i));
  }

  // string sRadioId = 1;
  if (this->sradioid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sradioid());
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // string sOprUserId = 4;
  if (this->sopruserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sopruserid());
  }

  // string sContent = 6;
  if (this->scontent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scontent());
  }

  // string extend = 8;
  if (this->extend().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extend());
  }

  // uint64 msgTime = 3;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // .radionotify.RadioNotifyType notifyType = 7;
  if (this->notifytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->notifytype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RadioMsgNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:radionotify.RadioMsgNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const RadioMsgNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RadioMsgNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:radionotify.RadioMsgNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:radionotify.RadioMsgNotify)
    MergeFrom(*source);
  }
}

void RadioMsgNotify::MergeFrom(const RadioMsgNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:radionotify.RadioMsgNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  smnpleduserid_.MergeFrom(from.smnpleduserid_);
  if (from.sradioid().size() > 0) {

    sradioid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sradioid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.sopruserid().size() > 0) {

    sopruserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sopruserid_);
  }
  if (from.scontent().size() > 0) {

    scontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scontent_);
  }
  if (from.extend().size() > 0) {

    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.notifytype() != 0) {
    set_notifytype(from.notifytype());
  }
}

void RadioMsgNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:radionotify.RadioMsgNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RadioMsgNotify::CopyFrom(const RadioMsgNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:radionotify.RadioMsgNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RadioMsgNotify::IsInitialized() const {
  return true;
}

void RadioMsgNotify::Swap(RadioMsgNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RadioMsgNotify::InternalSwap(RadioMsgNotify* other) {
  using std::swap;
  smnpleduserid_.InternalSwap(CastToBase(&other->smnpleduserid_));
  sradioid_.Swap(&other->sradioid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sopruserid_.Swap(&other->sopruserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  scontent_.Swap(&other->scontent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  extend_.Swap(&other->extend_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgtime_, other->msgtime_);
  swap(notifytype_, other->notifytype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RadioMsgNotify::GetMetadata() const {
  protobuf_im_2eradio_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_im_2eradio_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RadioMsgNotifyACK::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RadioMsgNotifyACK::kSMsgIdFieldNumber;
const int RadioMsgNotifyACK::kMsgTimeFieldNumber;
const int RadioMsgNotifyACK::kExpcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RadioMsgNotifyACK::RadioMsgNotifyACK()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2eradio_2eproto::scc_info_RadioMsgNotifyACK.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:radionotify.RadioMsgNotifyACK)
}
RadioMsgNotifyACK::RadioMsgNotifyACK(const RadioMsgNotifyACK& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  ::memcpy(&msgtime_, &from.msgtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&expcode_) -
    reinterpret_cast<char*>(&msgtime_)) + sizeof(expcode_));
  // @@protoc_insertion_point(copy_constructor:radionotify.RadioMsgNotifyACK)
}

void RadioMsgNotifyACK::SharedCtor() {
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expcode_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(expcode_));
}

RadioMsgNotifyACK::~RadioMsgNotifyACK() {
  // @@protoc_insertion_point(destructor:radionotify.RadioMsgNotifyACK)
  SharedDtor();
}

void RadioMsgNotifyACK::SharedDtor() {
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RadioMsgNotifyACK::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RadioMsgNotifyACK::descriptor() {
  ::protobuf_im_2eradio_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_im_2eradio_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RadioMsgNotifyACK& RadioMsgNotifyACK::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2eradio_2eproto::scc_info_RadioMsgNotifyACK.base);
  return *internal_default_instance();
}


void RadioMsgNotifyACK::Clear() {
// @@protoc_insertion_point(message_clear_start:radionotify.RadioMsgNotifyACK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expcode_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(expcode_));
  _internal_metadata_.Clear();
}

bool RadioMsgNotifyACK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:radionotify.RadioMsgNotifyACK)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sMsgId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "radionotify.RadioMsgNotifyACK.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgTime = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .radionotify.ExceptionCode expcode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_expcode(static_cast< ::radionotify::ExceptionCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:radionotify.RadioMsgNotifyACK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:radionotify.RadioMsgNotifyACK)
  return false;
#undef DO_
}

void RadioMsgNotifyACK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:radionotify.RadioMsgNotifyACK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sMsgId = 1;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "radionotify.RadioMsgNotifyACK.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->smsgid(), output);
  }

  // uint64 msgTime = 2;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->msgtime(), output);
  }

  // .radionotify.ExceptionCode expcode = 3;
  if (this->expcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->expcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:radionotify.RadioMsgNotifyACK)
}

::google::protobuf::uint8* RadioMsgNotifyACK::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:radionotify.RadioMsgNotifyACK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sMsgId = 1;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "radionotify.RadioMsgNotifyACK.sMsgId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->smsgid(), target);
  }

  // uint64 msgTime = 2;
  if (this->msgtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->msgtime(), target);
  }

  // .radionotify.ExceptionCode expcode = 3;
  if (this->expcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->expcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:radionotify.RadioMsgNotifyACK)
  return target;
}

size_t RadioMsgNotifyACK::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:radionotify.RadioMsgNotifyACK)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string sMsgId = 1;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // uint64 msgTime = 2;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // .radionotify.ExceptionCode expcode = 3;
  if (this->expcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->expcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RadioMsgNotifyACK::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:radionotify.RadioMsgNotifyACK)
  GOOGLE_DCHECK_NE(&from, this);
  const RadioMsgNotifyACK* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RadioMsgNotifyACK>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:radionotify.RadioMsgNotifyACK)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:radionotify.RadioMsgNotifyACK)
    MergeFrom(*source);
  }
}

void RadioMsgNotifyACK::MergeFrom(const RadioMsgNotifyACK& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:radionotify.RadioMsgNotifyACK)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.expcode() != 0) {
    set_expcode(from.expcode());
  }
}

void RadioMsgNotifyACK::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:radionotify.RadioMsgNotifyACK)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RadioMsgNotifyACK::CopyFrom(const RadioMsgNotifyACK& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:radionotify.RadioMsgNotifyACK)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RadioMsgNotifyACK::IsInitialized() const {
  return true;
}

void RadioMsgNotifyACK::Swap(RadioMsgNotifyACK* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RadioMsgNotifyACK::InternalSwap(RadioMsgNotifyACK* other) {
  using std::swap;
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgtime_, other->msgtime_);
  swap(expcode_, other->expcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RadioMsgNotifyACK::GetMetadata() const {
  protobuf_im_2eradio_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_im_2eradio_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RadioPushSetNotify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RadioPushSetNotify::kSMsgIdFieldNumber;
const int RadioPushSetNotify::kSUserIdFieldNumber;
const int RadioPushSetNotify::kSRadioIdFieldNumber;
const int RadioPushSetNotify::kNotifyTypeFieldNumber;
const int RadioPushSetNotify::kStatusFieldNumber;
const int RadioPushSetNotify::kMsgTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RadioPushSetNotify::RadioPushSetNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2eradio_2eproto::scc_info_RadioPushSetNotify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:radionotify.RadioPushSetNotify)
}
RadioPushSetNotify::RadioPushSetNotify(const RadioPushSetNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  sradioid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sradioid().size() > 0) {
    sradioid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sradioid_);
  }
  ::memcpy(&notifytype_, &from.notifytype_,
    static_cast<size_t>(reinterpret_cast<char*>(&msgtime_) -
    reinterpret_cast<char*>(&notifytype_)) + sizeof(msgtime_));
  // @@protoc_insertion_point(copy_constructor:radionotify.RadioPushSetNotify)
}

void RadioPushSetNotify::SharedCtor() {
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sradioid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&notifytype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msgtime_) -
      reinterpret_cast<char*>(&notifytype_)) + sizeof(msgtime_));
}

RadioPushSetNotify::~RadioPushSetNotify() {
  // @@protoc_insertion_point(destructor:radionotify.RadioPushSetNotify)
  SharedDtor();
}

void RadioPushSetNotify::SharedDtor() {
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sradioid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RadioPushSetNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RadioPushSetNotify::descriptor() {
  ::protobuf_im_2eradio_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_im_2eradio_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RadioPushSetNotify& RadioPushSetNotify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2eradio_2eproto::scc_info_RadioPushSetNotify.base);
  return *internal_default_instance();
}


void RadioPushSetNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:radionotify.RadioPushSetNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sradioid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&notifytype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msgtime_) -
      reinterpret_cast<char*>(&notifytype_)) + sizeof(msgtime_));
  _internal_metadata_.Clear();
}

bool RadioPushSetNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:radionotify.RadioPushSetNotify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sMsgId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "radionotify.RadioPushSetNotify.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sUserId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "radionotify.RadioPushSetNotify.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sRadioId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sradioid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sradioid().data(), static_cast<int>(this->sradioid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "radionotify.RadioPushSetNotify.sRadioId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .radionotify.RadioPushSetNotifyType notifyType = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_notifytype(static_cast< ::radionotify::RadioPushSetNotifyType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 status = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgTime = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:radionotify.RadioPushSetNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:radionotify.RadioPushSetNotify)
  return false;
#undef DO_
}

void RadioPushSetNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:radionotify.RadioPushSetNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sMsgId = 1;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "radionotify.RadioPushSetNotify.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->smsgid(), output);
  }

  // string sUserId = 2;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "radionotify.RadioPushSetNotify.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->suserid(), output);
  }

  // string sRadioId = 3;
  if (this->sradioid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sradioid().data(), static_cast<int>(this->sradioid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "radionotify.RadioPushSetNotify.sRadioId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sradioid(), output);
  }

  // .radionotify.RadioPushSetNotifyType notifyType = 4;
  if (this->notifytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->notifytype(), output);
  }

  // uint32 status = 5;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->status(), output);
  }

  // uint64 msgTime = 6;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->msgtime(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:radionotify.RadioPushSetNotify)
}

::google::protobuf::uint8* RadioPushSetNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:radionotify.RadioPushSetNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sMsgId = 1;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "radionotify.RadioPushSetNotify.sMsgId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->smsgid(), target);
  }

  // string sUserId = 2;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "radionotify.RadioPushSetNotify.sUserId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->suserid(), target);
  }

  // string sRadioId = 3;
  if (this->sradioid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sradioid().data(), static_cast<int>(this->sradioid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "radionotify.RadioPushSetNotify.sRadioId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sradioid(), target);
  }

  // .radionotify.RadioPushSetNotifyType notifyType = 4;
  if (this->notifytype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->notifytype(), target);
  }

  // uint32 status = 5;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->status(), target);
  }

  // uint64 msgTime = 6;
  if (this->msgtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->msgtime(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:radionotify.RadioPushSetNotify)
  return target;
}

size_t RadioPushSetNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:radionotify.RadioPushSetNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string sMsgId = 1;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // string sUserId = 2;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sRadioId = 3;
  if (this->sradioid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sradioid());
  }

  // .radionotify.RadioPushSetNotifyType notifyType = 4;
  if (this->notifytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->notifytype());
  }

  // uint32 status = 5;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->status());
  }

  // uint64 msgTime = 6;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RadioPushSetNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:radionotify.RadioPushSetNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const RadioPushSetNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RadioPushSetNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:radionotify.RadioPushSetNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:radionotify.RadioPushSetNotify)
    MergeFrom(*source);
  }
}

void RadioPushSetNotify::MergeFrom(const RadioPushSetNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:radionotify.RadioPushSetNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.sradioid().size() > 0) {

    sradioid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sradioid_);
  }
  if (from.notifytype() != 0) {
    set_notifytype(from.notifytype());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
}

void RadioPushSetNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:radionotify.RadioPushSetNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RadioPushSetNotify::CopyFrom(const RadioPushSetNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:radionotify.RadioPushSetNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RadioPushSetNotify::IsInitialized() const {
  return true;
}

void RadioPushSetNotify::Swap(RadioPushSetNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RadioPushSetNotify::InternalSwap(RadioPushSetNotify* other) {
  using std::swap;
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sradioid_.Swap(&other->sradioid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(notifytype_, other->notifytype_);
  swap(status_, other->status_);
  swap(msgtime_, other->msgtime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RadioPushSetNotify::GetMetadata() const {
  protobuf_im_2eradio_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_im_2eradio_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RadioPushSetNotifyACK::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RadioPushSetNotifyACK::kSMsgIdFieldNumber;
const int RadioPushSetNotifyACK::kMsgTimeFieldNumber;
const int RadioPushSetNotifyACK::kExpcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RadioPushSetNotifyACK::RadioPushSetNotifyACK()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2eradio_2eproto::scc_info_RadioPushSetNotifyACK.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:radionotify.RadioPushSetNotifyACK)
}
RadioPushSetNotifyACK::RadioPushSetNotifyACK(const RadioPushSetNotifyACK& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  ::memcpy(&msgtime_, &from.msgtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&expcode_) -
    reinterpret_cast<char*>(&msgtime_)) + sizeof(expcode_));
  // @@protoc_insertion_point(copy_constructor:radionotify.RadioPushSetNotifyACK)
}

void RadioPushSetNotifyACK::SharedCtor() {
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expcode_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(expcode_));
}

RadioPushSetNotifyACK::~RadioPushSetNotifyACK() {
  // @@protoc_insertion_point(destructor:radionotify.RadioPushSetNotifyACK)
  SharedDtor();
}

void RadioPushSetNotifyACK::SharedDtor() {
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RadioPushSetNotifyACK::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RadioPushSetNotifyACK::descriptor() {
  ::protobuf_im_2eradio_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_im_2eradio_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RadioPushSetNotifyACK& RadioPushSetNotifyACK::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2eradio_2eproto::scc_info_RadioPushSetNotifyACK.base);
  return *internal_default_instance();
}


void RadioPushSetNotifyACK::Clear() {
// @@protoc_insertion_point(message_clear_start:radionotify.RadioPushSetNotifyACK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expcode_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(expcode_));
  _internal_metadata_.Clear();
}

bool RadioPushSetNotifyACK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:radionotify.RadioPushSetNotifyACK)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sMsgId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "radionotify.RadioPushSetNotifyACK.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgTime = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .radionotify.ExceptionCode expcode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_expcode(static_cast< ::radionotify::ExceptionCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:radionotify.RadioPushSetNotifyACK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:radionotify.RadioPushSetNotifyACK)
  return false;
#undef DO_
}

void RadioPushSetNotifyACK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:radionotify.RadioPushSetNotifyACK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sMsgId = 1;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "radionotify.RadioPushSetNotifyACK.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->smsgid(), output);
  }

  // uint64 msgTime = 2;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->msgtime(), output);
  }

  // .radionotify.ExceptionCode expcode = 3;
  if (this->expcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->expcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:radionotify.RadioPushSetNotifyACK)
}

::google::protobuf::uint8* RadioPushSetNotifyACK::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:radionotify.RadioPushSetNotifyACK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sMsgId = 1;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "radionotify.RadioPushSetNotifyACK.sMsgId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->smsgid(), target);
  }

  // uint64 msgTime = 2;
  if (this->msgtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->msgtime(), target);
  }

  // .radionotify.ExceptionCode expcode = 3;
  if (this->expcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->expcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:radionotify.RadioPushSetNotifyACK)
  return target;
}

size_t RadioPushSetNotifyACK::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:radionotify.RadioPushSetNotifyACK)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string sMsgId = 1;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // uint64 msgTime = 2;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // .radionotify.ExceptionCode expcode = 3;
  if (this->expcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->expcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RadioPushSetNotifyACK::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:radionotify.RadioPushSetNotifyACK)
  GOOGLE_DCHECK_NE(&from, this);
  const RadioPushSetNotifyACK* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RadioPushSetNotifyACK>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:radionotify.RadioPushSetNotifyACK)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:radionotify.RadioPushSetNotifyACK)
    MergeFrom(*source);
  }
}

void RadioPushSetNotifyACK::MergeFrom(const RadioPushSetNotifyACK& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:radionotify.RadioPushSetNotifyACK)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.expcode() != 0) {
    set_expcode(from.expcode());
  }
}

void RadioPushSetNotifyACK::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:radionotify.RadioPushSetNotifyACK)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RadioPushSetNotifyACK::CopyFrom(const RadioPushSetNotifyACK& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:radionotify.RadioPushSetNotifyACK)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RadioPushSetNotifyACK::IsInitialized() const {
  return true;
}

void RadioPushSetNotifyACK::Swap(RadioPushSetNotifyACK* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RadioPushSetNotifyACK::InternalSwap(RadioPushSetNotifyACK* other) {
  using std::swap;
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgtime_, other->msgtime_);
  swap(expcode_, other->expcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RadioPushSetNotifyACK::GetMetadata() const {
  protobuf_im_2eradio_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_im_2eradio_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace radionotify
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::radionotify::RadioMsgNotify* Arena::CreateMaybeMessage< ::radionotify::RadioMsgNotify >(Arena* arena) {
  return Arena::CreateInternal< ::radionotify::RadioMsgNotify >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::radionotify::RadioMsgNotifyACK* Arena::CreateMaybeMessage< ::radionotify::RadioMsgNotifyACK >(Arena* arena) {
  return Arena::CreateInternal< ::radionotify::RadioMsgNotifyACK >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::radionotify::RadioPushSetNotify* Arena::CreateMaybeMessage< ::radionotify::RadioPushSetNotify >(Arena* arena) {
  return Arena::CreateInternal< ::radionotify::RadioPushSetNotify >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::radionotify::RadioPushSetNotifyACK* Arena::CreateMaybeMessage< ::radionotify::RadioPushSetNotifyACK >(Arena* arena) {
  return Arena::CreateInternal< ::radionotify::RadioPushSetNotifyACK >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
