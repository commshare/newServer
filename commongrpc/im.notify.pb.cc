// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: im.notify.proto

#include "im.notify.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace imnotify {
class GroupRelationNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupRelationNotify>
      _instance;
} _GroupRelationNotify_default_instance_;
class GroupRelationNotifyACKDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupRelationNotifyACK>
      _instance;
} _GroupRelationNotifyACK_default_instance_;
class FriendRelationNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FriendRelationNotify>
      _instance;
} _FriendRelationNotify_default_instance_;
class FriendRelationNotifyACKDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FriendRelationNotifyACK>
      _instance;
} _FriendRelationNotifyACK_default_instance_;
class LoginOperationNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoginOperationNotify>
      _instance;
} _LoginOperationNotify_default_instance_;
class LoginOperationNotifyACKDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoginOperationNotifyACK>
      _instance;
} _LoginOperationNotifyACK_default_instance_;
class CommonMsgNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CommonMsgNotify>
      _instance;
} _CommonMsgNotify_default_instance_;
class CommonMsgNotifyACKDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CommonMsgNotifyACK>
      _instance;
} _CommonMsgNotifyACK_default_instance_;
}  // namespace imnotify
namespace protobuf_im_2enotify_2eproto {
static void InitDefaultsGroupRelationNotify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::imnotify::_GroupRelationNotify_default_instance_;
    new (ptr) ::imnotify::GroupRelationNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::imnotify::GroupRelationNotify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GroupRelationNotify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGroupRelationNotify}, {}};

static void InitDefaultsGroupRelationNotifyACK() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::imnotify::_GroupRelationNotifyACK_default_instance_;
    new (ptr) ::imnotify::GroupRelationNotifyACK();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::imnotify::GroupRelationNotifyACK::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GroupRelationNotifyACK =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGroupRelationNotifyACK}, {}};

static void InitDefaultsFriendRelationNotify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::imnotify::_FriendRelationNotify_default_instance_;
    new (ptr) ::imnotify::FriendRelationNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::imnotify::FriendRelationNotify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FriendRelationNotify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFriendRelationNotify}, {}};

static void InitDefaultsFriendRelationNotifyACK() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::imnotify::_FriendRelationNotifyACK_default_instance_;
    new (ptr) ::imnotify::FriendRelationNotifyACK();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::imnotify::FriendRelationNotifyACK::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FriendRelationNotifyACK =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFriendRelationNotifyACK}, {}};

static void InitDefaultsLoginOperationNotify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::imnotify::_LoginOperationNotify_default_instance_;
    new (ptr) ::imnotify::LoginOperationNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::imnotify::LoginOperationNotify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LoginOperationNotify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLoginOperationNotify}, {}};

static void InitDefaultsLoginOperationNotifyACK() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::imnotify::_LoginOperationNotifyACK_default_instance_;
    new (ptr) ::imnotify::LoginOperationNotifyACK();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::imnotify::LoginOperationNotifyACK::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LoginOperationNotifyACK =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLoginOperationNotifyACK}, {}};

static void InitDefaultsCommonMsgNotify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::imnotify::_CommonMsgNotify_default_instance_;
    new (ptr) ::imnotify::CommonMsgNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::imnotify::CommonMsgNotify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CommonMsgNotify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCommonMsgNotify}, {}};

static void InitDefaultsCommonMsgNotifyACK() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::imnotify::_CommonMsgNotifyACK_default_instance_;
    new (ptr) ::imnotify::CommonMsgNotifyACK();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::imnotify::CommonMsgNotifyACK::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CommonMsgNotifyACK =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCommonMsgNotifyACK}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_GroupRelationNotify.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GroupRelationNotifyACK.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FriendRelationNotify.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FriendRelationNotifyACK.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LoginOperationNotify.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LoginOperationNotifyACK.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CommonMsgNotify.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CommonMsgNotifyACK.base);
}

::google::protobuf::Metadata file_level_metadata[8];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imnotify::GroupRelationNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imnotify::GroupRelationNotify, sgrpid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imnotify::GroupRelationNotify, smsgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imnotify::GroupRelationNotify, stoids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imnotify::GroupRelationNotify, msgtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imnotify::GroupRelationNotify, sopruserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imnotify::GroupRelationNotify, smnpleduserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imnotify::GroupRelationNotify, scontent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imnotify::GroupRelationNotify, notifytype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imnotify::GroupRelationNotify, soperid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imnotify::GroupRelationNotify, extend_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imnotify::GroupRelationNotifyACK, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imnotify::GroupRelationNotifyACK, smsgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imnotify::GroupRelationNotifyACK, msgtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imnotify::GroupRelationNotifyACK, expcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imnotify::FriendRelationNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imnotify::FriendRelationNotify, sfromid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imnotify::FriendRelationNotify, stoid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imnotify::FriendRelationNotify, smsgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imnotify::FriendRelationNotify, smemoname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imnotify::FriendRelationNotify, notifytype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imnotify::FriendRelationNotify, sselfintroduce_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imnotify::FriendRelationNotify, msgtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imnotify::FriendRelationNotify, soperid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imnotify::FriendRelationNotify, extend_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imnotify::FriendRelationNotifyACK, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imnotify::FriendRelationNotifyACK, smsgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imnotify::FriendRelationNotifyACK, msgtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imnotify::FriendRelationNotifyACK, expcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imnotify::LoginOperationNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imnotify::LoginOperationNotify, suserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imnotify::LoginOperationNotify, sdevicetoken_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imnotify::LoginOperationNotify, msgtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imnotify::LoginOperationNotify, logintype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imnotify::LoginOperationNotify, extend_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imnotify::LoginOperationNotify, loginsubtype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imnotify::LoginOperationNotifyACK, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imnotify::LoginOperationNotifyACK, suserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imnotify::LoginOperationNotifyACK, msgtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imnotify::LoginOperationNotifyACK, expcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imnotify::CommonMsgNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imnotify::CommonMsgNotify, sfromid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imnotify::CommonMsgNotify, stoids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imnotify::CommonMsgNotify, smsgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imnotify::CommonMsgNotify, notifytype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imnotify::CommonMsgNotify, scontent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imnotify::CommonMsgNotify, msgtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imnotify::CommonMsgNotify, extend_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imnotify::CommonMsgNotifyACK, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imnotify::CommonMsgNotifyACK, smsgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imnotify::CommonMsgNotifyACK, msgtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imnotify::CommonMsgNotifyACK, expcode_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::imnotify::GroupRelationNotify)},
  { 15, -1, sizeof(::imnotify::GroupRelationNotifyACK)},
  { 23, -1, sizeof(::imnotify::FriendRelationNotify)},
  { 37, -1, sizeof(::imnotify::FriendRelationNotifyACK)},
  { 45, -1, sizeof(::imnotify::LoginOperationNotify)},
  { 56, -1, sizeof(::imnotify::LoginOperationNotifyACK)},
  { 64, -1, sizeof(::imnotify::CommonMsgNotify)},
  { 76, -1, sizeof(::imnotify::CommonMsgNotifyACK)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::imnotify::_GroupRelationNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::imnotify::_GroupRelationNotifyACK_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::imnotify::_FriendRelationNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::imnotify::_FriendRelationNotifyACK_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::imnotify::_LoginOperationNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::imnotify::_LoginOperationNotifyACK_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::imnotify::_CommonMsgNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::imnotify::_CommonMsgNotifyACK_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "im.notify.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017im.notify.proto\022\010imnotify\"\336\001\n\023GroupRel"
      "ationNotify\022\016\n\006sGrpId\030\001 \001(\t\022\016\n\006sMsgId\030\002 "
      "\001(\t\022\016\n\006sToIds\030\003 \003(\t\022\017\n\007msgTime\030\004 \001(\004\022\022\n\n"
      "sOprUserId\030\005 \001(\t\022\025\n\rsMnpledUserId\030\006 \003(\t\022"
      "\020\n\010sContent\030\007 \001(\t\022(\n\nnotifyType\030\010 \001(\0162\024."
      "imnotify.NotifyType\022\017\n\007sOperId\030\t \001(\t\022\016\n\006"
      "extend\030\n \001(\t\"c\n\026GroupRelationNotifyACK\022\016"
      "\n\006sMsgId\030\001 \001(\t\022\017\n\007msgTime\030\002 \001(\004\022(\n\007expco"
      "de\030\003 \001(\0162\027.imnotify.ExceptionCode\"\323\001\n\024Fr"
      "iendRelationNotify\022\017\n\007sFromId\030\001 \001(\t\022\r\n\005s"
      "ToId\030\002 \001(\t\022\016\n\006sMsgId\030\003 \001(\t\022\021\n\tsMemoName\030"
      "\004 \001(\t\022.\n\nnotifyType\030\005 \001(\0162\032.imnotify.Fri"
      "endNotifyType\022\026\n\016sSelfIntroduce\030\006 \001(\t\022\017\n"
      "\007msgTime\030\007 \001(\004\022\017\n\007sOperId\030\010 \001(\t\022\016\n\006exten"
      "d\030\t \001(\t\"d\n\027FriendRelationNotifyACK\022\016\n\006sM"
      "sgId\030\001 \001(\t\022\017\n\007msgTime\030\002 \001(\004\022(\n\007expcode\030\003"
      " \001(\0162\027.imnotify.ExceptionCode\"\300\001\n\024LoginO"
      "perationNotify\022\017\n\007sUserId\030\001 \001(\t\022\024\n\014sDevi"
      "ceToken\030\002 \001(\t\022\017\n\007msgTime\030\003 \001(\004\022,\n\tloginT"
      "ype\030\004 \001(\0162\031.imnotify.LoginNotifyType\022\016\n\006"
      "extend\030\005 \001(\t\0222\n\014loginSubType\030\006 \001(\0162\034.imn"
      "otify.LoginNotifySubType\"e\n\027LoginOperati"
      "onNotifyACK\022\017\n\007sUserId\030\001 \001(\t\022\017\n\007msgTime\030"
      "\002 \001(\004\022(\n\007expcode\030\003 \001(\0162\027.imnotify.Except"
      "ionCode\"\245\001\n\017CommonMsgNotify\022\017\n\007sFromId\030\001"
      " \001(\t\022\016\n\006sToIds\030\002 \003(\t\022\016\n\006sMsgId\030\003 \001(\t\022.\n\n"
      "notifyType\030\004 \001(\0162\032.imnotify.CommonNotify"
      "Type\022\020\n\010sContent\030\005 \001(\t\022\017\n\007msgTime\030\006 \001(\004\022"
      "\016\n\006extend\030\007 \001(\t\"_\n\022CommonMsgNotifyACK\022\016\n"
      "\006sMsgId\030\001 \001(\t\022\017\n\007msgTime\030\002 \001(\004\022(\n\007expcod"
      "e\030\003 \001(\0162\027.imnotify.ExceptionCode*\311\002\n\nNot"
      "ifyType\022\027\n\023NOTIFY_TYPE_UNKNOWN\020\000\022\037\n\033NOTI"
      "FY_TYPE_GRPINFO_CHANGED\020\001\022\033\n\027NOTIFY_TYPE"
      "_GRPMEM_QUIT\020\002\022\035\n\031NOTIFY_TYPE_GRPMEM_REM"
      "OVE\020\003\022\037\n\033NOTIFY_TYPE_GRPAPPLY_RESULT\020\004\022 "
      "\n\034NOTIFY_TYPE_GRPINVITE_RESULT\020\005\022!\n\035NOTI"
      "FY_TYPE_GRPMASTER_CHANGED\020\006\022\032\n\026NOTIFY_TY"
      "PE_GRP_ACTIVE\020\007\022 \n\034NOTIFY_TYPE_MASTER_AN"
      "S_APPLY\020\010\022!\n\035NOTIFY_TYPE_MASTER_ANS_INVI"
      "TE\020\t*j\n\020FriendNotifyType\022\036\n\032FRIEND_NOTIF"
      "Y_TYPE_UNKNOWN\020\000\022\032\n\026FRIEND_NOTIFY_TYPE_A"
      "DD\020\001\022\032\n\026FRIEND_NOTIFY_TYPE_ANS\020\002*k\n\017Logi"
      "nNotifyType\022\035\n\031LOGIN_NOTIFY_TYPE_UNKNOWN"
      "\020\000\022\033\n\027LOGIN_NOTIFY_TYPE_LOGIN\020\001\022\034\n\030LOGIN"
      "_NOTIFY_TYPE_LOGOUT\020\002*w\n\022LoginNotifySubT"
      "ype\022\033\n\027LOGIN_NOTIFY_SUBTYPE_OK\020\000\022\"\n\036LOGI"
      "N_NOTIFY_SUBTYPE_NOCAPTCHA\020\001\022 \n\034LOGIN_NO"
      "TIFY_SUBTYPE_CAPTCHA\020\002*I\n\020CommonNotifyTy"
      "pe\022\031\n\025Notify_ModifyUserInfo\020\000\022\032\n\026Notify_"
      "ModifyPublicKey\020\001*(\n\rExceptionCode\022\n\n\006NO"
      "_EXP\020\000\022\013\n\007EXP_ERR\020\0012\347\002\n\rNotifyService\022T\n"
      "\017OnGroupRelation\022\035.imnotify.GroupRelatio"
      "nNotify\032 .imnotify.GroupRelationNotifyAC"
      "K\"\000\022W\n\020OnFriendRelation\022\036.imnotify.Frien"
      "dRelationNotify\032!.imnotify.FriendRelatio"
      "nNotifyACK\"\000\022W\n\020OnLoginOperation\022\036.imnot"
      "ify.LoginOperationNotify\032!.imnotify.Logi"
      "nOperationNotifyACK\"\000\022N\n\021OnCommonMsgNoti"
      "fy\022\031.imnotify.CommonMsgNotify\032\034.imnotify"
      ".CommonMsgNotifyACK\"\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2389);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "im.notify.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_im_2enotify_2eproto
namespace imnotify {
const ::google::protobuf::EnumDescriptor* NotifyType_descriptor() {
  protobuf_im_2enotify_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_im_2enotify_2eproto::file_level_enum_descriptors[0];
}
bool NotifyType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* FriendNotifyType_descriptor() {
  protobuf_im_2enotify_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_im_2enotify_2eproto::file_level_enum_descriptors[1];
}
bool FriendNotifyType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* LoginNotifyType_descriptor() {
  protobuf_im_2enotify_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_im_2enotify_2eproto::file_level_enum_descriptors[2];
}
bool LoginNotifyType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* LoginNotifySubType_descriptor() {
  protobuf_im_2enotify_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_im_2enotify_2eproto::file_level_enum_descriptors[3];
}
bool LoginNotifySubType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CommonNotifyType_descriptor() {
  protobuf_im_2enotify_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_im_2enotify_2eproto::file_level_enum_descriptors[4];
}
bool CommonNotifyType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ExceptionCode_descriptor() {
  protobuf_im_2enotify_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_im_2enotify_2eproto::file_level_enum_descriptors[5];
}
bool ExceptionCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void GroupRelationNotify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupRelationNotify::kSGrpIdFieldNumber;
const int GroupRelationNotify::kSMsgIdFieldNumber;
const int GroupRelationNotify::kSToIdsFieldNumber;
const int GroupRelationNotify::kMsgTimeFieldNumber;
const int GroupRelationNotify::kSOprUserIdFieldNumber;
const int GroupRelationNotify::kSMnpledUserIdFieldNumber;
const int GroupRelationNotify::kSContentFieldNumber;
const int GroupRelationNotify::kNotifyTypeFieldNumber;
const int GroupRelationNotify::kSOperIdFieldNumber;
const int GroupRelationNotify::kExtendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupRelationNotify::GroupRelationNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2enotify_2eproto::scc_info_GroupRelationNotify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:imnotify.GroupRelationNotify)
}
GroupRelationNotify::GroupRelationNotify(const GroupRelationNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      stoids_(from.stoids_),
      smnpleduserid_(from.smnpleduserid_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sgrpid().size() > 0) {
    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  sopruserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sopruserid().size() > 0) {
    sopruserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sopruserid_);
  }
  scontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.scontent().size() > 0) {
    scontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scontent_);
  }
  soperid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.soperid().size() > 0) {
    soperid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.soperid_);
  }
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extend().size() > 0) {
    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  ::memcpy(&msgtime_, &from.msgtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&notifytype_) -
    reinterpret_cast<char*>(&msgtime_)) + sizeof(notifytype_));
  // @@protoc_insertion_point(copy_constructor:imnotify.GroupRelationNotify)
}

void GroupRelationNotify::SharedCtor() {
  sgrpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sopruserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  soperid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&notifytype_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(notifytype_));
}

GroupRelationNotify::~GroupRelationNotify() {
  // @@protoc_insertion_point(destructor:imnotify.GroupRelationNotify)
  SharedDtor();
}

void GroupRelationNotify::SharedDtor() {
  sgrpid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sopruserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  soperid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GroupRelationNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GroupRelationNotify::descriptor() {
  ::protobuf_im_2enotify_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_im_2enotify_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GroupRelationNotify& GroupRelationNotify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2enotify_2eproto::scc_info_GroupRelationNotify.base);
  return *internal_default_instance();
}


void GroupRelationNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:imnotify.GroupRelationNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stoids_.Clear();
  smnpleduserid_.Clear();
  sgrpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sopruserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  soperid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&notifytype_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(notifytype_));
  _internal_metadata_.Clear();
}

bool GroupRelationNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:imnotify.GroupRelationNotify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sGrpId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgrpid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgrpid().data(), static_cast<int>(this->sgrpid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "imnotify.GroupRelationNotify.sGrpId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "imnotify.GroupRelationNotify.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string sToIds = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_stoids()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoids(this->stoids_size() - 1).data(),
            static_cast<int>(this->stoids(this->stoids_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "imnotify.GroupRelationNotify.sToIds"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgTime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sOprUserId = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sopruserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sopruserid().data(), static_cast<int>(this->sopruserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "imnotify.GroupRelationNotify.sOprUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string sMnpledUserId = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_smnpleduserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smnpleduserid(this->smnpleduserid_size() - 1).data(),
            static_cast<int>(this->smnpleduserid(this->smnpleduserid_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "imnotify.GroupRelationNotify.sMnpledUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sContent = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scontent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scontent().data(), static_cast<int>(this->scontent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "imnotify.GroupRelationNotify.sContent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .imnotify.NotifyType notifyType = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_notifytype(static_cast< ::imnotify::NotifyType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sOperId = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_soperid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->soperid().data(), static_cast<int>(this->soperid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "imnotify.GroupRelationNotify.sOperId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string extend = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extend()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extend().data(), static_cast<int>(this->extend().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "imnotify.GroupRelationNotify.extend"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:imnotify.GroupRelationNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:imnotify.GroupRelationNotify)
  return false;
#undef DO_
}

void GroupRelationNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:imnotify.GroupRelationNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sGrpId = 1;
  if (this->sgrpid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgrpid().data(), static_cast<int>(this->sgrpid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imnotify.GroupRelationNotify.sGrpId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sgrpid(), output);
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imnotify.GroupRelationNotify.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgid(), output);
  }

  // repeated string sToIds = 3;
  for (int i = 0, n = this->stoids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoids(i).data(), static_cast<int>(this->stoids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imnotify.GroupRelationNotify.sToIds");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->stoids(i), output);
  }

  // uint64 msgTime = 4;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->msgtime(), output);
  }

  // string sOprUserId = 5;
  if (this->sopruserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sopruserid().data(), static_cast<int>(this->sopruserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imnotify.GroupRelationNotify.sOprUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->sopruserid(), output);
  }

  // repeated string sMnpledUserId = 6;
  for (int i = 0, n = this->smnpleduserid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smnpleduserid(i).data(), static_cast<int>(this->smnpleduserid(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imnotify.GroupRelationNotify.sMnpledUserId");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->smnpleduserid(i), output);
  }

  // string sContent = 7;
  if (this->scontent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scontent().data(), static_cast<int>(this->scontent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imnotify.GroupRelationNotify.sContent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->scontent(), output);
  }

  // .imnotify.NotifyType notifyType = 8;
  if (this->notifytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->notifytype(), output);
  }

  // string sOperId = 9;
  if (this->soperid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->soperid().data(), static_cast<int>(this->soperid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imnotify.GroupRelationNotify.sOperId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->soperid(), output);
  }

  // string extend = 10;
  if (this->extend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extend().data(), static_cast<int>(this->extend().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imnotify.GroupRelationNotify.extend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->extend(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:imnotify.GroupRelationNotify)
}

::google::protobuf::uint8* GroupRelationNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:imnotify.GroupRelationNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sGrpId = 1;
  if (this->sgrpid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgrpid().data(), static_cast<int>(this->sgrpid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imnotify.GroupRelationNotify.sGrpId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sgrpid(), target);
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imnotify.GroupRelationNotify.sMsgId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->smsgid(), target);
  }

  // repeated string sToIds = 3;
  for (int i = 0, n = this->stoids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoids(i).data(), static_cast<int>(this->stoids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imnotify.GroupRelationNotify.sToIds");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->stoids(i), target);
  }

  // uint64 msgTime = 4;
  if (this->msgtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->msgtime(), target);
  }

  // string sOprUserId = 5;
  if (this->sopruserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sopruserid().data(), static_cast<int>(this->sopruserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imnotify.GroupRelationNotify.sOprUserId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->sopruserid(), target);
  }

  // repeated string sMnpledUserId = 6;
  for (int i = 0, n = this->smnpleduserid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smnpleduserid(i).data(), static_cast<int>(this->smnpleduserid(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imnotify.GroupRelationNotify.sMnpledUserId");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->smnpleduserid(i), target);
  }

  // string sContent = 7;
  if (this->scontent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scontent().data(), static_cast<int>(this->scontent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imnotify.GroupRelationNotify.sContent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->scontent(), target);
  }

  // .imnotify.NotifyType notifyType = 8;
  if (this->notifytype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->notifytype(), target);
  }

  // string sOperId = 9;
  if (this->soperid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->soperid().data(), static_cast<int>(this->soperid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imnotify.GroupRelationNotify.sOperId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->soperid(), target);
  }

  // string extend = 10;
  if (this->extend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extend().data(), static_cast<int>(this->extend().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imnotify.GroupRelationNotify.extend");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->extend(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:imnotify.GroupRelationNotify)
  return target;
}

size_t GroupRelationNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:imnotify.GroupRelationNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string sToIds = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->stoids_size());
  for (int i = 0, n = this->stoids_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->stoids(i));
  }

  // repeated string sMnpledUserId = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->smnpleduserid_size());
  for (int i = 0, n = this->smnpleduserid_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->smnpleduserid(i));
  }

  // string sGrpId = 1;
  if (this->sgrpid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgrpid());
  }

  // string sMsgId = 2;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // string sOprUserId = 5;
  if (this->sopruserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sopruserid());
  }

  // string sContent = 7;
  if (this->scontent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scontent());
  }

  // string sOperId = 9;
  if (this->soperid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->soperid());
  }

  // string extend = 10;
  if (this->extend().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extend());
  }

  // uint64 msgTime = 4;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // .imnotify.NotifyType notifyType = 8;
  if (this->notifytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->notifytype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GroupRelationNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:imnotify.GroupRelationNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const GroupRelationNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GroupRelationNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:imnotify.GroupRelationNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:imnotify.GroupRelationNotify)
    MergeFrom(*source);
  }
}

void GroupRelationNotify::MergeFrom(const GroupRelationNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:imnotify.GroupRelationNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stoids_.MergeFrom(from.stoids_);
  smnpleduserid_.MergeFrom(from.smnpleduserid_);
  if (from.sgrpid().size() > 0) {

    sgrpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgrpid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.sopruserid().size() > 0) {

    sopruserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sopruserid_);
  }
  if (from.scontent().size() > 0) {

    scontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scontent_);
  }
  if (from.soperid().size() > 0) {

    soperid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.soperid_);
  }
  if (from.extend().size() > 0) {

    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.notifytype() != 0) {
    set_notifytype(from.notifytype());
  }
}

void GroupRelationNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:imnotify.GroupRelationNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GroupRelationNotify::CopyFrom(const GroupRelationNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:imnotify.GroupRelationNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupRelationNotify::IsInitialized() const {
  return true;
}

void GroupRelationNotify::Swap(GroupRelationNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupRelationNotify::InternalSwap(GroupRelationNotify* other) {
  using std::swap;
  stoids_.InternalSwap(CastToBase(&other->stoids_));
  smnpleduserid_.InternalSwap(CastToBase(&other->smnpleduserid_));
  sgrpid_.Swap(&other->sgrpid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sopruserid_.Swap(&other->sopruserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  scontent_.Swap(&other->scontent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  soperid_.Swap(&other->soperid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  extend_.Swap(&other->extend_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgtime_, other->msgtime_);
  swap(notifytype_, other->notifytype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GroupRelationNotify::GetMetadata() const {
  protobuf_im_2enotify_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_im_2enotify_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GroupRelationNotifyACK::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupRelationNotifyACK::kSMsgIdFieldNumber;
const int GroupRelationNotifyACK::kMsgTimeFieldNumber;
const int GroupRelationNotifyACK::kExpcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupRelationNotifyACK::GroupRelationNotifyACK()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2enotify_2eproto::scc_info_GroupRelationNotifyACK.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:imnotify.GroupRelationNotifyACK)
}
GroupRelationNotifyACK::GroupRelationNotifyACK(const GroupRelationNotifyACK& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  ::memcpy(&msgtime_, &from.msgtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&expcode_) -
    reinterpret_cast<char*>(&msgtime_)) + sizeof(expcode_));
  // @@protoc_insertion_point(copy_constructor:imnotify.GroupRelationNotifyACK)
}

void GroupRelationNotifyACK::SharedCtor() {
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expcode_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(expcode_));
}

GroupRelationNotifyACK::~GroupRelationNotifyACK() {
  // @@protoc_insertion_point(destructor:imnotify.GroupRelationNotifyACK)
  SharedDtor();
}

void GroupRelationNotifyACK::SharedDtor() {
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GroupRelationNotifyACK::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GroupRelationNotifyACK::descriptor() {
  ::protobuf_im_2enotify_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_im_2enotify_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GroupRelationNotifyACK& GroupRelationNotifyACK::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2enotify_2eproto::scc_info_GroupRelationNotifyACK.base);
  return *internal_default_instance();
}


void GroupRelationNotifyACK::Clear() {
// @@protoc_insertion_point(message_clear_start:imnotify.GroupRelationNotifyACK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expcode_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(expcode_));
  _internal_metadata_.Clear();
}

bool GroupRelationNotifyACK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:imnotify.GroupRelationNotifyACK)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sMsgId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "imnotify.GroupRelationNotifyACK.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgTime = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .imnotify.ExceptionCode expcode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_expcode(static_cast< ::imnotify::ExceptionCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:imnotify.GroupRelationNotifyACK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:imnotify.GroupRelationNotifyACK)
  return false;
#undef DO_
}

void GroupRelationNotifyACK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:imnotify.GroupRelationNotifyACK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sMsgId = 1;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imnotify.GroupRelationNotifyACK.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->smsgid(), output);
  }

  // uint64 msgTime = 2;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->msgtime(), output);
  }

  // .imnotify.ExceptionCode expcode = 3;
  if (this->expcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->expcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:imnotify.GroupRelationNotifyACK)
}

::google::protobuf::uint8* GroupRelationNotifyACK::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:imnotify.GroupRelationNotifyACK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sMsgId = 1;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imnotify.GroupRelationNotifyACK.sMsgId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->smsgid(), target);
  }

  // uint64 msgTime = 2;
  if (this->msgtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->msgtime(), target);
  }

  // .imnotify.ExceptionCode expcode = 3;
  if (this->expcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->expcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:imnotify.GroupRelationNotifyACK)
  return target;
}

size_t GroupRelationNotifyACK::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:imnotify.GroupRelationNotifyACK)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string sMsgId = 1;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // uint64 msgTime = 2;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // .imnotify.ExceptionCode expcode = 3;
  if (this->expcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->expcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GroupRelationNotifyACK::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:imnotify.GroupRelationNotifyACK)
  GOOGLE_DCHECK_NE(&from, this);
  const GroupRelationNotifyACK* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GroupRelationNotifyACK>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:imnotify.GroupRelationNotifyACK)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:imnotify.GroupRelationNotifyACK)
    MergeFrom(*source);
  }
}

void GroupRelationNotifyACK::MergeFrom(const GroupRelationNotifyACK& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:imnotify.GroupRelationNotifyACK)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.expcode() != 0) {
    set_expcode(from.expcode());
  }
}

void GroupRelationNotifyACK::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:imnotify.GroupRelationNotifyACK)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GroupRelationNotifyACK::CopyFrom(const GroupRelationNotifyACK& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:imnotify.GroupRelationNotifyACK)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupRelationNotifyACK::IsInitialized() const {
  return true;
}

void GroupRelationNotifyACK::Swap(GroupRelationNotifyACK* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupRelationNotifyACK::InternalSwap(GroupRelationNotifyACK* other) {
  using std::swap;
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgtime_, other->msgtime_);
  swap(expcode_, other->expcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GroupRelationNotifyACK::GetMetadata() const {
  protobuf_im_2enotify_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_im_2enotify_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FriendRelationNotify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FriendRelationNotify::kSFromIdFieldNumber;
const int FriendRelationNotify::kSToIdFieldNumber;
const int FriendRelationNotify::kSMsgIdFieldNumber;
const int FriendRelationNotify::kSMemoNameFieldNumber;
const int FriendRelationNotify::kNotifyTypeFieldNumber;
const int FriendRelationNotify::kSSelfIntroduceFieldNumber;
const int FriendRelationNotify::kMsgTimeFieldNumber;
const int FriendRelationNotify::kSOperIdFieldNumber;
const int FriendRelationNotify::kExtendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FriendRelationNotify::FriendRelationNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2enotify_2eproto::scc_info_FriendRelationNotify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:imnotify.FriendRelationNotify)
}
FriendRelationNotify::FriendRelationNotify(const FriendRelationNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sfromid().size() > 0) {
    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stoid().size() > 0) {
    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  smemoname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smemoname().size() > 0) {
    smemoname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smemoname_);
  }
  sselfintroduce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sselfintroduce().size() > 0) {
    sselfintroduce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sselfintroduce_);
  }
  soperid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.soperid().size() > 0) {
    soperid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.soperid_);
  }
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extend().size() > 0) {
    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  ::memcpy(&msgtime_, &from.msgtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&notifytype_) -
    reinterpret_cast<char*>(&msgtime_)) + sizeof(notifytype_));
  // @@protoc_insertion_point(copy_constructor:imnotify.FriendRelationNotify)
}

void FriendRelationNotify::SharedCtor() {
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smemoname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sselfintroduce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  soperid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&notifytype_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(notifytype_));
}

FriendRelationNotify::~FriendRelationNotify() {
  // @@protoc_insertion_point(destructor:imnotify.FriendRelationNotify)
  SharedDtor();
}

void FriendRelationNotify::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smemoname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sselfintroduce_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  soperid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FriendRelationNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FriendRelationNotify::descriptor() {
  ::protobuf_im_2enotify_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_im_2enotify_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FriendRelationNotify& FriendRelationNotify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2enotify_2eproto::scc_info_FriendRelationNotify.base);
  return *internal_default_instance();
}


void FriendRelationNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:imnotify.FriendRelationNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smemoname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sselfintroduce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  soperid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&notifytype_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(notifytype_));
  _internal_metadata_.Clear();
}

bool FriendRelationNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:imnotify.FriendRelationNotify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sFromId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), static_cast<int>(this->sfromid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "imnotify.FriendRelationNotify.sFromId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sToId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoid().data(), static_cast<int>(this->stoid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "imnotify.FriendRelationNotify.sToId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "imnotify.FriendRelationNotify.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMemoName = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smemoname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smemoname().data(), static_cast<int>(this->smemoname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "imnotify.FriendRelationNotify.sMemoName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .imnotify.FriendNotifyType notifyType = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_notifytype(static_cast< ::imnotify::FriendNotifyType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sSelfIntroduce = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sselfintroduce()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sselfintroduce().data(), static_cast<int>(this->sselfintroduce().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "imnotify.FriendRelationNotify.sSelfIntroduce"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgTime = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sOperId = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_soperid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->soperid().data(), static_cast<int>(this->soperid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "imnotify.FriendRelationNotify.sOperId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string extend = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extend()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extend().data(), static_cast<int>(this->extend().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "imnotify.FriendRelationNotify.extend"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:imnotify.FriendRelationNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:imnotify.FriendRelationNotify)
  return false;
#undef DO_
}

void FriendRelationNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:imnotify.FriendRelationNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), static_cast<int>(this->sfromid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imnotify.FriendRelationNotify.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // string sToId = 2;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), static_cast<int>(this->stoid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imnotify.FriendRelationNotify.sToId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stoid(), output);
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imnotify.FriendRelationNotify.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // string sMemoName = 4;
  if (this->smemoname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smemoname().data(), static_cast<int>(this->smemoname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imnotify.FriendRelationNotify.sMemoName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->smemoname(), output);
  }

  // .imnotify.FriendNotifyType notifyType = 5;
  if (this->notifytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->notifytype(), output);
  }

  // string sSelfIntroduce = 6;
  if (this->sselfintroduce().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sselfintroduce().data(), static_cast<int>(this->sselfintroduce().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imnotify.FriendRelationNotify.sSelfIntroduce");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->sselfintroduce(), output);
  }

  // uint64 msgTime = 7;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->msgtime(), output);
  }

  // string sOperId = 8;
  if (this->soperid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->soperid().data(), static_cast<int>(this->soperid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imnotify.FriendRelationNotify.sOperId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->soperid(), output);
  }

  // string extend = 9;
  if (this->extend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extend().data(), static_cast<int>(this->extend().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imnotify.FriendRelationNotify.extend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->extend(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:imnotify.FriendRelationNotify)
}

::google::protobuf::uint8* FriendRelationNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:imnotify.FriendRelationNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), static_cast<int>(this->sfromid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imnotify.FriendRelationNotify.sFromId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sfromid(), target);
  }

  // string sToId = 2;
  if (this->stoid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoid().data(), static_cast<int>(this->stoid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imnotify.FriendRelationNotify.sToId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->stoid(), target);
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imnotify.FriendRelationNotify.sMsgId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->smsgid(), target);
  }

  // string sMemoName = 4;
  if (this->smemoname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smemoname().data(), static_cast<int>(this->smemoname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imnotify.FriendRelationNotify.sMemoName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->smemoname(), target);
  }

  // .imnotify.FriendNotifyType notifyType = 5;
  if (this->notifytype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->notifytype(), target);
  }

  // string sSelfIntroduce = 6;
  if (this->sselfintroduce().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sselfintroduce().data(), static_cast<int>(this->sselfintroduce().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imnotify.FriendRelationNotify.sSelfIntroduce");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->sselfintroduce(), target);
  }

  // uint64 msgTime = 7;
  if (this->msgtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->msgtime(), target);
  }

  // string sOperId = 8;
  if (this->soperid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->soperid().data(), static_cast<int>(this->soperid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imnotify.FriendRelationNotify.sOperId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->soperid(), target);
  }

  // string extend = 9;
  if (this->extend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extend().data(), static_cast<int>(this->extend().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imnotify.FriendRelationNotify.extend");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->extend(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:imnotify.FriendRelationNotify)
  return target;
}

size_t FriendRelationNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:imnotify.FriendRelationNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // string sToId = 2;
  if (this->stoid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stoid());
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // string sMemoName = 4;
  if (this->smemoname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smemoname());
  }

  // string sSelfIntroduce = 6;
  if (this->sselfintroduce().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sselfintroduce());
  }

  // string sOperId = 8;
  if (this->soperid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->soperid());
  }

  // string extend = 9;
  if (this->extend().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extend());
  }

  // uint64 msgTime = 7;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // .imnotify.FriendNotifyType notifyType = 5;
  if (this->notifytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->notifytype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FriendRelationNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:imnotify.FriendRelationNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const FriendRelationNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FriendRelationNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:imnotify.FriendRelationNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:imnotify.FriendRelationNotify)
    MergeFrom(*source);
  }
}

void FriendRelationNotify::MergeFrom(const FriendRelationNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:imnotify.FriendRelationNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.stoid().size() > 0) {

    stoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.smemoname().size() > 0) {

    smemoname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smemoname_);
  }
  if (from.sselfintroduce().size() > 0) {

    sselfintroduce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sselfintroduce_);
  }
  if (from.soperid().size() > 0) {

    soperid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.soperid_);
  }
  if (from.extend().size() > 0) {

    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.notifytype() != 0) {
    set_notifytype(from.notifytype());
  }
}

void FriendRelationNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:imnotify.FriendRelationNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FriendRelationNotify::CopyFrom(const FriendRelationNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:imnotify.FriendRelationNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FriendRelationNotify::IsInitialized() const {
  return true;
}

void FriendRelationNotify::Swap(FriendRelationNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FriendRelationNotify::InternalSwap(FriendRelationNotify* other) {
  using std::swap;
  sfromid_.Swap(&other->sfromid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  stoid_.Swap(&other->stoid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smemoname_.Swap(&other->smemoname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sselfintroduce_.Swap(&other->sselfintroduce_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  soperid_.Swap(&other->soperid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  extend_.Swap(&other->extend_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgtime_, other->msgtime_);
  swap(notifytype_, other->notifytype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FriendRelationNotify::GetMetadata() const {
  protobuf_im_2enotify_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_im_2enotify_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FriendRelationNotifyACK::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FriendRelationNotifyACK::kSMsgIdFieldNumber;
const int FriendRelationNotifyACK::kMsgTimeFieldNumber;
const int FriendRelationNotifyACK::kExpcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FriendRelationNotifyACK::FriendRelationNotifyACK()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2enotify_2eproto::scc_info_FriendRelationNotifyACK.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:imnotify.FriendRelationNotifyACK)
}
FriendRelationNotifyACK::FriendRelationNotifyACK(const FriendRelationNotifyACK& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  ::memcpy(&msgtime_, &from.msgtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&expcode_) -
    reinterpret_cast<char*>(&msgtime_)) + sizeof(expcode_));
  // @@protoc_insertion_point(copy_constructor:imnotify.FriendRelationNotifyACK)
}

void FriendRelationNotifyACK::SharedCtor() {
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expcode_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(expcode_));
}

FriendRelationNotifyACK::~FriendRelationNotifyACK() {
  // @@protoc_insertion_point(destructor:imnotify.FriendRelationNotifyACK)
  SharedDtor();
}

void FriendRelationNotifyACK::SharedDtor() {
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FriendRelationNotifyACK::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FriendRelationNotifyACK::descriptor() {
  ::protobuf_im_2enotify_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_im_2enotify_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FriendRelationNotifyACK& FriendRelationNotifyACK::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2enotify_2eproto::scc_info_FriendRelationNotifyACK.base);
  return *internal_default_instance();
}


void FriendRelationNotifyACK::Clear() {
// @@protoc_insertion_point(message_clear_start:imnotify.FriendRelationNotifyACK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expcode_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(expcode_));
  _internal_metadata_.Clear();
}

bool FriendRelationNotifyACK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:imnotify.FriendRelationNotifyACK)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sMsgId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "imnotify.FriendRelationNotifyACK.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgTime = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .imnotify.ExceptionCode expcode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_expcode(static_cast< ::imnotify::ExceptionCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:imnotify.FriendRelationNotifyACK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:imnotify.FriendRelationNotifyACK)
  return false;
#undef DO_
}

void FriendRelationNotifyACK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:imnotify.FriendRelationNotifyACK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sMsgId = 1;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imnotify.FriendRelationNotifyACK.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->smsgid(), output);
  }

  // uint64 msgTime = 2;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->msgtime(), output);
  }

  // .imnotify.ExceptionCode expcode = 3;
  if (this->expcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->expcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:imnotify.FriendRelationNotifyACK)
}

::google::protobuf::uint8* FriendRelationNotifyACK::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:imnotify.FriendRelationNotifyACK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sMsgId = 1;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imnotify.FriendRelationNotifyACK.sMsgId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->smsgid(), target);
  }

  // uint64 msgTime = 2;
  if (this->msgtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->msgtime(), target);
  }

  // .imnotify.ExceptionCode expcode = 3;
  if (this->expcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->expcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:imnotify.FriendRelationNotifyACK)
  return target;
}

size_t FriendRelationNotifyACK::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:imnotify.FriendRelationNotifyACK)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string sMsgId = 1;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // uint64 msgTime = 2;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // .imnotify.ExceptionCode expcode = 3;
  if (this->expcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->expcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FriendRelationNotifyACK::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:imnotify.FriendRelationNotifyACK)
  GOOGLE_DCHECK_NE(&from, this);
  const FriendRelationNotifyACK* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FriendRelationNotifyACK>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:imnotify.FriendRelationNotifyACK)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:imnotify.FriendRelationNotifyACK)
    MergeFrom(*source);
  }
}

void FriendRelationNotifyACK::MergeFrom(const FriendRelationNotifyACK& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:imnotify.FriendRelationNotifyACK)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.expcode() != 0) {
    set_expcode(from.expcode());
  }
}

void FriendRelationNotifyACK::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:imnotify.FriendRelationNotifyACK)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FriendRelationNotifyACK::CopyFrom(const FriendRelationNotifyACK& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:imnotify.FriendRelationNotifyACK)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FriendRelationNotifyACK::IsInitialized() const {
  return true;
}

void FriendRelationNotifyACK::Swap(FriendRelationNotifyACK* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FriendRelationNotifyACK::InternalSwap(FriendRelationNotifyACK* other) {
  using std::swap;
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgtime_, other->msgtime_);
  swap(expcode_, other->expcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FriendRelationNotifyACK::GetMetadata() const {
  protobuf_im_2enotify_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_im_2enotify_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoginOperationNotify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginOperationNotify::kSUserIdFieldNumber;
const int LoginOperationNotify::kSDeviceTokenFieldNumber;
const int LoginOperationNotify::kMsgTimeFieldNumber;
const int LoginOperationNotify::kLoginTypeFieldNumber;
const int LoginOperationNotify::kExtendFieldNumber;
const int LoginOperationNotify::kLoginSubTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginOperationNotify::LoginOperationNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2enotify_2eproto::scc_info_LoginOperationNotify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:imnotify.LoginOperationNotify)
}
LoginOperationNotify::LoginOperationNotify(const LoginOperationNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  sdevicetoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sdevicetoken().size() > 0) {
    sdevicetoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdevicetoken_);
  }
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extend().size() > 0) {
    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  ::memcpy(&msgtime_, &from.msgtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&loginsubtype_) -
    reinterpret_cast<char*>(&msgtime_)) + sizeof(loginsubtype_));
  // @@protoc_insertion_point(copy_constructor:imnotify.LoginOperationNotify)
}

void LoginOperationNotify::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdevicetoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&loginsubtype_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(loginsubtype_));
}

LoginOperationNotify::~LoginOperationNotify() {
  // @@protoc_insertion_point(destructor:imnotify.LoginOperationNotify)
  SharedDtor();
}

void LoginOperationNotify::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdevicetoken_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginOperationNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LoginOperationNotify::descriptor() {
  ::protobuf_im_2enotify_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_im_2enotify_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoginOperationNotify& LoginOperationNotify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2enotify_2eproto::scc_info_LoginOperationNotify.base);
  return *internal_default_instance();
}


void LoginOperationNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:imnotify.LoginOperationNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdevicetoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&loginsubtype_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(loginsubtype_));
  _internal_metadata_.Clear();
}

bool LoginOperationNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:imnotify.LoginOperationNotify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "imnotify.LoginOperationNotify.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sDeviceToken = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sdevicetoken()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sdevicetoken().data(), static_cast<int>(this->sdevicetoken().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "imnotify.LoginOperationNotify.sDeviceToken"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgTime = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .imnotify.LoginNotifyType loginType = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_logintype(static_cast< ::imnotify::LoginNotifyType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string extend = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extend()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extend().data(), static_cast<int>(this->extend().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "imnotify.LoginOperationNotify.extend"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .imnotify.LoginNotifySubType loginSubType = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_loginsubtype(static_cast< ::imnotify::LoginNotifySubType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:imnotify.LoginOperationNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:imnotify.LoginOperationNotify)
  return false;
#undef DO_
}

void LoginOperationNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:imnotify.LoginOperationNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imnotify.LoginOperationNotify.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // string sDeviceToken = 2;
  if (this->sdevicetoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sdevicetoken().data(), static_cast<int>(this->sdevicetoken().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imnotify.LoginOperationNotify.sDeviceToken");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sdevicetoken(), output);
  }

  // uint64 msgTime = 3;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->msgtime(), output);
  }

  // .imnotify.LoginNotifyType loginType = 4;
  if (this->logintype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->logintype(), output);
  }

  // string extend = 5;
  if (this->extend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extend().data(), static_cast<int>(this->extend().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imnotify.LoginOperationNotify.extend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->extend(), output);
  }

  // .imnotify.LoginNotifySubType loginSubType = 6;
  if (this->loginsubtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->loginsubtype(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:imnotify.LoginOperationNotify)
}

::google::protobuf::uint8* LoginOperationNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:imnotify.LoginOperationNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imnotify.LoginOperationNotify.sUserId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->suserid(), target);
  }

  // string sDeviceToken = 2;
  if (this->sdevicetoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sdevicetoken().data(), static_cast<int>(this->sdevicetoken().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imnotify.LoginOperationNotify.sDeviceToken");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sdevicetoken(), target);
  }

  // uint64 msgTime = 3;
  if (this->msgtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->msgtime(), target);
  }

  // .imnotify.LoginNotifyType loginType = 4;
  if (this->logintype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->logintype(), target);
  }

  // string extend = 5;
  if (this->extend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extend().data(), static_cast<int>(this->extend().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imnotify.LoginOperationNotify.extend");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->extend(), target);
  }

  // .imnotify.LoginNotifySubType loginSubType = 6;
  if (this->loginsubtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->loginsubtype(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:imnotify.LoginOperationNotify)
  return target;
}

size_t LoginOperationNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:imnotify.LoginOperationNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // string sDeviceToken = 2;
  if (this->sdevicetoken().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sdevicetoken());
  }

  // string extend = 5;
  if (this->extend().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extend());
  }

  // uint64 msgTime = 3;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // .imnotify.LoginNotifyType loginType = 4;
  if (this->logintype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->logintype());
  }

  // .imnotify.LoginNotifySubType loginSubType = 6;
  if (this->loginsubtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->loginsubtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoginOperationNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:imnotify.LoginOperationNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginOperationNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginOperationNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:imnotify.LoginOperationNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:imnotify.LoginOperationNotify)
    MergeFrom(*source);
  }
}

void LoginOperationNotify::MergeFrom(const LoginOperationNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:imnotify.LoginOperationNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.sdevicetoken().size() > 0) {

    sdevicetoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdevicetoken_);
  }
  if (from.extend().size() > 0) {

    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.logintype() != 0) {
    set_logintype(from.logintype());
  }
  if (from.loginsubtype() != 0) {
    set_loginsubtype(from.loginsubtype());
  }
}

void LoginOperationNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:imnotify.LoginOperationNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginOperationNotify::CopyFrom(const LoginOperationNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:imnotify.LoginOperationNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginOperationNotify::IsInitialized() const {
  return true;
}

void LoginOperationNotify::Swap(LoginOperationNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginOperationNotify::InternalSwap(LoginOperationNotify* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sdevicetoken_.Swap(&other->sdevicetoken_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  extend_.Swap(&other->extend_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgtime_, other->msgtime_);
  swap(logintype_, other->logintype_);
  swap(loginsubtype_, other->loginsubtype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LoginOperationNotify::GetMetadata() const {
  protobuf_im_2enotify_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_im_2enotify_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoginOperationNotifyACK::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginOperationNotifyACK::kSUserIdFieldNumber;
const int LoginOperationNotifyACK::kMsgTimeFieldNumber;
const int LoginOperationNotifyACK::kExpcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginOperationNotifyACK::LoginOperationNotifyACK()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2enotify_2eproto::scc_info_LoginOperationNotifyACK.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:imnotify.LoginOperationNotifyACK)
}
LoginOperationNotifyACK::LoginOperationNotifyACK(const LoginOperationNotifyACK& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.suserid().size() > 0) {
    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  ::memcpy(&msgtime_, &from.msgtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&expcode_) -
    reinterpret_cast<char*>(&msgtime_)) + sizeof(expcode_));
  // @@protoc_insertion_point(copy_constructor:imnotify.LoginOperationNotifyACK)
}

void LoginOperationNotifyACK::SharedCtor() {
  suserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expcode_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(expcode_));
}

LoginOperationNotifyACK::~LoginOperationNotifyACK() {
  // @@protoc_insertion_point(destructor:imnotify.LoginOperationNotifyACK)
  SharedDtor();
}

void LoginOperationNotifyACK::SharedDtor() {
  suserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginOperationNotifyACK::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LoginOperationNotifyACK::descriptor() {
  ::protobuf_im_2enotify_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_im_2enotify_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoginOperationNotifyACK& LoginOperationNotifyACK::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2enotify_2eproto::scc_info_LoginOperationNotifyACK.base);
  return *internal_default_instance();
}


void LoginOperationNotifyACK::Clear() {
// @@protoc_insertion_point(message_clear_start:imnotify.LoginOperationNotifyACK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expcode_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(expcode_));
  _internal_metadata_.Clear();
}

bool LoginOperationNotifyACK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:imnotify.LoginOperationNotifyACK)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sUserId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suserid().data(), static_cast<int>(this->suserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "imnotify.LoginOperationNotifyACK.sUserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgTime = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .imnotify.ExceptionCode expcode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_expcode(static_cast< ::imnotify::ExceptionCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:imnotify.LoginOperationNotifyACK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:imnotify.LoginOperationNotifyACK)
  return false;
#undef DO_
}

void LoginOperationNotifyACK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:imnotify.LoginOperationNotifyACK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imnotify.LoginOperationNotifyACK.sUserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->suserid(), output);
  }

  // uint64 msgTime = 2;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->msgtime(), output);
  }

  // .imnotify.ExceptionCode expcode = 3;
  if (this->expcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->expcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:imnotify.LoginOperationNotifyACK)
}

::google::protobuf::uint8* LoginOperationNotifyACK::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:imnotify.LoginOperationNotifyACK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suserid().data(), static_cast<int>(this->suserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imnotify.LoginOperationNotifyACK.sUserId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->suserid(), target);
  }

  // uint64 msgTime = 2;
  if (this->msgtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->msgtime(), target);
  }

  // .imnotify.ExceptionCode expcode = 3;
  if (this->expcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->expcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:imnotify.LoginOperationNotifyACK)
  return target;
}

size_t LoginOperationNotifyACK::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:imnotify.LoginOperationNotifyACK)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string sUserId = 1;
  if (this->suserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suserid());
  }

  // uint64 msgTime = 2;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // .imnotify.ExceptionCode expcode = 3;
  if (this->expcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->expcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoginOperationNotifyACK::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:imnotify.LoginOperationNotifyACK)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginOperationNotifyACK* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginOperationNotifyACK>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:imnotify.LoginOperationNotifyACK)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:imnotify.LoginOperationNotifyACK)
    MergeFrom(*source);
  }
}

void LoginOperationNotifyACK::MergeFrom(const LoginOperationNotifyACK& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:imnotify.LoginOperationNotifyACK)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.suserid().size() > 0) {

    suserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.suserid_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.expcode() != 0) {
    set_expcode(from.expcode());
  }
}

void LoginOperationNotifyACK::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:imnotify.LoginOperationNotifyACK)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginOperationNotifyACK::CopyFrom(const LoginOperationNotifyACK& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:imnotify.LoginOperationNotifyACK)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginOperationNotifyACK::IsInitialized() const {
  return true;
}

void LoginOperationNotifyACK::Swap(LoginOperationNotifyACK* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginOperationNotifyACK::InternalSwap(LoginOperationNotifyACK* other) {
  using std::swap;
  suserid_.Swap(&other->suserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgtime_, other->msgtime_);
  swap(expcode_, other->expcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LoginOperationNotifyACK::GetMetadata() const {
  protobuf_im_2enotify_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_im_2enotify_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CommonMsgNotify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CommonMsgNotify::kSFromIdFieldNumber;
const int CommonMsgNotify::kSToIdsFieldNumber;
const int CommonMsgNotify::kSMsgIdFieldNumber;
const int CommonMsgNotify::kNotifyTypeFieldNumber;
const int CommonMsgNotify::kSContentFieldNumber;
const int CommonMsgNotify::kMsgTimeFieldNumber;
const int CommonMsgNotify::kExtendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommonMsgNotify::CommonMsgNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2enotify_2eproto::scc_info_CommonMsgNotify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:imnotify.CommonMsgNotify)
}
CommonMsgNotify::CommonMsgNotify(const CommonMsgNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      stoids_(from.stoids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sfromid().size() > 0) {
    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  scontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.scontent().size() > 0) {
    scontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scontent_);
  }
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extend().size() > 0) {
    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  ::memcpy(&msgtime_, &from.msgtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&notifytype_) -
    reinterpret_cast<char*>(&msgtime_)) + sizeof(notifytype_));
  // @@protoc_insertion_point(copy_constructor:imnotify.CommonMsgNotify)
}

void CommonMsgNotify::SharedCtor() {
  sfromid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&notifytype_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(notifytype_));
}

CommonMsgNotify::~CommonMsgNotify() {
  // @@protoc_insertion_point(destructor:imnotify.CommonMsgNotify)
  SharedDtor();
}

void CommonMsgNotify::SharedDtor() {
  sfromid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CommonMsgNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CommonMsgNotify::descriptor() {
  ::protobuf_im_2enotify_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_im_2enotify_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CommonMsgNotify& CommonMsgNotify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2enotify_2eproto::scc_info_CommonMsgNotify.base);
  return *internal_default_instance();
}


void CommonMsgNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:imnotify.CommonMsgNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stoids_.Clear();
  sfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&notifytype_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(notifytype_));
  _internal_metadata_.Clear();
}

bool CommonMsgNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:imnotify.CommonMsgNotify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sFromId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfromid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sfromid().data(), static_cast<int>(this->sfromid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "imnotify.CommonMsgNotify.sFromId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string sToIds = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_stoids()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stoids(this->stoids_size() - 1).data(),
            static_cast<int>(this->stoids(this->stoids_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "imnotify.CommonMsgNotify.sToIds"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sMsgId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "imnotify.CommonMsgNotify.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .imnotify.CommonNotifyType notifyType = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_notifytype(static_cast< ::imnotify::CommonNotifyType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sContent = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scontent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scontent().data(), static_cast<int>(this->scontent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "imnotify.CommonMsgNotify.sContent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgTime = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string extend = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extend()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extend().data(), static_cast<int>(this->extend().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "imnotify.CommonMsgNotify.extend"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:imnotify.CommonMsgNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:imnotify.CommonMsgNotify)
  return false;
#undef DO_
}

void CommonMsgNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:imnotify.CommonMsgNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), static_cast<int>(this->sfromid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imnotify.CommonMsgNotify.sFromId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sfromid(), output);
  }

  // repeated string sToIds = 2;
  for (int i = 0, n = this->stoids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoids(i).data(), static_cast<int>(this->stoids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imnotify.CommonMsgNotify.sToIds");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->stoids(i), output);
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imnotify.CommonMsgNotify.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smsgid(), output);
  }

  // .imnotify.CommonNotifyType notifyType = 4;
  if (this->notifytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->notifytype(), output);
  }

  // string sContent = 5;
  if (this->scontent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scontent().data(), static_cast<int>(this->scontent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imnotify.CommonMsgNotify.sContent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->scontent(), output);
  }

  // uint64 msgTime = 6;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->msgtime(), output);
  }

  // string extend = 7;
  if (this->extend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extend().data(), static_cast<int>(this->extend().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imnotify.CommonMsgNotify.extend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->extend(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:imnotify.CommonMsgNotify)
}

::google::protobuf::uint8* CommonMsgNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:imnotify.CommonMsgNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sfromid().data(), static_cast<int>(this->sfromid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imnotify.CommonMsgNotify.sFromId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sfromid(), target);
  }

  // repeated string sToIds = 2;
  for (int i = 0, n = this->stoids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stoids(i).data(), static_cast<int>(this->stoids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imnotify.CommonMsgNotify.sToIds");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->stoids(i), target);
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imnotify.CommonMsgNotify.sMsgId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->smsgid(), target);
  }

  // .imnotify.CommonNotifyType notifyType = 4;
  if (this->notifytype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->notifytype(), target);
  }

  // string sContent = 5;
  if (this->scontent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scontent().data(), static_cast<int>(this->scontent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imnotify.CommonMsgNotify.sContent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->scontent(), target);
  }

  // uint64 msgTime = 6;
  if (this->msgtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->msgtime(), target);
  }

  // string extend = 7;
  if (this->extend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extend().data(), static_cast<int>(this->extend().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imnotify.CommonMsgNotify.extend");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->extend(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:imnotify.CommonMsgNotify)
  return target;
}

size_t CommonMsgNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:imnotify.CommonMsgNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string sToIds = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->stoids_size());
  for (int i = 0, n = this->stoids_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->stoids(i));
  }

  // string sFromId = 1;
  if (this->sfromid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sfromid());
  }

  // string sMsgId = 3;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // string sContent = 5;
  if (this->scontent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scontent());
  }

  // string extend = 7;
  if (this->extend().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extend());
  }

  // uint64 msgTime = 6;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // .imnotify.CommonNotifyType notifyType = 4;
  if (this->notifytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->notifytype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CommonMsgNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:imnotify.CommonMsgNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const CommonMsgNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CommonMsgNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:imnotify.CommonMsgNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:imnotify.CommonMsgNotify)
    MergeFrom(*source);
  }
}

void CommonMsgNotify::MergeFrom(const CommonMsgNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:imnotify.CommonMsgNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stoids_.MergeFrom(from.stoids_);
  if (from.sfromid().size() > 0) {

    sfromid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sfromid_);
  }
  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.scontent().size() > 0) {

    scontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scontent_);
  }
  if (from.extend().size() > 0) {

    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.notifytype() != 0) {
    set_notifytype(from.notifytype());
  }
}

void CommonMsgNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:imnotify.CommonMsgNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommonMsgNotify::CopyFrom(const CommonMsgNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:imnotify.CommonMsgNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommonMsgNotify::IsInitialized() const {
  return true;
}

void CommonMsgNotify::Swap(CommonMsgNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommonMsgNotify::InternalSwap(CommonMsgNotify* other) {
  using std::swap;
  stoids_.InternalSwap(CastToBase(&other->stoids_));
  sfromid_.Swap(&other->sfromid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  scontent_.Swap(&other->scontent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  extend_.Swap(&other->extend_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgtime_, other->msgtime_);
  swap(notifytype_, other->notifytype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CommonMsgNotify::GetMetadata() const {
  protobuf_im_2enotify_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_im_2enotify_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CommonMsgNotifyACK::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CommonMsgNotifyACK::kSMsgIdFieldNumber;
const int CommonMsgNotifyACK::kMsgTimeFieldNumber;
const int CommonMsgNotifyACK::kExpcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommonMsgNotifyACK::CommonMsgNotifyACK()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_im_2enotify_2eproto::scc_info_CommonMsgNotifyACK.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:imnotify.CommonMsgNotifyACK)
}
CommonMsgNotifyACK::CommonMsgNotifyACK(const CommonMsgNotifyACK& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smsgid().size() > 0) {
    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  ::memcpy(&msgtime_, &from.msgtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&expcode_) -
    reinterpret_cast<char*>(&msgtime_)) + sizeof(expcode_));
  // @@protoc_insertion_point(copy_constructor:imnotify.CommonMsgNotifyACK)
}

void CommonMsgNotifyACK::SharedCtor() {
  smsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expcode_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(expcode_));
}

CommonMsgNotifyACK::~CommonMsgNotifyACK() {
  // @@protoc_insertion_point(destructor:imnotify.CommonMsgNotifyACK)
  SharedDtor();
}

void CommonMsgNotifyACK::SharedDtor() {
  smsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CommonMsgNotifyACK::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CommonMsgNotifyACK::descriptor() {
  ::protobuf_im_2enotify_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_im_2enotify_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CommonMsgNotifyACK& CommonMsgNotifyACK::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_im_2enotify_2eproto::scc_info_CommonMsgNotifyACK.base);
  return *internal_default_instance();
}


void CommonMsgNotifyACK::Clear() {
// @@protoc_insertion_point(message_clear_start:imnotify.CommonMsgNotifyACK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  smsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expcode_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(expcode_));
  _internal_metadata_.Clear();
}

bool CommonMsgNotifyACK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:imnotify.CommonMsgNotifyACK)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sMsgId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smsgid().data(), static_cast<int>(this->smsgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "imnotify.CommonMsgNotifyACK.sMsgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgTime = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .imnotify.ExceptionCode expcode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_expcode(static_cast< ::imnotify::ExceptionCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:imnotify.CommonMsgNotifyACK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:imnotify.CommonMsgNotifyACK)
  return false;
#undef DO_
}

void CommonMsgNotifyACK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:imnotify.CommonMsgNotifyACK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sMsgId = 1;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imnotify.CommonMsgNotifyACK.sMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->smsgid(), output);
  }

  // uint64 msgTime = 2;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->msgtime(), output);
  }

  // .imnotify.ExceptionCode expcode = 3;
  if (this->expcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->expcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:imnotify.CommonMsgNotifyACK)
}

::google::protobuf::uint8* CommonMsgNotifyACK::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:imnotify.CommonMsgNotifyACK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sMsgId = 1;
  if (this->smsgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smsgid().data(), static_cast<int>(this->smsgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "imnotify.CommonMsgNotifyACK.sMsgId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->smsgid(), target);
  }

  // uint64 msgTime = 2;
  if (this->msgtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->msgtime(), target);
  }

  // .imnotify.ExceptionCode expcode = 3;
  if (this->expcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->expcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:imnotify.CommonMsgNotifyACK)
  return target;
}

size_t CommonMsgNotifyACK::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:imnotify.CommonMsgNotifyACK)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string sMsgId = 1;
  if (this->smsgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smsgid());
  }

  // uint64 msgTime = 2;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgtime());
  }

  // .imnotify.ExceptionCode expcode = 3;
  if (this->expcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->expcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CommonMsgNotifyACK::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:imnotify.CommonMsgNotifyACK)
  GOOGLE_DCHECK_NE(&from, this);
  const CommonMsgNotifyACK* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CommonMsgNotifyACK>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:imnotify.CommonMsgNotifyACK)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:imnotify.CommonMsgNotifyACK)
    MergeFrom(*source);
  }
}

void CommonMsgNotifyACK::MergeFrom(const CommonMsgNotifyACK& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:imnotify.CommonMsgNotifyACK)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.smsgid().size() > 0) {

    smsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smsgid_);
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.expcode() != 0) {
    set_expcode(from.expcode());
  }
}

void CommonMsgNotifyACK::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:imnotify.CommonMsgNotifyACK)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommonMsgNotifyACK::CopyFrom(const CommonMsgNotifyACK& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:imnotify.CommonMsgNotifyACK)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommonMsgNotifyACK::IsInitialized() const {
  return true;
}

void CommonMsgNotifyACK::Swap(CommonMsgNotifyACK* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommonMsgNotifyACK::InternalSwap(CommonMsgNotifyACK* other) {
  using std::swap;
  smsgid_.Swap(&other->smsgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgtime_, other->msgtime_);
  swap(expcode_, other->expcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CommonMsgNotifyACK::GetMetadata() const {
  protobuf_im_2enotify_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_im_2enotify_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace imnotify
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::imnotify::GroupRelationNotify* Arena::CreateMaybeMessage< ::imnotify::GroupRelationNotify >(Arena* arena) {
  return Arena::CreateInternal< ::imnotify::GroupRelationNotify >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::imnotify::GroupRelationNotifyACK* Arena::CreateMaybeMessage< ::imnotify::GroupRelationNotifyACK >(Arena* arena) {
  return Arena::CreateInternal< ::imnotify::GroupRelationNotifyACK >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::imnotify::FriendRelationNotify* Arena::CreateMaybeMessage< ::imnotify::FriendRelationNotify >(Arena* arena) {
  return Arena::CreateInternal< ::imnotify::FriendRelationNotify >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::imnotify::FriendRelationNotifyACK* Arena::CreateMaybeMessage< ::imnotify::FriendRelationNotifyACK >(Arena* arena) {
  return Arena::CreateInternal< ::imnotify::FriendRelationNotifyACK >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::imnotify::LoginOperationNotify* Arena::CreateMaybeMessage< ::imnotify::LoginOperationNotify >(Arena* arena) {
  return Arena::CreateInternal< ::imnotify::LoginOperationNotify >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::imnotify::LoginOperationNotifyACK* Arena::CreateMaybeMessage< ::imnotify::LoginOperationNotifyACK >(Arena* arena) {
  return Arena::CreateInternal< ::imnotify::LoginOperationNotifyACK >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::imnotify::CommonMsgNotify* Arena::CreateMaybeMessage< ::imnotify::CommonMsgNotify >(Arena* arena) {
  return Arena::CreateInternal< ::imnotify::CommonMsgNotify >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::imnotify::CommonMsgNotifyACK* Arena::CreateMaybeMessage< ::imnotify::CommonMsgNotifyACK >(Arena* arena) {
  return Arena::CreateInternal< ::imnotify::CommonMsgNotifyACK >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
