syntax = "proto3";

package im;
import "im.pub.proto";

option optimize_for = LITE_RUNTIME;



////////////////////////////////////////////////////////////////////////
//GROUP_CHAT ： 					0xc001				移动发送端发聊天消息给Group群组服务器
////////////////////////////////////////////////////////////////////////
message GroupChat
{
	string 	sFromId		  						= 1;	// telephone number or any other number binded.
	string  sGroupId			  				= 2;	// groud id , the value is generated by server as creating group. 
	uint32	nNotifyCount	  				= 3;  // support @user function , indicate total of @user. set the value to -1 if @all, 
	repeated string sNotifyUsers 		= 4;  // @user list. Need not to fill this array if nNotifyCount equal to -1 or 0. 
	string  sMsgId       						= 5;  // Generated uuid by APP Id;
	uint64  msgTime 								= 6;  //	server time,precision millisecond
	uint32	encrypt									= 7;  // 	whether encrypt chat contents
	string  sContent								= 8;  //chat contents
}

////////////////////////////////////////////////////////////////////////
//GROUP_CHAT_ACK ： 			0xc002			Group群组服务器回应移动发送端聊天消息
////////////////////////////////////////////////////////////////////////
message GroupChatAck
{
  	string  sFromId   						= 1; // telephone number or any other number binded. point to sFromId,tell cmSvr which client send to
  	string  sGroupId							= 2; // GroupId generated by server,
  	string  sMsgId       					= 3; // uuid , to identify unique message. 
  	uint64  sendtime 							= 4; // server time,precision millisecond,user can use to sort the message.
  	ErrCode errcode    						= 5; // return 0x8000 if no error.
}
////////////////////////////////////////////////////////////////////////
//GROUP_CREATE ： 				0xc003			移动端发起群组创建
////////////////////////////////////////////////////////////////////////
message GroupCreate    
{
	string sUserId 					 				= 1;			// User who requires to create  a new group .
	string sName						 				= 2;			// Group name 
	string sRemarks 				 				= 3;	    // Group remarks, or group descriptions 
	string sMsgId										= 4;      // Generated uuid by APP Id;
	uint32 nPermission		   				= 5; 			// Group permission ,0: Join directly; 1: Join with administrator permission; 2: forbidden join
	uint32 nCreateType							= 6;		  // Type of creation. 0: normal mode; 1: normal mode with hide;  2: two-bar-codes mode; 3: two-bar-codes mode with hide
	repeated string sInviteUserIds	= 8;		  // Create a new group with multiple invited users. Need not to fill this value. 
	string sGrpAvatar = 9;                     // Group head fixel.
	string  extend				= 10;  // expand field
}
////////////////////////////////////////////////////////////////////////
//GROUP_CREATE_ACK ：  		0xc004			Group群组向移动端回应群组创建。
////////////////////////////////////////////////////////////////////////
message GroupCreateAck
{
	string sUserId     		  				= 1;			// telephone number or any other number binded , to indicate who launch group creation. 
	string sGroupId				  				= 2;
	string sMsgId									  = 3;
	ErrCode errcode 								= 4;		 //return NON_ERR(0x8000) if no error.
	uint64  msgTime                                =5;            
}
////////////////////////////////////////////////////////////////////////
//GROUP_QUERY ： 					0xc005			移动端发起群组信息查询   暂时不用，由PHP完成查询任务
////////////////////////////////////////////////////////////////////////
message GroupQuery
{
	string sUserId 									= 1;
	uint32 nQueryType 							= 2;                 //查询类型   0--按groupid精确查找    1--按群组名称模糊查找
	string sKey						 					= 3;   							 // sKey specifies groupid if nQueryType =  0 , or it specifies group name . 	
}
////////////////////////////////////////////////////////////////////////
//GROUP_QUERY_ACK ：  		0xc006			群组服务器返回查询结果给移动端
////////////////////////////////////////////////////////////////////////
message UserGroupQueryRsp
{
	string sUserId				 					= 1;
	repeated GroupInfo  lsGroupInfo = 2;				// List of Group info 
	ErrCode errcode 								= 3;		 						//return NON_ERR(0x8000) if no error.
}

////////////////////////////////////////////////////////////////////////
//GROUP_APPLY ： 0xc007			移动端向Group群组服务发送加群申请
////////////////////////////////////////////////////////////////////////
message GroupApply
{
	string sUserId								 	= 1;
	string sGroupId 								= 2;		// 
	string sMsgId									= 3;
	string sRemark 									= 4;		// Simply describes the user
	string extend									= 5;  // expand field
	uint32 applyType								= 6;	// 0:普通加群请求  1:面对面加群请求
}
////////////////////////////////////////////////////////////////////////
//GROUP_APPLY_ACK ： 0xc008			Group群组服务向移动端回应加群申请
////////////////////////////////////////////////////////////////////////
message GroupApplyAck
{
	string sUserId 									= 1;
	string sGroupId 								= 2;
	string sMsgId										= 3;		
	ErrCode errcode 								= 4;		 //return NON_ERR(0x8000) if no error.
	
}
////////////////////////////////////////////////////////////////////////
//GROUP_INVITE ： 0xc009			移动端向Group群组发起群组邀请，邀请别人入群
////////////////////////////////////////////////////////////////////////
message GroupInvite
{
	string sInviterId	 							= 1;   		//user id of the inviter
	repeated string sInviteeIds			= 2;			//list of invitee.
	string sGroupId  								=	3;
	string sMsgId										= 4;
	string sRemark									= 5; 			//simply decription of the inviter user
	string  extend				= 6;  // expand field
}
////////////////////////////////////////////////////////////////////////
//GROUP_INVITE_ACK ： 0xc010			Group群组服务回应移动端邀请
////////////////////////////////////////////////////////////////////////
message GroupInviteAck
{
	string sUserId									= 1;			//Inviter user .	
	string sGroupId				  				= 2;
	string sMsgId										= 3;
	ErrCode errcode 								= 4;		 //return NON_ERR(0x8000) if no error.
}

////////////////////////////////////////////////////////////////////////
//GROUP_MEMBER ： 				0xc011			移动端向群组服务获取群成员信息列表,此协议废弃，由PHP拉取
///////////////////////////////////////////////////////////////////////
message GroupMember       
{
	string sUserId 									= 1;
	string sGroupId									= 2;	 
	uint32 nPageIndex								= 3;    						//  Paged access index. 
	uint32 nPageCount 							= 4; 								//  total of one page 
}
////////////////////////////////////////////////////////////////////////
//GROUP_MEMBER_ACK ： 		0xc012			群组服返回群成员信息列表，此协议废弃，由PHP拉取
////////////////////////////////////////////////////////////////////////
message GroupMemberAck   //
{
	string  sUserId 								= 1;
	string 	sGroupId								= 2;
	uint32 	nPageIndex 							= 3;    //群组索引  由服务端返回，索引标识，初次拉取0
	repeated Member	members 				= 4;
	ErrCode errcode 								= 5;   //return NON_ERR(0x8000) if no error.
}

////////////////////////////////////////////////////////////////////////
//GROUP_KICKOUT ： 	0xc013			向Group群组服务发出群移除申请
////////////////////////////////////////////////////////////////////////
message GroupKickOut
{
	string sUserId 									= 1;    //UserId, Only administrator can be kickout other group member . 
	string sKickId 									= 2;		//the member id to be kicked out. 
	string sGroupId 								= 3;		
	string sMsgId										= 4;
	string  extend									= 5;  // expand field
	
}
////////////////////////////////////////////////////////////////////////
//GROUP_KICKOUT_ACK ： 0xc014			Group群组服务向移动端回应群移除（踢人）
////////////////////////////////////////////////////////////////////////
message GroupKickoutAck
{
	string sUserId 									= 1;
	string sMsgId										= 2;
	ErrCode errcode 								= 3;		  //return NON_ERR(0x8000) if no error.	
}
////////////////////////////////////////////////////////////////////////
//GROUP_QUIT ： 			0xc015			向Group群组服务群退出请求
////////////////////////////////////////////////////////////////////////
message GroupQuit
{
	string sUserId 									= 1;    
	string sGroupId 								= 2;
	string sMsgId										= 3;
	string  extend				= 4;  // expand field
}
////////////////////////////////////////////////////////////////////////
//GROUP_QUIT_ACK ： 	0xc016			Group群组服务回应群退出
////////////////////////////////////////////////////////////////////////
message GroupQuitAck
{
	string sUserId 									= 1;
	string sGroupId									= 2;
	string sMsgId										= 3;
	ErrCode errcode 								= 4;		  //return NON_ERR(0x8000) if no error.	
}
////////////////////////////////////////////////////////////////////////
//GROUP_MODIFY ： 0xc017			向Group群组服务发起修改群资料请求(含群主变更）
////////////////////////////////////////////////////////////////////////
message GroupModify
{
	string 	sUserId 								= 1;    // the current operating user id. 
	string 	sGroupId 								= 2;		// the current operating group id
	string  sInvolvedId							= 3;	  // the involved user id. (Maybe extents to replace "string " with "repeat string"  in future)
	string 	sMsgId									= 4;		//
	NotifyType nModifyType					= 5; 		//type of notification, including: group name; group announcement ;  group nickname; group master update and so on.  
	string sContent 								= 6;    //submmit the modified constent.
}
////////////////////////////////////////////////////////////////////////
//GROUP_MODIFY_ACK ： 0xc018			Group群组服务回应修改群资料请求
////////////////////////////////////////////////////////////////////////
message GroupModifyAck
{
	string sUserId									= 1;			//
	string sGroupId									= 2;
	string sMsgId										= 3;			
	ErrCode errcode 								= 4;		  //return NON_ERR(0x8000) if no error.	
}

////////////////////////////////////////////////////////////////////////
//GROUP_NOTIFY ： 0xc019			移动端通过Group群组服务器发送群通知.此协议暂时不用
////////////////////////////////////////////////////////////////////////
message GroupNotify
{
	string sUserId 									= 1;//UserId which lanuch the notification	
	string sGroupId									= 2;//GroupId generated by server,
	string sMsgId										= 3;// uuid , to identify unique message.
	uint32 nNotifyType  						= 4;//notification type, maybe group announcement ,group name modification, group member quit or group remove 
	string sContent									= 5;//group constent that will notify user .					
}
////////////////////////////////////////////////////////////////////////
//GROUP_NOTIFY ： 0xc020			Group群组服务器回应移动端群通知。
//此协议暂时不用。Msg消息服务群通知协议可参考此命令字。 
////////////////////////////////////////////////////////////////////////

message GroupNotifyAck
{
	string sUserId					  			= 1;
	string sGroupId 								= 2;
	string sMsgId										= 3;
	ErrCode errcode 								= 4;
}

////////////////////////////////////////////////////////////////////////
//GROUP_PERMIT ： 0xc021			   客户端向Group群组发起应答（同意或拒绝）
////////////////////////////////////////////////////////////////////////
message GroupPermit
{
	string 	sFromId 			= 1; 	// telephone number or any other number binded.
	string 	sToId				= 2;  	// telephone number or any other number binded. 	
	string 	sGrpId		  		= 3;  	// grpId--reserve
	string  sMsgId       		= 4;  	// addfriendMsg's id	
	uint32  rspType				= 5;    // 0:requestRsp, 1:inviteRsp 
	ErrCode errcode	 			= 6;	// 	
	string  sRemark				= 7;	// reserve
	string  extend				= 8;  // expand field
}

////////////////////////////////////////////////////////////////////////
//GROUP_PERMIT_ACK ： 0xc022			Group群组服务回应客户端应答 ,并携带应答处理结果
////////////////////////////////////////////////////////////////////////
message GroupPermitAck
{
	string 	sUserId 			= 1; 	// 
	string 	sGrpId				= 2;	// 
	string  sMsgId       		= 3;  	// same to joinGrpAns's msgId
	ErrCode errcode    			= 4; 	// 
}
////////////////////////////////////////////////////////////////////////
//GROUP_CHATCANCCEl ： 					0xc023				移动发送端向Group群组服务器发送消息撤回请求
////////////////////////////////////////////////////////////////////////
message GroupChatCancel
{
	string 	sFromId		  						= 1;	// telephone number or any other number binded.
	string  sGroupId			  				= 2;	// groud id , the value is generated by server as creating group. 
	string  sMsgId       						= 3;  	// chat msg id
	uint64  msgTime 							= 4;  	// chat time,returned by server at 0xc002
	uint64  cancelTime 							= 5;  	// server time,precision millisecond
}
////////////////////////////////////////////////////////////////////////
//GROUP_CHATCANCEL_ACK ： 			0xc024			Group群组服务器回应移动发送端聊天消息
////////////////////////////////////////////////////////////////////////
message GroupChatCancelAck
{
  	string  sFromId   						= 1; // telephone number or any other number binded. point to sFromId,tell cmSvr which client send to
  	string  sGroupId							= 2; // GroupId generated by server,
  	string  sMsgId       					= 3; // uuid , to identify unique message. 
  	uint64  cancelTime 						= 4; // server time,precision millisecond,user can use to sort the message.
  	ErrCode errcode    						= 5; // return 0x8000 if no error.
}

////////////////////////////////////////////////////////////////////////
//Common structure using for group busness. Basic group infomation .  
////////////////////////////////////////////////////////////////////////
message GroupInfo
{
	string	 sGroupId 							= 1;
	string   sGroupAdminId					= 2; 							// Group administrator id. 
	string 	 sGroupAdminNickName		= 3; 						  // Nick name of the group administrator
	string 	 sGroupName 						= 4;							
	string 	 sGroupAnnounce 				= 5;             	//
	uint32 	 nMemberCount 					= 6;							//Total of the group member.
	bool		 isMember								= 7;							//whether or not group member. 0: not member; 1: is member
}
////////////////////////////////////////////////////////////////////////
//Common structure using for group busness. Group Member infomation .  
////////////////////////////////////////////////////////////////////////
message Member
{
	string sUserId 									= 1;
	string sNickName 								= 2;
	uint32 nState 									= 3;     					// 0: common member ; 1: group administrator; 2:  has quitted from group ;
	bool	 bGroupConfirm 						= 4;						  // 0: Need not to be confirmed by this member ; 1: Need .
	
}

